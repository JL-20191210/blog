"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[62033],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}},23798:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>t});var n=a(20641);const l={},e=(0,a(66262).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<h1 id="前端工程打包部署至-nginx" tabindex="-1"><a class="header-anchor" href="#前端工程打包部署至-nginx"><span>前端工程打包部署至 Nginx</span></a></h1><h2 id="_1-项目打包" tabindex="-1"><a class="header-anchor" href="#_1-项目打包"><span>1. 项目打包</span></a></h2><p>在 <code>VSCode</code> 中新打开一个终端窗口，执行如下命令，对前端项目进行打包：</p><div class="language-undefined line-numbers-mode" data-highlighter="shiki" data-ext="undefined" data-title="undefined" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm run build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504022341167.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>打包完成后，我们进入到前端项目的根目录下，会看到一个 <code>/dist</code> 文件夹，打包好的文件均在此目录中：</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504022341020.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_2-上传打包文件" tabindex="-1"><a class="header-anchor" href="#_2-上传打包文件"><span>2. 上传打包文件</span></a></h2><p>接着，远程登录云服务，执行如下命令，在 <code>/docker/nginx</code> 目录下创建一个 <code>/html</code> 文件夹，用于存放前端打包后的相关文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /docker/nginx/html</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们将 <code>/dist</code> 文件夹下的所有内容，全部上传到云服务器的 <code>/docker/nginx/html</code> 文件夹中：</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504022341097.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_3-配置-nginx" tabindex="-1"><a class="header-anchor" href="#_3-配置-nginx"><span>3. 配置 Nginx</span></a></h2><p>前端打包后的文件都上传完毕后，编辑 <code>Nginx</code> 配置文件 <code>default.conf</code> , 执行命令如下：</p><div class="language-swift line-numbers-mode" data-highlighter="shiki" data-ext="swift" data-title="swift" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">vim </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/docker/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/conf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">d/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置文件修改如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [::]:80;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  localhost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #charset koi8-r;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #access_log  /var/log/nginx/host.access.log  main;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        try_files</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $uri</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $uri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @router</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   /usr/share/nginx/html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @router</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        rewrite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ^.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/index.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> last</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        rewrite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ^/api/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)$ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> X-Real-IP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> X-Forwarded-For</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $proxy_add_x_forwarded_for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 反向代理到后台 Web 服务</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://172.17.0.1:8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #error_page  404              /404.html;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # redirect server error pages to the static page /50x.html</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    error_page</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   500</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 502</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 503</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 504</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /50x.html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /50x.html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   /usr/share/nginx/html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #location ~ \\.php$ {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    proxy_pass   http://127.0.0.1;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #location ~ \\.php$ {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    root           html;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    fastcgi_pass   127.0.0.1:9000;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    fastcgi_index  index.php;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    include        fastcgi_params;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # deny access to .htaccess files, if Apache&#39;s document root</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # concurs with nginx&#39;s one</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #location ~ /\\.ht {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #    deny  all;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    #}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 Nginx 配置主要用于处理前端单页面应用 (SPA) 的路由和反向代理到后端 API。下面是配置的解释：</p><ol><li><code>location /</code> 部分： <ul><li><code>try_files $uri $uri/ @router;</code> 尝试查找请求的文件，如果找到则直接返回，否则将请求交给 <code>@router</code> 命名的位置处理。</li><li><code>root /usr/share/nginx/html;</code> 指定静态文件的根目录，这是一个默认的 Nginx 静态文件目录。</li><li><code>index index.html index.htm;</code> 指定首页文件。</li></ul></li><li><code>location @router</code> 部分： <ul><li><code>rewrite ^.*$ /index.html last;</code> 将所有请求重写到 <code>index.html</code>，这是为了确保前端路由能够正常工作。前端路由通常使用 HTML5 History 模式，这样做可以确保前端路由的 SPA 在浏览器端能够正确处理。</li></ul></li><li><code>location /api</code> 部分： <ul><li><code>rewrite ^/api/(.*)$ /$1 break;</code> 将以 <code>/api</code> 开头的请求的 URI 重写为不包含 <code>/api</code> 的形式，因为后端的接口均不是以 <code>/api</code> 开头。</li><li><code>proxy_set_header</code> 指令用于设置传递给后端的一些头信息。</li><li><code>proxy_pass http://172.17.0.1:8080;</code> 将请求代理到后端 Web 服务，地址为 <code>http://172.17.0.1:8080</code>。</li></ul></li></ol><h2 id="_2-重新运行容器-并挂载前端文件" tabindex="-1"><a class="header-anchor" href="#_2-重新运行容器-并挂载前端文件"><span>2. 重新运行容器，并挂载前端文件</span></a></h2><p>因为想要 <code>Nginx</code> 应用刚刚上传前端文件，还需要挂载一下 <code>/docker/nginx/html</code> 目录，执行如下命令，先将正在运行的 <code>Nginx</code> 容器删除掉：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后重新运行一个新的 <code>Nginx</code> 容器，将前端工程所在的目录，挂载到容器中的 <code>/usr/share/nginx/html</code> 文件夹上，之前你所看到的 <code>Nginx</code> 欢迎页面就在此目录下：</p><div class="language-swift line-numbers-mode" data-highlighter="shiki" data-ext="swift" data-title="swift" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -d \\ </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-p </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\ </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--name nginx \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/docker/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">conf:/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/nginx/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/docker/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/conf</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">d:/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">etc</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/nginx/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">conf.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/docker/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/logs:/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/log/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/docker/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/html:/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/share/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx/html \\</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">1.19.4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完成后，通过 <code>docker ps</code> 命令确认一下容器是否运行成功：</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504022341066.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>OK, <code>Nginx</code> 容器运行成功了，这表示配置文件配的没有问题。浏览器中再次访问公网 <code>IP</code> , 即可看到博客首页啦，不过目前还没发布任何文章，所以空空如也，可以进入到管理后台中，发布几篇文章，测试一下看看有没有什么问题：</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504022341695.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>至此，<code>Vue</code> 前端项目就部署完成了。</p>',29)]))}]]),t=JSON.parse('{"path":"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2.html","title":"前端工程打包部署至 Nginx","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"1. 项目打包","slug":"_1-项目打包","link":"#_1-项目打包","children":[]},{"level":2,"title":"2. 上传打包文件","slug":"_2-上传打包文件","link":"#_2-上传打包文件","children":[]},{"level":2,"title":"3. 配置 Nginx","slug":"_3-配置-nginx","link":"#_3-配置-nginx","children":[]},{"level":2,"title":"2. 重新运行容器，并挂载前端文件","slug":"_2-重新运行容器-并挂载前端文件","link":"#_2-重新运行容器-并挂载前端文件","children":[]}],"readingTime":{"minutes":3.08,"words":924},"filePathRelative":"项目实战/个人博客/前端部署.md","excerpt":"\\n<h2>1. 项目打包</h2>\\n<p>在 <code>VSCode</code> 中新打开一个终端窗口，执行如下命令，对前端项目进行打包：</p>\\n<div class=\\"language-undefined line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"undefined\\" data-title=\\"undefined\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>npm run build</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}')}}]);