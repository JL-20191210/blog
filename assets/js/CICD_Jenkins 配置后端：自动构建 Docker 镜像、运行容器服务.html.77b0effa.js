"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[78713],{66262:(i,s)=>{s.A=(i,s)=>{const e=i.__vccOpts||i;for(const[i,a]of s)e[i]=a;return e}},8198:(i,s,e)=>{e.r(s),e.d(s,{comp:()=>n,data:()=>k});var a=e(20641);const l={},n=(0,e(66262).A)(l,[["render",function(i,s){return(0,a.uX)(),(0,a.CE)("div",null,[s[0]||(s[0]=(0,a.Lk)("h1",{id:"jenkins-配置后端-自动构建-docker-镜像、运行容器服务",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#jenkins-配置后端-自动构建-docker-镜像、运行容器服务"},[(0,a.Lk)("span",null,"Jenkins 配置后端：自动构建 Docker 镜像、运行容器服务")])],-1)),s[1]||(s[1]=(0,a.Lk)("p",null,[(0,a.eW)("重新配置一下该构建任务，在上传完 "),(0,a.Lk)("code",null,"jar"),(0,a.eW)(" 包后，将 "),(0,a.Lk)("code",null,"Dockerfile"),(0,a.eW)(" 文件也上传到云服务器中，并构建镜像， 最终启动新的容器。")],-1)),(0,a.Q3)(" more "),s[2]||(s[2]=(0,a.Fv)('<h2 id="_1-删除之前的启动命令脚本" tabindex="-1"><a class="header-anchor" href="#_1-删除之前的启动命令脚本"><span>1. 删除之前的启动命令脚本</span></a></h2><p>登录 <code>Jenkins</code> 后台，点击 <code>weblog-springboot</code> 构建任务，点击<em>配置</em>：</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061730010.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>滑动到后面，将上传 <code>jar</code> 包后，需要执行的 <code>Exec command</code> 脚本命令<em>清空</em>掉：</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061730700.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_2-上传-dockerfile-构建镜像-启动容器" tabindex="-1"><a class="header-anchor" href="#_2-上传-dockerfile-构建镜像-启动容器"><span>2. 上传 Dockerfile , 构建镜像，启动容器</span></a></h2><p>接着，在上面的构建步骤后面，再次<em>点击增加构建步骤 | Send files or execute commands over SSH</em> :</p><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061730443.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061730767.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><blockquote><ul><li><p>①： 勾选想要上传的云服务器；</p></li><li><p>②：想要上传的文件，这里定位到 <code>Dockerfile</code> 文件；</p><blockquote><p><strong>注意</strong>：需先把上小节新增的 <code>Dockerfile</code> 文件提交到远程仓库，并合并到 <code>master</code> 分支。</p></blockquote></li><li><p>③：删除前缀文件夹；</p></li><li><p>④：想要上传到云服务器中哪个目录下；</p></li><li><p>⑤：上传完成后，需要执行的 <code>sh</code> 脚本，内容如下；</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">IMAGE_NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">weblog-web:0.0.1-SNAPSHOT</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app/weblog</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dockerfile</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $IMAGE_NAME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weblog-web</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart=always</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8080:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ARGS=--spring.profiles.active=prod&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app/weblog:/app/weblog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weblog-web</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $IMAGE_NAME</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $3 }&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xargs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>解释一下脚本所做的工作：</p><ul><li>定义镜像名称；</li><li>进入到 <code>/app/weblog</code> 目录下；</li><li>赋予 <code>Dockerfile</code> 文件可执行权限；</li><li>构建镜像；</li><li>强制删除正在运行的，名为 <code>weblog-web</code> 的容器；</li><li>重新运行一个 <code>weblog-web</code> 容器；</li><li>删除所有名称、标签为 <code>&lt;none&gt;</code> 的<strong>无用</strong>镜像；</li></ul></blockquote></li><li><p>⑥： 点击保存；</p></li></ul></blockquote><p>至此，<code>Jenkins</code> 配置构建 <code>Docker</code> 镜像，并重新运行 <code>Docker</code> 容器的流水线就配置完成了，快去测试一波吧~</p>',11))])}]]),k=JSON.parse('{"path":"/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%EF%BC%9A%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%20Docker%20%E9%95%9C%E5%83%8F%E3%80%81%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1.html","title":"Jenkins配置后端","lang":"zh-CN","frontmatter":{"title":"Jenkins配置后端","date":"2025-04-06T00:00:00.000Z","category":["DevOps"],"tag":["CICD","Jenkins"],"gitInclude":[]},"headers":[{"level":2,"title":"1. 删除之前的启动命令脚本","slug":"_1-删除之前的启动命令脚本","link":"#_1-删除之前的启动命令脚本","children":[]},{"level":2,"title":"2. 上传 Dockerfile , 构建镜像，启动容器","slug":"_2-上传-dockerfile-构建镜像-启动容器","link":"#_2-上传-dockerfile-构建镜像-启动容器","children":[]}],"readingTime":{"minutes":1.53,"words":459},"filePathRelative":"CICD/Jenkins 配置后端：自动构建 Docker 镜像、运行容器服务.md","localizedDate":"2025年4月6日","excerpt":"\\n<p>重新配置一下该构建任务，在上传完 <code>jar</code> 包后，将 <code>Dockerfile</code> 文件也上传到云服务器中，并构建镜像， 最终启动新的容器。</p>\\n"}')}}]);