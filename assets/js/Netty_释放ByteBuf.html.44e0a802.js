"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},44876:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>l});var e=a(20641);const n={},t=(0,a(66262).A)(n,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="netty-bytebuf-内存管理-手动释放与自动释放" tabindex="-1"><a class="header-anchor" href="#netty-bytebuf-内存管理-手动释放与自动释放"><span>Netty ByteBuf 内存管理：手动释放与自动释放</span></a></h1><h3 id="什么时候需要手动释放-bytebuf" tabindex="-1"><a class="header-anchor" href="#什么时候需要手动释放-bytebuf"><span>什么时候需要手动释放 <code>ByteBuf</code>？</span></a></h3><ul><li><p><strong>你显式创建了 <code>ByteBuf</code>：</strong> 如果你在代码中自己通过 <code>ctx.alloc().buffer()</code> 或其他方式创建了一个 <code>ByteBuf</code>，那么在使用完之后，你需要手动释放它。可以调用 <code>buffer.release()</code> 来减少引用计数，以便 Netty 可以回收内存。</p><p>示例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ByteBuf</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> buffer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">alloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 填充数据</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">writeAndFlush</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(buffer);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 发送完数据后手动释放</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>你在自定义的 Handler 中直接操作了 <code>ByteBuf</code>：</strong> 如果你在自定义的 <code>ChannelHandler</code> 代码中创建并管理了 <code>ByteBuf</code>，并且这个对象不是由 Netty 管理的，那么同样需要在使用完后手动释放它。</p></li></ul><h3 id="什么时候不需要手动释放-bytebuf" tabindex="-1"><a class="header-anchor" href="#什么时候不需要手动释放-bytebuf"><span>什么时候不需要手动释放 <code>ByteBuf</code>？</span></a></h3><ul><li><p><strong><code>ByteBuf</code> 由 Netty 管理（如从 <code>ChannelRead</code> 事件中获得）：</strong> 当 <code>ByteBuf</code> 是通过网络传输由 Netty 管理的（例如在 <code>channelRead</code> 中收到的 <code>msg</code>），你 <strong>不需要</strong> 手动释放它。Netty 会根据引用计数机制自动处理内存的回收。</p><p>示例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> channelRead</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> msg) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    ByteBuf</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> buffer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (ByteBuf) msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 使用 buffer</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Charset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">defaultCharset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()));</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 不需要手动释放 buffer，它会由 Netty 自动释放</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>使用 Netty 提供的编解码器（如 <code>StringEncoder</code>，<code>StringDecoder</code>）</strong>： 当你使用 Netty 提供的编解码器来自动编码和解码消息时，通常编解码器会负责管理 <code>ByteBuf</code> 的生命周期，确保你不需要手动释放它。</p><p>例如，当使用 <code>StringEncoder</code> 发送数据时，Netty 会自动处理 <code>ByteBuf</code> 对象的创建和释放。</p></li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h3><ul><li><strong>需要手动释放：</strong> 你自己创建了 <code>ByteBuf</code>，或者你在处理过程中显式管理了 <code>ByteBuf</code> 的内存。</li><li><strong>不需要手动释放：</strong> <code>ByteBuf</code> 是由 Netty 自动管理的（例如从网络读取的数据，或通过编解码器传递的数据）。</li></ul>',7)]))}]]),l=JSON.parse('{"path":"/Netty/%E9%87%8A%E6%94%BEByteBuf.html","title":"Netty ByteBuf 内存管理：手动释放与自动释放","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":3,"title":"什么时候需要手动释放 ByteBuf？","slug":"什么时候需要手动释放-bytebuf","link":"#什么时候需要手动释放-bytebuf","children":[]},{"level":3,"title":"什么时候不需要手动释放 ByteBuf？","slug":"什么时候不需要手动释放-bytebuf","link":"#什么时候不需要手动释放-bytebuf","children":[]},{"level":3,"title":"总结：","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":1.53,"words":458},"filePathRelative":"Netty/释放ByteBuf.md","excerpt":"\\n<h3>什么时候需要手动释放 <code>ByteBuf</code>？</h3>\\n<ul>\\n<li>\\n<p><strong>你显式创建了 <code>ByteBuf</code>：</strong>\\n如果你在代码中自己通过 <code>ctx.alloc().buffer()</code> 或其他方式创建了一个 <code>ByteBuf</code>，那么在使用完之后，你需要手动释放它。可以调用 <code>buffer.release()</code> 来减少引用计数，以便 Netty 可以回收内存。</p>\\n<p>示例：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\">ByteBuf</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> buffer </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\"> ctx</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">alloc</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">().</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">buffer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">();</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 填充数据</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">ctx</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">writeAndFlush</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(buffer);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 发送完数据后手动释放</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">buffer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">release</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">();</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>你在自定义的 Handler 中直接操作了 <code>ByteBuf</code>：</strong>\\n如果你在自定义的 <code>ChannelHandler</code> 代码中创建并管理了 <code>ByteBuf</code>，并且这个对象不是由 Netty 管理的，那么同样需要在使用完后手动释放它。</p>\\n</li>\\n</ul>"}')}}]);