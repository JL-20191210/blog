"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[12880],{66262:(t,i)=>{i.A=(t,i)=>{const e=t.__vccOpts||t;for(const[t,s]of i)e[t]=s;return e}},58730:(t,i,e)=>{e.r(i),e.d(i,{comp:()=>a,data:()=>n});var s=e(20641);const l={},a=(0,e(66262).A)(l,[["render",function(t,i){return(0,s.uX)(),(0,s.CE)("div",null,[i[0]||(i[0]=(0,s.Fv)('<h1 id="数据库的隔离级别" tabindex="-1"><a class="header-anchor" href="#数据库的隔离级别"><span>数据库的隔离级别</span></a></h1><blockquote><ul><li><strong>读未提交 (Read Uncommitted)</strong>：事务可以读取其他事务尚未提交的数据，可能会读取到脏数据。</li><li><strong>读已提交 (Read Committed)</strong>：事务只能读取其他事务已提交的数据，避免了脏读。</li><li><strong>可重复读 (Repeatable Read)</strong>：事务中读取的数据在整个事务期间都是一致的，避免了不可重复读。</li><li><strong>串行化 (Serializable)</strong>：事务完全隔离，避免了幻读。</li></ul></blockquote>',2)),(0,s.Q3)(" more "),i[1]||(i[1]=(0,s.Fv)('<h3 id="_1-读未提交-read-uncommitted" tabindex="-1"><a class="header-anchor" href="#_1-读未提交-read-uncommitted"><span>1. <strong>读未提交 (Read Uncommitted)</strong></span></a></h3><ul><li><p><strong>定义</strong>：事务可以读取其他事务尚未提交的数据（脏数据）。即使其他事务正在修改数据，当前事务也能看到这些修改，即使它们最终可能会被回滚。</p></li><li><p>特点：</p><ul><li><p><strong>脏读</strong>：事务可能读取到其他事务未提交的、被回滚的数据。</p></li><li><p><strong>不可重复读</strong>：在一个事务中读取的数据，在后续读取时可能发生变化。</p></li><li><p><strong>幻读</strong>：事务在进行查询时，可能会看到另外一个事务插入的新数据。</p></li></ul></li><li><p><strong>适用场景</strong>：适用于对数据一致性要求较低的情况，主要关注并发性能。</p></li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> SESSION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TRANSACTION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ISOLATION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LEVEL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> READ</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UNCOMMITTED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-读已提交-read-committed" tabindex="-1"><a class="header-anchor" href="#_2-读已提交-read-committed"><span>2. <strong>读已提交 (Read Committed)</strong></span></a></h3><ul><li><strong>定义</strong>：事务只能读取其他事务已提交的数据，即避免了脏读，但在一个事务中，读取的同一数据可能会因其他事务的提交而变化（不可重复读）。</li><li>特点： <ul><li><strong>避免脏读</strong>：只会读取已经提交的数据。</li><li><strong>不可重复读</strong>：如果一个事务读取某个数据，另一个事务提交后该数据发生变化，当前事务再读取时将获得不同的值。</li><li><strong>幻读</strong>：事务中查询的数据可能会因为其他事务插入而发生变化。</li></ul></li><li><strong>适用场景</strong>：适用于大多数需要平衡一致性和并发性的一般应用。</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> SESSION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TRANSACTION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ISOLATION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LEVEL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> READ</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> COMMITTED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-可重复读-repeatable-read" tabindex="-1"><a class="header-anchor" href="#_3-可重复读-repeatable-read"><span>3. <strong>可重复读 (Repeatable Read)</strong></span></a></h3><ul><li><strong>定义</strong>：在同一个事务内，所有读取的数据在事务结束之前都是一致的，避免了不可重复读。但该隔离级别仍然可能遇到幻读问题。</li><li>特点： <ul><li><strong>避免脏读</strong>和<strong>不可重复读</strong>：事务内每次读取相同的数据都会得到一致的结果。</li><li><strong>可能出现幻读</strong>：事务中查询的结果集可能因为其他事务插入或删除数据而发生变化。</li></ul></li><li><strong>适用场景</strong>：适用于对数据一致性要求较高的应用，且需要避免数据读取不一致的情况。</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> SESSION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TRANSACTION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ISOLATION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LEVEL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> REPEATABLE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> READ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-串行化-serializable" tabindex="-1"><a class="header-anchor" href="#_4-串行化-serializable"><span>4. <strong>串行化 (Serializable)</strong></span></a></h3><ul><li><strong>定义</strong>：最高级别的隔离级别，事务之间完全隔离，所有事务按顺序执行，事务的执行结果等同于串行执行，避免了脏读、不可重复读和幻读。</li><li>特点： <ul><li><strong>避免脏读、不可重复读和幻读</strong>：所有事务之间完全隔离，事务执行过程中没有并发操作。</li><li><strong>性能较差</strong>：由于所有事务必须按顺序执行，导致并发性最差，通常会显著降低系统的吞吐量。</li></ul></li><li><strong>适用场景</strong>：适用于对事务一致性要求极高的应用，通常是在需要严格保证数据一致性且对性能要求不高的情况下使用.</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> SESSION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TRANSACTION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ISOLATION</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LEVEL</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> SERIALIZABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="总结表格" tabindex="-1"><a class="header-anchor" href="#总结表格"><span>总结表格</span></a></h3><table><thead><tr><th style="text-align:center;">隔离级别</th><th style="text-align:center;">脏读 (Dirty Read)</th><th style="text-align:center;">不可重复读 (Non-repeatable Read)</th><th style="text-align:center;">幻读 (Phantom Read)</th><th style="text-align:center;">优点</th><th style="text-align:center;">缺点</th></tr></thead><tbody><tr><td style="text-align:center;">读未提交</td><td style="text-align:center;">允许</td><td style="text-align:center;">允许</td><td style="text-align:center;">允许</td><td style="text-align:center;">提高并发性</td><td style="text-align:center;">数据不一致，脏读严重</td></tr><tr><td style="text-align:center;">读已提交</td><td style="text-align:center;">不允许</td><td style="text-align:center;">允许</td><td style="text-align:center;">允许</td><td style="text-align:center;">避免脏读，较为常用</td><td style="text-align:center;">不可重复读，可能出现幻读</td></tr><tr><td style="text-align:center;">可重复读</td><td style="text-align:center;">不允许</td><td style="text-align:center;">不允许</td><td style="text-align:center;">允许</td><td style="text-align:center;">保证同一事务内的数据一致性</td><td style="text-align:center;">可能出现幻读</td></tr><tr><td style="text-align:center;">串行化</td><td style="text-align:center;">不允许</td><td style="text-align:center;">不允许</td><td style="text-align:center;">不允许</td><td style="text-align:center;">最高的一致性，保证完全隔离</td><td style="text-align:center;">性能差，几乎不支持并发操作</td></tr></tbody></table><h3 id="选择隔离级别时的权衡" tabindex="-1"><a class="header-anchor" href="#选择隔离级别时的权衡"><span>选择隔离级别时的权衡：</span></a></h3><ul><li><strong>并发性</strong>与<strong>一致性</strong>是相互矛盾的，较低的隔离级别通常会提高并发性，但牺牲了一致性，而较高的隔离级别则会保证数据一致性，但牺牲了性能。</li><li>在实际应用中，选择适当的隔离级别要根据业务场景来决定，通常在不需要极高一致性的情况下选择较低的隔离级别，以提高系统的并发性能。</li></ul>',16))])}]]),n=JSON.parse('{"path":"/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html","title":"数据库的隔离级别","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-01-02T00:00:00.000Z","category":["MySQL"],"tag":["事务"],"gitInclude":[]},"headers":[{"level":3,"title":"1. 读未提交 (Read Uncommitted)","slug":"_1-读未提交-read-uncommitted","link":"#_1-读未提交-read-uncommitted","children":[]},{"level":3,"title":"2. 读已提交 (Read Committed)","slug":"_2-读已提交-read-committed","link":"#_2-读已提交-read-committed","children":[]},{"level":3,"title":"3. 可重复读 (Repeatable Read)","slug":"_3-可重复读-repeatable-read","link":"#_3-可重复读-repeatable-read","children":[]},{"level":3,"title":"4. 串行化 (Serializable)","slug":"_4-串行化-serializable","link":"#_4-串行化-serializable","children":[]},{"level":3,"title":"总结表格","slug":"总结表格","link":"#总结表格","children":[]},{"level":3,"title":"选择隔离级别时的权衡：","slug":"选择隔离级别时的权衡","link":"#选择隔离级别时的权衡","children":[]}],"readingTime":{"minutes":3.79,"words":1136},"filePathRelative":"Database/MySQL/MySQL安全配置/数据库隔离级别.md","localizedDate":"2025年1月2日","excerpt":"\\n<blockquote>\\n<ul>\\n<li><strong>读未提交 (Read Uncommitted)</strong>：事务可以读取其他事务尚未提交的数据，可能会读取到脏数据。</li>\\n<li><strong>读已提交 (Read Committed)</strong>：事务只能读取其他事务已提交的数据，避免了脏读。</li>\\n<li><strong>可重复读 (Repeatable Read)</strong>：事务中读取的数据在整个事务期间都是一致的，避免了不可重复读。</li>\\n<li><strong>串行化 (Serializable)</strong>：事务完全隔离，避免了幻读。</li>\\n</ul>\\n</blockquote>\\n"}')}}]);