"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3524],{1709:(i,s,a)=>{a.d(s,{l:()=>n});const n={category:{"/":{path:"/category/",map:{markdown:{path:"/category/markdown/",indexes:[0]},docker:{path:"/category/docker/",indexes:[1,2,3,4,5,6,7]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[8]},JVM:{path:"/category/jvm/",indexes:[9,10,11,12,13,14,15,16]},Java:{path:"/category/java/",indexes:[17,18,19,20,21,22,23,24,25,26,27,28,29]},Linux:{path:"/category/linux/",indexes:[30,31,32,33,34,35]},Netty:{path:"/category/netty/",indexes:[36,37,38,39]},Nginx:{path:"/category/nginx/",indexes:[40]},Spring:{path:"/category/spring/",indexes:[41,42,43,44,45,46,47,48,49,50,51]},vue:{path:"/category/vue/",indexes:[52,53]},网络:{path:"/category/%E7%BD%91%E7%BB%9C/",indexes:[54]},MySQL:{path:"/category/mysql/",indexes:[55,56,57,58,59,60,61,62]},Redis:{path:"/category/redis/",indexes:[63]},Mybatis:{path:"/category/mybatis/",indexes:[64,65,66,67,68,69,70]},Python:{path:"/category/python/",indexes:[71,72,73]},Nacos:{path:"/category/nacos/",indexes:[74,75,76,77,78,79]},Git:{path:"/category/git/",indexes:[80]},项目:{path:"/category/%E9%A1%B9%E7%9B%AE/",indexes:[81,82]},"MyBatis-Plus":{path:"/category/mybatis-plus/",indexes:[83,84,85]},实战:{path:"/category/%E5%AE%9E%E6%88%98/",indexes:[86,87,88,89,90,91,92]}}}},tag:{"/":{path:"/tag/",map:{使用:{path:"/tag/%E4%BD%BF%E7%94%A8/",indexes:[0]},容器:{path:"/tag/%E5%AE%B9%E5%99%A8/",indexes:[5]},镜像:{path:"/tag/%E9%95%9C%E5%83%8F/",indexes:[1,2,3,6]},经验:{path:"/tag/%E7%BB%8F%E9%AA%8C/",indexes:[53,7]},总结:{path:"/tag/%E6%80%BB%E7%BB%93/",indexes:[80,9,10,11,12,13,14,15,16,30,32,33,46,52,74,75,76,34,35,77,78,51]},Java8特性:{path:"/tag/java8%E7%89%B9%E6%80%A7/",indexes:[18,21,22,23,24,25,26,27,28,29]},基础知识:{path:"/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",indexes:[31]},教程:{path:"/tag/%E6%95%99%E7%A8%8B/",indexes:[36,81,37,38,39,63,82]},error:{path:"/tag/error/",indexes:[40]},git:{path:"/tag/git/",indexes:[54]},网络:{path:"/tag/%E7%BD%91%E7%BB%9C/",indexes:[54]},安全:{path:"/tag/%E5%AE%89%E5%85%A8/",indexes:[55,57]},安装:{path:"/tag/%E5%AE%89%E8%A3%85/",indexes:[59]},踩坑:{path:"/tag/%E8%B8%A9%E5%9D%91/",indexes:[56,60,61]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",indexes:[71,72,62]},事务:{path:"/tag/%E4%BA%8B%E5%8A%A1/",indexes:[58]},私有云:{path:"/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",indexes:[4]},坑王:{path:"/tag/%E5%9D%91%E7%8E%8B/",indexes:[19]},必背:{path:"/tag/%E5%BF%85%E8%83%8C/",indexes:[17]},了解:{path:"/tag/%E4%BA%86%E8%A7%A3/",indexes:[20]},查询:{path:"/tag/%E6%9F%A5%E8%AF%A2/",indexes:[64,65,66,67,68,69]},插件:{path:"/tag/%E6%8F%92%E4%BB%B6/",indexes:[70]},爬虫:{path:"/tag/%E7%88%AC%E8%99%AB/",indexes:[73]},注解:{path:"/tag/%E6%B3%A8%E8%A7%A3/",indexes:[85,41,42,43,44,45,47,48,49,50]},接口文档:{path:"/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",indexes:[83]},接口示例:{path:"/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",indexes:[84]},bug:{path:"/tag/bug/",indexes:[86,87,88,89,90,91,92]}}}}}},4776:(i,s,a)=>{a.d(s,{M:()=>n});const n=["/emoji.html","/Docker/pull.html","/Docker/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html","/Docker/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html","/Docker/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html","/Docker/Docker%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F.html","/Docker/%E5%AE%89%E8%A3%85Nginx.html","/Docker/","/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html","/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html","/JVM/GC%E7%B1%BB%E5%9E%8B.html","/JVM/OOM.html","/JVM/","/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html","/JVM/jstack%E7%94%A8%E6%B3%95.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html","/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html","/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html","/Java/String/isNotEmpty%E5%92%8CisNotBlank.html","/Java/","/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html","/Linux/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html","/Linux/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html","/Linux/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html","/Linux/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html","/Linux/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html","/Linux/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html","/Netty/Netty%20%E5%85%A5%E9%97%A8.html","/Netty/NIO%20%E5%9F%BA%E7%A1%80.html","/Netty/Netty%20%E8%BF%9B%E9%98%B6.html","/Netty/%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html","/Nginx/413%20(Request%20Entity%20Too%20Large).html","/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html","/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html","/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html","/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html","/Spring%20MVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html","/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html","/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html","/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html","/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html","/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html","/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html","/Vue/","/Vue/vue%E6%A8%A1%E6%9D%BF.html","/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html","/Database/MySQL/MySQL%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html","/Database/MySQL/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html","/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html","/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html","/Database/MySQL/MySQL8.0%E5%AE%89%E8%A3%85.html","/Database/MySQL/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html","/Database/MySQL/mysql%20-uroot%20-p%E6%8A%A5%E9%94%99.html","/Database/MySQL/union%E5%92%8Cunion%20all.html","/Database/Redis/%E5%9F%BA%E7%A1%80%E7%AF%87.html","/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html","/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html","/Mybatis/Mybatis%20Plus/this.page().html","/Mybatis/Mybatis%20Plus/where%201_1.html","/Mybatis/Mybatis%20Plus/wrapper.and().html","/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html","/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html","/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html","/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html","/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html","/SpringCloud/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html","/SpringCloud/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html","/SpringCloud/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html","/SpringCloud/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html","/SpringCloud/Nacos/","/VCS/Git/%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E5%A4%B9.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/","/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html","/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html","/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html","/intro.html","/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html","/Docker/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html","/JVM/%E9%BB%91%E9%A9%ACJVM.html","/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html","/Linux/","/Linux/daemon-reload.html","/Linux/rc.local.html","/Linux/reset-failed.html","/Linux/systemctl.html","/Netty/","/Nginx/","/Python/","/Spring/","/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html","/%E9%9A%8F%E7%AC%94/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html","/Database/MySQL/","/Database/Redis/","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html","/Python/%E5%9F%BA%E7%A1%80/video.html","/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html","/Spring%20MVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html","/Spring%20MVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html","/SpringCloud/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html","/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html","/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html"]},3781:(i,s,a)=>{a.d(s,{U:()=>n});const n={article:{"/":{path:"/article/",indexes:[0,36,81,17,80,83,84,85,71,72,73,55,56,57,58,41,86,9,10,11,12,13,14,15,16,18,64,65,66,67,68,69,30,1,2,3,31,32,33,4,42,70,43,44,59,45,87,46,47,48,49,50,19,20,52,53,88,89,90,91,74,75,76,92,34,35,77,78,79,5,6,7,37,38,39,40,51,60,61,62,63,21,22,23,24,25,82,26,54,27,28,29,93,94,8,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131]}},star:{"/":{path:"/star/",indexes:[30,32,0,36,81]}},timeline:{"/":{path:"/timeline/",indexes:[17,80,83,84,85,71,72,73,55,56,57,58,41,86,9,10,11,12,13,14,15,16,18,64,65,66,67,68,69,30,1,2,3,31,32,33,4,42,70,43,44,59,45,87,46,47,48,49,50,19,20,52,53,88,89,90,91,74,75,76,92,0,34,35,77,78,79,5,6,7,37,36,38,39,40,51,60,61,62,63,21,22,23,24,25,82,81,26,54,27,28,29]}}}},7877:(i,s,a)=>{a.d(s,{B:()=>H});var n={};a.r(n);var t={};a.r(t);var e={};a.r(e),a.d(e,{default:()=>C});var l={};a.r(l);var h={};a.r(h),a.d(h,{default:()=>j});var k={};a.r(k),a.d(k,{default:()=>V});var p={};a.r(p),a.d(p,{default:()=>_});var r=a(854),d=a(7786),o=a(7208),A=a(6367),g=a(8262),B=a(7247),E=a(7721),c=a(7128),y=a(1932),u=a(4075),m=a(6819),b=a(9299),F=a(1118),v=a(8073);const C={enhance:({app:i})=>{(0,r.L4)("Badge")||i.component("Badge",o.A),(0,r.L4)("BiliBili")||i.component("BiliBili",A.A),(0,r.L4)("CodePen")||i.component("CodePen",g.A),(0,r.L4)("FontIcon")||i.component("FontIcon",B.A),(0,r.L4)("PDF")||i.component("PDF",E.A),(0,r.L4)("Share")||i.component("Share",c.A),(0,r.L4)("SiteInfo")||i.component("SiteInfo",y.A),(0,r.L4)("StackBlitz")||i.component("StackBlitz",u.A),(0,r.L4)("VPBanner")||i.component("VPBanner",m.A),(0,r.L4)("VPCard")||i.component("VPCard",b.A),(0,r.L4)("VidStack")||i.component("VidStack",F.A),(0,r.L4)("XiGua")||i.component("XiGua",v.A)},setup:()=>{(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]};var D=a(6358),f=a(3827),x=a(4919),S=a(142),M=a(8913),J=a(2184),w=a(3349),q=a(1781),L=a(9212);const j={enhance:({app:i})=>{i.component("CodeTabs",q.S),i.component("Tabs",L.t)}};var N=a(4081),I=a(3027);const V={enhance:({app:i})=>{i.component("CodeDemo",N.A),i.component("MdDemo",I.A)}};var P=a(7040),T=a(2159),R=a(783),O=a(8465),Q=a(641),U=a(7107),G=a(9920);(0,O.M_)((i=>{const s=i.t,a=!1!==i.I,n=i.i;return a?{title:s,content:n?()=>[(0,Q.h)(R.GB,{icon:n}),s]:null,order:i.O,index:i.I}:null}));const _={enhance:({app:i,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...i)=>(await R.lE.wait(),a(...i)),(0,R.fk)(i),i.component("HopeIcon",R.GB),i.component("BloggerInfo",U.tI),i.component("SocialMedias",U.rS),i.component("GlobalEncrypt",G.J),i.component("LocalEncrypt",G.n)},setup:()=>{(0,R.PV)(),(0,R.i$)(),(0,U.su)()},layouts:{Layout:R.PE,NotFound:R.Mk,BlogCategory:U.Pn,BlogHome:U.qX,BlogType:U.z7,Timeline:U.Kf}},H=[n,t,e,D,f,x,S,M,J,w,l,h,k,P,T,p].map((i=>i.default)).filter(Boolean)},8164:(i,s,a)=>{a.d(s,{J:()=>t,c:()=>n});const n=JSON.parse('{"/Mybatis/Mybatis%20Plus/where%201=1.html":"/Mybatis/Mybatis%20Plus/where%201_1.html"}'),t=Object.fromEntries([["/",{loader:()=>a.e(4470).then(a.bind(a,9908)),meta:{t:"主页",i:"home"}}],["/emoji.html",{loader:()=>a.e(2116).then(a.bind(a,8275)),meta:{d:17299872e5,l:"2024年10月27日",c:["markdown"],g:["使用"],u:!0,e:"\n<p>markdown语法中的小表情</p>\n",r:{minutes:3,words:899},t:"表情",i:"fa-solid fa-icons",y:"a"}}],["/intro.html",{loader:()=>a.e(3912).then(a.bind(a,3155)),meta:{v:"/assets/images/cover3.jpg",e:"\n<p>将你的个人介绍和档案放置在此处。</p>\n",r:{minutes:.12,words:36},t:"介绍页",i:"circle-info",y:"a"}}],["/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(707).then(a.bind(a,9100)),meta:{e:'\n<blockquote>\n<p>Maven项目中reload项目或者依赖时，使用Java8的项目版本会重置为Java11</p>\n</blockquote>\n<h2>解决方案</h2>\n<h3>修改Maven配置文件</h3>\n<p>在setting.xml添加配置指定编译时使用的Java版本</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jdk-1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.compilerVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.compilerVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.58,words:173},t:"Maven刷新时语言级别重置",y:"a"}}],["/Docker/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html",{loader:()=>a.e(7485).then(a.bind(a,9761)),meta:{d:17291232e5,l:"2024年10月17日",c:["docker"],g:["容器"],e:'\n<h2>问题</h2>\n<p>如果在启动Docker容器的过程中没有单独配置localtime，会造成Docker容器时间与主机时间不一致的情况，UTC和CST相差8小时，即容器时间与<a href="https://zhida.zhihu.com/search?q=%E5%8C%97%E4%BA%AC%E6%97%B6%E9%97%B4&amp;zhida_source=entity&amp;is_preview=1" target="_blank" rel="noopener noreferrer">北京时间</a>相差8个小时</p>\n<h2>解决方案</h2>\n\x3c!--more--\x3e',r:{minutes:1.01,words:303},t:"容器与宿主机时间同步",i:"laptop-code",y:"a"}}],["/Docker/Docker%E6%9E%84%E5%BB%BASpringBoot%E9%95%9C%E5%83%8F.html",{loader:()=>a.e(3169).then(a.bind(a,7903)),meta:{d:17291232e5,l:"2024年10月17日",c:["docker"],g:["镜像"],e:"\n<h2>1. 什么是 Dockerfile ?</h2>\n<figure><figcaption>img</figcaption></figure>\n<p>Dockerfile 是用于构建 Docker 镜像的文本文件，其中包含了一系列的指令，每个指令对应着镜像构建过程中的一步操作。通过 Dockerfile，开发者可以定义镜像中包含的文件、环境变量、运行命令等配置。</p>\n\x3c!--more--\x3e\n<h2>2. 创建 Dockerfile</h2>\n<p>在 <code>weblog-web</code> 入口模块下，创建一个名为 <code>Dockerfile</code> 的文件：</p>",r:{minutes:4.06,words:1217},t:"构建SpringBoot镜像",i:"laptop-code",y:"a"}}],["/Docker/",{loader:()=>a.e(5579).then(a.bind(a,3605)),meta:{c:["使用指南"],r:{minutes:.05,words:14},t:"Docker",i:"laptop-code",y:"a"}}],["/Docker/pull.html",{loader:()=>a.e(2860).then(a.bind(a,3022)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>下面是关于使用 <code>docker pull</code> 命令的总结：</p>\n<h3><code>docker pull</code> 命令概述</h3>\n<p><code>docker pull</code> 命令用于从 Docker 镜像仓库下载镜像到本地。它是 Docker 的基本命令之一，允许用户获取所需的镜像以便在本地运行容器。</p>\n",r:{minutes:1.13,words:338},t:"pull",i:"laptop-code",y:"a"}}],["/Docker/%E5%AE%89%E8%A3%85Nginx.html",{loader:()=>a.e(809).then(a.bind(a,8065)),meta:{d:17291232e5,l:"2024年10月17日",c:["docker"],g:["经验"],e:"\n",r:{minutes:.2,words:61},t:"Nginx",i:"laptop-code",y:"a"}}],["/Docker/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html",{loader:()=>a.e(5400).then(a.bind(a,3818)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>在 Docker 中，查看镜像架构可以帮助确认镜像是否适合当前设备的 CPU 架构（如 <code>amd64</code> 或 <code>arm64</code>）。以下是总结的几种方法：</p>\n<hr>\n",r:{minutes:1.68,words:504},t:"Nginx",i:"laptop-code",y:"a"}}],["/Docker/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(2299).then(a.bind(a,678)),meta:{e:"\n<p><code>docker run --privileged</code> 是 Docker 命令中的一个选项，用于以特权模式运行容器。下面是对该选项的总结：</p>\n<h3>特权模式概述</h3>\n<ul>\n<li><strong>权限提升</strong>: 使用 <code>--privileged</code> 运行的容器将拥有更多的系统权限，几乎可以访问宿主机的所有设备和功能。这意味着容器可以执行一些通常被限制的操作，例如直接访问硬件设备、修改系统设置等。</li>\n</ul>\n<h3>主要功能</h3>\n<ol>\n<li>\n<p><strong>访问宿主机设备</strong>: 特权容器可以访问和使用宿主机的所有设备，而不仅仅是 Docker 默认允许的设备。</p>\n</li>\n<li>\n<p><strong>执行系统调用</strong>: 特权容器可以执行一些需要更高权限的系统调用，例如修改网络配置、挂载文件系统等。</p>\n</li>\n<li>\n<p><strong>运行 Docker</strong>: 在特权模式下，容器内部可以运行 Docker 守护进程，从而使其能够创建和管理其他容器。</p>\n</li>\n</ol>",r:{minutes:1.79,words:536},t:"特权模式运行容器",y:"a"}}],["/Docker/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html",{loader:()=>a.e(9411).then(a.bind(a,1959)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>Docker镜像的导入与导出是镜像管理的常见操作，适用于跨系统传输镜像或备份镜像。以下是总结：</p>\n<hr>\n",r:{minutes:1.63,words:489},t:"镜像导入导出",i:"laptop-code",y:"a"}}],["/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html",{loader:()=>a.e(2939).then(a.bind(a,802)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<h2>1. 关系</h2>\n<figure><figcaption>层级结构</figcaption></figure>\n",r:{minutes:.29,words:87},t:"1. 学习JVM有什么用？",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html",{loader:()=>a.e(4463).then(a.bind(a,2820)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>在 JVM (Java 虚拟机) 的内存模型中，堆内存（Heap）被划分为几个代（Generation），用来优化内存分配和垃圾回收（Garbage Collection）。主要分为以下几个代：</p>\n</blockquote>\n",r:{minutes:1.9,words:571},t:"2.1内存模型",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html",{loader:()=>a.e(1162).then(a.bind(a,2342)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:'\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html" target="_blank">2.1 程序计数器</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html" target="_blank">2.2 虚拟机栈</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html" target="_blank">2.3 本地方法栈</a></p>',r:{minutes:.38,words:115},t:"2.JVM 内存结构",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/GC%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(3952).then(a.bind(a,3178)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>在Java虚拟机（JVM）中，垃圾回收（GC）器负责自动管理内存，通过回收不再使用的对象来释放内存空间。JVM 提供了多种垃圾回收器，每种回收器适用于不同的应用场景，它们各自有不同的优点和缺点。以下是JVM中常见的垃圾回收器：</p>\n</blockquote>\n",r:{minutes:5.3,words:1591},t:"GC类型",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/OOM.html",{loader:()=>a.e(6391).then(a.bind(a,1215)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>OOM 是 Out of Memory（内存溢出）的缩写，表示程序在运行过程中请求内存时超出了可用内存的限制，从而导致程序崩溃或无法继续执行。OOM 是一种常见的错误，尤其在涉及大规模数据处理或长时间运行的应用中较为频繁。</p>\n</blockquote>\n",r:{minutes:4.37,words:1310},t:"内存溢出",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/",{loader:()=>a.e(3106).then(a.bind(a,7630)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:'\n<p><a href="/blog/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html" target="_blank">1. 学习JVM有什么用？</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html" target="_blank">2.内存结构</a></p>\n',r:{minutes:.16,words:49},t:"JVM总结",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(5183).then(a.bind(a,1646)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>CPU负载过高是一个常见的系统性能瓶颈问题，它可能会导致服务器响应变慢，甚至出现卡顿现象。了解如何诊断和优化系统负载，对于保证服务器的健康运行至关重要。本文将通俗易懂地为你介绍如何分析和解决CPU Load过高的问题。</p>\n</blockquote>\n",r:{minutes:4.33,words:1298},t:"CPU Load过高问题的排查与优化",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/jstack%E7%94%A8%E6%B3%95.html",{loader:()=>a.e(3273).then(a.bind(a,4430)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p><code>jstack</code> 是 Java Development Kit (JDK) 中的一个工具，用于打印 Java 进程的线程堆栈信息。它对于调试和分析 Java 应用程序的性能问题、死锁和线程状态非常有用。以下是 <code>jstack</code> 的用法总结：</p>\n</blockquote>\n",r:{minutes:4.94,words:1481},t:"jstack用法总结",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/%E9%BB%91%E9%A9%ACJVM.html",{loader:()=>a.e(38).then(a.bind(a,7011)),meta:{e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.1,words:31},t:"黑马JVM",y:"a"}}],["/Java/",{loader:()=>a.e(2947).then(a.bind(a,9628)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>徽章</h2>\n",r:{minutes:.21,words:62},t:"Java总结",i:"fa-brands fa-java",y:"a"}}],["/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html",{loader:()=>a.e(4738).then(a.bind(a,9147)),meta:{e:"\n<p><strong>在Java中，空值（empty value）和null值是两个不同的概念。</strong></p>\n<ol>\n<li>\n<p><strong>空值（Empty Value）</strong>：</p>\n<ul>\n<li>空值通常指的是对象中没有实际的数值或内容，例如空字符串、空集合、空数组等。这些空值在Java中是有实际的存在的，只是它们没有包含任何有效的数据。</li>\n</ul>\n</li>\n<li>\n<p><strong>Null值</strong>：</p>\n<ul>\n<li>Null值表示变量没有引用任何对象，即它不指向任何内存地址。在Java中，null是一个特殊的关键字，用来表示一个变量未初始化或不指向任何对象。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.97,words:290},t:"空值（empty value）和null值",y:"a"}}],["/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html",{loader:()=>a.e(6214).then(a.bind(a,4285)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["Java8特性"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:46},t:"雷丰阳Java",i:"pen-to-square",y:"a"}}],["/Linux/",{loader:()=>a.e(9979).then(a.bind(a,8505)),meta:{e:"\n",r:{minutes:0,words:1},t:"Linux",y:"a"}}],["/Linux/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html",{loader:()=>a.e(8864).then(a.bind(a,1909)),meta:{d:17299872e5,l:"2024年10月27日",c:["Linux"],g:["总结"],e:'\n<blockquote>\n<p>设置默认开机模式</p>\n</blockquote>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-user.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "默认进入命令行界面"</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> graphical.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   "默认进入图形化界面"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.45,words:134},t:"界面切换",i:"fa-brands fa-linux",y:"a"}}],["/Linux/daemon-reload.html",{loader:()=>a.e(825).then(a.bind(a,948)),meta:{e:"\n<p><code>systemctl daemon-reload</code> 是一个 Systemd 工具命令，用于重新加载 Systemd 的配置文件，以便使最新的更改生效。当你手动编辑了 Systemd 单元文件（如服务单元文件）并想要立即应用这些更改时，你可以运行 <code>systemctl daemon-reload</code> 命令。</p>\n<p>具体来说，<code>systemctl daemon-reload</code> 的作用包括：</p>\n<ol>\n<li>\n<p><strong>重新加载配置文件</strong>：当你编辑了 Systemd 单元文件（如 <code>.service</code> 文件）时，使用 <code>systemctl daemon-reload</code> 可以重新加载 Systemd 的配置，使更改生效。</p>\n</li>\n<li>\n<p><strong>更新 Systemd 管理的单元</strong>：Systemd 会监视系统中的单元文件，包括服务、套接字、挂载点等。<code>daemon-reload</code> 命令会更新 Systemd 对这些单元的管理状态。</p>\n</li>\n<li>\n<p><strong>确保新配置生效</strong>：在修改 Systemd 配置后，如果没有运行 <code>systemctl daemon-reload</code>，Systemd 可能仍然使用旧的配置信息。通过运行此命令，可以确保 Systemd 使用最新的配置。</p>\n</li>\n</ol>",r:{minutes:.92,words:275},t:"daemon-reload",y:"a"}}],["/Linux/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(2031).then(a.bind(a,791)),meta:{d:17299872e5,l:"2024年10月27日",c:["Linux"],g:["总结"],e:"\n<h2>概述</h2>\n<blockquote>\n<p>把控制命令发送给 init 守护程序。</p>\n<p>init 进程号始终为 1，发送 TERM 信号给 init 会终止所有用户进程、守护进程等。</p>\n<hr>\n<p>init 可用于<code>安全</code>关闭 重启 停止计算机，init 是所有进程的祖先，是 Linux 系统不可或缺的程序。</p>\n<p>强制直接关闭 Linux 系统计算机电源可能导致进程数据丢失，使系统处于不稳定状态 (甚至损坏硬件设备)。</p>\n<hr>\n<p><code>shutdown</code>命令需有 root 权限，shutdown 是把信号发送给<code>init</code>命令，要求 init 改变 runlevel，以此进行相关操作。</p>\n<p>关机或重启计算机实际上是 <code>runlevel</code> 的调整，因此，也可使用 <code>init</code> 命令 (需 root 权限) 直接调整 <code>runlevel </code>进行相关操作。</p>\n</blockquote>",r:{minutes:2.15,words:644},t:"init命令详解",i:"fa-brands fa-linux",y:"a"}}],["/Linux/rc.local.html",{loader:()=>a.e(4209).then(a.bind(a,7986)),meta:{e:"\n<p><code>rc.local</code> 是一个在 Unix/Linux 系统中用来执行系统启动时自定义命令或脚本的文件。在系统启动过程中，操作系统会执行一系列的启动脚本来初始化系统环境，其中就包括执行 <code>rc.local</code> 文件中的命令或脚本。</p>\n<p>具体来说，<code>rc.local</code> 文件通常位于 <code>/etc/rc.local</code> 或 <code>/etc/rc.d/rc.local</code> 这样的路径下。在系统启动时，操作系统会在启动过程的某个阶段执行这个文件中包含的命令或脚本，用户可以在其中添加自定义的启动任务。</p>",r:{minutes:1.24,words:372},t:"rc.local",y:"a"}}],["/Linux/reset-failed.html",{loader:()=>a.e(1960).then(a.bind(a,2193)),meta:{e:"\n<p><code>systemctl reset-failed</code> 命令用于重置 Systemd 记录的所有失败的服务状态信息。当一个服务启动失败后，Systemd 会记录该服务的失败状态，这些状态信息可以帮助系统管理员诊断问题。但有时候，当问题已经解决或者不再需要这些失败状态信息时，可以使用 <code>systemctl reset-failed</code> 命令将这些失败状态信息清除，以便重新开始服务的状态跟踪。</p>\n<p>重置失败状态信息后，Systemd 将不再记录之前失败的服务状态，这样在下一次服务启动时，Systemd 将重新开始跟踪服务的状态。这个命令通常用于清除旧的失败状态信息，以便更清晰地查看当前系统状态。</p>",r:{minutes:.81,words:243},t:"reset-failed",y:"a"}}],["/Linux/systemctl.html",{loader:()=>a.e(961).then(a.bind(a,5553)),meta:{e:'\n<p>Systemd 是许多现代 Linux 发行版中默认的初始化系统和服务管理器。通过 systemctl 命令，系统管理员可以方便地管理和监控系统中的各种服务。本文将介绍 systemctl 命令的常见用法，帮助读者更好地掌握 Systemd 服务管理。</p>\n<h3>1. 启动和停止服务</h3>\n<p>启动一个服务：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> servicename</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.28,words:383},t:"systemctl 命令的常见用法",y:"a"}}],["/Linux/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html",{loader:()=>a.e(3501).then(a.bind(a,7336)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["基础知识"],e:"\n<p>Linux 操作系统因其开源特性和灵活性，支持多种硬件架构，适用于从个人电脑到大型服务器、嵌入式设备等各种场景。以下是一些主要的 Linux 架构及其对应的代码标识：</p>\n",r:{minutes:1.69,words:506},t:"Linux 支持的主要架构",i:"fa-brands fa-linux",y:"a"}}],["/Linux/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html",{loader:()=>a.e(7179).then(a.bind(a,8247)),meta:{d:17324064e5,l:"2024年11月24日",c:["Linux"],g:["总结"],e:"\n<p>启动Linux Centos7系统，当出现如下画面时，直接按“e”键继续。</p>\n<h3></h3>\n<h3>2、看到如下界面后，往下拉</h3>\n<p>⚠️注意⬇️拉一下，否则看不到那行</p>\n<h3></h3>\n<h3>3、在如下截图的位置，添加“rw single init=/bin/bash”，添加后按“Ctrl + x”引导系统。</h3>\n<h3></h3>\n<h3>4、输入“passwd”重置root密码</h3>\n<h3></h3>\n<h3>5、运行命令“exec /sbin/init”来正常启动系统，需要输入修改后的root密码。</h3>\n<h3></h3>\n<h3>6、进入系统后，输入命令“reboot”重启系统。</h3>",r:{minutes:.76,words:229},t:"单用户模式重置root密码",i:"fa-brands fa-linux",y:"a"}}],["/Linux/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(3822).then(a.bind(a,2517)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["总结"],e:"\n<p>在 Linux 系统上查看设备信息通常可以通过多种工具和命令实现。以下是对常用方法的总结：</p>\n<hr>\n",r:{minutes:1.83,words:550},t:"查看系统配置",i:"fa-brands fa-linux",y:"a"}}],["/Linux/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html",{loader:()=>a.e(6802).then(a.bind(a,6279)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["总结"],e:"\n<p>在 Linux 系统中，挂载硬盘是指将一个存储设备（如硬盘分区或 U 盘）与文件系统中的某个目录关联起来，使其可以被访问。以下是挂载硬盘的一般步骤：</p>\n",r:{minutes:1.7,words:510},t:"硬盘挂载",i:"fa-brands fa-linux",y:"a"}}],["/Netty/NIO%20%E5%9F%BA%E7%A1%80.html",{loader:()=>a.e(7433).then(a.bind(a,5113)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:"\n<blockquote>\n<p>non-blocking io 非阻塞 IO</p>\n</blockquote>\n",r:{minutes:32.19,words:9656},t:"NIO 基础",i:"pen-to-square",y:"a"}}],["/Netty/Netty%20%E5%85%A5%E9%97%A8.html",{loader:()=>a.e(7328).then(a.bind(a,7381)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],u:!0,v:"/assets/images/cover2.jpg",e:'\n<h2>1. 概述</h2>\n<h3>1.1 Netty 是什么？</h3>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Netty is an asynchronous event-driven network application framework</span></span>\n<span class="line"><span>for rapid development of maintainable high performance protocol servers &amp; clients.</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>Netty 是一个异步的、基于事件驱动的网络应用框架，用于快速开发可维护、高性能的网络服务器和客户端</p>\n',r:{minutes:30.64,words:9193},t:"Netty 入门",i:"pen-to-square",y:"a"}}],["/Netty/Netty%20%E8%BF%9B%E9%98%B6.html",{loader:()=>a.e(7664).then(a.bind(a,6048)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:"\n<h2>1. 粘包与半包</h2>\n",r:{minutes:29.5,words:8849},t:"Netty 进阶",i:"pen-to-square",y:"a"}}],["/Netty/",{loader:()=>a.e(8169).then(a.bind(a,3618)),meta:{e:"\n",r:{minutes:0,words:1},t:"Netty",y:"a"}}],["/Netty/%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html",{loader:()=>a.e(2594).then(a.bind(a,2070)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:"\n<h2>1. 优化</h2>\n<h3>1.1 扩展序列化算法</h3>\n<p>序列化，反序列化主要用在消息正文的转换上</p>\n<ul>\n<li>序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要变成 byte[]）</li>\n<li>反序列化时，需要将传入的正文数据还原成 Java 对象，便于处理</li>\n</ul>\n<p>目前的代码仅支持 Java 自带的序列化，反序列化机制，核心代码如下</p>\n",r:{minutes:21.44,words:6433},t:"优化与源码",i:"pen-to-square",y:"a"}}],["/Nginx/413%20(Request%20Entity%20Too%20Large).html",{loader:()=>a.e(8493).then(a.bind(a,5160)),meta:{d:17291232e5,l:"2024年10月17日",c:["Nginx"],g:["error"],e:"\n<blockquote>\n<p>上传文件时报错：请求实体过大</p>\n<p>修改Nginx服务器的请求实体大小限制</p>\n</blockquote>\n",r:{minutes:.31,words:92},t:"413 (Request Entity Too Large)",i:"pen-to-square",y:"a"}}],["/Nginx/",{loader:()=>a.e(1009).then(a.bind(a,705)),meta:{e:"\n",r:{minutes:0,words:1},t:"Nginx",y:"a"}}],["/Python/",{loader:()=>a.e(8585).then(a.bind(a,9587)),meta:{e:"\n",r:{minutes:.01,words:3},t:"Python总结",y:"a"}}],["/Spring/",{loader:()=>a.e(4330).then(a.bind(a,6478)),meta:{e:"\n",r:{minutes:0,words:1},t:"Spring",y:"a"}}],["/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html",{loader:()=>a.e(1622).then(a.bind(a,2220)),meta:{d:17291232e5,l:"2024年10月17日",c:["Spring"],g:["总结"],e:"\n<h2>spring框架概述（Spring5.x）</h2>\n",r:{minutes:1.58,words:475},t:"Spring5.x概述",i:"pen-to-square",y:"a"}}],["/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html",{loader:()=>a.e(2256).then(a.bind(a,4295)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["总结"],e:'\n<blockquote>\n<p>springboot会自动注入数据源，如果没有配，就会抛出该异常</p>\n</blockquote>\n<p><strong>不需要数据库支持，可以让他不注入数据源</strong></p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> DataSourceAutoConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, args);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.25,words:76},t:"Spring Boot无数据源启动",i:"pen-to-square",y:"a"}}],["/Vue/",{loader:()=>a.e(6789).then(a.bind(a,2632)),meta:{d:17304192e5,l:"2024年11月1日",c:["vue"],g:["总结"],e:"\n<blockquote>\n<p>Vue.js 是一个用于构建用户界面的渐进式 JavaScript 框架。它采用了组件化的开发方式，允许开发者通过组合可复用的组件来构建复杂的应用。Vue 的核心库专注于视图层，易于上手，同时也提供了强大的工具和生态系统，例如 Vue Router 和 Vuex，适用于大型应用。它支持响应式数据绑定，使得数据变化自动更新视图，从而提高开发效率。</p>\n</blockquote>\n",r:{minutes:.49,words:147},t:"Vue",i:"fa-brands fa-vuejs",y:"a"}}],["/Vue/vue%E6%A8%A1%E6%9D%BF.html",{loader:()=>a.e(6533).then(a.bind(a,2484)),meta:{d:17304192e5,l:"2024年11月1日",c:["vue"],g:["经验"],e:"\n<blockquote>\n<p>配置首选项全局代码片段，新建vue文件时自动生成模板</p>\n</blockquote>\n",r:{minutes:2.75,words:826},t:"vue模板",i:"fa-brands fa-vuejs",y:"a"}}],["/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html",{loader:()=>a.e(8073).then(a.bind(a,5948)),meta:{e:'\n<blockquote>\n\x3c!--排序加上.number表示要接受一个数字--\x3e\n<p><code>&lt;el-input v-model.number="dataForm.sort" placeholder="排序"&gt;&lt;/el-input&gt;</code></p>\n</blockquote>\n<p><strong>完整示例</strong></p>\n<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-dialog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"!dataForm.brandId ? \'新增\' : \'修改\'"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :close-on-click-modal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"false"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :visible.sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"visible"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :rules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataRule"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @keyup.enter.native</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataFormSubmit()"</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      label-width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"110px"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌名"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.name"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌名"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      &lt;!--用新的组件替换原来的输入框--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌logo地址"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">singleUpload</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">singleUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"介绍"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"descript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.descript"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"介绍"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"显示状态"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"showStatus"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-switch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.showStatus"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> active-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"#13ce66"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> inactive-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"#ff4949"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :active-value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1"</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">          :inactive-value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"检索首字母"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"firstLetter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.firstLetter"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"检索首字母"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"sort"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model.number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.sort"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> slot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"footer"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dialog-footer"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"visible = false"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;取消&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"primary"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataFormSubmit()"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;确定&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">      ...</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      dataRule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'品牌名不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        logo</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'品牌logo地址不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        descript</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'介绍不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        showStatus</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'显示状态[0-不显示；1-显示]不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //首字母校验规则</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        firstLetter</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            validator</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"首字母必须填写"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">^</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">[a-zA-Z]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"首字母必须在a-z或者A-Z之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "blur"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //排序字段校验规则</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            validator</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序字段必须填写"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序字段必须是一个大于等于0的整数"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "blur"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.43,words:430},t:"表单验证",y:"a"}}],["/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html",{loader:()=>a.e(3767).then(a.bind(a,5361)),meta:{d:17290368e5,l:"2024年10月16日",c:["网络"],g:["git","网络"],e:'\n<blockquote>\n<p>可解决github提交代码时连接失败的问题</p>\n</blockquote>\n<h2>Windows</h2>\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#cmd窗口下执行</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ipconfig</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /flushdns</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.2,words:60},t:"刷新dns缓存",i:"pen-to-square",y:"a"}}],["/%E9%9A%8F%E7%AC%94/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(9303).then(a.bind(a,8370)),meta:{e:'\n<table>\n<thead>\n<tr>\n<th>配件</th>\n<th style="text-align:center">型号/规格</th>\n<th style="text-align:center">价格</th>\n<th style="text-align:center">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>处理器</td>\n<td style="text-align:center">Intel Core i5-13400F</td>\n<td style="text-align:center"></td>\n<td style="text-align:center">无核显</td>\n</tr>\n<tr>\n<td>主板</td>\n<td style="text-align:center">七彩虹 战斧 BATTLE-AX B760M-GHA WIFI V20</td>\n<td style="text-align:center">1296</td>\n<td style="text-align:center">板u套</td>\n</tr>\n<tr>\n<td>内存</td>\n<td style="text-align:center">金百达（KINGBANK）32GB(16G×2)套装 DDR4 3600  银爵 C18</td>\n<td style="text-align:center">336</td>\n<td style="text-align:center">高频率内存</td>\n</tr>\n<tr>\n<td>显卡</td>\n<td style="text-align:center">七彩虹（Colorful）iGame GeForce RTX 4060 Ti Ultra W DUO OC 8G DLSS 3</td>\n<td style="text-align:center">3379</td>\n<td style="text-align:center"></td>\n</tr>\n<tr>\n<td>存储</td>\n<td style="text-align:center">凯侠SD10 1TB(5000速+无缓存)</td>\n<td style="text-align:center">388</td>\n<td style="text-align:center">快速SSD</td>\n</tr>\n<tr>\n<td>电源</td>\n<td style="text-align:center">航嘉 WD650 EVO 650W</td>\n<td style="text-align:center">242</td>\n<td style="text-align:center">全模组电源</td>\n</tr>\n<tr>\n<td>散热器</td>\n<td style="text-align:center">乔思伯CR-1000</td>\n<td style="text-align:center">88</td>\n<td style="text-align:center">风冷散热系统</td>\n</tr>\n<tr>\n<td>机箱/风扇</td>\n<td style="text-align:center">航嘉s920暴风雪，棱镜风扇*6</td>\n<td style="text-align:center">200</td>\n<td style="text-align:center">ATX机箱</td>\n</tr>\n<tr>\n<td>显示器</td>\n<td style="text-align:center">AOC 27英寸 2K HDR400 IPS 原生180Hz 1ms 10Bit</td>\n<td style="text-align:center">1023</td>\n<td style="text-align:center">旋转升降</td>\n</tr>\n</tbody>\n</table>',r:{minutes:.56,words:167},t:"4060Ti配置",y:"a"}}],["/Database/MySQL/MySQL%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html",{loader:()=>a.e(1244).then(a.bind(a,5255)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["安全"],e:"\n<blockquote>\n<p>数据库授权是数据库管理中至关重要的一环，通过授权可以精确控制用户对数据库的访问和操作权限。在 MySQL 中，我们可以使用一系列命令来管理用户权限，包括创建用户、授予权限、撤销权限以及刷新权限。以下是一些常见的权限类型以及相关操作示例：</p>\n</blockquote>\n",r:{minutes:1.63,words:490},t:"MySQL 数据库授权管理指南",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL8.0%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(8505).then(a.bind(a,1536)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL"],g:["安装"],e:'\n<h2>普通安装</h2>\n<h3>获取源安装包</h3>\n<ul>\n<li>确定当前linux系统内核版本：[root@localhost ~]# cat /etc/redhat-release</li>\n<li>进入官网下载匹配的安装包：https://dev.mysql.com/downloads/repo/yum/</li>\n<li>假设为centos7则对应的版本为</li>\n<li><figcaption>img</figcaption></li>\n</ul>\n<h3>安装MySQL源</h3>\n<ul>\n<li>将下载完成的安装包上传至Linux</li>\n<li>root用户执行安装命令：[root@localhost ~]# rpm -Uvh mysql80-community-release-el7-3.noarch.rpm</li>\n<li><figcaption>img</figcaption></li>\n<li>检查是否安装成功：执行成功后会在/etc/yum.repos.d/目录下生成两个repo文件mysql-community.repo及 mysql-community-source.repo</li>\n<li>查看MySQL资源：[root@localhost ~]# yum repolist enabled | grep "mysql.<em>-community.</em>"</li>\n<li><figcaption>img</figcaption></li>\n</ul>',r:{minutes:2.66,words:798},t:"MySQL8.0安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html",{loader:()=>a.e(4628).then(a.bind(a,4741)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["踩坑"],e:'\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">2003-Can’t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ‘XXX.XX.XX.XX’（10060）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.67,words:200},t:"Navicat连接mysql报错",i:"pen-to-square",y:"a"}}],["/Database/MySQL/",{loader:()=>a.e(7787).then(a.bind(a,2009)),meta:{e:"\n",r:{minutes:0,words:1},t:"MySQL",y:"a"}}],["/Database/MySQL/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html",{loader:()=>a.e(4177).then(a.bind(a,1331)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["踩坑"],e:"\n<blockquote>\n<p>错误信息：“2059 - Authentication plugin 'caching_sha2_password' cannot be loaded”。这个问题通常是由于MySQL 8.0默认使用了<code>caching_sha2_password</code>身份验证插件而导致的。该插件需要相关的共享库文件来正常工作，但如果这些文件缺失或无法加载，就会导致身份验证插件无法正确加载，从而导致错误的出现。</p>\n</blockquote>\n",r:{minutes:.93,words:279},t:"caching_sha2_password无法加载",i:"pen-to-square",y:"a"}}],["/Database/MySQL/mysql%20-uroot%20-p%E6%8A%A5%E9%94%99.html",{loader:()=>a.e(5012).then(a.bind(a,2498)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["踩坑"],e:"\n<blockquote>\n<p>使用xshell登录MySQL时,<code>mysql -uroot -p</code>报错Can't connect to local MySQL server through socket '/tmp/mysql.sock'</p>\n</blockquote>\n",r:{minutes:.36,words:107},t:"mysql -uroot -p报错",i:"pen-to-square",y:"a"}}],["/Database/MySQL/union%E5%92%8Cunion%20all.html",{loader:()=>a.e(4940).then(a.bind(a,4332)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["基础"],e:"\n<blockquote>\n<p><code>UNION</code> 和 <code>UNION ALL</code> 都是用于合并两个或多个 <code>SELECT</code> 语句的结果集，但它们之间有以下区别：</p>\n</blockquote>\n",r:{minutes:1.6,words:479},t:"UNION 和 UNION ALL",i:"pen-to-square",y:"a"}}],["/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(5210).then(a.bind(a,9527)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["安全"],e:"\n<h2>关闭root远程登录</h2>\n<p>要查看 'root' 用户的连接权限，可以执行以下步骤：</p>\n<ol>\n<li>\n<p><strong>登录到 MySQL 数据库：</strong></p>\n<p>使用具有管理员权限的用户（例如 'root' 用户）登录到 MySQL 数据库。</p>\n</li>\n</ol>\n",r:{minutes:3.43,words:1028},t:"数据库安全配置",i:"pen-to-square",y:"a"}}],["/Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",{loader:()=>a.e(4403).then(a.bind(a,305)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["事务"],e:"\n<blockquote>\n<ul>\n<li><strong>读未提交 (Read Uncommitted)</strong>：事务可以读取其他事务尚未提交的数据，可能会读取到脏数据。</li>\n<li><strong>读已提交 (Read Committed)</strong>：事务只能读取其他事务已提交的数据，避免了脏读。</li>\n<li><strong>可重复读 (Repeatable Read)</strong>：事务中读取的数据在整个事务期间都是一致的，避免了不可重复读。</li>\n<li><strong>串行化 (Serializable)</strong>：事务完全隔离，避免了幻读。</li>\n</ul>\n</blockquote>\n",r:{minutes:3.79,words:1136},t:"数据库的隔离级别",i:"pen-to-square",y:"a"}}],["/Database/Redis/",{loader:()=>a.e(9714).then(a.bind(a,3977)),meta:{e:"\n",r:{minutes:0,words:1},t:"Redis",y:"a"}}],["/Database/Redis/%E5%9F%BA%E7%A1%80%E7%AF%87.html",{loader:()=>a.e(6833).then(a.bind(a,3013)),meta:{d:17291232e5,l:"2024年10月17日",c:["Redis"],g:["教程"],e:"\n<h2>开篇导读</h2>\n<p><strong>理想课程</strong></p>\n<p>小伙伴们理想的课程一定是能够通过讲解的方式，得到如下这些启发，我们的课程会从基础到精通，从redis小白，到redis大牛，还在等什么，这套课程一定就是你最适合你的课程~</p>\n<figure><figcaption>202410271510413</figcaption></figure>\n",r:{minutes:27.3,words:8190},t:"基础篇Redis",i:"pen-to-square",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html",{loader:()=>a.e(4561).then(a.bind(a,9117)),meta:{e:"\n<blockquote>\n<p>docker安装后端项目weblog</p>\n</blockquote>\n<h3>1. 目录结构</h3>\n<p>project-root/\n│\n├── code/\n│   ├── Dockerfile\n│   ├── weblog-web-0.0.1-SNAPSHOT.jar\n│   └── application.yml\n│\n└── docker-compose.yml</p>\n<h3>2.docker方式启动</h3>\n<p>💁‍♂️操作在code目录下完成</p>\n<p>1️⃣<strong>编写Dockerfile文件</strong></p>\n<p><code>vim Dockerfile</code></p>",r:{minutes:.63,words:190},t:"博客项目",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html",{loader:()=>a.e(8655).then(a.bind(a,2311)),meta:{e:'\n<h3>蓝灯常亮</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "nono"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">blue</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "default-on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">green</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "none"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">red</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:4.35,words:1306},t:"玩客云",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html",{loader:()=>a.e(8907).then(a.bind(a,4898)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["私有云"],e:"\n<blockquote>\n<p><strong>ChatGPT Next Web</strong> 是一个基于 OpenAI 的 ChatGPT 模型构建的网页应用，旨在提供用户友好的界面，方便用户与 AI 进行对话和互动，支持多种自定义设置和功能，提升用户体验。</p>\n</blockquote>\n",r:{minutes:1.23,words:368},t:"私有云部署软件",i:"laptop-code",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html",{loader:()=>a.e(577).then(a.bind(a,5249)),meta:{e:"\n<h2>1.1 定义</h2>\n<p><strong>程序计数器（Program Counter Register）</strong>：用于记录下一条 JVM 指令的执行地址行号。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>线程私有</li>\n<li>不会导致内存溢出</li>\n</ul>\n",r:{minutes:.91,words:272},t:"1. 程序计数器",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html",{loader:()=>a.e(702).then(a.bind(a,5098)),meta:{e:"\n<h2>2.1 定义</h2>\n<p>虚拟机栈为每个线程分配的内存区域，由多个栈帧组成。每个栈帧对应一次方法调用时所需的内存。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>栈大小可调整，超出限制会抛出 <code>StackOverflowError</code>。</li>\n<li>栈空间可以动态扩展，但无法收缩。</li>\n</ul>\n<h2>2.2 内存结构</h2>\n<ul>\n<li>虚拟机栈包含多个栈帧，每个栈帧保存当前方法的局部变量表、操作数栈、动态链接、方法出口等信息。</li>\n</ul>\n<h2>2.3 线程切换</h2>\n<ul>\n<li>每个线程有独立的虚拟机栈，确保数据隔离，线程切换时能够正确恢复执行位置。</li>\n</ul>",r:{minutes:1.34,words:403},t:"2. 虚拟机栈",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html",{loader:()=>a.e(8408).then(a.bind(a,4540)),meta:{e:"\n<figure><figcaption>本地方法栈</figcaption></figure>\n<h2>3.1 作用</h2>\n<p>本地方法栈用于执行本地方法（由 C、C++ 等编写），通过 Java Native Interface（JNI）与 Java 程序交互，主要用于与底层系统进行交互。</p>\n<h2>3.2 与 Java 虚拟机栈的区别</h2>\n<ul>\n<li>虚拟机栈用于执行 Java 方法，而本地方法栈用于执行本地方法。</li>\n</ul>\n<h2>3.3 栈帧结构</h2>\n<ul>\n<li>本地方法栈的栈帧结构与虚拟机栈类似，但栈帧中包含本地方法的特定信息，如参数和返回值。</li>\n</ul>",r:{minutes:.69,words:208},t:"3. 本地方法栈",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html",{loader:()=>a.e(6791).then(a.bind(a,7632)),meta:{e:"\n<h2>4.1 定义</h2>\n<p>堆（Heap）是 JVM 中用于存储对象实例的内存区域。所有通过 <code>new</code> 关键字创建的对象都会分配到堆内存中。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>线程共享：所有线程都可以访问堆内存中的对象。</li>\n<li>垃圾回收：堆内存支持垃圾回收，自动回收不再使用的对象。</li>\n</ul>\n<h2>4.2 堆内存溢出</h2>\n<p><strong>堆内存溢出</strong>（Heap OutOfMemoryError）通常发生在堆内存中对象过多，超出了容量限制。可以通过指定堆内存大小（如 <code>-Xmx8m</code>）来避免溢出。</p>",r:{minutes:.68,words:204},t:"4. 堆",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html",{loader:()=>a.e(460).then(a.bind(a,5912)),meta:{e:"\n<figure><figcaption>方法区</figcaption></figure>\n<h2>5.1 定义</h2>\n<p>方法区用于存储类结构信息、运行时常量池、静态变量以及即时编译器编译后的代码等。</p>\n<h2>5.2 特点</h2>\n<ul>\n<li>方法区是线程共享的，存储类的信息、方法、字段、运行时常量池等数据。</li>\n<li>数据在类加载时存入方法区，是静态数据区域。</li>\n</ul>\n<h2>5.3 内存溢出</h2>\n<p>方法区内存溢出（OutOfMemoryError）通常发生在加载大量类时，导致空间不足。</p>\n<ul>\n<li>在 JDK 1.8 之前，方法区被称为<strong>永久代</strong>，可以通过 <code>-XX:MaxPermSize</code> 参数调整大小。</li>\n<li>在 JDK 1.8 之后，方法区被改为<strong>元空间</strong>，通过 <code>-XX:MaxMetaspaceSize</code> 参数调整大小。</li>\n</ul>",r:{minutes:5.44,words:1633},t:"5 方法区",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html",{loader:()=>a.e(2133).then(a.bind(a,4696)),meta:{e:"\n<h2>6.1 什么是直接内存？</h2>\n<h3>6.1.1 直接内存的定义</h3>\n<blockquote>\n<p>直接内存（Direct Memory）是一种特殊的内存区域，常见于 Java NIO（New Input/Output）操作中，用作数据缓冲区。</p>\n</blockquote>\n<figure><figcaption>不使用直接内存</figcaption></figure>\n<figure><figcaption>使用直接内存</figcaption></figure>\n<h3>6.1.2 直接内存的特点</h3>\n<ul>\n<li>\n<p>性能优势：直接内存不需要在 Java 堆和操作系统内存之间频繁复制数据，读写性能高。</p>\n</li>\n<li>\n<p>管理方式：直接内存由操作系统分配和回收，不受 JVM 垃圾回收（GC）管理。</p>\n</li>\n<li>\n<p>使用代价：分配和回收的成本较高，需要谨慎管理，否则容易导致内存泄漏。</p>\n</li>\n</ul>",r:{minutes:3.05,words:916},t:"6.直接内存",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html",{loader:()=>a.e(4724).then(a.bind(a,1667)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"<blockquote>\n<p>摘要\nlist中存储实例对象，将list中实例对象的两个属性提取出来组成一个新的map</p>\n</blockquote>\n",r:{minutes:7.03,words:2110},t:"Java Stream API",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html",{loader:()=>a.e(8554).then(a.bind(a,1559)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>OS：有一个抽象方法，方法体是传入的，参数也是传入的。类Vue插槽</p>\n",r:{minutes:5.14,words:1542},t:"函数式接口",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html",{loader:()=>a.e(6009).then(a.bind(a,4033)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>Java 8 是 Java 语言历史上一个具有里程碑意义的版本，它引入了一系列的新特性，使得 Java 语言更加现代化、简洁和强大。本文将深入探讨 Java 8 中的关键新特性，帮助你全面理解这些特性及其在实际开发中的应用。</p>\n",r:{minutes:3.72,words:1117},t:"深入理解 Java 8 新特性：从核心到实践",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html",{loader:()=>a.e(8924).then(a.bind(a,3130)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：月饼装箱还是装盒，装什么口味的，装了几个，能不能装在一起</p>\n</blockquote>\n",r:{minutes:3.51,words:1054},t:"深入理解 Java Collector",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html",{loader:()=>a.e(822).then(a.bind(a,3190)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>前言</h2>\n<blockquote>\n<p><code>Optional</code> 是 Java 8 引入的一个容器类，专门用于处理可能为 <code>null</code> 的值。它提供了一种优雅的方式来避免 <code>NullPointerException</code>（空指针异常）并简化对值的检查和处理。<code>Optional</code> 的使用鼓励开发者显式地处理可能为空的场景，从而使代码更加健壮和可读。</p>\n</blockquote>\n",r:{minutes:3.22,words:966},t:"optional类",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html",{loader:()=>a.e(3282).then(a.bind(a,5660)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：默认方法就是给原来抽象的方法写一个默认实现，类似默认值。静态方法不依赖接口实例及其参数，之际使用<code>接口名.方法名</code>的方式使用，适用于写工具方法</p>\n</blockquote>\n",r:{minutes:2.9,words:869},t:"深入理解 Java 中的默认方法和静态方法",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html",{loader:()=>a.e(7931).then(a.bind(a,5004)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：面粉放到传送带上，做成月饼，分出五仁和枣泥，打包变成月饼礼盒</p>\n</blockquote>\n",r:{minutes:3.42,words:1027},t:"深入理解 Stream API",i:"pen-to-square",y:"a"}}],["/Java/String/isNotEmpty%E5%92%8CisNotBlank.html",{loader:()=>a.e(5282).then(a.bind(a,2508)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<h2>主要区别</h2>\n<blockquote>\n<ul>\n<li><code>isNotEmpty</code> 非空：只检查字符串是否有长度（即不为零长度）。</li>\n<li><code>isNotBlank</code> 非空白：不仅检查长度，还检查字符串是否仅由空白字符（如空格、制表符、换行符）组成。</li>\n</ul>\n</blockquote>\n",r:{minutes:.25,words:76},t:"isNotEmpty和isNotBlank",i:"pen-to-square",y:"a"}}],["/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html",{loader:()=>a.e(1772).then(a.bind(a,5894)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["坑王"],e:"\n<h2>概述</h2>\n<blockquote>\n<p>等号比较的是变量(栈)内存中存放的对象的(堆)内存地址，用来判断两个对象的地址是否相同，即是否是指相同一个对象。</p>\n<p>equals用来比较的是两个对象的内容是否相等</p>\n</blockquote>\n<h2>基本数据类型和引用数据类型</h2>\n<blockquote>\n<p>基本类型：long,int,byte,float,double\n对象类型：Long,Integer,Byte,Float,Double其它一切java提供的，或者你自己创建的类</p>\n<p>Long,Integer,Byte,Float,Double成为包装类</p>\n</blockquote>",r:{minutes:.68,words:205},t:"equals与等号",i:"fa-brands fa-bug",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",{loader:()=>a.e(6171).then(a.bind(a,7507)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<blockquote>\n<p>[!important]\n序列化是将对象转换为字节流的过程，使对象能够通过网络传输，进行持久化存储或者缓存。Java提供了<code>java.io.serializable</code>接口来支持序列化，只要类实现了该接口，类的实例化对象就能进行序列化。</p>\n<p>反序列化是将字节流重新转化为对象的过程，即从存储中读取数据并重新创建对象。</p>\n<p>每一个实现序列化接口的类都要定义一个<code>serialVersionUID</code>，用于反序列化时验证版本一致性。版本不匹配会导致反序列化失败。若不指定<code>serialVersionUID</code>，Java会根据类的定义自动hash生成一个。不需要进行序列化的成员属性变量可使用<code>transient</code>关键字修饰。</p>\n<p>Java中对应序列化，反序列化机制在java.io包中在顶级父类下封装了ObjectOutputStream类，作用是将Java对象的原始数据类型以流的方式写出到文件,实现对象的持久存储；ObjectInputStream类，作用是把文件中保存的对象,以流的方式读取出来使用。</p>\n<p>Java中默认序列化框架<code>JDK Serializable</code>比较慢，对于大规模分布式系统，选择更加高效的序列化框架（FST， Kryo，Protocol buffer，Thrift，Hessian）</p>\n<p>在身份验证，文件读写，数据传输等功能处，在未对反序列化接口做访问控制，未对序列化数据做加密和签名，加密密钥使用硬编码（如Shiro 1.2.4），使用不安全的反序列化框架库（如Fastjson 1.2.24）或函数的情况下，由于序列化数据可被用户控制，攻击者可以精心构造恶意的序列化数据（执行特定代码或命令的数据）传递给应用程序，在应用程序反序列化对象时执行攻击者构造的恶意代码，达到攻击者的目的。</p>\n</blockquote>",r:{minutes:1.84,words:553},t:"1.序列化与反序列化",i:"fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",{loader:()=>a.e(5678).then(a.bind(a,9375)),meta:{e:"\n<blockquote>\n<p>[!tip]</p>\n<p><strong>不可变类的定义</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p>\n</blockquote>\n<blockquote>\n<p>[!tip]</p>\n<p><strong>特征</strong></p>\n</blockquote>\n<blockquote>\n<ol>\n<li>类由final修饰，无法被子类继承</li>\n<li>没有setter方法，无法修改字段。提供只读的getter方法</li>\n<li>通过构造函数进行初始化</li>\n<li>对象一旦创建，属性值就不能改变</li>\n<li>深拷贝：如果类的字段是引用类型（如数组、集合、其他对象等），应确保字段的值在构造时被复制，而不是直接引用。否则，外部可能通过原始引用来修改对象的内容。</li>\n</ol>\n</blockquote>",r:{minutes:1.42,words:425},t:"2.什么是 Java 中的不可变类",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(8264).then(a.bind(a,768)),meta:{e:"\n<blockquote>\n<p>[!tip]</p>\n<p><strong>定义</strong></p>\n</blockquote>\n<blockquote>\n<p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p>\n<ul>\n<li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li>\n<li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误，不应该由应用程序进行捕获或处理。</li>\n</ul>\n</blockquote>",r:{minutes:1.08,words:324},t:"3.Java 中 Exception 和 Error 有什么区别？",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",{loader:()=>a.e(3108).then(a.bind(a,6054)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["了解"],e:"\n<blockquote>\n<p>[!info]\n<code>序列化面试题补充，了解即可</code>在实际项目中使用 <strong>FST (Fast Serialization)</strong> 进行序列化和反序列化时，主要的目的是提升性能，尤其是在处理大量数据或者频繁进行对象存取的场景中。以下是一些常见的使用场景和最佳实践。</p>\n</blockquote>\n",r:{minutes:3.96,words:1189},t:"FST框架使用实例",i:"fa-java",y:"a"}}],["/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html",{loader:()=>a.e(1420).then(a.bind(a,5528)),meta:{e:'\n<p><a href="https://baomidou.com/guides/logic-delete/" target="_blank" rel="noopener noreferrer">逻辑删除支持 | MyBatis-Plus</a></p>\n<h2>原理</h2>\n<blockquote>\n<p>数据表中设计一个字段表示记录为“已删除”而非物理删除</p>\n</blockquote>\n',r:{minutes:.78,words:234},t:"逻辑删除",y:"a"}}],["/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html",{loader:()=>a.e(782).then(a.bind(a,3967)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<blockquote>\n<p>在使用 MyBatis-Plus 进行数据库操作时，查询条件的构造是一个常见的任务。MyBatis-Plus 提供了两种主要的查询条件构造器：<code>QueryWrapper</code> 和 <code>LambdaQueryWrapper</code>。</p>\n</blockquote>\n",r:{minutes:1.15,words:344},t:"QueryWrapper vs LambdaQueryWrapper",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html",{loader:()=>a.e(8994).then(a.bind(a,8850)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:'\n<p><code>queryWrapper.apply("1=1");</code> 这行代码是在使用 <code>LambdaQueryWrapper</code> 进行查询时，通过 <code>apply</code> 方法添加一个自定义的 SQL 片段，即将 <code>where 1=1</code> 作为一个条件加入到查询中。以下是关于这行代码的总结：</p>\n<ol>\n<li>\n<p><strong>代码解释</strong>：</p>\n<ul>\n<li><code>queryWrapper</code> 是一个 <code>LambdaQueryWrapper</code> 对象，用于构建查询条件。</li>\n<li><code>apply</code> 方法用于添加自定义的 SQL 片段到查询条件中。</li>\n<li><code>"1=1"</code> 是一个 SQL 条件，表示始终为真，因为任何数等于自身。</li>\n</ul>\n</li>\n<li>\n<p><strong>逻辑</strong>：</p>\n<ul>\n<li><code>apply("1=1")</code> 将 <code>where 1=1</code> 添加到查询条件中，这个条件始终为真，因为任何数等于自身。</li>\n<li>在实际查询中，这个条件可以作为一个基础条件，确保查询条件的合法性。</li>\n</ul>\n</li>\n<li>\n<p><strong>用法总结</strong>：</p>\n<ul>\n<li>通过 <code>apply("1=1")</code> 方法，可以在查询条件中添加一个始终为真的条件，提供一些灵活性和基础条件。</li>\n<li>这种方式可以用于构建复杂的查询条件，同时保持查询的灵活性和可读性。</li>\n</ul>\n</li>\n</ol>',r:{minutes:.93,words:279},t:'queryWrapper.apply("1=1")',i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/this.page().html",{loader:()=>a.e(9352).then(a.bind(a,7866)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<h1>分页</h1>\n<p>在 <strong>MyBatis-Plus</strong> 中，<code>this.page()</code> 是 <code>BaseMapper</code> 或 <code>Service</code> 接口提供的分页查询方法，用于简化分页操作。其主要作用是查询指定页的数据，并返回分页结果。</p>\n<hr>\n",r:{minutes:2,words:601},t:"this.page()",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/where%201_1.html",{loader:()=>a.e(546).then(a.bind(a,4395)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p><code>where 1=1</code> 是一个常见的 SQL 片段，在查询语句中的作用是添加一个始终为真的条件。以下是关于 <code>where 1=1</code> 的作用的总结：</p>\n<ol>\n<li>\n<p><strong>始终为真</strong>：</p>\n<ul>\n<li><code>1=1</code> 这个条件始终为真，因为任何数等于自身。因此，<code>where 1=1</code> 不会对查询结果产生影响，它实际上是一个无条件的条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>用途</strong>：</p>\n<ul>\n<li>在动态构建 SQL 查询语句时，<code>where 1=1</code> 可以作为一个基础条件，确保查询条件的合法性。</li>\n<li>可以作为一个占位符，方便在后续动态添加其他条件而无需判断是否已经存在其他条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>简化条件拼接</strong>：</p>\n<ul>\n<li>使用 <code>where 1=1</code> 可以简化动态拼接查询条件的逻辑，因为无论是否有其他条件，它都会起作用，不会影响查询结果。</li>\n</ul>\n</li>\n<li>\n<p><strong>避免错误</strong>：</p>\n<ul>\n<li>在动态拼接复杂的查询条件时，<code>where 1=1</code> 可以避免由于条件缺失而导致的语法错误或逻辑错误。</li>\n</ul>\n</li>\n</ol>",r:{minutes:1.16,words:349},t:"where 1=1",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/wrapper.and().html",{loader:()=>a.e(6497).then(a.bind(a,8816)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p>在 <strong>MyBatis-Plus</strong> 中，<code>wrapper.and</code> 是用来添加分组条件的，它的主要作用是将多个条件逻辑分组，以便生成带括号的 SQL 语句。</p>\n",r:{minutes:1.62,words:486},t:"wrapper.and()",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html",{loader:()=>a.e(3833).then(a.bind(a,3233)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p><code>wrapper.eq(categoryId！=null，AttrGroupEntity::getCatelogId, categoryId);</code></p>\n<p>这段代码是使用 <code>LambdaQueryWrapper</code> 的 <code>eq</code> 方法来构建一个查询条件，主要用于在查询时根据 <code>categoryId</code> 的值来设置条件。以下是对这段代码的总结：</p>\n<ol>\n<li>\n<p><strong>代码解释</strong>：</p>\n<ul>\n<li><code>wrapper</code> 是一个 <code>LambdaQueryWrapper</code> 对象，用于构建查询条件。</li>\n<li><code>eq</code> 方法用于设置等于条件。</li>\n<li><code>AttrGroupEntity::getCatelogId</code> 是一个方法引用，表示要查询的字段为 <code>catelogId</code>。</li>\n<li><code>categoryId != null</code> 是一个条件判断，用于确定 <code>categoryId</code> 是否为 <code>null</code>。</li>\n<li><code>categoryId</code> 是一个变量，用于存储某个值。</li>\n</ul>\n</li>\n<li>\n<p><strong>逻辑</strong>：</p>\n<ul>\n<li>如果 <code>categoryId</code> 不为 <code>null</code>，则会设置查询条件为 <code>catelogId = categoryId</code>。</li>\n<li>如果 <code>categoryId</code> 为 <code>null</code>，则不会添加该查询条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>用法总结</strong>：</p>\n<ul>\n<li>这种写法利用了条件判断来动态设置查询条件，根据 <code>categoryId</code> 的值决定是否添加特定的查询条件，实现了灵活性和可重用性。</li>\n<li>通过这种方式，可以根据不同的情况动态构建查询条件，避免了重复的代码和提高了代码的可读性。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.96,words:287},t:"动态构建查询条件",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html",{loader:()=>a.e(7281).then(a.bind(a,5366)),meta:{d:17318016e5,l:"2024年11月17日",c:["Mybatis"],g:["插件"],e:"\n<blockquote>\n<p><code>Mybatis Plus 3.4</code>版本之后的新分页插件</p>\n</blockquote>\n<h3>Step1 引入依赖</h3>\n",r:{minutes:.65,words:194},t:"新分页插件",i:"mybatis plus",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html",{loader:()=>a.e(9777).then(a.bind(a,2464)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["基础"],e:'\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'__main__\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"测试..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>\n<p>判断py文件是否是直接运行，是则输出。若是由其他模块调用则不输出。</p>\n</blockquote>\n',r:{minutes:.18,words:55},t:"Python序章",i:"fa-brands fa-python",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/video.html",{loader:()=>a.e(7963).then(a.bind(a,6477)),meta:{e:"\n",r:{minutes:.11,words:34},t:"YouTube 视频示例",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(879).then(a.bind(a,9564)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["基础"],e:"\n<table>\n<thead>\n<tr>\n<th>数据结构</th>\n<th>是否有序</th>\n<th>是否可变类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>列表[]</td>\n<td>有</td>\n<td>可变类型</td>\n</tr>\n<tr>\n<td>元组()</td>\n<td>有</td>\n<td>不可变类型</td>\n</tr>\n<tr>\n<td>字典{}</td>\n<td>无</td>\n<td>key不可变val可变</td>\n</tr>\n<tr>\n<td>集合{}</td>\n<td>无</td>\n<td>可变类型不重复</td>\n</tr>\n</tbody>\n</table>\n",r:{minutes:3.71,words:1114},t:"核心数据类型",i:"fa-brands fa-python",y:"a"}}],["/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html",{loader:()=>a.e(4661).then(a.bind(a,5322)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["爬虫"],e:"\n",r:{minutes:3.25,words:974},t:"爬取豆瓣电影250",i:"fa-brands fa-python",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html",{loader:()=>a.e(9146).then(a.bind(a,2096)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<h2>1. 概述</h2>\n<blockquote>\n<p><code>@ControllerAdvice</code>，是Spring3.2提供的新注解，它是一个Controller增强器，可对controller进行增强处理。</p>\n<p><code>@ControllerAdvice</code>注解将作用在所有<code>Controller层</code>的方法上</p>\n</blockquote>\n",r:{minutes:3.08,words:923},t:"@ControllerAdvice",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html",{loader:()=>a.e(3294).then(a.bind(a,4878)),meta:{d:1731888e6,l:"2024年11月18日",c:["Spring"],g:["注解"],e:"\n<p><code>@EnableTransactionManagement</code> 是 Spring 提供的注解，用于开启基于注解的事务管理功能。本文档将详细介绍其使用方法、最佳实践以及推荐的配置位置。</p>\n<hr>\n",r:{minutes:3.02,words:905},t:"@EnableTransactionManagement 使用指南",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html",{loader:()=>a.e(9982).then(a.bind(a,9099)),meta:{d:1735776e6,l:"2025年1月2日",c:["Spring"],g:["注解"],e:'<blockquote>\n<p><code>@FeignClient("coupon")</code> 注解用于声明一个 Feign 客户端，表示当前接口是一个远程服务的调用接口，通过 Feign 来实现 HTTP 请求的自动代理。<code>@FeignClient</code> 中的 <code>"coupon"</code> 表示目标服务的名称，Feign 会通过服务发现机制（如 Nacos、Eureka 等）找到该服务，并发起 HTTP 请求。</p>\n</blockquote>\n',r:{minutes:2.44,words:733},t:"",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html",{loader:()=>a.e(9716).then(a.bind(a,999)),meta:{d:17318016e5,l:"2024年11月17日",c:["Spring"],g:["注解"],e:"\n<h2>前言</h2>\n<blockquote>\n<p>在开发中，后端通常使用专用模型对象（<code>FindStudentInfoReq.java</code>）来接收web请求参数。该对象仅声明输入所需的值，可以防止恶意客户端提供额外的值。</p>\n<p>另一种方法是构造函数绑定</p>\n<p><code>@InitBinder</code> 在 Spring 开发中是一个有用但<strong>相对较少使用</strong>的功能。这主要是因为现代 Web 开发中，很多绑定和数据处理的需求已经被更高级和专用的机制（如 <code>@RequestBody</code>、校验框架、全局拦截器等）所替代。</p>\n</blockquote>",r:{minutes:4,words:1201},t:"@InitBinder",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html",{loader:()=>a.e(4371).then(a.bind(a,1792)),meta:{e:'\n<blockquote>\n<p><code>@JsonFormat</code> 是 <strong>Jackson</strong> 序列化库中的一个注解，用于指定对象字段在序列化和反序列化时的格式，特别适用于日期、时间、枚举等类型的数据。通过这个注解，开发者可以灵活地控制这些数据的输出和输入格式。</p>\n</blockquote>\n<h3>主要功能：</h3>\n<ol>\n<li><strong>日期和时间格式化</strong>：指定日期、时间字段的格式，例如 <code>"yyyy-MM-dd HH:mm:ss"</code>。</li>\n<li><strong>时区控制</strong>：可以指定字段的时区，例如 <code>"GMT+8"</code>。</li>\n<li><strong>枚举类型格式化</strong>：用于指定枚举类型在序列化和反序列化时的显示方式，如使用字符串或数字表示。</li>\n</ol>',r:{minutes:1.06,words:317},t:"@JsonFormat",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html",{loader:()=>a.e(9186).then(a.bind(a,5738)),meta:{d:17318016e5,l:"2024年11月17日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p><code>@JsonInclude(JsonInclude.Include.NON_EMPTY)</code></p>\n<p>在实体类的字段上添加注解：<strong>当值为空时，返回的数据不返回当前字段</strong></p>\n</blockquote>\n",r:{minutes:.15,words:46},t:"@JsonInclude",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html",{loader:()=>a.e(8645).then(a.bind(a,3593)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p>使用在使用在控制层（controller）的方法上。</p>\n<p>是组成<code>@RestController</code>的分子</p>\n</blockquote>\n",r:{minutes:.56,words:169},t:"@ResponseBody",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html",{loader:()=>a.e(8586).then(a.bind(a,2478)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p>元注解：定义注解的注解</p>\n<p>Java从1.5开始提供注解的使用，同时提供了四个元注解<code>Target、Retention、Documented、Inherited</code>。Java8新增了一个<code>Repeatable</code>，共5个元注解。</p>\n<p>点进<code>@SpringBootApplication</code>注解后发现，这个注解使用了上述四个元注解。</p>\n</blockquote>\n",r:{minutes:3.08,words:924},t:"元注解",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html",{loader:()=>a.e(5610).then(a.bind(a,8898)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:'\n<blockquote>\n<p><code>@RequestMapping</code>、<code>@PostMapping</code>和<code>@GetMapping</code>是三个非常常用的注解，用于处理<a href="https://so.csdn.net/so/search?q=HTTP%E8%AF%B7%E6%B1%82&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">HTTP请求</a>映射。</p>\n</blockquote>\n<h2><strong>@RequestMapping注解</strong></h2>',r:{minutes:1.13,words:339},t:"注解@RequestMapping、@PostMapping、@GetMapping",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring%20MVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html",{loader:()=>a.e(270).then(a.bind(a,1656)),meta:{e:'\n<h2>概述</h2>\n<blockquote>\n<p>Hibernate Validator 是 Java 中一个广泛使用的校验框架，它实现了 Bean Validation 规范（JSR 380）。Hibernate Validator 提供了丰富的内置注解用于校验常见的数据类型和格式。</p>\n</blockquote>\n<h2>常用注解</h2>\n<ol>\n<li>\n<p><strong>@NotNull</strong>：字段不能为 null，但可以是空字符串、空集合等。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotNull</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能为空"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@NotEmpty</strong>：字段不能为 null 或空，适用于字符串、集合、数组等。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能为空或空"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@NotBlank</strong>：字段不能为空或只包含空白字符，适用于字符串。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotBlank</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能是空白字符"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Size</strong>：限制字符串、集合、数组等的长度或大小范围。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Size</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长度必须在2到10之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nickname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Min</strong> / <strong>@Max</strong>：限定数值的最小值和最大值。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Min</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "年龄不能小于18"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Max</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "年龄不能超过60"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@DecimalMin</strong> / <strong>@DecimalMax</strong>：限定小数的最小值和最大值。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">DecimalMin</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值不能小于1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">DecimalMax</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "10.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值不能超过10.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Pattern</strong>：使用正则表达式匹配字符串格式。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">regexp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "^[A-Za-z0-9]+$"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "只能包含字母和数字"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Email</strong>：验证是否为合法的电子邮件地址。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Email</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "邮箱格式不正确"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Past</strong> / <strong>@Future</strong> / <strong>@PastOrPresent</strong> / <strong>@FutureOrPresent</strong>：限制日期必须在过去、将来或包含当前日期。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Past</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "生日必须是过去的日期"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDate</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> birthDate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@AssertTrue</strong> / <strong>@AssertFalse</strong>：字段必须为 <code>true</code> 或 <code>false</code>。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">AssertTrue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "必须接受条款"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> acceptedTerms</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Digits</strong>：限制数值的整数位和小数位数。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Digits</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> fraction</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值格式不正确，最多3位整数和2位小数"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> discount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Positive</strong> / <strong>@PositiveOrZero</strong> / <strong>@Negative</strong> / <strong>@NegativeOrZero</strong>：限制数值必须为正、负或包含零。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Positive</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "金额必须为正数"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> amount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Length</strong>：定义字符串的长度范围（需要 <code>hibernate-validator</code> 提供的扩展）。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长度必须在5到20之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Range</strong>：指定数值的范围（需要 <code>hibernate-validator</code> 提供的扩展）。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Range</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "范围必须在1到100之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> percentage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:1.98,words:595},t:"Hibernate Validator",y:"a"}}],["/Spring%20MVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html",{loader:()=>a.e(4905).then(a.bind(a,8473)),meta:{e:"\n<blockquote>\n<p><strong>JSR303： Java数据校验规范提案。</strong></p>\n<p><em>jsr</em>，是Java Specification Requests的缩写，意思是Java规范提案，是指向JCP(Java Community Process)提出新增一个标准化技术规范的正式请求。</p>\n<p>303号规定了数据校验的标准。</p>\n</blockquote>\n<h2>1.引入依赖</h2>\n<blockquote>\n<p>springboot2.3.0以上需要手动<strong>引入依赖</strong></p>\n</blockquote>",r:{minutes:2.29,words:688},t:"JSR303数字校验",y:"a"}}],["/Spring%20MVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html",{loader:()=>a.e(7540).then(a.bind(a,3385)),meta:{d:17317152e5,l:"2024年11月16日",c:["Spring"],g:["注解"],e:"\n<p>自定义校验注解在 Java 的 Spring 框架中使用得较为广泛，尤其是结合 <strong>Hibernate Validator</strong>（JSR 380 实现）来实现复杂的字段校验逻辑。以下是自定义校验注解的总结和实现步骤：</p>\n<hr>\n<h3><strong>1. 自定义校验注解的核心概念</strong></h3>\n<p>自定义校验注解允许开发者定义特定的校验规则，用于校验对象字段或方法参数。这种方法通常用于解决内置校验注解（如 <code>@NotNull</code>, <code>@Size</code>, <code>@Pattern</code>）无法满足的场景。</p>",r:{minutes:3.14,words:941},t:"自定义校验注解",i:"pen-to-square",y:"a"}}],["/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html",{loader:()=>a.e(8877).then(a.bind(a,9343)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:"\n<h2>原生SDK使用</h2>\n<p><strong>product模块导入依赖</strong></p>\n",r:{minutes:1.53,words:460},t:"阿里云oss使用记录",i:"fa-solid fa-cloud",O:2,y:"a"}}],["/SpringCloud/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html",{loader:()=>a.e(1209).then(a.bind(a,2449)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],g:["总结"],e:'\n<blockquote>\n<p>nacos是依附于java的，因为他的启动是一个jar文件，target下的nacos-server.jar，所以使用nacos之前必须确保java以下载，且版本是1.8以上。</p>\n</blockquote>\n<p><a href="https://github.com/alibaba/nacos/releases" target="_blank" rel="noopener noreferrer">下载链接 Releases · alibaba/nacos</a></p>\n<h2>安装</h2>\n<figure><figcaption>image-20241027184717558</figcaption></figure>',r:{minutes:.84,words:253},t:"安装与启动",i:"fa-solid fa-cloud",O:1,y:"a"}}],["/SpringCloud/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",{loader:()=>a.e(4337).then(a.bind(a,2510)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:'\n<div class="language-application.properties line-numbers-mode" data-highlighter="shiki" data-ext="application.properties" data-title="application.properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 注册应用名</span></span>\n<span class="line"><span>spring.application.name=coupon</span></span>\n<span class="line"><span># 注册地址</span></span>\n<span class="line"><span>spring.cloud.nacos.discovery.server-addr=192.168.68.86:8848</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 参数</span></span>\n<span class="line"><span>coupon.user.name=zhangsan</span></span>\n<span class="line"><span>coupon.user.age=20</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.27,words:82},t:"注册中心",i:"fa-solid fa-cloud",O:2,y:"a"}}],["/SpringCloud/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html",{loader:()=>a.e(7437).then(a.bind(a,5316)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],g:["总结"],e:'\n<h3>1.引入依赖</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">作为配置中心</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">starter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">nacos</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">config</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.51,words:752},t:"如何使用Nacos作为配置中心统一管理配置",i:"fa-solid fa-cloud",O:3,y:"a"}}],["/SpringCloud/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(5e3).then(a.bind(a,1798)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:'\n<p>application.yml</p>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    gateway</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      routes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">test_route</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">https://www.baidu.com</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Query=url,baidu</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">qq_route</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            https://www.qq.com</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Query=url,qq</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.46,words:139},t:"网关API配置",i:"fa-solid fa-cloud",O:4,y:"a"}}],["/SpringCloud/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html",{loader:()=>a.e(9077).then(a.bind(a,1870)),meta:{e:"\n<blockquote>\n<p>Nacos在服务端启动时会出现IP地址错误导致无法访问</p>\n</blockquote>\n<ol>\n<li>\n<p>进入Nacos安装目录</p>\n<figure><figcaption>image-20241117112715049</figcaption></figure>\n</li>\n<li>\n<p><code>vim conf/application.properties</code>，修改所示配置项的IP地址。<code>:x</code>退出</p>\n<figure><figcaption>image-20241117112858652</figcaption></figure>\n</li>\n<li>\n<p>重启Nacos服务：使用单例模式启动 <code>./startup.sh -m standalone</code></p>\n</li>\n<li>\n<p>查看启动信息<code>view logs/start.out</code> <strong>IP地址修改成功</strong></p>\n</li>\n</ol>",r:{minutes:.4,words:121},t:"指定Nacos的服务端IP",y:"a"}}],["/SpringCloud/Nacos/",{loader:()=>a.e(4444).then(a.bind(a,5601)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],e:"\n",r:{minutes:.04,words:12},t:"Nacos",i:"fa-solid fa-cloud",y:"a"}}],["/VCS/Git/%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E5%A4%B9.html",{loader:()=>a.e(7544).then(a.bind(a,6512)),meta:{d:1736208e6,l:"2025年1月7日",c:["Git"],g:["总结"],e:"\n<blockquote>\n<p>举例：要在 Git 中忽略 <code>.idea</code> 文件夹（通常是 JetBrains 系列 IDE 生成的配置文件夹），需要使用 <code>.gitignore</code> 文件来指定 Git 不跟踪该文件夹中的文件。</p>\n</blockquote>\n",r:{minutes:1.35,words:406},t:"忽略文件夹",i:"fa-git-alt",y:"a"}}],["/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>a.e(584).then(a.bind(a,7837)),meta:{e:'\n<table>\n<thead>\n<tr>\n<th style="text-align:left">镜像</th>\n<th style="text-align:left">命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">淘宝镜像源</td>\n<td style="text-align:left">npm config set registry https://registry.npmmirror.com</td>\n</tr>\n<tr>\n<td style="text-align:left">阿里云镜像源</td>\n<td style="text-align:left">npm config set registry https://npm.aliyun.com</td>\n</tr>\n<tr>\n<td style="text-align:left">腾讯云镜像源</td>\n<td style="text-align:left">npm config set registry http://mirrors.cloud.tencent.com/npm/</td>\n</tr>\n<tr>\n<td style="text-align:left">华为云镜像源</td>\n<td style="text-align:left">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</td>\n</tr>\n<tr>\n<td style="text-align:left">官方原始镜像</td>\n<td style="text-align:left">npm config set registry https://registry.npmjs.org/</td>\n</tr>\n<tr>\n<td style="text-align:left">查看当前的镜像源</td>\n<td style="text-align:left">npm config get registry</td>\n</tr>\n</tbody>\n</table>',r:{minutes:.27,words:81},t:"npm更换镜像源",y:"a"}}],["/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>a.e(9666).then(a.bind(a,6476)),meta:{e:'\n<blockquote>\n<p>nvm是一个node版本管理工具</p>\n</blockquote>\n<p>阿里云镜像</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> npm_mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://npmmirror.com/mirrors/npm/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> node_mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://npmmirror.com/mirrors/node/</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.15,words:46},t:"nvm更换镜像源",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/",{loader:()=>a.e(1486).then(a.bind(a,606)),meta:{d:17291232e5,l:"2024年10月17日",c:["项目"],g:["教程"],e:"\n",r:{minutes:.08,words:23},t:"谷粒商城",i:"fa-brands fa-shopify",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html",{loader:()=>a.e(10).then(a.bind(a,9837)),meta:{e:'\n<blockquote>\n<p>注释掉webpack.base.conf.js中的配置</p>\n</blockquote>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 关闭eslint检查</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> createLintingRule</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ({</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // test: /\\.(js|vue)$/,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // loader: \'eslint-loader\',</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // enforce: \'pre\',</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // include: [resolve(\'src\'), resolve(\'test\')],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // options: {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //   formatter: require(\'eslint-friendly-formatter\'),</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //   emitWarning: !config.dev.showEslintErrorsInOverlay</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.18,words:54},t:"关闭eslint检查",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>a.e(8741).then(a.bind(a,2575)),meta:{d:17291232e5,l:"2024年10月17日",c:["项目"],g:["教程"],u:!0,e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.17,words:51},t:"视频教程",i:"fa-solid fa-play",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html",{loader:()=>a.e(3525).then(a.bind(a,7704)),meta:{e:'\n<h2>什么是跨域</h2>\n<blockquote>\n<p>当一个请求URL的协议，域名，端口三者之间任何一个与当前页面不同即为跨域</p>\n<p><strong>跨域都是目标地址需要配置规则，所以在阿里云网页配置规则。</strong></p>\n</blockquote>\n<h2>为什么有跨域问题</h2>\n<blockquote>\n<p>浏览器有同源策略限制，同源策略规定只有在协议，域名（IP地址）及端口号三者均相同的情况下，一个网页或则JavaScript脚本才能访问另一个网页中的资源。防止恶意网站窃取数据。</p>\n</blockquote>\n<h2>cors</h2>\n<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noopener noreferrer">跨源资源共享（CORS)</a></p>',r:{minutes:.53,words:158},t:"cors跨域访问",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html",{loader:()=>a.e(1295).then(a.bind(a,5991)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["接口文档"],e:"\n<blockquote>\n<p><code>MetaObjectHandler</code> 接口是一个与 MyBatis-Plus 插件相关的接口，主要用于插入和更新操作中自动填充字段的处理。此接口提供了一系列的方法，供开发者在处理数据库操作时动态填充字段值。以下是接口的详细说明及方法文档。</p>\n</blockquote>\n",r:{minutes:4.47,words:1340},t:"MetaObjectHandler 接口文档",i:"fa-file",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html",{loader:()=>a.e(842).then(a.bind(a,8341)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["接口示例"],e:"\n<blockquote>\n<p><code>MetaObjectHandler</code> 是 MyBatis-Plus 提供的一个接口，用于处理自动填充（自动填充字段）功能。通过实现这个接口，可以在执行插入或更新操作时，自动为指定字段填充数据，比如填充创建时间、更新时间等常见字段。</p>\n</blockquote>\n",r:{minutes:3.32,words:995},t:"MetaObjectHandler示例",i:"fa-screwdriver-wrench",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html",{loader:()=>a.e(938).then(a.bind(a,5524)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["注解"],e:'\n<blockquote>\n<p><code>@TableField</code> 是 MyBatis-Plus 提供的注解，用于指定实体类字段与数据库表列之间的映射关系，并可以进行一些字段属性的控制。它的常用方法可以帮助我们灵活地配置字段的行为，特别是在执行数据库操作时，如何映射字段、处理自动填充等。</p>\n</blockquote>\n<h3><code>@TableField</code> 常用属性总结</h3>\n<ol>\n<li>\n<p><strong>value</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段对应的数据库表列名。</li>\n<li><strong>类型</strong>：<code>String</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"user_name"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>exist</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定该字段是否参与数据库映射。默认值是 <code>true</code>，表示该字段会参与数据库操作。</li>\n<li><strong>类型</strong>：<code>boolean</code>（默认为 <code>true</code>）</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">exist</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tempField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 该字段不会映射到数据库</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>fill</strong>:</p>\n<ul>\n<li>\n<p><strong>说明</strong>：指定字段的自动填充策略，可以通过 <code>FieldFill</code> 枚举来设置填充操作的时机。</p>\n</li>\n<li>\n<p><strong>类型</strong>：<code>FieldFill</code></p>\n</li>\n<li>\n<p><strong>常用值</strong>：</p>\n<ul>\n<li><code>FieldFill.INSERT</code>: 插入时填充。</li>\n<li><code>FieldFill.UPDATE</code>: 更新时填充。</li>\n<li><code>FieldFill.INSERT_UPDATE</code>: 插入或更新时填充。</li>\n<li><code>FieldFill.DEFAULT</code>: 默认行为，通常不进行自动填充。</li>\n</ul>\n</li>\n<li>\n<p><strong>示例</strong>：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">fill</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldFill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">INSERT</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 只在插入时自动填充</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>updateStrategy</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定更新时的策略。主要用于在更新操作时，决定是否更新该字段。</li>\n<li><strong>类型</strong>：<code>FieldStrategy</code></li>\n<li><strong>常用值</strong>：\n<ul>\n<li><code>FieldStrategy.NOT_NULL</code>: 更新时只有非 <code>null</code> 的字段才会更新。</li>\n<li><code>FieldStrategy.IGNORED</code>: 更新时忽略该字段。</li>\n<li><code>FieldStrategy.NOT_EMPTY</code>: 更新时只有字段非空时才会更新。</li>\n<li><code>FieldStrategy.DEFAULT</code>: 默认行为。</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">updateStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NOT_NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 更新时仅当该字段不为null时才会更新</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>insertStrategy</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定插入时的策略。与 <code>updateStrategy</code> 类似，但它是在插入操作时生效的。</li>\n<li><strong>类型</strong>：<code>FieldStrategy</code></li>\n<li><strong>常用值</strong>：\n<ul>\n<li><code>FieldStrategy.NOT_NULL</code>: 插入时只有非 <code>null</code> 的字段才会插入。</li>\n<li><code>FieldStrategy.IGNORED</code>: 插入时忽略该字段。</li>\n<li><code>FieldStrategy.NOT_EMPTY</code>: 插入时只有字段非空时才会插入。</li>\n<li><code>FieldStrategy.DEFAULT</code>: 默认行为。</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">insertStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NOT_NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 插入时仅当该字段不为null时才会插入</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>select</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定该字段在查询时是否参与查询操作。默认为 <code>true</code>，表示该字段会参与查询。</li>\n<li><strong>类型</strong>：<code>boolean</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">select</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 查询时不包含该字段</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>typeHandler</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段使用的 <code>TypeHandler</code>，用于处理数据库类型与 Java 类型之间的转换。一般用于特殊类型的字段，例如枚举类型、JSON 类型等。</li>\n<li><strong>类型</strong>：<code>Class&lt;? extends TypeHandler&lt;?&gt;&gt;</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">typeHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> MyEnumTypeHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyEnum</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 自定义 TypeHandler 用于 MyEnum 类型的字段</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>el</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段在 SQL 语句中是否作为 <code>null</code> 使用。可选值为：\n<ul>\n<li><code>true</code>：字段在 SQL 中作为 <code>null</code> 处理。</li>\n<li><code>false</code>：字段在 SQL 中不会作为 <code>null</code> 使用。</li>\n</ul>\n</li>\n<li><strong>类型</strong>：<code>boolean</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">el</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "status!=null"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 如果 status 不为 null 则会在 SQL 语句中作为字段插入</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n</ol>',r:{minutes:3.35,words:1004},t:"@TableField",i:"fa-solid fa-hashtag",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html",{loader:()=>a.e(7296).then(a.bind(a,6385)),meta:{d:17317152e5,l:"2024年11月16日",c:["实战"],g:["bug"],e:"\n<blockquote>\n<p>修改ValidationMessages.properties的编码格式，改成UTF-8。\nFile &gt; Settings &gt; Editor &gt; File Encodings</p>\n</blockquote>\n",r:{minutes:.22,words:65},t:"SpringBoot读取ValidationMessages.properties，中文乱码",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",{loader:()=>a.e(4997).then(a.bind(a,2040)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<h2>问题描述</h2>\n<blockquote>\n<p>vue项目<code>npm install</code>失败，node-sass版本不匹配</p>\n</blockquote>\n",r:{minutes:.81,words:244},t:"人人前端vue项目启动失败",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(7395).then(a.bind(a,99)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<h2>问题描述</h2>\n<blockquote>\n<p>spring boot与spring cloud版本不匹配导致nacos注册失败</p>\n</blockquote>\n",r:{minutes:1.57,words:470},t:"人人fast后台注册nacos失败问题",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",{loader:()=>a.e(2229).then(a.bind(a,2781)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<p>报错信息：</p>\n<blockquote>\n<p><code>Error creating bean with name 'scheduleJobController': Unsatisfied dependency expressed through field 'scheduleJobService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scheduleJobService': Invocation of init method failed; nested exception is io.renren.common.exception.RRException: 获取定时任务CronTrigger出现异常</code></p>\n</blockquote>\n",r:{minutes:.29,words:88},t:"定时任务启动失败",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html",{loader:()=>a.e(1546).then(a.bind(a,1302)),meta:{d:173016e7,l:"2024年10月29日",c:["实战"],g:["bug"],e:"\n<blockquote>\n<p>在使用SpringBoot时，由于不同模块间SpringBoot版本不一致，导致Maven未将Entity类打包进target目录的问题。解决方法是统一所有模块的SpringBoot版本号，确保依赖一致性。</p>\n</blockquote>\n",r:{minutes:.3,words:91},t:"谷粒商城 java: 找不到符号 符号: 方法 setCouponName(java.lang.String)",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html",{loader:()=>a.e(4113).then(a.bind(a,2303)),meta:{d:1735776e6,l:"2025年1月2日",c:["实战"],g:["bug"],e:'\n<blockquote>\n<p><code>@FeignClient("coupon")</code>中的服务名<code>coupon</code>在nacos注册中心中找不到</p>\n</blockquote>\n',r:{minutes:.14,words:42},t:"current ips:(0) service: DEFAULT_GROUP@@gulimall-coupon -> []",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html",{loader:()=>a.e(1504).then(a.bind(a,6825)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:'\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">java.lang.NullPointerException</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.atguigu.gulimall.thirdparty.GulimallThirdPartyApplicationTests.testUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">GulimallThirdPartyApplicationTests.java:23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.NativeMethodAccessorImpl.invoke0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.NativeMethodAccessorImpl.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">NativeMethodAccessorImpl.java:62</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.DelegatingMethodAccessorImpl.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">DelegatingMethodAccessorImpl.java:43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> java.lang.reflect.Method.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Method.java:498</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.model.FrameworkMethod</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.runReflectiveCall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">FrameworkMethod.java:50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.internal.runners.model.ReflectiveCallable.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ReflectiveCallable.java:12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.model.FrameworkMethod.invokeExplosively</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">FrameworkMethod.java:47</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.internal.runners.statements.InvokeMethod.evaluate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">InvokeMethod.java:17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.runLeaf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:325</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.BlockJUnit4ClassRunner.runChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BlockJUnit4ClassRunner.java:78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.BlockJUnit4ClassRunner.runChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BlockJUnit4ClassRunner.java:57</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:290</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.schedule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:71</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.runChildren</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:288</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.access</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:58</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.evaluate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:268</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:363</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runner.JUnitCore.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitCore.java:137</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnit4IdeaTestRunner.java:69</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.IdeaTestRunner</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$Repeater</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.startRunnerWithArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">IdeaTestRunner.java:33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitStarter.java:220</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.JUnitStarter.main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitStarter.java:53</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.73,words:218},t:"测试方法启动空指针",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html",{loader:()=>a.e(9927).then(a.bind(a,8140)),meta:{e:'\n<h2>1.JSR303</h2>\n<ol>\n<li>\n<p>给Bean添加校验注解：javax.validation.constraints，并定义自己的message提示</p>\n</li>\n<li>\n<p>开启校验功能<code>@Valid</code>。效果：校验错误以后会有默认的响应</p>\n</li>\n<li>\n<p>给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果</p>\n</li>\n<li>\n<p>分组校验（多场景的复杂校验）</p>\n<ul>\n<li><code>@NotBlank(message = "品牌名必须提交",groups = {AddGroup.class, UpdateGroup.class}) </code>给校验注解标注什么情况下需要进行校验</li>\n<li><code>@Validated({AddGroup.class})</code>：controller层参数前注解</li>\n<li>默认没有指定分组的校验注解<code>@NotBlank</code>，在分组校验情况<code>@Validated({AddGroup.class})</code>下不生效</li>\n</ul>\n</li>\n<li>\n<p>自定义校验</p>\n<ol>\n<li>\n<p>编写一个自定义的校验注解<code>public @interface ListValue {}</code></p>\n</li>\n<li>\n<p>编写一个自定义的校验器ConstraintValidator</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//第一个泛型是校验注解，第二个泛型是校验数据类型</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ListValueConstraintValidator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConstraintValidator</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //初始化方法,ListValue是自定义的注解.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> constraintAnnotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> constraintAnnotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 判断是否校验成功</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 需要校验的值</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConstraintValidatorContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">  set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(value);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>关联自定义的校验器和自定义的校验注解</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Documented</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//约束。【同一个注解可以指定多个不同的校验器，适配不同类型的校验。】这里ListValueConstraintValidator.class是数值校验器</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">validatedBy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ListValueConstraintValidator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//可以标注在哪些位置。方法、字段等。</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Target</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">METHOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">FIELD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ANNOTATION_TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CONSTRUCTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">PARAMETER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TYPE_USE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//注解的时机。这里是可以在运行时获取校验</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Retention</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RUNTIME</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B"> ListValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    校验出错后，错误信息去哪取。前缀一般是当前全类名，在ValidationMessages.properties配置文件里设置com.atguigu.common.valid.ListValue.message=必须提交指定的值</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "{com.vince.common.valid.ListValue.message}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    支持分组校验的功能</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    自定义负载信息</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> extends Payload</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">payload</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    自定义注解里的属性</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>自定义注解使用</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t/**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t * 显示状态[0-不显示；1-显示]</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotNull</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AddGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UpdateGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UpdateStatusGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AddGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UpdateStatusGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">\tprivate</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> showStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>\n</li>\n</ol>',r:{minutes:1.82,words:547},t:"数据校验",y:"a"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,1489)),meta:{t:""}}],["/Bug/",{loader:()=>a.e(771).then(a.bind(a,9119)),meta:{t:"Bug"}}],["/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(3230).then(a.bind(a,6513)),meta:{t:"网络"}}],["/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(9344).then(a.bind(a,6964)),meta:{t:"随笔"}}],["/Database/",{loader:()=>a.e(2214).then(a.bind(a,7200)),meta:{t:"Database"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/",{loader:()=>a.e(3105).then(a.bind(a,9778)),meta:{t:"私有云"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/",{loader:()=>a.e(9214).then(a.bind(a,2816)),meta:{t:"2.内存结构"}}],["/Java/Java8%E7%89%B9%E6%80%A7/",{loader:()=>a.e(1852).then(a.bind(a,6902)),meta:{t:"Java8特性"}}],["/Java/String/",{loader:()=>a.e(385).then(a.bind(a,677)),meta:{t:"String"}}],["/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/",{loader:()=>a.e(2069).then(a.bind(a,5856)),meta:{t:"唯手熟尔"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(9327).then(a.bind(a,4875)),meta:{t:"面试题"}}],["/Mybatis/Mybatis/",{loader:()=>a.e(5686).then(a.bind(a,8954)),meta:{t:"Mybatis"}}],["/Mybatis/",{loader:()=>a.e(1292).then(a.bind(a,1269)),meta:{t:"Mybatis"}}],["/Mybatis/Mybatis%20Plus/",{loader:()=>a.e(454).then(a.bind(a,2841)),meta:{t:"Mybatis Plus"}}],["/Python/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(3204).then(a.bind(a,6716)),meta:{t:"基础"}}],["/Python/%E7%88%AC%E8%99%AB/",{loader:()=>a.e(6707).then(a.bind(a,1103)),meta:{t:"爬虫"}}],["/Spring/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(7950).then(a.bind(a,8977)),meta:{t:"注解"}}],["/Spring%20MVC/%E6%A0%A1%E9%AA%8C/",{loader:()=>a.e(3386).then(a.bind(a,6451)),meta:{t:"校验"}}],["/Spring%20MVC/",{loader:()=>a.e(5722).then(a.bind(a,449)),meta:{t:"Spring MVC"}}],["/SpringCloud/Alibaba-OSS/",{loader:()=>a.e(9794).then(a.bind(a,7614)),meta:{t:"Alibaba OSS"}}],["/SpringCloud/",{loader:()=>a.e(691).then(a.bind(a,5749)),meta:{t:"Spring Cloud"}}],["/VCS/Git/",{loader:()=>a.e(9062).then(a.bind(a,9774)),meta:{t:"Git"}}],["/VCS/",{loader:()=>a.e(3577).then(a.bind(a,835)),meta:{t:"VCS"}}],["/%E5%89%8D%E7%AB%AF/node/",{loader:()=>a.e(8860).then(a.bind(a,7897)),meta:{t:"Node"}}],["/%E5%89%8D%E7%AB%AF/",{loader:()=>a.e(5155).then(a.bind(a,4838)),meta:{t:"前端"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",{loader:()=>a.e(9670).then(a.bind(a,4087)),meta:{t:"项目实战"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/",{loader:()=>a.e(1703).then(a.bind(a,464)),meta:{t:"接口"}}],["/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(8330).then(a.bind(a,4587)),meta:{t:"注解"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/",{loader:()=>a.e(9426).then(a.bind(a,8284)),meta:{t:"报错记录"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/",{loader:()=>a.e(382).then(a.bind(a,2424)),meta:{t:"板书"}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,5614)),meta:{t:"分类",I:!1}}],["/category/markdown/",{loader:()=>a.e(3521).then(a.bind(a,6324)),meta:{t:"markdown 分类",I:!1}}],["/category/docker/",{loader:()=>a.e(1360).then(a.bind(a,2570)),meta:{t:"docker 分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(4021).then(a.bind(a,7062)),meta:{t:"使用指南 分类",I:!1}}],["/category/jvm/",{loader:()=>a.e(3035).then(a.bind(a,7969)),meta:{t:"JVM 分类",I:!1}}],["/category/java/",{loader:()=>a.e(8236).then(a.bind(a,1730)),meta:{t:"Java 分类",I:!1}}],["/category/linux/",{loader:()=>a.e(8654).then(a.bind(a,332)),meta:{t:"Linux 分类",I:!1}}],["/category/netty/",{loader:()=>a.e(2776).then(a.bind(a,7690)),meta:{t:"Netty 分类",I:!1}}],["/category/nginx/",{loader:()=>a.e(5552).then(a.bind(a,1320)),meta:{t:"Nginx 分类",I:!1}}],["/category/spring/",{loader:()=>a.e(9097).then(a.bind(a,7494)),meta:{t:"Spring 分类",I:!1}}],["/category/vue/",{loader:()=>a.e(8628).then(a.bind(a,2352)),meta:{t:"vue 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(953).then(a.bind(a,7796)),meta:{t:"网络 分类",I:!1}}],["/category/mysql/",{loader:()=>a.e(1006).then(a.bind(a,7667)),meta:{t:"MySQL 分类",I:!1}}],["/category/redis/",{loader:()=>a.e(7).then(a.bind(a,1902)),meta:{t:"Redis 分类",I:!1}}],["/category/mybatis/",{loader:()=>a.e(2285).then(a.bind(a,9951)),meta:{t:"Mybatis 分类",I:!1}}],["/category/python/",{loader:()=>a.e(1034).then(a.bind(a,9983)),meta:{t:"Python 分类",I:!1}}],["/category/nacos/",{loader:()=>a.e(8496).then(a.bind(a,5942)),meta:{t:"Nacos 分类",I:!1}}],["/category/git/",{loader:()=>a.e(5612).then(a.bind(a,4232)),meta:{t:"Git 分类",I:!1}}],["/category/%E9%A1%B9%E7%9B%AE/",{loader:()=>a.e(5459).then(a.bind(a,8260)),meta:{t:"项目 分类",I:!1}}],["/category/mybatis-plus/",{loader:()=>a.e(1512).then(a.bind(a,3795)),meta:{t:"MyBatis-Plus 分类",I:!1}}],["/category/%E5%AE%9E%E6%88%98/",{loader:()=>a.e(3274).then(a.bind(a,9264)),meta:{t:"实战 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,951)),meta:{t:"标签",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8/",{loader:()=>a.e(8781).then(a.bind(a,1812)),meta:{t:"标签: 使用",I:!1}}],["/tag/%E5%AE%B9%E5%99%A8/",{loader:()=>a.e(9387).then(a.bind(a,4688)),meta:{t:"标签: 容器",I:!1}}],["/tag/%E9%95%9C%E5%83%8F/",{loader:()=>a.e(5555).then(a.bind(a,6753)),meta:{t:"标签: 镜像",I:!1}}],["/tag/%E7%BB%8F%E9%AA%8C/",{loader:()=>a.e(5785).then(a.bind(a,6439)),meta:{t:"标签: 经验",I:!1}}],["/tag/%E6%80%BB%E7%BB%93/",{loader:()=>a.e(5436).then(a.bind(a,2361)),meta:{t:"标签: 总结",I:!1}}],["/tag/java8%E7%89%B9%E6%80%A7/",{loader:()=>a.e(4406).then(a.bind(a,8669)),meta:{t:"标签: Java8特性",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",{loader:()=>a.e(4803).then(a.bind(a,4767)),meta:{t:"标签: 基础知识",I:!1}}],["/tag/%E6%95%99%E7%A8%8B/",{loader:()=>a.e(5154).then(a.bind(a,1628)),meta:{t:"标签: 教程",I:!1}}],["/tag/error/",{loader:()=>a.e(6116).then(a.bind(a,7865)),meta:{t:"标签: error",I:!1}}],["/tag/git/",{loader:()=>a.e(8474).then(a.bind(a,3532)),meta:{t:"标签: git",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(8663).then(a.bind(a,7843)),meta:{t:"标签: 网络",I:!1}}],["/tag/%E5%AE%89%E5%85%A8/",{loader:()=>a.e(6123).then(a.bind(a,4610)),meta:{t:"标签: 安全",I:!1}}],["/tag/%E5%AE%89%E8%A3%85/",{loader:()=>a.e(1496).then(a.bind(a,7535)),meta:{t:"标签: 安装",I:!1}}],["/tag/%E8%B8%A9%E5%9D%91/",{loader:()=>a.e(4820).then(a.bind(a,410)),meta:{t:"标签: 踩坑",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(6080).then(a.bind(a,3306)),meta:{t:"标签: 基础",I:!1}}],["/tag/%E4%BA%8B%E5%8A%A1/",{loader:()=>a.e(5426).then(a.bind(a,3347)),meta:{t:"标签: 事务",I:!1}}],["/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",{loader:()=>a.e(5623).then(a.bind(a,6673)),meta:{t:"标签: 私有云",I:!1}}],["/tag/%E5%9D%91%E7%8E%8B/",{loader:()=>a.e(8634).then(a.bind(a,4290)),meta:{t:"标签: 坑王",I:!1}}],["/tag/%E5%BF%85%E8%83%8C/",{loader:()=>a.e(5787).then(a.bind(a,2672)),meta:{t:"标签: 必背",I:!1}}],["/tag/%E4%BA%86%E8%A7%A3/",{loader:()=>a.e(945).then(a.bind(a,1814)),meta:{t:"标签: 了解",I:!1}}],["/tag/%E6%9F%A5%E8%AF%A2/",{loader:()=>a.e(5493).then(a.bind(a,2612)),meta:{t:"标签: 查询",I:!1}}],["/tag/%E6%8F%92%E4%BB%B6/",{loader:()=>a.e(506).then(a.bind(a,3470)),meta:{t:"标签: 插件",I:!1}}],["/tag/%E7%88%AC%E8%99%AB/",{loader:()=>a.e(9559).then(a.bind(a,9155)),meta:{t:"标签: 爬虫",I:!1}}],["/tag/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(2771).then(a.bind(a,6575)),meta:{t:"标签: 注解",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",{loader:()=>a.e(5076).then(a.bind(a,369)),meta:{t:"标签: 接口文档",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",{loader:()=>a.e(609).then(a.bind(a,9468)),meta:{t:"标签: 接口示例",I:!1}}],["/tag/bug/",{loader:()=>a.e(6504).then(a.bind(a,2914)),meta:{t:"标签: bug",I:!1}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,2772)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(7199).then(a.bind(a,353)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,4695)),meta:{t:"时间轴",I:!1}}]])},8761:(i,s,a)=>{a.d(s,{U:()=>n});const n=JSON.parse('{"base":"/blog/","lang":"zh-CN","title":"小满","description":"小满的知识库","head":[],"locales":{}}')},6653:(i,s,a)=>{a.d(s,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$q/UK8zlW1gD2xBLK/.QTH.KrcJkPTI/bYssLA1c8qWjV1HUinKNpG"]}},"author":{"name":"来杯冰柠檬","url":""},"logo":"/assets/images/avatar.png","repo":"JL-20191210/blog","docsDir":"src","footer":"哟吼~","displayFooter":true,"fullscreen":true,"blog":{"description":"一个全干攻城狮","intro":"/intro.html","medias":{"Gitee":"https://example.com","GitHub":"https://example.com","Zhihu":"https://example.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"后端","icon":"code","prefix":"/Java/","children":[{"text":"Java","link":"/Java/README.md","icon":"fa-brands fa-java","activeMatch":"^/Java/$"},{"text":"Python","link":"/Python/README.md","icon":"fa-brands fa-python","activeMatch":"^/Python/$"},{"text":"JVM","link":"/JVM/README.md","icon":"fa-solid fa-microchip","activeMatch":"^/JVM/$"}]},{"text":"Vue","icon":"fa-brands fa-vuejs","link":"/Vue/","activeMatch":"^/Vue/$"},{"text":"Spring","icon":"fa-solid fa-leaf","prefix":"/Spring/","link":"Spring","children":[{"text":"Spring","link":"README.md","icon":"fa-solid fa-leaf","activeMatch":"^/Spring/$"}]},{"text":"SpringCloud","icon":"fa-solid fa-cloud","prefix":"/SpringCloud/","children":[{"text":"Nacos","link":"/SpringCloud/Nacos/","icon":"fa-solid fa-cloud","activeMatch":"^/SpringCloud/$"}]},{"text":"数据库","icon":"fa-solid fa-database","prefix":"/Database/","children":[{"text":"MySQL","link":"MySQL/","icon":"fa-solid fa-database","activeMatch":"^/MySQL/$"},{"text":"Redis","link":"Redis/","icon":"fa-solid fa-server","activeMatch":"^/Redis/$"}]},{"text":"Docker","icon":"fa-brands fa-docker","link":"/Docker/","activeMatch":"^/Docker/$"},{"text":"Linux","icon":"fa-brands fa-linux","prefix":"/Linux/","link":"Linux","children":[{"text":"Linux","link":"README.md","icon":"fa-brands fa-linux","activeMatch":"^/Linux/$"}]},{"text":"Netty","icon":"fa-solid fa-n","link":"/Netty/","activeMatch":"^/Netty/$"},{"text":"项目实战","icon":"fa-brands fa-product-hunt","prefix":"/项目实战/","children":[{"text":"谷粒商城","link":"谷粒商城/README.md","icon":"fa-brands fa-codepen","activeMatch":"^/谷粒商城/$"}]},{"text":"blog","icon":"blog","link":"http://blog.xiaoxiongmaococo.com:92/#/"}],"sidebar":{"/":["","intro"],"/Java/":"structure","/Python/":"structure","/JVM/":"structure","/Vue/":"structure","/Spring/":"structure","/SpringCloud/":"structure","/Database/":"structure","/Netty/":"structure","/Nginx/":"structure","/Redis/":"structure","/Docker/":"structure","/项目实战/":"structure","/Linux/":"structure"}}}}')},4923:(i,s,a)=>{},8123:(i,s,a)=>{a.d(s,{v:()=>n});const n={"/Java/":["",{text:"Java8特性",prefix:"Java8特性/",collapsible:!0,children:["Java Stream API","深入理解 Java Optional 类","函数式接口","深入理解 Java 8 新特性：从核心到实践","深入理解 Java Collector","深入理解 Java 中的默认方法和静态方法","深入理解 Stream API"]},{text:"String",prefix:"String/",collapsible:!0,children:["isNotEmpty和isNotBlank"]},{text:"唯手熟尔",prefix:"唯手熟尔/",collapsible:!0,children:["equals与等号"]},"空值和null值","雷丰阳Java视频",{text:"面试题",prefix:"面试题/",collapsible:!0,children:["1.序列化与反序列化","2.不可变类","3.Exception和Error的区别","补充- FST框架使用"]}],"/Python/":["",{text:"基础",prefix:"基础/",collapsible:!0,children:["0.前言","video","核心数据类型"]},{text:"爬虫",prefix:"爬虫/",collapsible:!0,children:["样例"]}],"/JVM/":["","1.学习JVM有什么用","2.1.年轻代老年代","2.内存结构",{text:"2.内存结构",prefix:"2.内存结构/",collapsible:!0,children:["2.1程序计数器","2.2虚拟机栈","2.3本地方法栈","2.4堆","2.5方法区","2.6直接内存"]},"cpu load过高问题","GC类型","jstack用法","OOM","黑马JVM"],"/Vue/":["","vue模板","表单验证"],"/Spring/":["","SpringBoot无数据源启动","Spring5.x概述",{text:"注解",prefix:"注解/",collapsible:!0,children:["@FeignClient","@ControllerAdvice","@EnableTransactionManagement","@InitBinder","@JsonFormat","@JsonInclude","@ResponseBody","元注解","注解@RequestMapping、@PostMapping、@GetMapping"]}],"/SpringCloud/":[{text:"Alibaba OSS",prefix:"Alibaba-OSS/",collapsible:!0,children:["阿里云oss使用记录"]},{text:"Nacos",prefix:"Nacos/",collapsible:!0,icon:"fa-solid fa-cloud",children:["","0.安装与启动","1.注册中心","2.配置中心","3.网关配置","4.Nacos指定服务端IP"]}],"/Database/":[{text:"MySQL",prefix:"MySQL/",collapsible:!0,children:["","caching_sha2_password无法加载","mysql -uroot -p报错","MySQL 数据库授权管理","MySQL8.0安装","Navicat连接mysql报错","union和union all","数据库安全配置","数据库隔离级别"]},{text:"Redis",prefix:"Redis/",collapsible:!0,children:["","基础篇"]}],"/Netty/":["","Netty 入门","Netty 进阶","NIO 基础","优化与源码"],"/Nginx/":["","413 (Request Entity Too Large)"],"/Redis/":[],"/Docker/":["安装Nginx","查看镜像架构","pull","Docker容器与宿主机时间同步","Docker构建SpringBoot镜像","特权模式",{text:"私有云",prefix:"私有云/",collapsible:!0,children:["前后端分离博客项目","玩客云","私有云部署软件"]},"镜像导入导出"],"/项目实战/":[{text:"谷粒商城",prefix:"谷粒商城/",collapsible:!0,icon:"fa-brands fa-shopify",children:["","跨域","关闭eslint检查",{text:"报错记录",prefix:"报错记录/",collapsible:!0,children:["服务列表为空","SpringBoot读取ValidationMessages.properties，中文乱码","人人后台注册至Nacos版本问题","人人前端启动失败","定时任务启动失败","测试方法启动空指针","找不到符号"]},{text:"板书",prefix:"板书/",collapsible:!0,children:["数据校验"]},"视频教程"]}],"/Linux/":["","daemon-reload","init命令详解","主要架构","rc.local","reset-failed","systemctl","单用户模式重置密码","查看系统配置","Ubuntu命令行图形化界面切换","硬盘挂载"]}},2878:(i,s,a)=>{a.d(s,{P:()=>n});const n={Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}}},i=>{i.O(0,[3586,2710],(()=>i(i.s=8731))),i.O()}]);