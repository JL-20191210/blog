"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9134],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},46494:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>n,data:()=>t});var e=a(20641);const l={},n=(0,a(66262).A)(l,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,[s[0]||(s[0]=(0,e.Lk)("h1",{id:"getdeclaredfield-和getfield-区别",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#getdeclaredfield-和getfield-区别"},[(0,e.Lk)("span",null,"getDeclaredField()和getField()区别")])],-1)),s[1]||(s[1]=(0,e.Lk)("p",null,[(0,e.eW)("在 "),(0,e.Lk)("strong",null,"反射机制"),(0,e.eW)(" 中，它们的区别在于可以访问的字段类型和访问权限。具体区别如下：")],-1)),(0,e.Q3)(" more "),s[2]||(s[2]=(0,e.Fv)('<h3 id="_1-clazz-getdeclaredfield-name" tabindex="-1"><a class="header-anchor" href="#_1-clazz-getdeclaredfield-name"><span>1. <code>clazz.getDeclaredField(&quot;name&quot;)</code></span></a></h3><ul><li><strong>访问权限</strong>：<code>getDeclaredField()</code> 方法返回类中的所有字段，不管它们的访问修饰符是 <code>public</code>、<code>private</code>、<code>protected</code>，还是默认访问修饰符（包内可见）。</li><li><strong>字段访问修饰符</strong>：你可以使用 <code>getDeclaredField()</code> 获取私有字段（<code>private</code>）、受保护字段（<code>protected</code>）以及公共字段（<code>public</code>）。</li><li><strong>需要反射访问私有字段</strong>：对于私有字段，虽然 <code>getDeclaredField()</code> 可以返回它们，但你需要使用 <code>field.setAccessible(true)</code> 来绕过 Java 的访问控制（默认情况下，<code>private</code> 和 <code>protected</code> 字段是不可访问的）。</li></ul><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例：</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Class</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> clazz </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> publicField </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getDeclaredField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 访问public字段</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> privateField </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getDeclaredField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;age&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 访问private字段</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 访问私有字段时，需要设置为可访问</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">privateField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAccessible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-clazz-getfield-name" tabindex="-1"><a class="header-anchor" href="#_2-clazz-getfield-name"><span>2. <code>clazz.getField(&quot;name&quot;)</code></span></a></h3><ul><li><strong>访问权限</strong>：<code>getField()</code> 方法<strong>只能访问</strong>公共字段（<code>public</code> 修饰的字段）。</li><li><strong>字段访问修饰符</strong>：如果该字段是 <code>private</code>、<code>protected</code> 或者包内可见的（即没有显式声明访问修饰符），<code>getField()</code> 将会抛出 <code>NoSuchFieldException</code> 异常。它只能获取 <code>public</code> 修饰的字段。</li><li><strong>无需反射访问私有字段</strong>：<code>getField()</code> 不会处理私有字段，无法访问非 <code>public</code> 的字段。</li></ul><h4 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例：</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Class</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> clazz </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> publicField </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 访问public字段</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 以下会抛出NoSuchFieldException，因为age是private</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> privateField </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> clazz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;age&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 会抛出异常</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h3><ul><li><strong><code>getDeclaredField(&quot;name&quot;)</code></strong> 可以访问<strong>所有字段</strong>，包括 <code>private</code>、<code>protected</code>、<code>public</code> 字段，需要使用 <code>setAccessible(true)</code> 来访问私有字段。</li><li><strong><code>getField(&quot;name&quot;)</code></strong> 只能访问**<code>public</code>** 字段，且如果字段不是 <code>public</code>，会抛出 <code>NoSuchFieldException</code> 异常。</li></ul><p>因此，选择使用哪个方法取决于你的需求：</p><ul><li>如果你需要访问所有字段（包括私有字段），使用 <code>getDeclaredField()</code>。</li><li>如果你只关心公共字段，可以使用 <code>getField()</code>。</li></ul>',12))])}]]),t=JSON.parse('{"path":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","title":"getDeclaredField()和getField()区别","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-java","date":"2025-02-10T00:00:00.000Z","category":["Java"],"tag":["反射"],"gitInclude":[]},"headers":[{"level":3,"title":"1. clazz.getDeclaredField(\\"name\\")","slug":"_1-clazz-getdeclaredfield-name","link":"#_1-clazz-getdeclaredfield-name","children":[]},{"level":3,"title":"2. clazz.getField(\\"name\\")","slug":"_2-clazz-getfield-name","link":"#_2-clazz-getfield-name","children":[]},{"level":3,"title":"总结：","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":1.67,"words":500},"filePathRelative":"Java/入门到起飞/35.反射&动态代理/getDeclaredField()和getField()区别.md","localizedDate":"2025年2月10日","excerpt":"\\n<p>在 <strong>反射机制</strong> 中，它们的区别在于可以访问的字段类型和访问权限。具体区别如下：</p>\\n"}')}}]);