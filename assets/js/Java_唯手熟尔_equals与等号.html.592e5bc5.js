"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[31772],{66262:(e,a)=>{a.A=(e,a)=>{const l=e.__vccOpts||e;for(const[e,n]of a)l[e]=n;return l}},35894:(e,a,l)=>{l.r(a),l.d(a,{comp:()=>o,data:()=>s});var n=l(20641);const t={},o=(0,l(66262).A)(t,[["render",function(e,a){return(0,n.uX)(),(0,n.CE)("div",null,a[0]||(a[0]=[(0,n.Fv)('<h1 id="equals与等号" tabindex="-1"><a class="header-anchor" href="#equals与等号"><span>equals与等号</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><blockquote><p>等号比较的是变量(栈)内存中存放的对象的(堆)内存地址，用来判断两个对象的地址是否相同，即是否是指相同一个对象。</p><p>equals用来比较的是两个对象的内容是否相等</p></blockquote><h2 id="基本数据类型和引用数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型和引用数据类型"><span>基本数据类型和引用数据类型</span></a></h2><blockquote><p>基本类型：long,int,byte,float,double 对象类型：Long,Integer,Byte,Float,Double其它一切java提供的，或者你自己创建的类</p><p>Long,Integer,Byte,Float,Double成为包装类</p></blockquote><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法"><span>用法</span></a></h2><blockquote><p>基本数据类型用等号比较值是否相等</p><p>引用类型使用equals比较值是够相等</p></blockquote><p>⚠️ <code>Long类型是long的包装类，如果要比较Long类型的值是否相等，要使用equals</code></p>',8)]))}]]),s=JSON.parse('{"path":"/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html","title":"equals与等号","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-bug","date":"2024-11-05T00:00:00.000Z","category":["Java"],"tag":["坑王"],"gitInclude":[]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"基本数据类型和引用数据类型","slug":"基本数据类型和引用数据类型","link":"#基本数据类型和引用数据类型","children":[]},{"level":2,"title":"用法","slug":"用法","link":"#用法","children":[]}],"readingTime":{"minutes":0.68,"words":205},"filePathRelative":"Java/唯手熟尔/equals与等号.md","localizedDate":"2024年11月5日","excerpt":"\\n<h2>概述</h2>\\n<blockquote>\\n<p>等号比较的是变量(栈)内存中存放的对象的(堆)内存地址，用来判断两个对象的地址是否相同，即是否是指相同一个对象。</p>\\n<p>equals用来比较的是两个对象的内容是否相等</p>\\n</blockquote>\\n<h2>基本数据类型和引用数据类型</h2>\\n<blockquote>\\n<p>基本类型：long,int,byte,float,double\\n对象类型：Long,Integer,Byte,Float,Double其它一切java提供的，或者你自己创建的类</p>\\n<p>Long,Integer,Byte,Float,Double成为包装类</p>\\n</blockquote>"}')}}]);