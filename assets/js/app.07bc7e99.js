"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[33524],{61709:(s,i,a)=>{a.d(i,{l:()=>n});const n={category:{"/":{path:"/category/",map:{markdown:{path:"/category/markdown/",indexes:[0,1]},Java:{path:"/category/java/",indexes:[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59]},MySQL:{path:"/category/mysql/",indexes:[0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83]},ES:{path:"/category/es/",indexes:[0,84,85,86,87,88,89,90,91,92,93,94,95]},Spring:{path:"/category/spring/",indexes:[0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116]},JVM:{path:"/category/jvm/",indexes:[0,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148]},Linux:{path:"/category/linux/",indexes:[0,149,150,151,152,153,154,155,78,80,156,157]},Netty:{path:"/category/netty/",indexes:[0,158,159,160,161,162,163,164,165,166]},docker:{path:"/category/docker/",indexes:[0,167,168,169,170,171]},Mybatis:{path:"/category/mybatis/",indexes:[0,172,173,174,175,176,177,178]},实战:{path:"/category/%E5%AE%9E%E6%88%98/",indexes:[0,179,180,181,182,183,184,185]},Nacos:{path:"/category/nacos/",indexes:[0,186,187,188,189,190,191]},装机:{path:"/category/%E8%A3%85%E6%9C%BA/",indexes:[0,192,193,194,195,196]},数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[0,197,62,63,64,66,72,73,198]},Python:{path:"/category/python/",indexes:[0,199,200,201]},项目:{path:"/category/%E9%A1%B9%E7%9B%AE/",indexes:[0,202,203,204]},Git:{path:"/category/git/",indexes:[0,205,206,207,208]},"Mybatis-Plus":{path:"/category/mybatis-plus/",indexes:[0]},SpringCloud高级篇:{path:"/category/springcloud%E9%AB%98%E7%BA%A7%E7%AF%87/",indexes:[0,209,210,211,212,213,214,215,216]},vue:{path:"/category/vue/",indexes:[0,217,218]},Redis:{path:"/category/redis/",indexes:[0,219,220,221]},Java高级:{path:"/category/java%E9%AB%98%E7%BA%A7/",indexes:[0,222,223]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0,224]},中间件:{path:"/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",indexes:[0,225]},Nginx:{path:"/category/nginx/",indexes:[0,226]},网络:{path:"/category/%E7%BD%91%E7%BB%9C/",indexes:[0,227]},Java基础:{path:"/category/java%E5%9F%BA%E7%A1%80/",indexes:[0,228]},SpringCloud实用篇:{path:"/category/springcloud%E5%AE%9E%E7%94%A8%E7%AF%87/",indexes:[0,229]},DevOps:{path:"/category/devops/",indexes:[0,230,231,232]},Maven:{path:"/category/maven/",indexes:[0,233]},面试题:{path:"/category/%E9%9D%A2%E8%AF%95%E9%A2%98/",indexes:[197,105,234,235,236,237,238]},网络编程:{path:"/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",indexes:[166]},redis:{path:"/category/redis/",indexes:[239]},面渣逆袭:{path:"/category/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",indexes:[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263]},运维工具:{path:"/category/%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/",indexes:[149]},性能排查:{path:"/category/%E6%80%A7%E8%83%BD%E6%8E%92%E6%9F%A5/",indexes:[149]},MyBatis:{path:"/category/mybatis/",indexes:[99]},Lombok:{path:"/category/lombok/",indexes:[2]},"Spring Boot":{path:"/category/spring-boot/",indexes:[264,265]},日志系统:{path:"/category/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/",indexes:[264,265]},项目实战:{path:"/category/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",indexes:[264,265]},SpringBoot:{path:"/category/springboot/",indexes:[266,267]},SpringCloud:{path:"/category/springcloud/",indexes:[268]},MyCat:{path:"/category/mycat/",indexes:[67,68,69,70,71]},Windows:{path:"/category/windows/",indexes:[60,61]},GC机制:{path:"/category/gc%E6%9C%BA%E5%88%B6/",indexes:[117,118]},依赖注入:{path:"/category/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/",indexes:[96]},面试:{path:"/category/%E9%9D%A2%E8%AF%95/",indexes:[123]},GC:{path:"/category/gc/",indexes:[140]},性能优化:{path:"/category/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",indexes:[140]},博客专栏:{path:"/category/%E5%8D%9A%E5%AE%A2%E4%B8%93%E6%A0%8F/",indexes:[140]},内存泄漏:{path:"/category/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/",indexes:[132]},故障排查:{path:"/category/%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/",indexes:[132]},工具:{path:"/category/%E5%B7%A5%E5%85%B7/",indexes:[133,134,137]},性能分析:{path:"/category/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/",indexes:[134]},诊断工具:{path:"/category/%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7/",indexes:[135]},服务器:{path:"/category/%E6%9C%8D%E5%8A%A1%E5%99%A8/",indexes:[269]},Tomcat:{path:"/category/tomcat/",indexes:[269]},性能调优:{path:"/category/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/",indexes:[136,138]},调试诊断:{path:"/category/%E8%B0%83%E8%AF%95%E8%AF%8A%E6%96%AD/",indexes:[139]},消息队列:{path:"/category/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",indexes:[270,271]},Middleware:{path:"/category/middleware/",indexes:[270,271]},"MyBatis-Plus":{path:"/category/mybatis-plus/",indexes:[272,273,274]},AOP:{path:"/category/aop/",indexes:[97]}}}},tag:{"/":{path:"/tag/",map:{使用:{path:"/tag/%E4%BD%BF%E7%94%A8/",indexes:[0,1]},必背:{path:"/tag/%E5%BF%85%E8%83%8C/",indexes:[0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]},总结:{path:"/tag/%E6%80%BB%E7%BB%93/",indexes:[0,123,206,5,207,208,141,142,143,144,145,146,147,148,152,154,155,111,217,186,187,188,156,157,189,190,116]},Java8特性:{path:"/tag/java8%E7%89%B9%E6%80%A7/",indexes:[0,45,46,51,52,53,54,55,56,57,58,59]},注解:{path:"/tag/%E6%B3%A8%E8%A7%A3/",indexes:[0,97,2,266,267,274,106,107,108,109,110,112,113,114,115]},重点:{path:"/tag/%E9%87%8D%E7%82%B9/",indexes:[0,84,85,86,88,89,90,92,93,94]},教程:{path:"/tag/%E6%95%99%E7%A8%8B/",indexes:[0,158,159,160,198,202,165,203,204]},讲义:{path:"/tag/%E8%AE%B2%E4%B9%89/",indexes:[0,233,98,99,100,101,102,103,104,63,229,211,215,216,219,220,87,91,95,47,221]},bug:{path:"/tag/bug/",indexes:[0,179,180,181,182,183,184,185]},查询:{path:"/tag/%E6%9F%A5%E8%AF%A2/",indexes:[0,172,173,174,175,176,177]},阅读完毕:{path:"/tag/%E9%98%85%E8%AF%BB%E5%AE%8C%E6%AF%95/",indexes:[0,233,98,99,100,101,102,103,104,63,73,222,211,215,216,219,220,158,159,221]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",indexes:[0,150,151,199,200,81]},装机:{path:"/tag/%E8%A3%85%E6%9C%BA/",indexes:[0,192,193,194,195,196]},镜像:{path:"/tag/%E9%95%9C%E5%83%8F/",indexes:[0,168,169,170]},了解:{path:"/tag/%E4%BA%86%E8%A7%A3/",indexes:[0,65,49,50]},笔记:{path:"/tag/%E7%AC%94%E8%AE%B0/",indexes:[0,64,72,73]},踩坑:{path:"/tag/%E8%B8%A9%E5%9D%91/",indexes:[0,77,82,83]},经验:{path:"/tag/%E7%BB%8F%E9%AA%8C/",indexes:[0,218]},网络编程:{path:"/tag/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",indexes:[0,163,164]},事务:{path:"/tag/%E4%BA%8B%E5%8A%A1/",indexes:[0,65,268,76]},安全:{path:"/tag/%E5%AE%89%E5%85%A8/",indexes:[0,74,75]},面试题:{path:"/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/",indexes:[0,240,241,242,123,105,234,235,5,228,237,238]},反射:{path:"/tag/%E5%8F%8D%E5%B0%84/",indexes:[0,3,4]},SE基础:{path:"/tag/se%E5%9F%BA%E7%A1%80/",indexes:[0,6,7]},Seata:{path:"/tag/seata/",indexes:[0,209,210,211,212,214,216]},容器:{path:"/tag/%E5%AE%B9%E5%99%A8/",indexes:[0,171]},命令:{path:"/tag/%E5%91%BD%E4%BB%A4/",indexes:[0,225]},基础知识:{path:"/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",indexes:[0,153]},入门:{path:"/tag/%E5%85%A5%E9%97%A8/",indexes:[0,161]},error:{path:"/tag/error/",indexes:[0,226]},git:{path:"/tag/git/",indexes:[0,227]},网络:{path:"/tag/%E7%BD%91%E7%BB%9C/",indexes:[0,227]},安装:{path:"/tag/%E5%AE%89%E8%A3%85/",indexes:[0,0,61,79,80]},私有云:{path:"/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",indexes:[0,167]},坑王:{path:"/tag/%E5%9D%91%E7%8E%8B/",indexes:[0,48]},简单:{path:"/tag/%E7%AE%80%E5%8D%95/",indexes:[0,228]},插件:{path:"/tag/%E6%8F%92%E4%BB%B6/",indexes:[0,178]},API:{path:"/tag/api/",indexes:[0,162]},爬虫:{path:"/tag/%E7%88%AC%E8%99%AB/",indexes:[0,201]},RabbitMQ:{path:"/tag/rabbitmq/",indexes:[0,270,271,229]},多线程:{path:"/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",indexes:[0,222]},反射动态代理:{path:"/tag/%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",indexes:[0,223]},高级特性:{path:"/tag/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/",indexes:[0,271,5]},接口文档:{path:"/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",indexes:[0,272]},接口示例:{path:"/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",indexes:[0,273]},配置文件:{path:"/tag/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",indexes:[0,62,69,70,71,214]},Sentinel:{path:"/tag/sentinel/",indexes:[0,215]},分布式事务:{path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",indexes:[0,209,210,211,212,214,216]},微服务:{path:"/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",indexes:[0,209,210,211,212,214]},分库分表:{path:"/tag/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",indexes:[0,67,68]},卸载:{path:"/tag/%E5%8D%B8%E8%BD%BD/",indexes:[0,60,78]},CICD:{path:"/tag/cicd/",indexes:[0,230,231,232]},Jenkins:{path:"/tag/jenkins/",indexes:[0,231,232]},目录:{path:"/tag/%E7%9B%AE%E5%BD%95/",indexes:[119,66]},高质量:{path:"/tag/%E9%AB%98%E8%B4%A8%E9%87%8F/",indexes:[105,234,235]},低质量:{path:"/tag/%E4%BD%8E%E8%B4%A8%E9%87%8F/",indexes:[237,238]},面渣逆袭:{path:"/tag/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",indexes:[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263]},Spring:{path:"/tag/spring/",indexes:[240,241,242,96,97]},Linux:{path:"/tag/linux/",indexes:[149]},性能优化:{path:"/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",indexes:[129,138,149]},系统监控:{path:"/tag/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/",indexes:[149]},运维:{path:"/tag/%E8%BF%90%E7%BB%B4/",indexes:[149]},常用命令:{path:"/tag/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",indexes:[149]},Lombok:{path:"/tag/lombok/",indexes:[2]},构造函数:{path:"/tag/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/",indexes:[2]},自动生成:{path:"/tag/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90/",indexes:[2]},Log4j2:{path:"/tag/log4j2/",indexes:[264,265]},日志归档:{path:"/tag/%E6%97%A5%E5%BF%97%E5%BD%92%E6%A1%A3/",indexes:[264,265]},多级日志:{path:"/tag/%E5%A4%9A%E7%BA%A7%E6%97%A5%E5%BF%97/",indexes:[264,265]},彩色控制台:{path:"/tag/%E5%BD%A9%E8%89%B2%E6%8E%A7%E5%88%B6%E5%8F%B0/",indexes:[264,265]},日志分模块:{path:"/tag/%E6%97%A5%E5%BF%97%E5%88%86%E6%A8%A1%E5%9D%97/",indexes:[264,265]},异步日志:{path:"/tag/%E5%BC%82%E6%AD%A5%E6%97%A5%E5%BF%97/",indexes:[264,265]},"Spring Boot 配置":{path:"/tag/spring-boot-%E9%85%8D%E7%BD%AE/",indexes:[264,265]},SQL优化:{path:"/tag/sql%E4%BC%98%E5%8C%96/",indexes:[81]},yum安装:{path:"/tag/yum%E5%AE%89%E8%A3%85/",indexes:[79]},docker安装:{path:"/tag/docker%E5%AE%89%E8%A3%85/",indexes:[79]},MySQL:{path:"/tag/mysql/",indexes:[197]},SQL:{path:"/tag/sql/",indexes:[197]},数据库原理:{path:"/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/",indexes:[197]},面试:{path:"/tag/%E9%9D%A2%E8%AF%95/",indexes:[197]},Git:{path:"/tag/git/",indexes:[205]},merge:{path:"/tag/merge/",indexes:[205]},rebase:{path:"/tag/rebase/",indexes:[205]},版本控制:{path:"/tag/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/",indexes:[205]},JVM:{path:"/tag/jvm/",indexes:[117,118,120,121,122,123,124,125,126,127,128,129,130,131,136,137,138,139]},GC:{path:"/tag/gc/",indexes:[117,127,128,129]},CMS:{path:"/tag/cms/",indexes:[117,127]},G1:{path:"/tag/g1/",indexes:[117,127]},回收器对比:{path:"/tag/%E5%9B%9E%E6%94%B6%E5%99%A8%E5%AF%B9%E6%AF%94/",indexes:[117,118]},"Stop The World":{path:"/tag/stop-the-world/",indexes:[118]},GC阶段:{path:"/tag/gc%E9%98%B6%E6%AE%B5/",indexes:[118]},三级缓存:{path:"/tag/%E4%B8%89%E7%BA%A7%E7%BC%93%E5%AD%98/",indexes:[96]},循环依赖:{path:"/tag/%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/",indexes:[96]},依赖注入:{path:"/tag/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/",indexes:[96]},架构:{path:"/tag/%E6%9E%B6%E6%9E%84/",indexes:[120]},执行流程:{path:"/tag/%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/",indexes:[120]},虚拟机:{path:"/tag/%E8%99%9A%E6%8B%9F%E6%9C%BA/",indexes:[120]},类加载:{path:"/tag/%E7%B1%BB%E5%8A%A0%E8%BD%BD/",indexes:[121,122]},双亲委派模型:{path:"/tag/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B/",indexes:[121]},机制详解:{path:"/tag/%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3/",indexes:[121]},初始化:{path:"/tag/%E5%88%9D%E5%A7%8B%E5%8C%96/",indexes:[122]},触发条件:{path:"/tag/%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6/",indexes:[122]},高频问题:{path:"/tag/%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/",indexes:[123]},Java基础:{path:"/tag/java%E5%9F%BA%E7%A1%80/",indexes:[123]},内存结构:{path:"/tag/%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/",indexes:[124]},堆:{path:"/tag/%E5%A0%86/",indexes:[124]},栈:{path:"/tag/%E6%A0%88/",indexes:[124]},方法区:{path:"/tag/%E6%96%B9%E6%B3%95%E5%8C%BA/",indexes:[124]},Java内存模型:{path:"/tag/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/",indexes:[125]},JMM:{path:"/tag/jmm/",indexes:[125]},"happens-before":{path:"/tag/happens-before/",indexes:[125]},并发:{path:"/tag/%E5%B9%B6%E5%8F%91/",indexes:[125]},直接内存:{path:"/tag/%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/",indexes:[126]},DirectMemory:{path:"/tag/directmemory/",indexes:[126]},内存管理:{path:"/tag/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",indexes:[126]},风险:{path:"/tag/%E9%A3%8E%E9%99%A9/",indexes:[126]},ZGC:{path:"/tag/zgc/",indexes:[127]},Shenandoah:{path:"/tag/shenandoah/",indexes:[127]},GC日志:{path:"/tag/gc%E6%97%A5%E5%BF%97/",indexes:[128]},性能调优:{path:"/tag/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/",indexes:[128,269]},参数调优:{path:"/tag/%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/",indexes:[129]},OOM:{path:"/tag/oom/",indexes:[130]},排查:{path:"/tag/%E6%8E%92%E6%9F%A5/",indexes:[130]},内存泄漏:{path:"/tag/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/",indexes:[130,132]},hprof:{path:"/tag/hprof/",indexes:[131]},堆分析:{path:"/tag/%E5%A0%86%E5%88%86%E6%9E%90/",indexes:[131]},内存排查:{path:"/tag/%E5%86%85%E5%AD%98%E6%8E%92%E6%9F%A5/",indexes:[131]},MAT:{path:"/tag/mat/",indexes:[131]},实战经验:{path:"/tag/%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/",indexes:[132]},MAT分析:{path:"/tag/mat%E5%88%86%E6%9E%90/",indexes:[132]},JDK:{path:"/tag/jdk/",indexes:[133]},命令行工具:{path:"/tag/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/",indexes:[133]},性能分析:{path:"/tag/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/",indexes:[133,135,136,137,139]},诊断:{path:"/tag/%E8%AF%8A%E6%96%AD/",indexes:[133,134,135]},JMC:{path:"/tag/jmc/",indexes:[134]},"Java Mission Control":{path:"/tag/java-mission-control/",indexes:[134]},性能监控:{path:"/tag/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/",indexes:[134]},Arthas:{path:"/tag/arthas/",indexes:[135]},Java:{path:"/tag/java/",indexes:[135]},Tomcat:{path:"/tag/tomcat/",indexes:[269]},线程模型:{path:"/tag/%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/",indexes:[269]},连接池:{path:"/tag/%E8%BF%9E%E6%8E%A5%E6%B1%A0/",indexes:[269]},调优实战:{path:"/tag/%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98/",indexes:[136,138]},GC调优:{path:"/tag/gc%E8%B0%83%E4%BC%98/",indexes:[136]},案例分析:{path:"/tag/%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/",indexes:[136,138]},调试工具:{path:"/tag/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/",indexes:[137]},可视化:{path:"/tag/%E5%8F%AF%E8%A7%86%E5%8C%96/",indexes:[137]},JFR:{path:"/tag/jfr/",indexes:[137]},GC诊断:{path:"/tag/gc%E8%AF%8A%E6%96%AD/",indexes:[138]},调试技巧:{path:"/tag/%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/",indexes:[139]},工具链:{path:"/tag/%E5%B7%A5%E5%85%B7%E9%93%BE/",indexes:[139]},故障排查:{path:"/tag/%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/",indexes:[139]},MQ:{path:"/tag/mq/",indexes:[270,271]},消息中间件:{path:"/tag/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/",indexes:[270]},AOP:{path:"/tag/aop/",indexes:[97]},日志切面:{path:"/tag/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2/",indexes:[97]},切点表达式:{path:"/tag/%E5%88%87%E7%82%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F/",indexes:[97]},课堂随笔:{path:"/tag/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/",indexes:[213]}}}}}},94776:(s,i,a)=>{a.d(i,{M:()=>n});const n=["/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE.html","/emoji.html","/SpringBoot/lombok%E6%B3%A8%E8%A7%A3/@RequiredArgsConstructor.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html","/Netty/1.%E9%BB%91%E9%A9%AC%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/SSM/","/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html","/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html","/Java/String/isNotEmpty%E5%92%8CisNotBlank.html","/Java/","/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html","/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows%E7%89%88.html","/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/MySQL%E5%AE%89%E8%A3%85.html","/Database/MySQL/%E8%BF%90%E7%BB%B4/MyCat%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E5%90%AB%E4%B9%89.html","/Database/MySQL/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E7%AF%87.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%87%BA%E7%8E%B0%E8%AF%BB%E5%8F%96%E8%AE%B0%E5%BD%95%E7%9A%84%E4%BA%8B%E5%8A%A1id%E6%AF%94%E5%88%9B%E5%BB%BAreadview%E7%9A%84%E4%BA%8B%E5%8A%A1id%E5%A4%A7.html","/Database/MySQL/","/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat-web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html","/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html","/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/rule.html","/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/schema.html","/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/server.html","/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/%E7%AC%94%E8%AE%B0-%E8%BF%9B%E9%98%B6%E7%AF%87.html","/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html","/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html","/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html","/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html","/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/MySQL%E5%8D%B8%E8%BD%BD-Linux.html","/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html","/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html","/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/union%E5%92%8CunionAll.html","/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html","/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/mysql-uroot-p%E6%8A%A5%E9%94%99.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/10.%E5%88%86%E9%A1%B5.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/8.%E5%B8%B8%E8%A7%81%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/9.copy_to%E7%9A%84%E7%94%A8%E6%B3%95.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E02.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/1.%E4%BB%80%E4%B9%88%E6%98%AFES.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/2.%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/3.%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/4.%E5%AE%89%E8%A3%85elasticsearch.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/5.%E5%88%86%E8%AF%8D%E5%99%A8.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/6.mapping%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/7.%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%BA%93.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E01.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Spring/Spring%20%E4%B8%89%E7%BA%A7%E7%BC%93%E5%AD%98%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E8%AF%A6%E8%A7%A3.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%20AOP%20%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2.html","/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/SpringBoot.html","/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/MyBatisPlus.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/Spring_day01.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/Spring_day02.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/Spring_day03.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/SpringMVC_day01.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/SpringMVC_day02.html","/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%9841.html","/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html","/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html","/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html","/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html","/SpringMVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html","/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html","/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html","/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html","/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html","/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html","/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%20CMS%20%E4%B8%8E%20G1%20%E7%9A%84%E5%8C%BA%E5%88%AB%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95%E5%93%AA%E4%BA%9B%E9%98%B6%E6%AE%B5%E4%BC%9Astop%20the%20world.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/1.1%E6%9E%B6%E6%9E%84%E7%BB%84%E6%88%90%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/1.2%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/1.3%E7%B1%BB%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8E%E5%8A%A0%E8%BD%BD%E7%9A%84%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/10.%20JVM%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E9%97%AE%E7%AD%94/10.1JVM%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E9%97%AE%E7%AD%94%E6%B1%87%E6%80%BB.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/2.1JVM%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%A0%86%E3%80%81%E6%A0%88%E3%80%81%E6%96%B9%E6%B3%95%E5%8C%BA%E7%AD%89%EF%BC%89.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/2.2Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%88JMM%EF%BC%89%E4%B8%8Ehappens-before%20%E5%8E%9F%E5%88%99.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/2.3%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98DirectMemory%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%A3%8E%E9%99%A9.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.2%20CMS%E3%80%81G1%E3%80%81ZGC%E3%80%81Shenandoah%20%E5%AF%B9%E6%AF%94.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.3%20GC%20%E6%97%A5%E5%BF%97%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3%E4%B8%8E%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.4%20GC%20%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E7%AD%96%E7%95%A5.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.1JVM%E5%B8%B8%E8%A7%81%20OOM%20%E9%94%99%E8%AF%AF%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%8E%92%E6%9F%A5.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.2%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%20Java%20%E5%A0%86%E8%BD%AC%E5%82%A8%E6%96%87%E4%BB%B6%EF%BC%88hprof%EF%BC%89.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.3%E5%B8%B8%E8%A7%81%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%AE%9A%E4%BD%8D%E6%8A%80%E5%B7%A7.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.1JDK%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E5%85%A8%E6%99%AF%E5%9B%BE%E4%B8%8E%E5%85%B8%E5%9E%8B%E7%94%A8%E9%80%94.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.2%E4%BD%BF%E7%94%A8%20Java%20Mission%20Control%EF%BC%88JMC%EF%BC%89%E8%BF%9B%E8%A1%8C%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.3Arthas%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A7%A3%E6%9E%90.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/7.%20JVM%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93%E4%B8%8E%E6%A1%88%E4%BE%8B/7.1JVM%20%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93%E4%B8%8E%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/8.%20JVM%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/8.1JVM%20%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/8.%20JVM%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/8.2JVM%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%E8%A7%A3%E6%9E%90.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/9.%20%E9%AB%98%E7%BA%A7%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE%E6%95%B4%E5%90%88/9.1JVM%E9%AB%98%E7%BA%A7%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE%E6%95%B4%E5%90%88.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.1%20Java%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%88%86%E4%BB%A3%E6%9C%BA%E5%88%B6.html","/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html","/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html","/JVM/GC%E7%B1%BB%E5%9E%8B.html","/JVM/OOM.html","/JVM/","/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html","/JVM/jstack%E7%94%A8%E6%B3%95.html","/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/Linux%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4.html","/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E8%AF%A2%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE.html","/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html","/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html","/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html","/Netty/02Netty-%E5%85%A5%E9%97%A8.html","/Netty/03Netty-%E8%BF%9B%E9%98%B6.html","/Netty/04Netty-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html","/Netty/Channel.html","/Netty/API/ExecutorService.html","/Netty/%E5%85%B3%E9%97%AD%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BB%84.html","/Netty/%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3.html","/Netty/01Netty-nio.html","/Netty/","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html","/Docker/%E9%9A%8F%E7%AC%94/pull.html","/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html","/Docker/%E9%9A%8F%E7%AC%94/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html","/Docker/%E9%9A%8F%E7%AC%94/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html","/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html","/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html","/Mybatis/Mybatis%20Plus/this.page().html","/Mybatis/Mybatis%20Plus/where%201_1.html","/Mybatis/Mybatis%20Plus/wrapper.and().html","/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html","/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html","/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/","/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%BC%80%E5%85%B3%E5%B1%8F%E5%B9%95.html","/%E8%A3%85%E6%9C%BA/AMD%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html","/%E8%A3%85%E6%9C%BA/Intel%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html","/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA%E8%BF%9B%E9%98%B6.html","/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html","/Interview/Java/06-MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/6.MySQL%E9%9D%A2%E8%AF%95%E9%A2%98A.html","/Database/Redis/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html","/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Git/Merge%20VS%20Rebase.html","/VCS/Git/%E5%88%A0%E9%99%A4%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E6%8E%A8%E9%80%81.html","/VCS/Git/%E5%BF%BD%E7%95%A5idea%E6%96%87%E4%BB%B6%E5%A4%B9.html","/VCS/Git/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E8%87%B3%E8%BF%9C%E7%A8%8B%E5%BA%93.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata1.4.2%E5%8D%87%E7%BA%A72.0.0%E6%B3%A8%E6%84%8F%E7%82%B9.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E5%9B%9B%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html","/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html","/Vue/","/Vue/vue%E6%A8%A1%E6%9D%BF.html","/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87-%E5%9C%A8%E7%BA%BF.html","/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87.html","/Database/Redis/1.%E5%85%A5%E9%97%A8/Redis%E5%9F%BA%E7%A1%80%E7%AF%87.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Docker/","/MQ/Kafka/%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6demo.html","/Nginx/413%20(Request%20Entity%20Too%20Large).html","/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html","/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/RabbitMQ.html","/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E4%B8%8A%E4%BC%A0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8.html","/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2.html","/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%EF%BC%9A%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%20Docker%20%E9%95%9C%E5%83%8F%E3%80%81%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/Maven%E9%AB%98%E7%BA%A7.html","/Interview/MySQL/MySQL%E9%BB%91%E9%A9%AC23.html","/Interview/MySQL/MySQL%E9%9D%A2%E6%B8%A384.html","/Interview/","/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160-%E4%BC%98%E5%8C%96%E7%89%88.html","/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160.html","/Database/Redis/","/Interview/sanfene/spring.html","/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/5.SpringA.html","/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/5.SpringB.html","/Interview/sanfene/Java%E5%9F%BA%E7%A1%80.html","/Interview/sanfene/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.html","/Interview/sanfene/mysql.html","/Interview/Java/01-Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98A.html","/Interview/Java/02-Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/2.Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%AF%87A.html","/Interview/sanfene/jvm.html","/Interview/Java/04-Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98/4.JVM.html","/Interview/sanfene/linux.html","/Interview/sanfene/network.html","/Interview/sanfene/mybatis.html","/Interview/sanfene/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","/Interview/sanfene/redis.html","/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/7.Redis%E9%9D%A2%E8%AF%95%E9%A2%98B.html","/Interview/sanfene/os.html","/Interview/sanfene/Java%E7%BA%BF%E7%A8%8B.html","/Interview/Java/03-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98/3.Java%E7%BA%BF%E7%A8%8B.html","/Interview/sanfene/netty.html","/Interview/sanfene/rocketmq.html","/Interview/sanfene/%E5%88%86%E5%B8%83%E5%BC%8F.html","/Interview/sanfene/%E5%BE%AE%E6%9C%8D%E5%8A%A1.html","/Interview/Java/10-%E5%88%86%E5%B8%83%E5%BC%8F/%E5%88%86%E5%B8%83%E5%BC%8F.html","/SpringBoot/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/Logback%20%E5%88%87%E6%8D%A2%E5%88%B0%20Log4j2.html","/SpringBoot/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/Spring%20Boot%20%E6%95%B4%E5%90%88%20Log4j2.html","/SpringBoot/%E6%B3%A8%E8%A7%A3/@ConfigurationProperties.html","/SpringBoot/%E6%B3%A8%E8%A7%A3/@EnableConfigurationProperties.html","/SpringCloud/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1ACID%E5%8E%9F%E5%88%99.html","/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/6.%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%B0%83%E4%BC%98/6.1Tomcat%20%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3%E4%B8%8E%E8%B0%83%E4%BC%98%E6%8C%87%E5%8D%97.html","/MQ/RabbitMQ/%E5%9F%BA%E7%A1%80/MQ%E5%9F%BA%E7%A1%80.html","/MQ/RabbitMQ/%E9%AB%98%E7%BA%A7/MQ%E9%AB%98%E7%BA%A7.html","/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html","/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html","/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html","/Spring/","/SpringBoot/","/SpringCloud/","/SpringMVC/","/SpringMVC/%E6%A0%A1%E9%AA%8C/","/intro.html","/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html","/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html","/JVM/%E9%BB%91%E9%A9%ACJVM.html","/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html","/Le%20Penseur/%E5%81%9A%E4%B8%80%E4%B8%AA%E5%86%85%E6%A0%B8%E7%A8%B3%E5%AE%9A%E7%9A%84%E4%BA%BA.html","/Le%20Penseur/%E7%AB%8B%E4%BD%93%E7%9A%84%E4%BA%BA%E8%80%8C%E4%B8%8D%E6%98%AF%E5%B9%B3%E9%9D%A2%E7%9A%84%E4%BA%BA.html","/Linux/","/Netty/%E9%87%8A%E6%94%BEByteBuf.html","/Nginx/","/Python/","/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html","/%E7%BD%91%E7%BB%9C/L2TPIPsec.html","/%E7%BD%91%E7%BB%9C/L2TP%E5%92%8CIPsec%E5%8D%8F%E8%AE%AE%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7.html","/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%90%88%E7%9B%96%E4%B8%8D%E4%BC%91%E7%9C%A0.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","/Bug/Java/InaccessibleObjectException.html","/Database/Redis/Redis%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F.html","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html","/Docker/%E9%9A%8F%E7%AC%94/Dockerfile%20%E6%9E%84%E5%BB%BA%20Spring%20Boot%20%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%9C%8D%E5%8A%A1.html","/Docker/%E9%9A%8F%E7%AC%94/docker-compose%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html","/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85jenkins%E5%8F%8A%E9%85%8D%E7%BD%AE.html","/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html","/Docker/%E9%9A%8F%E7%AC%94/%E5%AE%89%E8%A3%85NocoDB.html","/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%8D%B7%E7%9B%AE%E5%BD%95.html","/Docker/%E9%9A%8F%E7%AC%94/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html","/Interview/Java/","/Interview/SQL%E5%88%B7%E9%A2%98/175.%E7%BB%84%E5%90%88%E4%B8%A4%E4%B8%AA%E8%A1%A8.html","/Interview/SQL%E5%88%B7%E9%A2%98/176.%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4.html","/Interview/SQL%E5%88%B7%E9%A2%98/177.%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4.html","/Interview/SQL%E5%88%B7%E9%A2%98/178.%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D.html","/Interview/SQL%E5%88%B7%E9%A2%98/180.%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%95%B0%E5%AD%97.html","/Interview/SQL%E5%88%B7%E9%A2%98/181.%E8%B6%85%E8%BF%87%E7%BB%8F%E7%90%86%E6%94%B6%E5%85%A5%E7%9A%84%E5%91%98%E5%B7%A5.html","/Interview/SQL%E5%88%B7%E9%A2%98/182.%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1.html","/Interview/SQL%E5%88%B7%E9%A2%98/183.%E4%BB%8E%E4%B8%8D%E8%AE%A2%E8%B4%AD%E7%9A%84%E5%AE%A2%E6%88%B7.html","/Interview/SQL%E5%88%B7%E9%A2%98/184.%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E6%9C%80%E9%AB%98%E7%9A%84%E5%91%98%E5%B7%A5.html","/Interview/SQL%E5%88%B7%E9%A2%98/185.%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E5%89%8D%E4%B8%89%E9%AB%98%E7%9A%84%E6%89%80%E6%9C%89%E5%91%98%E5%B7%A5.html","/Interview/SQL%E5%88%B7%E9%A2%98/196.%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1.html","/Interview/SQL%E5%88%B7%E9%A2%98/197.%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B8%A9%E5%BA%A6.html","/Interview/SQL%E5%88%B7%E9%A2%98/262.%E8%A1%8C%E7%A8%8B%E5%92%8C%E7%94%A8%E6%88%B7.html","/Interview/SQL%E5%88%B7%E9%A2%98/511.%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20I.html","/Interview/SQL%E5%88%B7%E9%A2%98/550.%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20IV.html","/Interview/SQL%E5%88%B7%E9%A2%98/570.%E8%87%B3%E5%B0%91%E6%9C%895%E5%90%8D%E7%9B%B4%E6%8E%A5%E4%B8%8B%E5%B1%9E%E7%9A%84%E7%BB%8F%E7%90%86.html","/Interview/SQL%E5%88%B7%E9%A2%98/577.%E5%91%98%E5%B7%A5%E5%A5%96%E9%87%91.html","/Interview/SQL%E5%88%B7%E9%A2%98/584.%E5%AF%BB%E6%89%BE%E7%94%A8%E6%88%B7%E6%8E%A8%E8%8D%90%E4%BA%BA.html","/Interview/SQL%E5%88%B7%E9%A2%98/585.2016%E5%B9%B4%E7%9A%84%E6%8A%95%E8%B5%84.html","/Interview/SQL%E5%88%B7%E9%A2%98/586.%E8%AE%A2%E5%8D%95%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AE%A2%E6%88%B7.html","/Interview/SQL%E5%88%B7%E9%A2%98/595.%E5%A4%A7%E7%9A%84%E5%9B%BD%E5%AE%B6.html","/Interview/SQL%E5%88%B7%E9%A2%98/596.%E8%B6%85%E8%BF%87%205%20%E5%90%8D%E5%AD%A6%E7%94%9F%E7%9A%84%E8%AF%BE.html","/Interview/SQL%E5%88%B7%E9%A2%98/601.%E4%BD%93%E8%82%B2%E9%A6%86%E7%9A%84%E4%BA%BA%E6%B5%81%E9%87%8F.html","/Interview/SQL%E5%88%B7%E9%A2%98/602.%E5%A5%BD%E5%8F%8B%E7%94%B3%E8%AF%B7%20II%20%EF%BC%9A%E8%B0%81%E6%9C%89%E6%9C%80%E5%A4%9A%E7%9A%84%E5%A5%BD%E5%8F%8B.html","/Interview/SQL%E5%88%B7%E9%A2%98/607.%E9%94%80%E5%94%AE%E5%91%98.html","/Interview/SQL%E5%88%B7%E9%A2%98/608.%E6%A0%91%E8%8A%82%E7%82%B9.html","/Interview/SQL%E5%88%B7%E9%A2%98/610.%E5%88%A4%E6%96%AD%E4%B8%89%E8%A7%92%E5%BD%A2.html","/Interview/SQL%E5%88%B7%E9%A2%98/619.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97.html","/Interview/SQL%E5%88%B7%E9%A2%98/620.%E6%9C%89%E8%B6%A3%E7%9A%84%E7%94%B5%E5%BD%B1.html","/Interview/SQL%E5%88%B7%E9%A2%98/626.%E6%8D%A2%E5%BA%A7%E4%BD%8D.html","/Interview/Spring/Spring%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Bean%20%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html","/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90%E5%8F%8A%E6%80%BB%E7%BB%93.html","/Interview/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E4%BA%AC%E4%B8%9C%E9%9D%A2%E8%AF%95%E9%A2%98%E5%87%86%E5%A4%87.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/","/Interview/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/%E4%B8%AD%E7%94%B5%E9%87%91%E4%BF%A1.html","/Interview/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%B0%E5%BD%95.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html","/Java/String/Java%E4%B8%AD%E9%87%8D%E5%86%99toString.html","/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/BeanUtil.html","/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/Java%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8C%85.html","/Java/%E5%BC%82%E5%B8%B8/try-with-resources%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%E8%B5%84%E6%BA%90.html","/Java/%E6%9E%B6%E6%9E%84/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","/Java/%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93/System%20%E7%B1%BB%E8%AF%A6%E8%A7%A3.html","/Java/%E9%98%9F%E5%88%97/ArrayDeque.html","/Java/%E9%9A%8F%E7%AC%94/Java%20%E4%B8%AD%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F.html","/Java/%E9%9A%8F%E7%AC%94/Java%20%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6.html","/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.html","/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0.html","/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/V2ray%E5%AE%89%E8%A3%85.html","/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/systemctl.html","/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/reset-failed.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/daemon-reload.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/rc.local.html","/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/%E4%BF%AE%E6%94%B9yum%E6%BA%90.html","/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%BF%9B%E7%A8%8B.html","/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/dos2unix%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%B8%85%E7%90%86.html","/Linux/8.Shell%E4%B8%8E%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Shell%E7%BC%96%E7%A8%8B.html","/MQ/RabbitMQ/%E4%BB%80%E4%B9%88%E6%98%AFRabbitMQ.html","/Mybatis/Mybatis/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%96%B9%E5%BC%8F.html","/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html","/Mybatis/Mybatis%20Plus/Mybatis%20Plus%E7%AC%94%E8%AE%B0.html","/Netty/API/API.html","/Python/%E5%9F%BA%E7%A1%80/video.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/POM%E6%96%87%E4%BB%B6%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html","/Spring/Junit/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3.html","/Spring/%E6%B3%A8%E8%A7%A3/@Import.html","/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html","/SpringCloud/%E9%AB%98%E7%BA%A7/","/SpringMVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html","/SpringMVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html","/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html","/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html","/%E8%A3%85%E6%9C%BA/N1%E7%9B%92%E5%AD%90/N1%E7%9B%92%E5%AD%90%E9%85%8D%E7%BD%AEAdGuard%E5%8F%8Apasswall.html","/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/socket%E6%98%AF%E4%BB%80%E4%B9%88.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/A%E5%88%9B%E5%BB%BA%E5%9E%8B/a%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/A%E5%88%9B%E5%BB%BA%E5%9E%8B/b%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/B%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%E8%A1%8C%E4%B8%BA%E5%9E%8B/a%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%E8%A1%8C%E4%B8%BA%E5%9E%8B/b%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html","/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/UML%E5%9B%BE/UML%E7%B1%BB%E5%9B%BE%E7%BB%98%E5%88%B6.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html","/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/mysql%E6%98%AF%E4%BB%80%E4%B9%88_%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/DCL%E8%AF%AD%E5%8F%A5%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80DCL.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%BA%A6%E6%9D%9F%E5%8F%8A%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%B7%A5%E5%85%B7/%E9%97%AA%E5%9B%9E-flashback.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","/Database/MySQL/%E9%9A%8F%E7%AC%94/CTE%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90d.html","/Database/MySQL/%E9%9A%8F%E7%AC%94/FROM%20A_%20B%20%E4%B8%8E%20JOIN%20%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Database/Redis/2.%E5%AE%9E%E6%88%98/pending-list.html","/Database/Redis/4.%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%90%86%E7%AF%87.html","/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/Redis%E9%9B%86%E7%BE%A4.html","/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/%E5%AE%89%E8%A3%85Canal.html","/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/%E5%AE%89%E8%A3%85OpenResty.html","/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/%E6%A1%88%E4%BE%8B%E5%AF%BC%E5%85%A5%E8%AF%B4%E6%98%8E.html","/Database/Redis/%E9%9A%8F%E7%AC%94/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B7%B3%E8%A1%A8.html","/Interview/Java/01-Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/02-Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/2.Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/03-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98/3.Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/04-Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/5.Spring%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/06-MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/6.MySQL%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/7.Redis%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/7.Redis%E9%9D%A2%E8%AF%95%E9%A2%98A.html","/Interview/Java/08-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%9D%A2%E8%AF%95%E9%A2%98/8.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/Java/09-MQ%E9%9D%A2%E8%AF%95%E9%A2%98/RabbitMQ%E9%9D%A2%E8%AF%95%E9%A2%98A.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/18.%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/Java/B%E4%B8%AD%E7%AD%89/1.Java%E4%B8%ADString%E3%80%81StringBuffer%E5%92%8CStringBuilder%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/B%E4%B8%AD%E7%AD%89/2.Java%E4%B8%ADvolatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8.html","/Interview/Java/%E7%83%AD%E7%82%B9%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%83%AD%E7%82%B9%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/JVM%20%E7%B1%BB%E5%8A%A0%E8%BD%BD%E4%B8%8E%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/AQS%EF%BC%88AbstractQueuedSynchronizer%EF%BC%89%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/CompletableFuture%20%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/ConcurrentHashMap%20%E7%9A%84%20put%20%E6%93%8D%E4%BD%9C%E4%B8%AD%20CAS%20%E5%92%8C%20synchronized%20%E7%9A%84%E4%BD%BF%E7%94%A8.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/ConcurrentHashMap%20%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/CopyOnWriteArrayList%20%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%20%E4%B8%AD%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java_%E5%A4%9A%E6%80%81_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/LSP%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E5%8F%8D%E4%BE%8B.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/PriorityQueue.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/String%20vs%20StringBuffer%20vs%20StringBuilder.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/hashCode()%20%E4%B8%8E%20equals()%20%E7%9A%84%E5%85%B3%E7%B3%BB.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/synchronized%20%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/volatile%20%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%B8%BA%E4%BB%80%E4%B9%88%20ArrayList%20%E4%B8%8D%E6%98%AF%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%9E%E8%B0%83%E5%9C%B0%E7%8B%B1.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%EF%BC%88Proxy%20Pattern%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99%EF%BC%88DIP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%86%85%E5%AD%98%E5%B1%8F%E9%9A%9C%EF%BC%88Memory%20Barrier%EF%BC%89%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99%EF%BC%88SRP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E4%B8%8E%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%88OCP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99%EF%BC%88ISP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%9C%80%E5%B0%91%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%99%EF%BC%88LoD%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%A0%B9%E6%8D%AE%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E9%80%89%E6%8B%A9%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%8F%82%E6%95%B0.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%EF%BC%88Adapter%20Pattern%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%94%81%E7%9A%84%E7%8A%B6%E6%80%81%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%81%8F%E5%90%91%E9%94%81%20%E2%86%92%20%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81%20%E2%86%92%20%E9%87%8D%E9%87%8F%E7%BA%A7%E9%94%81%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%EF%BC%88SOLID%20%E5%8F%8A%E7%9B%B8%E5%85%B3%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/Linux%20%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/MySQL/%E9%94%81%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/OS/%E7%94%A8%E6%88%B7%E6%80%81%E4%B8%8E%E5%86%85%E6%A0%B8%E6%80%81%E5%88%87%E6%8D%A2%E8%AF%A6%E8%A7%A3.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B7%B3%E8%A1%A8.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%9F%BA%E7%A1%80%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/%E5%B9%B6%E5%8F%91%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/%E6%A1%86%E6%9E%B6%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/%E9%9B%86%E5%90%8801.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%80%BB%E7%BB%93.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%85%A5%E5%8F%82%E5%A4%84%E7%90%86%E5%88%87%E9%9D%A2.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%88%87%E9%9D%A2.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E6%B3%A8%E8%A7%A3.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E9%9A%8F%E7%AC%94.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E6%B3%A8%E8%A7%A3.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E9%9A%8F%E7%AC%94.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/packaging%E7%B1%BB%E5%9E%8B.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/pom%E4%B8%AD%E7%9A%84relativePath.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Centos7%E5%AE%89%E8%A3%85Docker.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Docker%E5%AE%9E%E7%94%A8%E7%AF%87.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/5.Nacos%E5%A4%9A%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/1.MAC%E5%AE%89%E8%A3%85JMeter.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/2.Jmeter%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html","/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html","/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/415.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0.html","/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/541.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%20II.html","/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/784.%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%85%A8%E6%8E%92%E5%88%97.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E4%B8%80%E4%B8%AA%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84%E7%BA%BF%E7%A8%8B.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.runnable%20%E5%92%8C%20callable%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E7%BA%BF%E7%A8%8B%E7%9A%84%20run()%E5%92%8C%20start()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E7%BA%BF%E7%A8%8B%E5%8C%85%E6%8B%AC%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81%EF%BC%8C%E7%8A%B6%E6%80%81%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E5%8F%98%E5%8C%96%E7%9A%84.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E6%96%B0%E5%BB%BA%20T1%E3%80%81T2%E3%80%81T3%20%E4%B8%89%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%AE%83%E4%BB%AC%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.notify()%E5%92%8C%20notifyAll()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E5%9C%A8%20java%20%E4%B8%AD%20wait%20%E5%92%8C%20sleep%20%E6%96%B9%E6%B3%95%E7%9A%84%E4%B8%8D%E5%90%8C.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/1.%E8%AE%B2%E4%B8%80%E4%B8%8Bsynchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/10.synchronized%E5%92%8CLock%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/11.%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E7%9A%84%E6%9D%A1%E4%BB%B6.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%AD%BB%E9%94%81%E5%88%A4%E6%96%AD.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E8%81%8A%E4%B8%80%E4%B8%8BConcurrentHashMap%20.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/13.%E5%AF%BC%E8%87%B4%E5%B9%B6%E5%8F%91%E7%A8%8B%E5%BA%8F%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/2.synchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-%E8%BF%9B%E9%98%B6.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/3.%E4%BD%A0%E8%B0%88%E8%B0%88%20JMM%EF%BC%88Java%20%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/4.CAS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%88%E5%90%AB%E4%B9%90%E8%A7%82%E6%82%B2%E8%A7%82%E9%94%81%EF%BC%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/5.%E8%AF%B7%E8%B0%88%E8%B0%88%E4%BD%A0%E5%AF%B9%20volatile%20%E7%9A%84%E7%90%86%E8%A7%A3.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/6.%E4%BB%80%E4%B9%88%E6%98%AFAQS.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/7.%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/8.%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E6%97%8B%E9%94%81.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/9.ReentrantLock%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%88%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%EF%BC%89.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/1.Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/2.happens-before%E5%8E%9F%E5%88%99.html","/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/windows%E7%89%88sentinel%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86Unable%20to%20make%20protected%20final%20java.lang.Class%20java.lang.ClassLoader.define.html"]},53781:(s,i,a)=>{a.d(i,{U:()=>n});const n={article:{"/":{path:"/article/",indexes:[0,1,270,197,271,240,241,242,96,97,117,118,119,2,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,269,136,137,138,139,205,140,266,267,264,265,149,243,244,245,246,247,233,98,99,100,101,102,103,104,275,276,277,278,279,230,231,232,105,234,60,61,62,63,64,65,66,67,68,69,70,71,72,73,235,222,268,229,209,210,211,212,213,214,215,216,206,219,220,158,159,160,161,162,163,164,150,151,223,3,4,5,6,7,192,198,84,85,86,87,88,89,90,91,92,93,94,202,95,193,194,195,196,248,8,9,10,11,12,13,14,249,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,228,34,35,36,37,38,39,40,41,42,43,44,207,208,272,273,274,199,200,201,106,74,75,76,77,179,141,142,143,144,145,146,147,148,45,46,47,250,251,172,173,174,175,176,177,152,167,168,169,170,153,154,155,107,178,108,109,110,78,79,80,180,111,112,113,114,115,252,253,48,49,225,50,217,218,181,182,183,184,254,255,186,187,188,185,156,157,189,190,191,165,226,116,171,256,51,52,53,54,55,203,204,81,82,83,221,56,227,57,58,59,257,258,280,281,282,283,224,236,284,285,286,287,288,166,289,290,291,292,293,294,295,296,297,298,239,299,300,301,302,303,304,305,306,307,308,309,237,238,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,259,260,261,262,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,263,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531]}},star:{"/":{path:"/star/",indexes:[0,152,154,1]}},timeline:{"/":{path:"/timeline/",indexes:[270,197,271,240,241,242,96,97,117,118,119,2,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,269,136,137,138,139,205,140,266,267,264,265,149,243,244,245,246,247,233,98,99,100,101,102,103,104,275,276,277,278,279,230,231,232,105,234,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,235,222,268,229,209,210,211,212,213,214,215,216,206,219,220,158,159,160,161,162,163,164,150,151,223,3,4,5,6,7,192,198,84,85,86,87,88,89,90,91,92,93,94,202,95,193,194,195,196,248,8,9,10,11,12,13,14,249,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,228,34,35,36,37,38,39,40,41,42,43,44,207,208,272,273,274,199,200,201,106,74,75,76,77,179,141,142,143,144,145,146,147,148,45,46,47,250,251,172,173,174,175,176,177,152,167,168,169,170,153,154,155,107,178,108,109,110,78,79,80,180,111,112,113,114,115,252,253,48,49,225,50,217,218,181,182,183,184,254,255,186,187,188,185,1,156,157,189,190,191,165,226,116,171,256,51,52,53,54,55,203,204,81,82,83,221,56,227,57,58,59,257,258]}}}},17877:(s,i,a)=>{a.d(i,{B:()=>U});var n={};a.r(n);var l={};a.r(l);var e={};a.r(e),a.d(e,{default:()=>C});var t={};a.r(t);var h={};a.r(h),a.d(h,{default:()=>q});var p={};a.r(p),a.d(p,{default:()=>R});var k={};a.r(k),a.d(k,{default:()=>H});var d=a(60854),r=a(97786),A=a(47208),B=a(76367),E=a(48262),g=a(97247),c=a(7721),o=a(47128),y=a(71932),v=a(94075),m=a(86819),u=a(89299),F=a(91118),b=a(88073);const C={enhance:({app:s})=>{(0,d.L4)("Badge")||s.component("Badge",A.A),(0,d.L4)("BiliBili")||s.component("BiliBili",B.A),(0,d.L4)("CodePen")||s.component("CodePen",E.A),(0,d.L4)("FontIcon")||s.component("FontIcon",g.A),(0,d.L4)("PDF")||s.component("PDF",c.A),(0,d.L4)("Share")||s.component("Share",o.A),(0,d.L4)("SiteInfo")||s.component("SiteInfo",y.A),(0,d.L4)("StackBlitz")||s.component("StackBlitz",v.A),(0,d.L4)("VPBanner")||s.component("VPBanner",m.A),(0,d.L4)("VPCard")||s.component("VPCard",u.A),(0,d.L4)("VidStack")||s.component("VidStack",F.A),(0,d.L4)("XiGua")||s.component("XiGua",b.A)},setup:()=>{(0,r.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,r.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,r.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]};var D=a(26358),f=a(23827),S=a(74919),J=a(80142),M=a(38913),w=a(22184),x=a(33349),I=a(11781),L=a(19212);const q={enhance:({app:s})=>{s.component("CodeTabs",I.S),s.component("Tabs",L.t)}};var j=a(34081),Q=a(83027);const R={enhance:({app:s})=>{s.component("CodeDemo",j.A),s.component("MdDemo",Q.A)}};var P=a(17040),V=a(12159),_=a(80783),T=a(38465),N=a(20641),O=a(77107),G=a(79920);(0,T.M_)((s=>{const i=s.t,a=!1!==s.I,n=s.i;return a?{title:i,content:n?()=>[(0,N.h)(_.GB,{icon:n}),i]:null,order:s.O,index:s.I}:null}));const H={enhance:({app:s,router:i})=>{const{scrollBehavior:a}=i.options;i.options.scrollBehavior=async(...s)=>(await _.lE.wait(),a(...s)),(0,_.fk)(s),s.component("HopeIcon",_.GB),s.component("BloggerInfo",O.tI),s.component("SocialMedias",O.rS),s.component("GlobalEncrypt",G.J),s.component("LocalEncrypt",G.n)},setup:()=>{(0,_.PV)(),(0,_.i$)(),(0,O.su)()},layouts:{Layout:_.PE,NotFound:_.Mk,BlogCategory:O.Pn,BlogHome:O.qX,BlogType:O.z7,Timeline:O.Kf}},U=[n,l,e,D,f,S,J,M,w,x,t,h,p,P,V,k].map((s=>s.default)).filter(Boolean)},68164:(s,i,a)=>{a.d(i,{J:()=>l,c:()=>n});const n=JSON.parse('{"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode,equals%20%E6%96%B9%E6%B3%95%E5%92%8C==%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html":"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Mybatis/Mybatis%20Plus/where%201=1.html":"/Mybatis/Mybatis%20Plus/where%201_1.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B+tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html":"/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","/Database/MySQL/%E9%9A%8F%E7%AC%94/FROM%20A,%20B%20%E4%B8%8E%20JOIN%20%E7%9A%84%E5%8C%BA%E5%88%AB.html":"/Database/MySQL/%E9%9A%8F%E7%AC%94/FROM%20A_%20B%20%E4%B8%8E%20JOIN%20%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/A%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode,equals%20%E6%96%B9%E6%B3%95%E5%92%8C==%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html":"/Interview/Java/A%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB&%E6%8E%A5%E5%8F%A3&%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB&%E6%8E%A5%E5%8F%A3&%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B&Set&%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81&%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC,TM,RM.html":"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html"}'),l=Object.fromEntries([["/",{loader:()=>a.e(24470).then(a.bind(a,39908)),meta:{t:"主页",i:"home"}}],["/emoji.html",{loader:()=>a.e(42116).then(a.bind(a,35392)),meta:{d:17299872e5,l:"2024年10月27日",c:["markdown"],g:["使用"],u:!0,e:"\n<p>markdown语法中的小表情</p>\n",r:{minutes:3.92,words:1176},t:"表情",i:"fa-solid fa-icons",y:"a"}}],["/intro.html",{loader:()=>a.e(63912).then(a.bind(a,33155)),meta:{v:"/assets/images/cover3.jpg",e:"\n<p>将你的个人介绍和档案放置在此处。</p>\n",r:{minutes:.12,words:36},t:"介绍页",i:"circle-info",y:"a"}}],["/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html",{loader:()=>a.e(80369).then(a.bind(a,57946)),meta:{e:"\n",r:{minutes:.77,words:232},t:"学习记录",y:"a"}}],["/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",{loader:()=>a.e(61680).then(a.bind(a,75961)),meta:{e:'\n<p>Java最高效学习路线图（依次向下顺序学习即可）</p>\n<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">graph TD;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    A[Java基础] --&gt; B[Javaweb+AI]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    B --&gt; C[苍穹外卖]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    C --&gt; D[AI+若依框架]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    D --&gt; E[微服务全套]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    E --&gt; F[学成在线项目]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    F --&gt; G[黑马头条项目]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    G --&gt; H[23年Java大厂面试]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    H --&gt; I[MySQL]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    I --&gt; J[JVM]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    J --&gt; K[数据结构与算法上部]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    K --&gt; L[数据结构与算法下部]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    L --&gt; M[SSM]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    M --&gt; N[springboot]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    N --&gt; O[Spring高级]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    O --&gt; P[springcloud]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    P --&gt; Q[Docker]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Q --&gt; R[Git]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    R --&gt; S[Maven]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    S --&gt; T[Dubbo]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    T --&gt; U[Zookeeper]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    U --&gt; V[Redis]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    V --&gt; W[MongoDB]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    W --&gt; X[RabbitMQ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    X --&gt; Y[RocketMQ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    %% Links</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    A:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    B:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    C:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    D:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    E:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    F:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    G:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    H:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    I:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    J:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    K:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    L:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    M:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    N:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    O:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    P:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Q:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    R:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    S:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    T:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    U:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    V:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    W:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    X:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Y:::link2</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    classDef link1 fill:#ffcc00,stroke:#333,stroke-width:2px;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    classDef link2 fill:#66ccff,stroke:#333,stroke-width:2px;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.44,words:432},t:"学习路线",y:"a"}}],["/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE.html",{loader:()=>a.e(6517).then(a.bind(a,59742)),meta:{d:17426016e5,l:"2025年3月22日",c:["Java","MySQL","ES","Spring","JVM","Linux","Netty","docker","Mybatis","实战","Nacos","装机","数据库","Python","项目","Git","Mybatis-Plus","SpringCloud高级篇","vue","Redis","Java高级","markdown","使用指南","中间件","Nginx","网络","Java基础","SpringCloud实用篇","DevOps","Maven"],g:["必背","总结","Java8特性","注解","重点","教程","讲义","bug","查询","阅读完毕","基础","装机","镜像","了解","笔记","踩坑","经验","网络编程","事务","安全","面试题","反射","SE基础","Seata","使用","容器","命令","基础知识","入门","error","git","网络","安装","私有云","坑王","简单","插件","API","爬虫","RabbitMQ","多线程","反射动态代理","高级特性","接口文档","接口示例","配置文件","Sentinel","分布式事务","微服务","分库分表","安装","卸载","CICD","Jenkins"],u:!0,r:{minutes:.65,words:196},t:"",i:"fa-solid fa-book-tanakh",y:"a"}}],["/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(50707).then(a.bind(a,49100)),meta:{e:'\n<blockquote>\n<p>Maven项目中reload项目或者依赖时，使用Java8的项目版本会重置为Java11</p>\n</blockquote>\n<h2>解决方案</h2>\n<h3>修改Maven配置文件</h3>\n<p>在setting.xml添加配置指定编译时使用的Java版本</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jdk-1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.compilerVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.compilerVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.58,words:173},t:"Maven刷新时语言级别重置",y:"a"}}],["/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E4%B8%8A%E4%BC%A0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8.html",{loader:()=>a.e(39420).then(a.bind(a,55206)),meta:{d:17438976e5,l:"2025年4月6日",c:["DevOps"],g:["CICD"],e:"<p>title: Jenkins配置后端\ndate: 2025-04-06\ncategory:</p>\n<ul>\n<li>DevOps\ntag:</li>\n<li>CICD</li>\n</ul>\n<hr>\n<hr>\n<h1>Jenkins 配置前端工程，自动拉取代码、打包与上传云服务器</h1>\n<p>本小节中，将演示如何在 <code>Jenkins</code> 中配置一键部署 <code>weblog</code> <strong>前端工程</strong>，流程中包括拉取最新的 <code>master</code> 分支代码、执行 <code>npm run build</code> 打包，并最终连接云服务器，上传 <code>/dist</code> 文件夹下所有文件至 <code>Nginx</code> 静态文件目录下。</p>\n",r:{minutes:4.73,words:1420},t:"Jenkins配置后端",y:"a"}}],["/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2.html",{loader:()=>a.e(6667).then(a.bind(a,49025)),meta:{d:17438976e5,l:"2025年4月6日",c:["DevOps"],g:["CICD","Jenkins"],e:"\n<p>本小节中，将演示如何在 <code>Jenkins</code> 中配置一键部署 <code>weblog</code> 后端工程，流程中包括拉取最新的 <code>master</code> 分支代码、执行 <code>maven</code> 打包，并最终连接云服务器，上传 <code>jar</code> 包并重启 <code>Spring Boot</code> 服务。</p>\n",r:{minutes:6.27,words:1882},t:"Jenkins配置后端",y:"a"}}],["/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%EF%BC%9A%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%20Docker%20%E9%95%9C%E5%83%8F%E3%80%81%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1.html",{loader:()=>a.e(78713).then(a.bind(a,8198)),meta:{d:17438976e5,l:"2025年4月6日",c:["DevOps"],g:["CICD","Jenkins"],e:"\n<p>重新配置一下该构建任务，在上传完 <code>jar</code> 包后，将 <code>Dockerfile</code> 文件也上传到云服务器中，并构建镜像， 最终启动新的容器。</p>\n",r:{minutes:1.53,words:459},t:"Jenkins配置后端",y:"a"}}],["/Docker/",{loader:()=>a.e(5579).then(a.bind(a,13605)),meta:{c:["使用指南"],r:{minutes:.05,words:14},t:"Docker",i:"laptop-code",y:"a"}}],["/Interview/",{loader:()=>a.e(70242).then(a.bind(a,20128)),meta:{c:["面试题"],r:{minutes:.03,words:10},t:"Interview",y:"a"}}],["/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html",{loader:()=>a.e(62939).then(a.bind(a,90802)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<h2>1. 关系</h2>\n<figure><figcaption>层级结构</figcaption></figure>\n",r:{minutes:.29,words:87},t:"1. 学习JVM有什么用？",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html",{loader:()=>a.e(34463).then(a.bind(a,52820)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>在 JVM (Java 虚拟机) 的内存模型中，堆内存（Heap）被划分为几个代（Generation），用来优化内存分配和垃圾回收（Garbage Collection）。主要分为以下几个代：</p>\n</blockquote>\n",r:{minutes:1.9,words:571},t:"2.1内存模型",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html",{loader:()=>a.e(1162).then(a.bind(a,52342)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:'\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html" target="_blank">2.1 程序计数器</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html" target="_blank">2.2 虚拟机栈</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html" target="_blank">2.3 本地方法栈</a></p>',r:{minutes:.38,words:115},t:"2.JVM 内存结构",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/GC%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(73952).then(a.bind(a,33178)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>在Java虚拟机（JVM）中，垃圾回收（GC）器负责自动管理内存，通过回收不再使用的对象来释放内存空间。JVM 提供了多种垃圾回收器，每种回收器适用于不同的应用场景，它们各自有不同的优点和缺点。以下是JVM中常见的垃圾回收器：</p>\n</blockquote>\n",r:{minutes:5.3,words:1591},t:"GC类型",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/OOM.html",{loader:()=>a.e(16391).then(a.bind(a,41215)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>OOM 是 Out of Memory（内存溢出）的缩写，表示程序在运行过程中请求内存时超出了可用内存的限制，从而导致程序崩溃或无法继续执行。OOM 是一种常见的错误，尤其在涉及大规模数据处理或长时间运行的应用中较为频繁。</p>\n</blockquote>\n",r:{minutes:4.37,words:1310},t:"内存溢出",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/",{loader:()=>a.e(83106).then(a.bind(a,27630)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:'\n<p><a href="/blog/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html" target="_blank">1. 学习JVM有什么用？</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html" target="_blank">2.内存结构</a></p>\n',r:{minutes:.16,words:49},t:"JVM总结",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(95183).then(a.bind(a,81646)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>CPU负载过高是一个常见的系统性能瓶颈问题，它可能会导致服务器响应变慢，甚至出现卡顿现象。了解如何诊断和优化系统负载，对于保证服务器的健康运行至关重要。本文将通俗易懂地为你介绍如何分析和解决CPU Load过高的问题。</p>\n</blockquote>\n",r:{minutes:4.33,words:1298},t:"CPU Load过高问题的排查与优化",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/jstack%E7%94%A8%E6%B3%95.html",{loader:()=>a.e(33273).then(a.bind(a,74430)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p><code>jstack</code> 是 Java Development Kit (JDK) 中的一个工具，用于打印 Java 进程的线程堆栈信息。它对于调试和分析 Java 应用程序的性能问题、死锁和线程状态非常有用。以下是 <code>jstack</code> 的用法总结：</p>\n</blockquote>\n",r:{minutes:4.94,words:1481},t:"jstack用法总结",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/%E9%BB%91%E9%A9%ACJVM.html",{loader:()=>a.e(20038).then(a.bind(a,97011)),meta:{e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.1,words:31},t:"黑马JVM",y:"a"}}],["/Java/",{loader:()=>a.e(82947).then(a.bind(a,48328)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>徽章</h2>\n",r:{minutes:.53,words:159},t:"Java总结",i:"fa-brands fa-java",y:"a"}}],["/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html",{loader:()=>a.e(54738).then(a.bind(a,79147)),meta:{e:"\n<p><strong>在Java中，空值（empty value）和null值是两个不同的概念。</strong></p>\n<ol>\n<li>\n<p><strong>空值（Empty Value）</strong>：</p>\n<ul>\n<li>空值通常指的是对象中没有实际的数值或内容，例如空字符串、空集合、空数组等。这些空值在Java中是有实际的存在的，只是它们没有包含任何有效的数据。</li>\n</ul>\n</li>\n<li>\n<p><strong>Null值</strong>：</p>\n<ul>\n<li>Null值表示变量没有引用任何对象，即它不指向任何内存地址。在Java中，null是一个特殊的关键字，用来表示一个变量未初始化或不指向任何对象。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.97,words:290},t:"空值（empty value）和null值",y:"a"}}],["/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html",{loader:()=>a.e(6214).then(a.bind(a,84285)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["Java8特性"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:46},t:"雷丰阳Java",i:"pen-to-square",y:"a"}}],["/Le%20Penseur/%E5%81%9A%E4%B8%80%E4%B8%AA%E5%86%85%E6%A0%B8%E7%A8%B3%E5%AE%9A%E7%9A%84%E4%BA%BA.html",{loader:()=>a.e(82266).then(a.bind(a,90490)),meta:{e:"\n<p>亲爱的朋友们，\n你是否常常感到焦虑、不安，甚至轻易被外界影响？\n其实，一个人最重要的能力，不是聪明才智，也不是背景资源，而是——<strong>内核稳定</strong>。</p>\n<hr>\n<h2>✨ 什么是内核稳定？</h2>\n<p><strong>内核稳定，就是允许一切发生，专注自身，尊重所有人的生活方式。</strong></p>\n<p>内核稳定的人：</p>\n<ul>\n<li>🎯 目标感很强，知道自己要什么不要什么</li>\n<li>🧘 内心平静，做事高效而从容</li>\n</ul>\n<p>而内核不稳定的人：</p>\n<ul>\n<li>😣 容易毛躁焦虑</li>\n<li>💔 遇到挫折就一蹶不振</li>\n<li>🌀 总是给自己加压，最后不堪重负</li>\n</ul>",r:{minutes:3.31,words:992},t:"🌱 内核稳定，才是一个人最根本的能力",y:"a"}}],["/Le%20Penseur/%E7%AB%8B%E4%BD%93%E7%9A%84%E4%BA%BA%E8%80%8C%E4%B8%8D%E6%98%AF%E5%B9%B3%E9%9D%A2%E7%9A%84%E4%BA%BA.html",{loader:()=>a.e(65947).then(a.bind(a,15551)),meta:{e:"\n<p>尊敬的各位朋友，大家好：</p>\n<p>今天，我想和大家聊一个稍微抽象，但非常重要的话题：</p>\n<blockquote>\n<p><strong>我们到底想成为什么样的人？</strong></p>\n</blockquote>\n<hr>\n<h2>📄 一、我们正活在二维世界里？</h2>\n<p>在这个节奏越来越快的时代，我们越来越像“流程中的人”、“日程表上的人”、“KPI 下的人”。</p>\n<p>每天的日子，看似忙碌，其实趋于平面化：</p>\n<ul>\n<li>我们做了很多事，但不一定知道为什么；</li>\n<li>我们处理了很多人，但不一定真的理解他们；</li>\n<li>我们过了很多年，但未必真正活过这些年。</li>\n</ul>",r:{minutes:4,words:1199},t:"🎤 演讲稿：做一个立体的人，而不是平面的人",y:"a"}}],["/Linux/",{loader:()=>a.e(89979).then(a.bind(a,66950)),meta:{e:"\n<p>Linux教材的章节目录通常会根据教材的目标、深度和读者的不同有所变化。以下是一个典型的 Linux教材 的章节目录示例，涵盖了从基础到高级的内容：</p>\n",r:{minutes:3.42,words:1027},t:"Linux",y:"a"}}],["/Netty/01Netty-nio.html",{loader:()=>a.e(21739).then(a.bind(a,68560)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:'\n<p>non-blocking io 非阻塞 IO</p>\n<h2>1. 三大组件</h2>\n<h3>1.1 Channel &amp; Buffer</h3>\n<p>channel 有一点类似于 stream，它就是读写数据的<strong>双向通道</strong>，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 channel，而之前的 stream 要么是输入，要么是输出，channel 比 stream 更为底层</p>\n<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">graph LR</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">channel --&gt; buffer</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">buffer --&gt; channel</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:31.98,words:9593},t:"一. NIO 基础",i:"pen-to-square",O:1,y:"a"}}],["/Netty/02Netty-%E5%85%A5%E9%97%A8.html",{loader:()=>a.e(67797).then(a.bind(a,91832)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["教程","阅读完毕"],e:'\n<h2>1. 概述</h2>\n<h3>1.1 Netty 是什么？</h3>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Netty is an asynchronous event-driven network application framework</span></span>\n<span class="line"><span>for rapid development of maintainable high performance protocol servers &amp; clients.</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:30.86,words:9259},t:"二. Netty 入门",i:"pen-to-square",O:2,y:"a"}}],["/Netty/03Netty-%E8%BF%9B%E9%98%B6.html",{loader:()=>a.e(39602).then(a.bind(a,42874)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["教程","阅读完毕"],e:'\n<h2>1. 粘包与半包</h2>\n<h3>1.1 粘包现象</h3>\n<p>服务端代码</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boss</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> worker</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ServerBootstrap</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ServerBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NioServerSocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(boss, worker);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">childHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ChannelInitializer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LoggingHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">LogLevel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DEBUG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ChannelInboundHandlerAdapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"connected {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"disconnect {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            });</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ChannelFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} binding..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} bound..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">closeFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"server error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            boss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"stoped"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:29.49,words:8848},t:"三. Netty 进阶",i:"pen-to-square",O:3,y:"a"}}],["/Netty/04Netty-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html",{loader:()=>a.e(65195).then(a.bind(a,60052)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["教程"],e:'\n<h2>1. 优化</h2>\n<h3>1.1 扩展序列化算法</h3>\n<p>序列化，反序列化主要用在消息正文的转换上</p>\n<ul>\n<li>序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要变成 byte[]）</li>\n<li>反序列化时，需要将传入的正文数据还原成 Java 对象，便于处理</li>\n</ul>\n<p>目前的代码仅支持 Java 自带的序列化，反序列化机制，核心代码如下</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 反序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] body </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[bodyLength]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">byteByf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(body);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ObjectInputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(body))</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> message </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (Message) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSequenceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(sequenceId);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ByteArrayOutputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> out </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(out)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] bytes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toByteArray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:21.45,words:6434},t:"四. 优化与源码",i:"pen-to-square",O:4,y:"a"}}],["/Netty/1.%E9%BB%91%E9%A9%AC%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>a.e(13294).then(a.bind(a,45192)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["Java8特性"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:45},t:"黑马Netty",i:"pen-to-square",y:"a"}}],["/Netty/Channel.html",{loader:()=>a.e(23566).then(a.bind(a,41384)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["入门"],e:"\n<h2>1.连接问题</h2>\n<p>服务端代码</p>\n",r:{minutes:2.27,words:680},t:"Channel",i:"pen-to-square",y:"a"}}],["/Netty/",{loader:()=>a.e(68169).then(a.bind(a,38652)),meta:{c:["Netty","网络编程"],r:{minutes:.06,words:17},t:"Netty",i:"fa-solid fa-n",y:"a"}}],["/Netty/%E5%85%B3%E9%97%AD%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BB%84.html",{loader:()=>a.e(98075).then(a.bind(a,90480)),meta:{d:1739232e6,l:"2025年2月11日",c:["Netty"],g:["网络编程"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>shutdownGracefully</code> 是 Netty 中 <code>EventLoopGroup</code> 的一个方法，用于优雅地关闭事件循环组（<code>EventLoopGroup</code>）。<code>EventLoopGroup</code> 是一个包含多个 <code>EventLoop</code> 的集合，负责处理事件循环的执行。调用 <code>shutdownGracefully</code> 方法会使得这个事件循环组在完成当前正在执行的任务后，平滑地关闭，不会丢失任何未处理的请求。</p>\n</div>\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 Netty 中，<code>EventLoopGroup</code> 会处理所有的 I/O 操作，如网络事件的读取和写入，通常在应用程序关闭时，我们希望优雅地关闭这些事件循环，确保所有的 I/O 操作和任务都已经完成或被清理干净。</p>\n</div>\n',r:{minutes:1.83,words:549},t:"关闭事件循环组",i:"pen-to-square",y:"a"}}],["/Netty/%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3.html",{loader:()=>a.e(80994).then(a.bind(a,44974)),meta:{d:1739232e6,l:"2025年2月11日",c:["Netty"],g:["网络编程"],e:"\n<h3>1. <strong>树立正确的观念：</strong></h3>\n<ul>\n<li>在开始使用 Netty 之前，首先要有一个整体的框架观念，理解每个概念如何配合工作，才能更好地掌握 Netty。</li>\n</ul>\n",r:{minutes:3.21,words:964},t:"核心概念理解",i:"pen-to-square",y:"a"}}],["/Netty/%E9%87%8A%E6%94%BEByteBuf.html",{loader:()=>a.e(80006).then(a.bind(a,44876)),meta:{e:'\n<h3>什么时候需要手动释放 <code>ByteBuf</code>？</h3>\n<ul>\n<li>\n<p><strong>你显式创建了 <code>ByteBuf</code>：</strong>\n如果你在代码中自己通过 <code>ctx.alloc().buffer()</code> 或其他方式创建了一个 <code>ByteBuf</code>，那么在使用完之后，你需要手动释放它。可以调用 <code>buffer.release()</code> 来减少引用计数，以便 Netty 可以回收内存。</p>\n<p>示例：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ByteBuf</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> buffer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">alloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 填充数据</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeAndFlush</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(buffer);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 发送完数据后手动释放</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>你在自定义的 Handler 中直接操作了 <code>ByteBuf</code>：</strong>\n如果你在自定义的 <code>ChannelHandler</code> 代码中创建并管理了 <code>ByteBuf</code>，并且这个对象不是由 Netty 管理的，那么同样需要在使用完后手动释放它。</p>\n</li>\n</ul>',r:{minutes:1.53,words:458},t:"Netty ByteBuf 内存管理：手动释放与自动释放",y:"a"}}],["/Nginx/413%20(Request%20Entity%20Too%20Large).html",{loader:()=>a.e(38493).then(a.bind(a,45160)),meta:{d:17291232e5,l:"2024年10月17日",c:["Nginx"],g:["error"],e:"\n<blockquote>\n<p>上传文件时报错：请求实体过大</p>\n<p>修改Nginx服务器的请求实体大小限制</p>\n</blockquote>\n",r:{minutes:.31,words:92},t:"413 (Request Entity Too Large)",i:"pen-to-square",y:"a"}}],["/Nginx/",{loader:()=>a.e(61009).then(a.bind(a,705)),meta:{e:"\n",r:{minutes:0,words:1},t:"Nginx",y:"a"}}],["/Python/",{loader:()=>a.e(18585).then(a.bind(a,9587)),meta:{e:"\n",r:{minutes:.01,words:3},t:"Python总结",y:"a"}}],["/SSM/",{loader:()=>a.e(94428).then(a.bind(a,56048)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["讲义"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:45},t:"黑马SSM",i:"fa-solid fa-leaf",y:"a"}}],["/Spring/",{loader:()=>a.e(74330).then(a.bind(a,37579)),meta:{d:17440704e5,l:"2025年4月8日",r:{minutes:.04,words:13},t:"Spring",i:"fa-solid fa-leaf",y:"a"}}],["/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html",{loader:()=>a.e(21622).then(a.bind(a,62220)),meta:{d:17291232e5,l:"2024年10月17日",c:["Spring"],g:["总结"],e:"\n<h2>spring框架概述（Spring5.x）</h2>\n",r:{minutes:1.58,words:475},t:"Spring5.x概述",i:"pen-to-square",y:"a"}}],["/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html",{loader:()=>a.e(82256).then(a.bind(a,34295)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["总结"],e:'\n<blockquote>\n<p>springboot会自动注入数据源，如果没有配，就会抛出该异常</p>\n</blockquote>\n<p><strong>不需要数据库支持，可以让他不注入数据源</strong></p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> DataSourceAutoConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, args);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.25,words:76},t:"Spring Boot无数据源启动",i:"pen-to-square",y:"a"}}],["/SpringBoot/",{loader:()=>a.e(54170).then(a.bind(a,21073)),meta:{d:17440704e5,l:"2025年4月8日",r:{minutes:.04,words:13},t:"SpringBoot",i:"fa-solid fa-leaf",y:"a"}}],["/SpringCloud/",{loader:()=>a.e(70691).then(a.bind(a,3854)),meta:{d:17440704e5,l:"2025年4月8日",r:{minutes:.04,words:13},t:"SpringCloud",i:"fa-solid fa-leaf",y:"a"}}],["/SpringMVC/",{loader:()=>a.e(46178).then(a.bind(a,30517)),meta:{d:17440704e5,l:"2025年4月8日",r:{minutes:.04,words:13},t:"SpringMVC",i:"fa-solid fa-leaf",y:"a"}}],["/Vue/",{loader:()=>a.e(36789).then(a.bind(a,2632)),meta:{d:17304192e5,l:"2024年11月1日",c:["vue"],g:["总结"],e:"\n<blockquote>\n<p>Vue.js 是一个用于构建用户界面的渐进式 JavaScript 框架。它采用了组件化的开发方式，允许开发者通过组合可复用的组件来构建复杂的应用。Vue 的核心库专注于视图层，易于上手，同时也提供了强大的工具和生态系统，例如 Vue Router 和 Vuex，适用于大型应用。它支持响应式数据绑定，使得数据变化自动更新视图，从而提高开发效率。</p>\n</blockquote>\n",r:{minutes:.49,words:147},t:"Vue",i:"fa-brands fa-vuejs",y:"a"}}],["/Vue/vue%E6%A8%A1%E6%9D%BF.html",{loader:()=>a.e(26533).then(a.bind(a,72484)),meta:{d:17304192e5,l:"2024年11月1日",c:["vue"],g:["经验"],e:"\n<blockquote>\n<p>配置首选项全局代码片段，新建vue文件时自动生成模板</p>\n</blockquote>\n",r:{minutes:2.75,words:826},t:"vue模板",i:"fa-brands fa-vuejs",y:"a"}}],["/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html",{loader:()=>a.e(48073).then(a.bind(a,35948)),meta:{e:'\n<blockquote>\n\x3c!--排序加上.number表示要接受一个数字--\x3e\n<p><code>&lt;el-input v-model.number="dataForm.sort" placeholder="排序"&gt;&lt;/el-input&gt;</code></p>\n</blockquote>\n<p><strong>完整示例</strong></p>\n<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-dialog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"!dataForm.brandId ? \'新增\' : \'修改\'"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :close-on-click-modal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"false"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :visible.sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"visible"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :rules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataRule"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @keyup.enter.native</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataFormSubmit()"</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      label-width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"110px"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌名"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.name"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌名"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      &lt;!--用新的组件替换原来的输入框--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌logo地址"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">singleUpload</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">singleUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"介绍"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"descript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.descript"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"介绍"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"显示状态"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"showStatus"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-switch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.showStatus"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> active-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"#13ce66"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> inactive-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"#ff4949"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :active-value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1"</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">          :inactive-value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"检索首字母"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"firstLetter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.firstLetter"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"检索首字母"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"sort"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model.number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.sort"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> slot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"footer"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dialog-footer"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"visible = false"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;取消&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"primary"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataFormSubmit()"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;确定&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">      ...</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      dataRule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'品牌名不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        logo</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'品牌logo地址不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        descript</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'介绍不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        showStatus</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'显示状态[0-不显示；1-显示]不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //首字母校验规则</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        firstLetter</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            validator</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"首字母必须填写"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">^</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">[a-zA-Z]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"首字母必须在a-z或者A-Z之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "blur"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //排序字段校验规则</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            validator</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序字段必须填写"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序字段必须是一个大于等于0的整数"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "blur"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.43,words:430},t:"表单验证",y:"a"}}],["/%E7%BD%91%E7%BB%9C/L2TPIPsec.html",{loader:()=>a.e(82338).then(a.bind(a,34763)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>L2TP（Layer 2 Tunneling Protocol）与IPsec（Internet Protocol Security）常常被结合使用，形成L2TP/IPsec，提供安全的虚拟私人网络（VPN）服务。它的工作原理和主要特点可以总结如下：</p>\n</div>\n<h3>1. <strong>L2TP（Layer 2 Tunneling Protocol）</strong>：</h3>\n<ul>\n<li><strong>协议功能</strong>：L2TP 是一种隧道协议，主要用于将数据包封装在一个虚拟隧道中，使数据可以通过不安全的网络（如互联网）安全传输。</li>\n<li><strong>工作原理</strong>：L2TP本身并不加密数据，它只是负责建立和管理隧道（即数据通道）。它依赖于其他协议（如IPsec）来加密数据并保证安全。</li>\n<li><strong>用途</strong>：主要用于点对点连接和远程访问VPN，它能支持不同的网络协议（如IP、IPX等）。</li>\n</ul>',r:{minutes:2.62,words:787},t:"L2TP/IPsec协议",y:"a"}}],["/%E7%BD%91%E7%BB%9C/L2TP%E5%92%8CIPsec%E5%8D%8F%E8%AE%AE%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7.html",{loader:()=>a.e(74635).then(a.bind(a,85079)),meta:{e:"\n<h3>1. <strong>操作系统内置支持</strong></h3>\n<ul>\n<li><strong>Windows</strong>：\n<ul>\n<li>Windows操作系统（如Windows 10、Windows 11）内置了对L2TP/IPsec的支持。用户可以通过“网络和共享中心”配置VPN连接，选择L2TP/IPsec作为VPN协议。</li>\n</ul>\n</li>\n<li><strong>macOS</strong>：\n<ul>\n<li>macOS同样支持L2TP/IPsec协议。在“系统偏好设置”中的“网络”设置中，用户可以选择L2TP与IPsec配合使用，并配置VPN连接。</li>\n</ul>\n</li>\n<li><strong>Linux</strong>：\n<ul>\n<li>Linux支持L2TP/IPsec协议，可以通过强大的命令行工具如<code>strongSwan</code>、<code>xl2tpd</code>来配置L2TP/IPsec VPN。</li>\n<li><code>strongSwan</code> 是一个开源的IPsec实现，广泛用于Linux系统中的加密协议。</li>\n<li><code>xl2tpd</code> 是一个L2TP实现，通常与IPsec结合使用。</li>\n</ul>\n</li>\n<li><strong>Android</strong>：\n<ul>\n<li>Android设备内置对L2TP/IPsec的支持。用户可以在“设置”中的“VPN”部分配置L2TP/IPsec VPN连接。</li>\n</ul>\n</li>\n<li><strong>iOS</strong>：\n<ul>\n<li>iOS设备（如iPhone和iPad）同样支持L2TP/IPsec协议。用户可以在“设置”中找到“VPN”选项，配置L2TP/IPsec VPN。</li>\n</ul>\n</li>\n</ul>",r:{minutes:3,words:899},t:"L2TP和IPsec协议的常见软件和工具",y:"a"}}],["/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html",{loader:()=>a.e(83767).then(a.bind(a,25361)),meta:{d:17290368e5,l:"2024年10月16日",c:["网络"],g:["git","网络"],e:'\n<blockquote>\n<p>可解决github提交代码时连接失败的问题</p>\n</blockquote>\n<h2>Windows</h2>\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#cmd窗口下执行</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ipconfig</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /flushdns</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.2,words:60},t:"刷新dns缓存",i:"pen-to-square",y:"a"}}],["/%E8%A3%85%E6%9C%BA/AMD%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html",{loader:()=>a.e(21e3).then(a.bind(a,69793)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:"\n",r:{minutes:39.22,words:11766},t:"AMD桌面处理器规格",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/Intel%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html",{loader:()=>a.e(81310).then(a.bind(a,42463)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:"\n",r:{minutes:74.21,words:22262},t:"Intel桌面处理器规格",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA%E8%BF%9B%E9%98%B6.html",{loader:()=>a.e(41722).then(a.bind(a,30494)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:"\n<h2>CPU/主板</h2>\n<p><strong>CPU</strong></p>\n<table>\n<thead>\n<tr>\n<th>处理器型号</th>\n<th>核心代号</th>\n<th>制造工艺(nm)</th>\n<th>大小核/线程</th>\n<th>大核频率（GHz）</th>\n<th>小核频率（GHz）</th>\n<th>二/三级缓存（MB）</th>\n<th>核显</th>\n<th>基准功耗/加速功耗（W）</th>\n<th>插槽</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>酷睿i9-13900KS</td>\n<td>Raptor Lake</td>\n<td>Intel 7</td>\n<td>8+16/32</td>\n<td>3.2-6.0</td>\n<td>2.2-4.3</td>\n<td>32/36</td>\n<td>UHD 770</td>\n<td>150/253</td>\n<td>LGA1700</td>\n</tr>\n</tbody>\n</table>",r:{minutes:4.01,words:1202},t:"电脑装机进阶",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(45927).then(a.bind(a,1974)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:'\n<table>\n<thead>\n<tr>\n<th>配件</th>\n<th style="text-align:center">型号/规格</th>\n<th style="text-align:center">价格</th>\n<th style="text-align:center">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>处理器</td>\n<td style="text-align:center">Intel Core i5-13400F</td>\n<td style="text-align:center"></td>\n<td style="text-align:center">无核显</td>\n</tr>\n<tr>\n<td>主板</td>\n<td style="text-align:center">七彩虹 战斧 BATTLE-AX B760M-GHA WIFI V20</td>\n<td style="text-align:center">2296</td>\n<td style="text-align:center">板u套</td>\n</tr>\n<tr>\n<td>内存</td>\n<td style="text-align:center">金百达（KINGBANK）32GB(16G×2)套装 DDR4 3600  银爵 C18</td>\n<td style="text-align:center">336</td>\n<td style="text-align:center">高频率内存</td>\n</tr>\n<tr>\n<td>显卡</td>\n<td style="text-align:center">七彩虹（Colorful）iGame GeForce RTX 4060 Ti Ultra W DUO OC 8G DLSS 3</td>\n<td style="text-align:center">4379</td>\n<td style="text-align:center"></td>\n</tr>\n<tr>\n<td>存储</td>\n<td style="text-align:center">凯侠SD10 1TB(5000速+无缓存)</td>\n<td style="text-align:center">388</td>\n<td style="text-align:center">快速SSD</td>\n</tr>\n<tr>\n<td>电源</td>\n<td style="text-align:center">航嘉 WD650 EVO 650W</td>\n<td style="text-align:center">242</td>\n<td style="text-align:center">全模组电源</td>\n</tr>\n<tr>\n<td>散热器</td>\n<td style="text-align:center">乔思伯CR-1000</td>\n<td style="text-align:center">88</td>\n<td style="text-align:center">风冷散热系统</td>\n</tr>\n<tr>\n<td>机箱/风扇</td>\n<td style="text-align:center">航嘉s920暴风雪，棱镜风扇*6</td>\n<td style="text-align:center">200</td>\n<td style="text-align:center">ATX机箱</td>\n</tr>\n<tr>\n<td>显示器</td>\n<td style="text-align:center">AOC 27英寸 2K HDR400 IPS 原生180Hz 1ms 10Bit</td>\n<td style="text-align:center">1023</td>\n<td style="text-align:center">旋转升降</td>\n</tr>\n</tbody>\n</table>',r:{minutes:.61,words:182},t:"4060Ti配置",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%90%88%E7%9B%96%E4%B8%8D%E4%BC%91%E7%9C%A0.html",{loader:()=>a.e(77115).then(a.bind(a,22961)),meta:{e:"\n<p>修改配置文件 <code>vi /etc/systemd/logind.conf</code></p>\n<ul>\n<li>\n<p>将<code>HandleLidSwitch</code>的值从<strong>suspend</strong>改为<strong>ignore</strong></p>\n</li>\n<li>\n<p>将<code>HandleLidSwitch</code>、<code>LidSwitchIgnoreInhibited</code>前面的注释符号#删除。</p>\n</li>\n</ul>\n<p>保存完毕后输入（reboot）</p>\n",r:{minutes:.15,words:45},t:"飞牛OS合盖不休眠",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%BC%80%E5%85%B3%E5%B1%8F%E5%B9%95.html",{loader:()=>a.e(91182).then(a.bind(a,96196)),meta:{d:17374176e5,l:"2025年1月21日",c:["装机"],g:["装机"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>关闭屏幕命令:</p>\n<p>setterm --blank force --term linux &lt;/dev/tty1</p>\n<p>打开屏幕命令:</p>\n<p>setterm --blank poke --term linux &lt; /dev/tty1</p>\n<p>以上命令要在root账户下使用。而且关闭屏幕后按键盘上任何按键都不会亮屏，只能在ssh下用打开 屏幕命令亮屏。</p>\n</div>\n',r:{minutes:.31,words:92},t:"飞牛开关屏幕",i:"fa-brands fa-java",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(40649).then(a.bind(a,60782)),meta:{e:'<h2>代理模式（Proxy Pattern）</h2>\n<h3>1. <strong>定义</strong></h3>\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>代理模式是一种<code>结构型</code>设计模式，通过为目标对象提供代理对象来间接控制对目标对象的访问。代理对象在客户端与真实对象之间充当中介，能够在不修改目标对象的情况下增加额外的操作，常用于资源管理、权限控制、延迟加载等场景。</p>\n</div>\n<h3>2. <strong>特点</strong></h3>\n<ul>\n<li><strong>解耦</strong>：代理模式将客户端与真实对象的交互通过代理对象进行，客户端无需直接依赖真实对象。</li>\n<li><strong>扩展性</strong>：代理模式能够在不修改目标对象的前提下，添加新的功能，例如权限控制、日志记录等。</li>\n<li><strong>控制访问</strong>：代理对象能够对目标对象的访问进行控制，实现过滤、延迟加载、缓存等功能。</li>\n</ul>',r:{minutes:3.84,words:1152},t:"",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(8549).then(a.bind(a,2309)),meta:{e:"\n<p>设计模式是软件工程中常用的解决特定问题的模版或者蓝图，可以帮助我们开发者以一种更加清晰、高效和可重用的方式来编写代码。</p>\n<p>通常分为三类：</p>\n<ul>\n<li><code>创建型模式</code>：涉及对象实例化，用于创建对象的模式，可以增加程序的灵活性和可重用性。常见的创建型模式有工厂方法、抽象工厂、单例、建造者、原型等。</li>\n<li><code>结构型模式</code>：涉及类和对象的组合，用于设计类和对象的结构，以便更好地实现程序的功能。常见的结构型模式有适配器、桥接、组合、装饰、外观、享元、代理等。</li>\n<li><code>行为型模式</code>：关注对象之间的通信，包括责任链、命令、解释器、迭代器、中介者、备忘录、观察者、状态、策略、模板方法、访问者等。</li>\n</ul>",r:{minutes:2.2,words:659},t:"☕ 设计模式",y:"a"}}],["/Bug/Java/InaccessibleObjectException.html",{loader:()=>a.e(62871).then(a.bind(a,26565)),meta:{e:"\n<p>在 Java 9 及更高版本中，Java 引入了模块化系统（Jigsaw），这让 Java 程序能够更好地管理模块间的访问权限。然而，这也带来了一些问题，特别是在使用反射时，某些类、字段或方法会因为模块化系统的限制而变得不可访问。今天我们就来讨论一个常见的 Java 异常 —— <code>java.lang.reflect.InaccessibleObjectException</code>，以及如何通过 IntelliJ IDEA 配置解决这个问题。</p>\n",r:{minutes:3.06,words:917},t:"解决 Java 反射问题：InaccessibleObjectException 和 --add-opens 配置",y:"a"}}],["/Database/MySQL/",{loader:()=>a.e(57787).then(a.bind(a,19291)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","数据库"],g:["目录"],e:'\n<h2>安装</h2>\n<p><a href="/blog/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html" target="_blank">1.MySQL在线安装</a></p>\n<p><a href="/blog/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html" target="_blank">2.MySQL离线安装</a></p>',r:{minutes:1.7,words:511},t:"MySQL",i:"fa-solid fa-database",y:"a"}}],["/Database/Redis/",{loader:()=>a.e(79714).then(a.bind(a,9912)),meta:{c:["redis"],r:{minutes:.04,words:13},t:"Redis",i:"fa-solid fa-database",y:"a"}}],["/Database/Redis/Redis%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F.html",{loader:()=>a.e(41080).then(a.bind(a,66720)),meta:{e:'\n<p>你是一个程序员，你维护了一个 商品服务，它背后直连 mysql 数据库。<br>\n假设商品服务需要对外提供 每秒 1w 次查询，但背后的 mysql 却只能提供每秒 5k 次查询，那 mysql 根本顶不住！分分钟会被压垮。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504012302762.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>\n<p>这类大流量查询场景非常常见，比如双十一秒杀和春节抢车票。<br>\n那么问题就来了，有没有办法在 mysql 不被压垮的同时，让商品服务支持每秒 1w 次查询 ？<br>\n当然有，<strong>没有什么是加一层中间层不能解决的，如果有，那就再加一层</strong>。<br>\n这次我们要加的中间层是<strong>Redis</strong>。</p>',r:{minutes:8.3,words:2489},t:"Redis 是什么？架构是怎么样的？",y:"a"}}],["/Database/Redis/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>a.e(97233).then(a.bind(a,19104)),meta:{d:17374176e5,l:"2025年1月21日",c:["数据库"],g:["教程"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n<h4>SpringCloud+RabbitMQ+Docker+Redis+搜索+分布式，系统详解springcloud微服务技术栈课程|黑马程序员Java微服务</h4>\n',r:{minutes:.45,words:134},t:"视频教程",i:"fa-solid fa-play",O:0,y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html",{loader:()=>a.e(24561).then(a.bind(a,79117)),meta:{e:"\n<blockquote>\n<p>docker安装后端项目weblog</p>\n</blockquote>\n<h3>1. 目录结构</h3>\n<p>project-root/\n│\n├── code/\n│   ├── Dockerfile\n│   ├── weblog-web-0.0.1-SNAPSHOT.jar\n│   └── application.yml\n│\n└── docker-compose.yml</p>\n<h3>2.docker方式启动</h3>\n<p>💁‍♂️操作在code目录下完成</p>\n<p>1️⃣<strong>编写Dockerfile文件</strong></p>\n<p><code>vim Dockerfile</code></p>",r:{minutes:.63,words:190},t:"博客项目",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html",{loader:()=>a.e(48655).then(a.bind(a,92311)),meta:{e:'\n<h3>蓝灯常亮</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "nono"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">blue</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "default-on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">green</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "none"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">red</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:4.35,words:1306},t:"玩客云",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html",{loader:()=>a.e(68907).then(a.bind(a,42517)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["私有云"],e:"\n<blockquote>\n<p><strong>ChatGPT Next Web</strong> 是一个基于 OpenAI 的 ChatGPT 模型构建的网页应用，旨在提供用户友好的界面，方便用户与 AI 进行对话和互动，支持多种自定义设置和功能，提升用户体验。</p>\n</blockquote>\n",r:{minutes:1.23,words:368},t:"私有云部署软件",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/Dockerfile%20%E6%9E%84%E5%BB%BA%20Spring%20Boot%20%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%9C%8D%E5%8A%A1.html",{loader:()=>a.e(71907).then(a.bind(a,75776)),meta:{e:'\n<p>通过 <code>Dockfile</code> 文件，将 <code>Spring Boot</code> 服务打包成一个 <code>Docker</code> 镜像，后续将通过镜像来运行后端服务。</p>\n<blockquote>\n<p>Docker 容器在启动时，可以通过指定 <code>--restart</code> 参数来配置 Docker 容器在退出时的重新启动策略。有了它，至少能保证服务被干挂了，能够快速的被拉起，不至于让用户长时间无法访问网站。</p>\n</blockquote>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061728061.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',r:{minutes:4.31,words:1294},t:"Dockerfile 构建 Spring Boot 镜像并运行服务",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html",{loader:()=>a.e(35837).then(a.bind(a,823)),meta:{d:17291232e5,l:"2024年10月17日",c:["docker"],g:["容器"],e:'\n<h2>问题</h2>\n<p>如果在启动Docker容器的过程中没有单独配置localtime，会造成Docker容器时间与主机时间不一致的情况，UTC和CST相差8小时，即容器时间与<a href="https://zhida.zhihu.com/search?q=%E5%8C%97%E4%BA%AC%E6%97%B6%E9%97%B4&amp;zhida_source=entity&amp;is_preview=1" target="_blank" rel="noopener noreferrer">北京时间</a>相差8个小时</p>\n<h2>解决方案</h2>\n\x3c!--more--\x3e',r:{minutes:1.01,words:303},t:"容器与宿主机时间同步",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/docker-compose%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html",{loader:()=>a.e(67553).then(a.bind(a,29632)),meta:{e:"\n<h2>docker-compose安装redis</h2>\n",r:{minutes:1.62,words:485},t:"docker-compose安装软件",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85jenkins%E5%8F%8A%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(43130).then(a.bind(a,26198)),meta:{e:'\n<h2>1. 什么是 jenkins?</h2>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061717007.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<blockquote>\n<p>Jenkins 是<strong>一个开源的持续集成（Continuous Integration）工具，它的主要作用是帮助开发团队自动化构建、测试和部署软件项目</strong>。通俗来说，Jenkins 可以在每次代码变更时，帮助我们自动进行一系列的操作，例如编译代码、运行测试、生成文档，甚至是将应用程序部署到服务器上。</p>\n</blockquote>',r:{minutes:4.2,words:1260},t:"docker安装jenkins及配置",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html",{loader:()=>a.e(73300).then(a.bind(a,61127)),meta:{e:"\n<h2>docker安装Nginx</h2>\n",r:{minutes:1.1,words:329},t:"docker安装软件",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/pull.html",{loader:()=>a.e(70972).then(a.bind(a,32405)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>下面是关于使用 <code>docker pull</code> 命令的总结：</p>\n<h3><code>docker pull</code> 命令概述</h3>\n<p><code>docker pull</code> 命令用于从 Docker 镜像仓库下载镜像到本地。它是 Docker 的基本命令之一，允许用户获取所需的镜像以便在本地运行容器。</p>\n",r:{minutes:1.13,words:338},t:"pull",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E5%AE%89%E8%A3%85NocoDB.html",{loader:()=>a.e(90586).then(a.bind(a,1929)),meta:{e:"\n<blockquote>\n<p>NocoDB是一个网页端的数据库管理</p>\n</blockquote>\n<h3>步骤1：安装Docker</h3>\n<p>首先，你需要在本地环境中安装Docker。Docker是一个用于部署应用程序的开源平台，它可以帮助你轻松地创建、部署和运行容器化的应用程序。\n你可以从Docker官方网站下载并安装适合你操作系统的Docker版本。安装完成后，你可以通过在终端中运行以下命令来验证Docker是否已成功安装：\n<code>docker --version</code></p>\n<h3>步骤2：拉取Nocodb镜像</h3>\n<p>接下来，你需要从Docker Hub拉取Nocodb镜像。Docker Hub是Docker提供的一个用于共享和管理Docker镜像的公共注册表。\n在终端中运行以下命令来拉取Nocodb镜像：\n<code>docker pull nocodb/nocodb</code></p>",r:{minutes:1.38,words:414},t:"安装NocoDB",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%8D%B7%E7%9B%AE%E5%BD%95.html",{loader:()=>a.e(83397).then(a.bind(a,23105)),meta:{e:"\n<blockquote>\n<p>docker volume inspect es-plugins</p>\n</blockquote>\n",r:{minutes:.04,words:12},t:"查看数据卷目录",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html",{loader:()=>a.e(41032).then(a.bind(a,36084)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>在 Docker 中，查看镜像架构可以帮助确认镜像是否适合当前设备的 CPU 架构（如 <code>amd64</code> 或 <code>arm64</code>）。以下是总结的几种方法：</p>\n<hr>\n",r:{minutes:1.68,words:504},t:"Nginx",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(88043).then(a.bind(a,38163)),meta:{e:"\n<p><code>docker run --privileged</code> 是 Docker 命令中的一个选项，用于以特权模式运行容器。下面是对该选项的总结：</p>\n<h3>特权模式概述</h3>\n<ul>\n<li><strong>权限提升</strong>: 使用 <code>--privileged</code> 运行的容器将拥有更多的系统权限，几乎可以访问宿主机的所有设备和功能。这意味着容器可以执行一些通常被限制的操作，例如直接访问硬件设备、修改系统设置等。</li>\n</ul>\n<h3>主要功能</h3>\n<ol>\n<li>\n<p><strong>访问宿主机设备</strong>: 特权容器可以访问和使用宿主机的所有设备，而不仅仅是 Docker 默认允许的设备。</p>\n</li>\n<li>\n<p><strong>执行系统调用</strong>: 特权容器可以执行一些需要更高权限的系统调用，例如修改网络配置、挂载文件系统等。</p>\n</li>\n<li>\n<p><strong>运行 Docker</strong>: 在特权模式下，容器内部可以运行 Docker 守护进程，从而使其能够创建和管理其他容器。</p>\n</li>\n</ol>",r:{minutes:1.79,words:536},t:"特权模式运行容器",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html",{loader:()=>a.e(44835).then(a.bind(a,5864)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>Docker镜像的导入与导出是镜像管理的常见操作，适用于跨系统传输镜像或备份镜像。以下是总结：</p>\n<hr>\n",r:{minutes:1.63,words:489},t:"镜像导入导出",i:"laptop-code",y:"a"}}],["/Interview/Java/",{loader:()=>a.e(24871).then(a.bind(a,36506)),meta:{r:{minutes:.03,words:9},t:"Java",i:"fa-brands fa-java",y:"a"}}],["/Interview/MySQL/MySQL%E9%9D%A2%E6%B8%A384.html",{loader:()=>a.e(55902).then(a.bind(a,15911)),meta:{d:17406144e5,l:"2025年2月27日",c:["面试题"],g:["面试题","高质量"],e:'<h2>🆗MySQL 基础</h2>\n<p>⭐转自<a href="https://javabetter.cn/blog.html" target="_blank" rel="noopener noreferrer">博客 | 二哥的Java进阶之路</a> 感谢二哥救我🐶命</p>\n<hr>\n<h3>🌟0.什么是 MySQL？</h3>\n<p>MySQL 是一个开源的关系型数据库，现在隶属于 Oracle 公司。是我们国内使用频率最高的一种数据库，我在本地安装的是最新的 8.3 版本。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202503311126086.png" alt="MySQL 8.3 最新版本" tabindex="0" loading="lazy"><figcaption>MySQL 8.3 最新版本</figcaption></figure>',r:{minutes:182.42,words:54727},t:"MySQL面试题，84道MySQL八股文",y:"a"}}],["/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160-%E4%BC%98%E5%8C%96%E7%89%88.html",{loader:()=>a.e(80399).then(a.bind(a,80048)),meta:{c:["面试题"],g:["面试题","低质量"],e:"\n<h2>📚基础</h2>\n<h3>📖1.关系型和非关系型数据库的区别</h3>\n<p><strong>关系型数据库的优点是：</strong></p>\n<ol>\n<li>容易理解和使用，用表格形式组织数据，结构清晰，便与操作</li>\n<li>保障数据一致性，遵循ACID原则（原子性，一致性，隔离性，持久性），保证事务处理的可靠性与一致性</li>\n<li>数据更新开销低，插入更新删除操作高效</li>\n<li>查询能力强大，可以使用带有where，join的语句。适合多表联查</li>\n</ol>\n<p><strong>非关系型数据库(NoSQL)的优点：</strong></p>\n<ol>\n<li>读写性能高效，因为不经过SQL解析，读写速度快，高并发场景下表现优秀</li>\n<li>存储结构灵活，包括键值对，文档或列式存储等多种存储结构，适合JSON，二进制等多样化数据存储</li>\n<li>支持多种数据类型，能处理结构化，半结构化和非结构化数据，比如图片，视频，日志，文档等</li>\n<li>水平扩展型强，非关系型数据库支持横向扩展，能够处理大规模数据，如Redis（内存数据库）、MongoDB（文档数据库）、HBase（列式数据库），适用于大数据、高可用的场景，如日志系统、地理位置存储等。</li>\n</ol>",r:{minutes:30.85,words:9254},t:"60道 MySQL 精选面试题(优化版)",y:"a"}}],["/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160.html",{loader:()=>a.e(6972).then(a.bind(a,55908)),meta:{c:["面试题"],g:["面试题","低质量"],e:"<h2>基础</h2>\n<h3>1、关系型和非关系型数据库的区别？</h3>\n<p>关系型数据库的优点</p>\n<ul>\n<li>容易理解，因为它采用了关系模型来组织数据。</li>\n<li>可以保持数据的一致性。</li>\n<li>数据更新的开销比较小。</li>\n<li>支持复杂查询（带 where 子句的查询）</li>\n</ul>\n<p>非关系型数据库（NOSQL）的优点</p>\n<ul>\n<li>无需经过 SQL 层的解析，读写效率高。</li>\n<li>基于键值对，读写性能很高，易于扩展</li>\n<li>可以支持多种类型数据的存储，如图片，文档等等。</li>\n<li>扩展（可分为内存性数据库以及文档型数据库，比如 Redis，MongoDB，HBase 等，适合场景：数据量大高可用的日志系统/地理位置存储系统）。</li>\n</ul>",r:{minutes:36.57,words:10970},t:"60 道 MySQL 精选面试题👍",y:"a"}}],["/Interview/MySQL/MySQL%E9%BB%91%E9%A9%AC23.html",{loader:()=>a.e(70507).then(a.bind(a,63235)),meta:{d:17433792e5,l:"2025年3月31日",c:["面试题"],g:["面试题","高质量"],e:"\n<h2>📖 1. MySQL中，如何定位慢查询？</h2>\n<p><strong>候选人</strong>：</p>\n<p>嗯，我们当时在做压力测试时发现有些接口响应时间非常慢，超过了2秒。因为我们的系统部署了运维监控系统Skywalking，在它的报表展示中可以看到哪个接口慢，并且能分析出接口中哪部分耗时较多，包括具体的SQL执行时间，这样就能定位到出现问题的SQL。</p>\n<p>如果没有这种监控系统，MySQL本身也提供了慢查询日志功能。可以在MySQL的系统配置文件中开启慢查询日志，并设置SQL执行时间超过多少就记录到日志文件，比如我们之前项目设置的是2秒，超过这个时间的SQL就会记录在日志文件中，我们就可以在那里找到执行慢的SQL。</p>",r:{minutes:8.82,words:2645},t:"MySQL黑马面试题",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/175.%E7%BB%84%E5%90%88%E4%B8%A4%E4%B8%AA%E8%A1%A8.html",{loader:()=>a.e(36265).then(a.bind(a,66541)),meta:{e:'\n<blockquote>\n<p>题目</p>\n</blockquote>\n<blockquote>\n<p>表: <code>Person</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| 列名         | 类型     |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| PersonId    | int     |</span></span>\n<span class="line"><span>| FirstName   | varchar |</span></span>\n<span class="line"><span>| LastName    | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>personId 是该表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>该表包含一些人的 ID 和他们的姓和名的信息。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表: <code>Address</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| 列名         | 类型    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| AddressId   | int     |</span></span>\n<span class="line"><span>| PersonId    | int     |</span></span>\n<span class="line"><span>| City        | varchar |</span></span>\n<span class="line"><span>| State       | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>addressId 是该表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>该表的每一行都包含一个 ID = PersonId 的人的城市和州的信息。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，报告 <code>Person</code> 表中每个人的姓、名、城市和州。如果 <code>personId</code> 的地址不在 <code>Address</code> 表中，则报告为 <code>null</code> 。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Person表:</span></span>\n<span class="line"><span>+----------+----------+-----------+</span></span>\n<span class="line"><span>| personId | lastName | firstName |</span></span>\n<span class="line"><span>+----------+----------+-----------+</span></span>\n<span class="line"><span>| 1        | Wang     | Allen     |</span></span>\n<span class="line"><span>| 2        | Alice    | Bob       |</span></span>\n<span class="line"><span>+----------+----------+-----------+</span></span>\n<span class="line"><span>Address表:</span></span>\n<span class="line"><span>+-----------+----------+---------------+------------+</span></span>\n<span class="line"><span>| addressId | personId | city          | state      |</span></span>\n<span class="line"><span>+-----------+----------+---------------+------------+</span></span>\n<span class="line"><span>| 1         | 2        | New York City | New York   |</span></span>\n<span class="line"><span>| 2         | 3        | Leetcode      | California |</span></span>\n<span class="line"><span>+-----------+----------+---------------+------------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+-----------+----------+---------------+----------+</span></span>\n<span class="line"><span>| firstName | lastName | city          | state    |</span></span>\n<span class="line"><span>+-----------+----------+---------------+----------+</span></span>\n<span class="line"><span>| Allen     | Wang     | Null          | Null     |</span></span>\n<span class="line"><span>| Bob       | Alice    | New York City | New York |</span></span>\n<span class="line"><span>+-----------+----------+---------------+----------+</span></span>\n<span class="line"><span>解释: </span></span>\n<span class="line"><span>地址表中没有 personId = 1 的地址，所以它们的城市和州返回 null。</span></span>\n<span class="line"><span>addressId = 1 包含了 personId = 2 的地址信息</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.89,words:268},t:"175. 组合两个表",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/176.%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4.html",{loader:()=>a.e(5554).then(a.bind(a,46889)),meta:{e:'\n<blockquote>\n<p><code>Employee</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| id          | int  |</span></span>\n<span class="line"><span>| salary      | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>id 是这个表的主键。</span></span>\n<span class="line"><span>表的每一行包含员工的工资信息。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询并返回 <code>Employee</code> 表中第二高的 <strong>不同</strong> 薪水 。如果不存在第二高的薪水，查询应该返回 <code>null(Pandas 则返回 None)</code> 。</p>\n<p>查询结果如下例所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Employee 表：</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| id | salary |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| 1  | 100    |</span></span>\n<span class="line"><span>| 2  | 200    |</span></span>\n<span class="line"><span>| 3  | 300    |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+---------------------+</span></span>\n<span class="line"><span>| SecondHighestSalary |</span></span>\n<span class="line"><span>+---------------------+</span></span>\n<span class="line"><span>| 200                 |</span></span>\n<span class="line"><span>+---------------------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Employee 表：</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| id | salary |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| 1  | 100    |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+---------------------+</span></span>\n<span class="line"><span>| SecondHighestSalary |</span></span>\n<span class="line"><span>+---------------------+</span></span>\n<span class="line"><span>| null                |</span></span>\n<span class="line"><span>+---------------------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.47,words:142},t:"176. 第二高的薪水",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/177.%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4.html",{loader:()=>a.e(50689).then(a.bind(a,59313)),meta:{e:'\n<blockquote>\n<p>表: <code>Employee</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| id          | int  |</span></span>\n<span class="line"><span>| salary      | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>id 是该表的主键（列中的值互不相同）。</span></span>\n<span class="line"><span>该表的每一行都包含有关员工工资的信息。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写一个解决方案查询 <code>Employee</code> 表中第 <code>n</code> 高的 <strong>不同</strong> 工资。如果少于 <code>n</code> 个不同工资，查询结果应该为 <code>null</code> 。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Employee table:</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| id | salary |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| 1  | 100    |</span></span>\n<span class="line"><span>| 2  | 200    |</span></span>\n<span class="line"><span>| 3  | 300    |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>n = 2</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+------------------------+</span></span>\n<span class="line"><span>| getNthHighestSalary(2) |</span></span>\n<span class="line"><span>+------------------------+</span></span>\n<span class="line"><span>| 200                    |</span></span>\n<span class="line"><span>+------------------------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Employee 表:</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| id | salary |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>| 1  | 100    |</span></span>\n<span class="line"><span>+----+--------+</span></span>\n<span class="line"><span>n = 2</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+------------------------+</span></span>\n<span class="line"><span>| getNthHighestSalary(2) |</span></span>\n<span class="line"><span>+------------------------+</span></span>\n<span class="line"><span>| null                   |</span></span>\n<span class="line"><span>+------------------------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.6,words:181},t:"177. 第N高的薪水",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/178.%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D.html",{loader:()=>a.e(85757).then(a.bind(a,52013)),meta:{e:'\n<blockquote>\n<p>表: <code>Scores</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| score       | decimal |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键（有不同值的列）。</span></span>\n<span class="line"><span>该表的每一行都包含了一场比赛的分数。Score 是一个有两位小数点的浮点值。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写一个解决方案来查询分数的排名。排名按以下规则计算:</p>\n<ul>\n<li>分数应按从高到低排列。</li>\n<li>如果两个分数相等，那么两个分数的排名应该相同。</li>\n<li>在排名相同的分数后，排名数应该是下一个连续的整数。换句话说，排名之间不应该有空缺的数字。</li>\n</ul>\n<p>按 <code>score</code> 降序返回结果表。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Scores 表:</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| id | score |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| 1  | 3.50  |</span></span>\n<span class="line"><span>| 2  | 3.65  |</span></span>\n<span class="line"><span>| 3  | 4.00  |</span></span>\n<span class="line"><span>| 4  | 3.85  |</span></span>\n<span class="line"><span>| 5  | 4.00  |</span></span>\n<span class="line"><span>| 6  | 3.65  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+-------+------+</span></span>\n<span class="line"><span>| score | rank |</span></span>\n<span class="line"><span>+-------+------+</span></span>\n<span class="line"><span>| 4.00  | 1    |</span></span>\n<span class="line"><span>| 4.00  | 1    |</span></span>\n<span class="line"><span>| 3.85  | 2    |</span></span>\n<span class="line"><span>| 3.65  | 3    |</span></span>\n<span class="line"><span>| 3.65  | 3    |</span></span>\n<span class="line"><span>| 3.50  | 4    |</span></span>\n<span class="line"><span>+-------+------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.76,words:227},t:"178. 分数排名",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/180.%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%95%B0%E5%AD%97.html",{loader:()=>a.e(64759).then(a.bind(a,37156)),meta:{e:'\n<blockquote>\n<p>表：<code>Logs</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| num         | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>在 SQL 中，id 是该表的主键。</span></span>\n<span class="line"><span>id 是一个自增列。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找出所有至少连续出现三次的数字。</p>\n<p>返回的结果表中的数据可以按 <strong>任意顺序</strong> 排列。</p>\n<p>结果格式如下面的例子所示：</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Logs 表：</span></span>\n<span class="line"><span>+----+-----+</span></span>\n<span class="line"><span>| id | num |</span></span>\n<span class="line"><span>+----+-----+</span></span>\n<span class="line"><span>| 1  | 1   |</span></span>\n<span class="line"><span>| 2  | 1   |</span></span>\n<span class="line"><span>| 3  | 1   |</span></span>\n<span class="line"><span>| 4  | 2   |</span></span>\n<span class="line"><span>| 5  | 1   |</span></span>\n<span class="line"><span>| 6  | 2   |</span></span>\n<span class="line"><span>| 7  | 2   |</span></span>\n<span class="line"><span>+----+-----+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>Result 表：</span></span>\n<span class="line"><span>+-----------------+</span></span>\n<span class="line"><span>| ConsecutiveNums |</span></span>\n<span class="line"><span>+-----------------+</span></span>\n<span class="line"><span>| 1               |</span></span>\n<span class="line"><span>+-----------------+</span></span>\n<span class="line"><span>解释：1 是唯一连续出现至少三次的数字。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.52,words:156},t:"180. 连续出现的数字",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/181.%E8%B6%85%E8%BF%87%E7%BB%8F%E7%90%86%E6%94%B6%E5%85%A5%E7%9A%84%E5%91%98%E5%B7%A5.html",{loader:()=>a.e(25699).then(a.bind(a,24283)),meta:{e:'\n<blockquote>\n<p>表：<code>Employee</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>| salary      | int     |</span></span>\n<span class="line"><span>| managerId   | int     |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>该表的每一行都表示雇员的ID、姓名、工资和经理的ID。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，找出收入比经理高的员工。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Employee 表:</span></span>\n<span class="line"><span>+----+-------+--------+-----------+</span></span>\n<span class="line"><span>| id | name  | salary | managerId |</span></span>\n<span class="line"><span>+----+-------+--------+-----------+</span></span>\n<span class="line"><span>| 1  | Joe   | 70000  | 3         |</span></span>\n<span class="line"><span>| 2  | Henry | 80000  | 4         |</span></span>\n<span class="line"><span>| 3  | Sam   | 60000  | Null      |</span></span>\n<span class="line"><span>| 4  | Max   | 90000  | Null      |</span></span>\n<span class="line"><span>+----+-------+--------+-----------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+----------+</span></span>\n<span class="line"><span>| Employee |</span></span>\n<span class="line"><span>+----------+</span></span>\n<span class="line"><span>| Joe      |</span></span>\n<span class="line"><span>+----------+</span></span>\n<span class="line"><span>解释: Joe 是唯一挣得比经理多的雇员。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.54,words:163},t:"181. 超过经理收入的员工",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/182.%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1.html",{loader:()=>a.e(18950).then(a.bind(a,77582)),meta:{e:'\n<blockquote>\n<p>表: <code>Person</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| email       | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>此表的每一行都包含一封电子邮件。电子邮件不包含大写字母。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案来报告所有重复的电子邮件。 请注意，可以保证电子邮件字段不为 NULL。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下例。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Person 表:</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>| id | email   |</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>| 1  | a@b.com |</span></span>\n<span class="line"><span>| 2  | c@d.com |</span></span>\n<span class="line"><span>| 3  | a@b.com |</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+---------+</span></span>\n<span class="line"><span>| Email   |</span></span>\n<span class="line"><span>+---------+</span></span>\n<span class="line"><span>| a@b.com |</span></span>\n<span class="line"><span>+---------+</span></span>\n<span class="line"><span>解释: a@b.com 出现了两次。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.53,words:158},t:"182. 查找重复的电子邮箱",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/183.%E4%BB%8E%E4%B8%8D%E8%AE%A2%E8%B4%AD%E7%9A%84%E5%AE%A2%E6%88%B7.html",{loader:()=>a.e(23585).then(a.bind(a,19996)),meta:{e:'\n<blockquote>\n<p><code>Customers</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>在 SQL 中，id 是该表的主键。</span></span>\n<span class="line"><span>该表的每一行都表示客户的 ID 和名称。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Orders</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| id          | int  |</span></span>\n<span class="line"><span>| customerId  | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>在 SQL 中，id 是该表的主键。</span></span>\n<span class="line"><span>customerId 是 Customers 表中 ID 的外键( Pandas 中的连接键)。</span></span>\n<span class="line"><span>该表的每一行都表示订单的 ID 和订购该订单的客户的 ID。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找出所有从不点任何东西的顾客。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Customers table:</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| id | name  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| 1  | Joe   |</span></span>\n<span class="line"><span>| 2  | Henry |</span></span>\n<span class="line"><span>| 3  | Sam   |</span></span>\n<span class="line"><span>| 4  | Max   |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>Orders table:</span></span>\n<span class="line"><span>+----+------------+</span></span>\n<span class="line"><span>| id | customerId |</span></span>\n<span class="line"><span>+----+------------+</span></span>\n<span class="line"><span>| 1  | 3          |</span></span>\n<span class="line"><span>| 2  | 1          |</span></span>\n<span class="line"><span>+----+------------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+-----------+</span></span>\n<span class="line"><span>| Customers |</span></span>\n<span class="line"><span>+-----------+</span></span>\n<span class="line"><span>| Henry     |</span></span>\n<span class="line"><span>| Max       |</span></span>\n<span class="line"><span>+-----------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.62,words:185},t:"183. 从不订购的客户",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/184.%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E6%9C%80%E9%AB%98%E7%9A%84%E5%91%98%E5%B7%A5.html",{loader:()=>a.e(69387).then(a.bind(a,2884)),meta:{e:'\n<blockquote>\n<p>表： <code>Employee</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| 列名          | 类型    |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| id           | int     |</span></span>\n<span class="line"><span>| name         | varchar |</span></span>\n<span class="line"><span>| salary       | int     |</span></span>\n<span class="line"><span>| departmentId | int     |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>在 SQL 中，id是此表的主键。</span></span>\n<span class="line"><span>departmentId 是 Department 表中 id 的外键（在 Pandas 中称为 join key）。</span></span>\n<span class="line"><span>此表的每一行都表示员工的 id、姓名和工资。它还包含他们所在部门的 id。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表： <code>Department</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| 列名         | 类型    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>在 SQL 中，id 是此表的主键列。</span></span>\n<span class="line"><span>此表的每一行都表示一个部门的 id 及其名称。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找出每个部门中薪资最高的员工。\n按 <strong>任意顺序</strong> 返回结果表。\n查询结果格式如下例所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Employee 表:</span></span>\n<span class="line"><span>+----+-------+--------+--------------+</span></span>\n<span class="line"><span>| id | name  | salary | departmentId |</span></span>\n<span class="line"><span>+----+-------+--------+--------------+</span></span>\n<span class="line"><span>| 1  | Joe   | 70000  | 1            |</span></span>\n<span class="line"><span>| 2  | Jim   | 90000  | 1            |</span></span>\n<span class="line"><span>| 3  | Henry | 80000  | 2            |</span></span>\n<span class="line"><span>| 4  | Sam   | 60000  | 2            |</span></span>\n<span class="line"><span>| 5  | Max   | 90000  | 1            |</span></span>\n<span class="line"><span>+----+-------+--------+--------------+</span></span>\n<span class="line"><span>Department 表:</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| id | name  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| 1  | IT    |</span></span>\n<span class="line"><span>| 2  | Sales |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------------+----------+--------+</span></span>\n<span class="line"><span>| Department | Employee | Salary |</span></span>\n<span class="line"><span>+------------+----------+--------+</span></span>\n<span class="line"><span>| IT         | Jim      | 90000  |</span></span>\n<span class="line"><span>| Sales      | Henry    | 80000  |</span></span>\n<span class="line"><span>| IT         | Max      | 90000  |</span></span>\n<span class="line"><span>+------------+----------+--------+</span></span>\n<span class="line"><span>解释：Max 和 Jim 在 IT 部门的工资都是最高的，Henry 在销售部的工资最高。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.91,words:272},t:"184. 部门工资最高的员工",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/185.%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E5%89%8D%E4%B8%89%E9%AB%98%E7%9A%84%E6%89%80%E6%9C%89%E5%91%98%E5%B7%A5.html",{loader:()=>a.e(78913).then(a.bind(a,62592)),meta:{e:'\n<blockquote>\n<p>表: <code>Employee</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| Column Name  | Type    |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| id           | int     |</span></span>\n<span class="line"><span>| name         | varchar |</span></span>\n<span class="line"><span>| salary       | int     |</span></span>\n<span class="line"><span>| departmentId | int     |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键列(具有唯一值的列)。</span></span>\n<span class="line"><span>departmentId 是 Department 表中 ID 的外键（reference 列）。</span></span>\n<span class="line"><span>该表的每一行都表示员工的ID、姓名和工资。它还包含了他们部门的ID。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表: <code>Department</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键列(具有唯一值的列)。</span></span>\n<span class="line"><span>该表的每一行表示部门ID和部门名。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>公司的主管们感兴趣的是公司每个部门中谁赚的钱最多。一个部门的 <strong>高收入者</strong> 是指一个员工的工资在该部门的 <strong>不同</strong> 工资中 <strong>排名前三</strong> 。</p>\n<p>编写解决方案，找出每个部门中 <strong>收入高的员工</strong> 。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>返回结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Employee 表:</span></span>\n<span class="line"><span>+----+-------+--------+--------------+</span></span>\n<span class="line"><span>| id | name  | salary | departmentId |</span></span>\n<span class="line"><span>+----+-------+--------+--------------+</span></span>\n<span class="line"><span>| 1  | Joe   | 85000  | 1            |</span></span>\n<span class="line"><span>| 2  | Henry | 80000  | 2            |</span></span>\n<span class="line"><span>| 3  | Sam   | 60000  | 2            |</span></span>\n<span class="line"><span>| 4  | Max   | 90000  | 1            |</span></span>\n<span class="line"><span>| 5  | Janet | 69000  | 1            |</span></span>\n<span class="line"><span>| 6  | Randy | 85000  | 1            |</span></span>\n<span class="line"><span>| 7  | Will  | 70000  | 1            |</span></span>\n<span class="line"><span>+----+-------+--------+--------------+</span></span>\n<span class="line"><span>Department  表:</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| id | name  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| 1  | IT    |</span></span>\n<span class="line"><span>| 2  | Sales |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+------------+----------+--------+</span></span>\n<span class="line"><span>| Department | Employee | Salary |</span></span>\n<span class="line"><span>+------------+----------+--------+</span></span>\n<span class="line"><span>| IT         | Max      | 90000  |</span></span>\n<span class="line"><span>| IT         | Joe      | 85000  |</span></span>\n<span class="line"><span>| IT         | Randy    | 85000  |</span></span>\n<span class="line"><span>| IT         | Will     | 70000  |</span></span>\n<span class="line"><span>| Sales      | Henry    | 80000  |</span></span>\n<span class="line"><span>| Sales      | Sam      | 60000  |</span></span>\n<span class="line"><span>+------------+----------+--------+</span></span>\n<span class="line"><span>解释:</span></span>\n<span class="line"><span>在IT部门:</span></span>\n<span class="line"><span>- Max的工资最高</span></span>\n<span class="line"><span>- 兰迪和乔都赚取第二高的独特的薪水</span></span>\n<span class="line"><span>- 威尔的薪水是第三高的</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>在销售部:</span></span>\n<span class="line"><span>- 亨利的工资最高</span></span>\n<span class="line"><span>- 山姆的薪水第二高</span></span>\n<span class="line"><span>- 没有第三高的工资，因为只有两名员工</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>\n<ul>\n<li>没有姓名、薪资和部门 <strong>完全</strong> 相同的员工。</li>\n</ul>\n</blockquote>',r:{minutes:1.38,words:415},t:"185. 部门工资前三高的所有员工",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/196.%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1.html",{loader:()=>a.e(67202).then(a.bind(a,44819)),meta:{e:'\n<blockquote>\n<p>表: <code>Person</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| email       | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键列(具有唯一值的列)。</span></span>\n<span class="line"><span>该表的每一行包含一封电子邮件。电子邮件将不包含大写字母。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案 <strong>删除</strong> 所有重复的电子邮件，只保留一个具有最小 <code>id</code> 的唯一电子邮件。</p>\n<p>（对于 SQL 用户，请注意你应该编写一个 <code>DELETE</code> 语句而不是 <code>SELECT</code> 语句。）</p>\n<p>（对于 Pandas 用户，请注意你应该直接修改 <code>Person</code> 表。）</p>\n<p>运行脚本后，显示的答案是 <code>Person</code> 表。驱动程序将首先编译并运行您的代码片段，然后再显示 <code>Person</code> 表。<code>Person</code> 表的最终顺序 <strong>无关紧要</strong> 。</p>\n<p>返回结果格式如下示例所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Person 表:</span></span>\n<span class="line"><span>+----+------------------+</span></span>\n<span class="line"><span>| id | email            |</span></span>\n<span class="line"><span>+----+------------------+</span></span>\n<span class="line"><span>| 1  | john@example.com |</span></span>\n<span class="line"><span>| 2  | bob@example.com  |</span></span>\n<span class="line"><span>| 3  | john@example.com |</span></span>\n<span class="line"><span>+----+------------------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+----+------------------+</span></span>\n<span class="line"><span>| id | email            |</span></span>\n<span class="line"><span>+----+------------------+</span></span>\n<span class="line"><span>| 1  | john@example.com |</span></span>\n<span class="line"><span>| 2  | bob@example.com  |</span></span>\n<span class="line"><span>+----+------------------+</span></span>\n<span class="line"><span>解释: john@example.com重复两次。我们保留最小的Id = 1。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.89,words:266},t:"196. 删除重复的电子邮箱",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/197.%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B8%A9%E5%BA%A6.html",{loader:()=>a.e(18481).then(a.bind(a,67511)),meta:{e:'\n<blockquote>\n<p>表： <code>Weather</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+---------------+---------+</span></span>\n<span class="line"><span>| Column Name   | Type    |</span></span>\n<span class="line"><span>+---------------+---------+</span></span>\n<span class="line"><span>| id            | int     |</span></span>\n<span class="line"><span>| recordDate    | date    |</span></span>\n<span class="line"><span>| temperature   | int     |</span></span>\n<span class="line"><span>+---------------+---------+</span></span>\n<span class="line"><span>id 是该表具有唯一值的列。</span></span>\n<span class="line"><span>没有具有相同 recordDate 的不同行。</span></span>\n<span class="line"><span>该表包含特定日期的温度信息</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，找出与之前（昨天的）日期相比温度更高的所有日期的 <code>id</code> 。</p>\n<p>返回结果 <strong>无顺序要求</strong> 。</p>\n<p>结果格式如下例子所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Weather 表：</span></span>\n<span class="line"><span>+----+------------+-------------+</span></span>\n<span class="line"><span>| id | recordDate | Temperature |</span></span>\n<span class="line"><span>+----+------------+-------------+</span></span>\n<span class="line"><span>| 1  | 2015-01-01 | 10          |</span></span>\n<span class="line"><span>| 2  | 2015-01-02 | 25          |</span></span>\n<span class="line"><span>| 3  | 2015-01-03 | 20          |</span></span>\n<span class="line"><span>| 4  | 2015-01-04 | 30          |</span></span>\n<span class="line"><span>+----+------------+-------------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+----+</span></span>\n<span class="line"><span>| id |</span></span>\n<span class="line"><span>+----+</span></span>\n<span class="line"><span>| 2  |</span></span>\n<span class="line"><span>| 4  |</span></span>\n<span class="line"><span>+----+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>2015-01-02 的温度比前一天高（10 -&gt; 25）</span></span>\n<span class="line"><span>2015-01-04 的温度比前一天高（20 -&gt; 30）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.61,words:184},t:"197. 上升的温度",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/262.%E8%A1%8C%E7%A8%8B%E5%92%8C%E7%94%A8%E6%88%B7.html",{loader:()=>a.e(45556).then(a.bind(a,26464)),meta:{e:'\n<blockquote>\n<p>表：<code>Trips</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+----------+</span></span>\n<span class="line"><span>| Column Name | Type     |</span></span>\n<span class="line"><span>+-------------+----------+</span></span>\n<span class="line"><span>| id          | int      |</span></span>\n<span class="line"><span>| client_id   | int      |</span></span>\n<span class="line"><span>| driver_id   | int      |</span></span>\n<span class="line"><span>| city_id     | int      |</span></span>\n<span class="line"><span>| status      | enum     |</span></span>\n<span class="line"><span>| request_at  | varchar  |     </span></span>\n<span class="line"><span>+-------------+----------+</span></span>\n<span class="line"><span>id 是这张表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>这张表中存所有出租车的行程信息。每段行程有唯一 id ，其中 client_id 和 driver_id 是 Users 表中 users_id 的外键。</span></span>\n<span class="line"><span>status 是一个表示行程状态的枚举类型，枚举成员为(‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’) 。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表：<code>Users</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+----------+</span></span>\n<span class="line"><span>| Column Name | Type     |</span></span>\n<span class="line"><span>+-------------+----------+</span></span>\n<span class="line"><span>| users_id    | int      |</span></span>\n<span class="line"><span>| banned      | enum     |</span></span>\n<span class="line"><span>| role        | enum     |</span></span>\n<span class="line"><span>+-------------+----------+</span></span>\n<span class="line"><span>users_id 是这张表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>这张表中存所有用户，每个用户都有一个唯一的 users_id ，role 是一个表示用户身份的枚举类型，枚举成员为 (‘client’, ‘driver’, ‘partner’) 。</span></span>\n<span class="line"><span>banned 是一个表示用户是否被禁止的枚举类型，枚举成员为 (‘Yes’, ‘No’) 。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>取消率</strong> 的计算方式如下：(被司机或乘客取消的非禁止用户生成的订单数量) / (非禁止用户生成的订单总数)。</p>\n<p>编写解决方案找出 <code>"2013-10-01"</code> 至 <code>"2013-10-03"</code> 期间有 <strong>至少</strong> 一次行程的非禁止用户（<strong>乘客和司机都必须未被禁止</strong>）的 <strong>取消率</strong>。非禁止用户即 banned 为 No 的用户，禁止用户即 banned 为 Yes 的用户。其中取消率 <code>Cancellation Rate</code> 需要四舍五入保留 <strong>两位小数</strong> 。</p>\n<p>返回结果表中的数据 <strong>无顺序要求</strong> 。</p>\n<p>结果格式如下例所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入： </span></span>\n<span class="line"><span>Trips 表：</span></span>\n<span class="line"><span>+----+-----------+-----------+---------+---------------------+------------+</span></span>\n<span class="line"><span>| id | client_id | driver_id | city_id | status              | request_at |</span></span>\n<span class="line"><span>+----+-----------+-----------+---------+---------------------+------------+</span></span>\n<span class="line"><span>| 1  | 1         | 10        | 1       | completed           | 2013-10-01 |</span></span>\n<span class="line"><span>| 2  | 2         | 11        | 1       | cancelled_by_driver | 2013-10-01 |</span></span>\n<span class="line"><span>| 3  | 3         | 12        | 6       | completed           | 2013-10-01 |</span></span>\n<span class="line"><span>| 4  | 4         | 13        | 6       | cancelled_by_client | 2013-10-01 |</span></span>\n<span class="line"><span>| 5  | 1         | 10        | 1       | completed           | 2013-10-02 |</span></span>\n<span class="line"><span>| 6  | 2         | 11        | 6       | completed           | 2013-10-02 |</span></span>\n<span class="line"><span>| 7  | 3         | 12        | 6       | completed           | 2013-10-02 |</span></span>\n<span class="line"><span>| 8  | 2         | 12        | 12      | completed           | 2013-10-03 |</span></span>\n<span class="line"><span>| 9  | 3         | 10        | 12      | completed           | 2013-10-03 |</span></span>\n<span class="line"><span>| 10 | 4         | 13        | 12      | cancelled_by_driver | 2013-10-03 |</span></span>\n<span class="line"><span>+----+-----------+-----------+---------+---------------------+------------+</span></span>\n<span class="line"><span>Users 表：</span></span>\n<span class="line"><span>+----------+--------+--------+</span></span>\n<span class="line"><span>| users_id | banned | role   |</span></span>\n<span class="line"><span>+----------+--------+--------+</span></span>\n<span class="line"><span>| 1        | No     | client |</span></span>\n<span class="line"><span>| 2        | Yes    | client |</span></span>\n<span class="line"><span>| 3        | No     | client |</span></span>\n<span class="line"><span>| 4        | No     | client |</span></span>\n<span class="line"><span>| 10       | No     | driver |</span></span>\n<span class="line"><span>| 11       | No     | driver |</span></span>\n<span class="line"><span>| 12       | No     | driver |</span></span>\n<span class="line"><span>| 13       | No     | driver |</span></span>\n<span class="line"><span>+----------+--------+--------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------------+-------------------+</span></span>\n<span class="line"><span>| Day        | Cancellation Rate |</span></span>\n<span class="line"><span>+------------+-------------------+</span></span>\n<span class="line"><span>| 2013-10-01 | 0.33              |</span></span>\n<span class="line"><span>| 2013-10-02 | 0.00              |</span></span>\n<span class="line"><span>| 2013-10-03 | 0.50              |</span></span>\n<span class="line"><span>+------------+-------------------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>2013-10-01：</span></span>\n<span class="line"><span>  - 共有 4 条请求，其中 2 条取消。</span></span>\n<span class="line"><span>  - 然而，id=2 的请求是由禁止用户（user_id=2）发出的，所以计算时应当忽略它。</span></span>\n<span class="line"><span>  - 因此，总共有 3 条非禁止请求参与计算，其中 1 条取消。</span></span>\n<span class="line"><span>  - 取消率为 (1 / 3) = 0.33</span></span>\n<span class="line"><span>2013-10-02：</span></span>\n<span class="line"><span>  - 共有 3 条请求，其中 0 条取消。</span></span>\n<span class="line"><span>  - 然而，id=6 的请求是由禁止用户发出的，所以计算时应当忽略它。</span></span>\n<span class="line"><span>  - 因此，总共有 2 条非禁止请求参与计算，其中 0 条取消。</span></span>\n<span class="line"><span>  - 取消率为 (0 / 2) = 0.00</span></span>\n<span class="line"><span>2013-10-03：</span></span>\n<span class="line"><span>  - 共有 3 条请求，其中 1 条取消。</span></span>\n<span class="line"><span>  - 然而，id=8 的请求是由禁止用户发出的，所以计算时应当忽略它。</span></span>\n<span class="line"><span>  - 因此，总共有 2 条非禁止请求参与计算，其中 1 条取消。</span></span>\n<span class="line"><span>  - 取消率为 (1 / 2) = 0.50</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:2.55,words:766},t:"262. 行程和用户",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/511.%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20I.html",{loader:()=>a.e(6535).then(a.bind(a,95580)),meta:{e:'\n<blockquote>\n<p>活动表 <code>Activity</code>：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| Column Name  | Type    |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| player_id    | int     |</span></span>\n<span class="line"><span>| device_id    | int     |</span></span>\n<span class="line"><span>| event_date   | date    |</span></span>\n<span class="line"><span>| games_played | int     |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>在 SQL 中，表的主键是 (player_id, event_date)。</span></span>\n<span class="line"><span>这张表展示了一些游戏玩家在游戏平台上的行为活动。</span></span>\n<span class="line"><span>每行数据记录了一名玩家在退出平台之前，当天使用同一台设备登录平台后打开的游戏的数目（可能是 0 个）。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询每位玩家 <strong>第一次登录平台的日期</strong>。</p>\n<p>查询结果的格式如下所示：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Activity 表：</span></span>\n<span class="line"><span>+-----------+-----------+------------+--------------+</span></span>\n<span class="line"><span>| player_id | device_id | event_date | games_played |</span></span>\n<span class="line"><span>+-----------+-----------+------------+--------------+</span></span>\n<span class="line"><span>| 1         | 2         | 2016-03-01 | 5            |</span></span>\n<span class="line"><span>| 1         | 2         | 2016-05-02 | 6            |</span></span>\n<span class="line"><span>| 2         | 3         | 2017-06-25 | 1            |</span></span>\n<span class="line"><span>| 3         | 1         | 2016-03-02 | 0            |</span></span>\n<span class="line"><span>| 3         | 4         | 2018-07-03 | 5            |</span></span>\n<span class="line"><span>+-----------+-----------+------------+--------------+</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>Result 表：</span></span>\n<span class="line"><span>+-----------+-------------+</span></span>\n<span class="line"><span>| player_id | first_login |</span></span>\n<span class="line"><span>+-----------+-------------+</span></span>\n<span class="line"><span>| 1         | 2016-03-01  |</span></span>\n<span class="line"><span>| 2         | 2017-06-25  |</span></span>\n<span class="line"><span>| 3         | 2016-03-02  |</span></span>\n<span class="line"><span>+-----------+-------------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.66,words:197},t:"511. 游戏玩法分析 I",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/550.%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20IV.html",{loader:()=>a.e(56158).then(a.bind(a,41123)),meta:{e:'\n<blockquote>\n<p>Table: <code>Activity</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| Column Name  | Type    |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>| player_id    | int     |</span></span>\n<span class="line"><span>| device_id    | int     |</span></span>\n<span class="line"><span>| event_date   | date    |</span></span>\n<span class="line"><span>| games_played | int     |</span></span>\n<span class="line"><span>+--------------+---------+</span></span>\n<span class="line"><span>（player_id，event_date）是此表的主键（具有唯一值的列的组合）。</span></span>\n<span class="line"><span>这张表显示了某些游戏的玩家的活动情况。</span></span>\n<span class="line"><span>每一行是一个玩家的记录，他在某一天使用某个设备注销之前登录并玩了很多游戏（可能是 0）。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，报告在首次登录的第二天再次登录的玩家的 <strong>比率</strong>，<strong>四舍五入到小数点后两位</strong>。换句话说，你需要计算从首次登录后的第二天登录的玩家数量，并将其除以总玩家数。</p>\n<p>结果格式如下所示：</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Activity table:</span></span>\n<span class="line"><span>+-----------+-----------+------------+--------------+</span></span>\n<span class="line"><span>| player_id | device_id | event_date | games_played |</span></span>\n<span class="line"><span>+-----------+-----------+------------+--------------+</span></span>\n<span class="line"><span>| 1         | 2         | 2016-03-01 | 5            |</span></span>\n<span class="line"><span>| 1         | 2         | 2016-03-02 | 6            |</span></span>\n<span class="line"><span>| 2         | 3         | 2017-06-25 | 1            |</span></span>\n<span class="line"><span>| 3         | 1         | 2016-03-02 | 0            |</span></span>\n<span class="line"><span>| 3         | 4         | 2018-07-03 | 5            |</span></span>\n<span class="line"><span>+-----------+-----------+------------+--------------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+-----------+</span></span>\n<span class="line"><span>| fraction  |</span></span>\n<span class="line"><span>+-----------+</span></span>\n<span class="line"><span>| 0.33      |</span></span>\n<span class="line"><span>+-----------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>只有 ID 为 1 的玩家在第一天登录后才重新登录，所以答案是 1/3 = 0.33</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:1.12,words:337},t:"550. 游戏玩法分析 IV",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/570.%E8%87%B3%E5%B0%91%E6%9C%895%E5%90%8D%E7%9B%B4%E6%8E%A5%E4%B8%8B%E5%B1%9E%E7%9A%84%E7%BB%8F%E7%90%86.html",{loader:()=>a.e(46694).then(a.bind(a,21840)),meta:{e:'\n<blockquote>\n<p>表: <code>Employee</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>| department  | varchar |</span></span>\n<span class="line"><span>| managerId   | int     |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是此表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>该表的每一行表示雇员的名字、他们的部门和他们的经理的id。</span></span>\n<span class="line"><span>如果managerId为空，则该员工没有经理。</span></span>\n<span class="line"><span>没有员工会成为自己的管理者。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写一个解决方案，找出至少有<strong>五个直接下属</strong>的经理。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Employee 表:</span></span>\n<span class="line"><span>+-----+-------+------------+-----------+</span></span>\n<span class="line"><span>| id  | name  | department | managerId |</span></span>\n<span class="line"><span>+-----+-------+------------+-----------+</span></span>\n<span class="line"><span>| 101 | John  | A          | Null      |</span></span>\n<span class="line"><span>| 102 | Dan   | A          | 101       |</span></span>\n<span class="line"><span>| 103 | James | A          | 101       |</span></span>\n<span class="line"><span>| 104 | Amy   | A          | 101       |</span></span>\n<span class="line"><span>| 105 | Anne  | A          | 101       |</span></span>\n<span class="line"><span>| 106 | Ron   | B          | 101       |</span></span>\n<span class="line"><span>+-----+-------+------------+-----------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| name |</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| John |</span></span>\n<span class="line"><span>+------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.66,words:199},t:"570. 至少有5名直接下属的经理",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/577.%E5%91%98%E5%B7%A5%E5%A5%96%E9%87%91.html",{loader:()=>a.e(64619).then(a.bind(a,60648)),meta:{e:'\n<blockquote>\n<p>表：<code>Employee</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| empId       | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>| supervisor  | int     |</span></span>\n<span class="line"><span>| salary      | int     |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>empId 是该表中具有唯一值的列。</span></span>\n<span class="line"><span>该表的每一行都表示员工的 id 和姓名，以及他们经理的 id 和他们的工资。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表：<code>Bonus</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| empId       | int  |</span></span>\n<span class="line"><span>| bonus       | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>empId 是该表具有唯一值的列。</span></span>\n<span class="line"><span>empId 是 Employee 表中 empId 的外键(reference 列)。</span></span>\n<span class="line"><span>该表的每一行都包含一个员工的 id 和他们各自的奖金。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，报告每个奖金 <strong>少于</strong> <code>1000</code> 的员工的姓名和奖金数额。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Employee table:</span></span>\n<span class="line"><span>+-------+--------+------------+--------+</span></span>\n<span class="line"><span>| empId | name   | supervisor | salary |</span></span>\n<span class="line"><span>+-------+--------+------------+--------+</span></span>\n<span class="line"><span>| 3     | Brad   | null       | 4000   |</span></span>\n<span class="line"><span>| 1     | John   | 3          | 1000   |</span></span>\n<span class="line"><span>| 2     | Dan    | 3          | 2000   |</span></span>\n<span class="line"><span>| 4     | Thomas | 3          | 4000   |</span></span>\n<span class="line"><span>+-------+--------+------------+--------+</span></span>\n<span class="line"><span>Bonus table:</span></span>\n<span class="line"><span>+-------+-------+</span></span>\n<span class="line"><span>| empId | bonus |</span></span>\n<span class="line"><span>+-------+-------+</span></span>\n<span class="line"><span>| 2     | 500   |</span></span>\n<span class="line"><span>| 4     | 2000  |</span></span>\n<span class="line"><span>+-------+-------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------+-------+</span></span>\n<span class="line"><span>| name | bonus |</span></span>\n<span class="line"><span>+------+-------+</span></span>\n<span class="line"><span>| Brad | null  |</span></span>\n<span class="line"><span>| John | null  |</span></span>\n<span class="line"><span>| Dan  | 500   |</span></span>\n<span class="line"><span>+------+-------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.77,words:231},t:"577. 员工奖金",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/584.%E5%AF%BB%E6%89%BE%E7%94%A8%E6%88%B7%E6%8E%A8%E8%8D%90%E4%BA%BA.html",{loader:()=>a.e(61889).then(a.bind(a,14220)),meta:{e:'\n<blockquote>\n<p>表: <code>Customer</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>| referee_id  | int     |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>在 SQL 中，id 是该表的主键列。</span></span>\n<span class="line"><span>该表的每一行表示一个客户的 id、姓名以及推荐他们的客户的 id。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找出以下客户的姓名：</p>\n<ol>\n<li><strong>被任何</strong> <code>id != 2</code> 的用户推荐。</li>\n<li><strong>没有被</strong> 任何用户推荐。</li>\n</ol>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入： </span></span>\n<span class="line"><span>Customer 表:</span></span>\n<span class="line"><span>+----+------+------------+</span></span>\n<span class="line"><span>| id | name | referee_id |</span></span>\n<span class="line"><span>+----+------+------------+</span></span>\n<span class="line"><span>| 1  | Will | null       |</span></span>\n<span class="line"><span>| 2  | Jane | null       |</span></span>\n<span class="line"><span>| 3  | Alex | 2          |</span></span>\n<span class="line"><span>| 4  | Bill | null       |</span></span>\n<span class="line"><span>| 5  | Zack | 1          |</span></span>\n<span class="line"><span>| 6  | Mark | 2          |</span></span>\n<span class="line"><span>+----+------+------------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| name |</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| Will |</span></span>\n<span class="line"><span>| Jane |</span></span>\n<span class="line"><span>| Bill |</span></span>\n<span class="line"><span>| Zack |</span></span>\n<span class="line"><span>+------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.54,words:162},t:"584. 寻找用户推荐人",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/585.2016%E5%B9%B4%E7%9A%84%E6%8A%95%E8%B5%84.html",{loader:()=>a.e(94618).then(a.bind(a,86461)),meta:{e:'\n<blockquote>\n<p><code>Insurance</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+-------+</span></span>\n<span class="line"><span>| Column Name | Type  |</span></span>\n<span class="line"><span>+-------------+-------+</span></span>\n<span class="line"><span>| pid         | int   |</span></span>\n<span class="line"><span>| tiv_2015    | float |</span></span>\n<span class="line"><span>| tiv_2016    | float |</span></span>\n<span class="line"><span>| lat         | float |</span></span>\n<span class="line"><span>| lon         | float |</span></span>\n<span class="line"><span>+-------------+-------+</span></span>\n<span class="line"><span>pid 是这张表的主键(具有唯一值的列)。</span></span>\n<span class="line"><span>表中的每一行都包含一条保险信息，其中：</span></span>\n<span class="line"><span>pid 是投保人的投保编号。</span></span>\n<span class="line"><span>tiv_2015 是该投保人在 2015 年的总投保金额，tiv_2016 是该投保人在 2016 年的总投保金额。</span></span>\n<span class="line"><span>lat 是投保人所在城市的纬度。题目数据确保 lat 不为空。</span></span>\n<span class="line"><span>lon 是投保人所在城市的经度。题目数据确保 lon 不为空。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案报告 2016 年 (<code>tiv_2016</code>) 所有满足下述条件的投保人的投保金额之和：</p>\n<ul>\n<li>他在 2015 年的投保额 (<code>tiv_2015</code>) 至少跟一个其他投保人在 2015 年的投保额相同。</li>\n<li>他所在的城市必须与其他投保人都不同（也就是说 (<code>lat, lon</code>) 不能跟其他任何一个投保人完全相同）。</li>\n</ul>\n<p><code>tiv_2016</code> 四舍五入的 <strong>两位小数</strong> 。</p>\n<p>查询结果格式如下例所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Insurance 表：</span></span>\n<span class="line"><span>+-----+----------+----------+-----+-----+</span></span>\n<span class="line"><span>| pid | tiv_2015 | tiv_2016 | lat | lon |</span></span>\n<span class="line"><span>+-----+----------+----------+-----+-----+</span></span>\n<span class="line"><span>| 1   | 10       | 5        | 10  | 10  |</span></span>\n<span class="line"><span>| 2   | 20       | 20       | 20  | 20  |</span></span>\n<span class="line"><span>| 3   | 10       | 30       | 20  | 20  |</span></span>\n<span class="line"><span>| 4   | 10       | 40       | 40  | 40  |</span></span>\n<span class="line"><span>+-----+----------+----------+-----+-----+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+----------+</span></span>\n<span class="line"><span>| tiv_2016 |</span></span>\n<span class="line"><span>+----------+</span></span>\n<span class="line"><span>| 45.00    |</span></span>\n<span class="line"><span>+----------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>表中的第一条记录和最后一条记录都满足两个条件。</span></span>\n<span class="line"><span>tiv_2015 值为 10 与第三条和第四条记录相同，且其位置是唯一的。</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>第二条记录不符合任何一个条件。其 tiv_2015 与其他投保人不同，并且位置与第三条记录相同，这也导致了第三条记录不符合题目要求。</span></span>\n<span class="line"><span>因此，结果是第一条记录和最后一条记录的 tiv_2016 之和，即 45 。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:1.56,words:467},t:"585. 2016年的投资",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/586.%E8%AE%A2%E5%8D%95%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AE%A2%E6%88%B7.html",{loader:()=>a.e(65703).then(a.bind(a,17447)),meta:{e:'\n<blockquote>\n<p>表: <code>Orders</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-----------------+----------+</span></span>\n<span class="line"><span>| Column Name     | Type     |</span></span>\n<span class="line"><span>+-----------------+----------+</span></span>\n<span class="line"><span>| order_number    | int      |</span></span>\n<span class="line"><span>| customer_number | int      |</span></span>\n<span class="line"><span>+-----------------+----------+</span></span>\n<span class="line"><span>在 SQL 中，Order_number是该表的主键。</span></span>\n<span class="line"><span>此表包含关于订单ID和客户ID的信息。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找下了 <strong>最多订单</strong> 的客户的 <code>customer_number</code> 。</p>\n<p>测试用例生成后， <strong>恰好有一个客户</strong> 比任何其他客户下了更多的订单。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Orders 表:</span></span>\n<span class="line"><span>+--------------+-----------------+</span></span>\n<span class="line"><span>| order_number | customer_number |</span></span>\n<span class="line"><span>+--------------+-----------------+</span></span>\n<span class="line"><span>| 1            | 1               |</span></span>\n<span class="line"><span>| 2            | 2               |</span></span>\n<span class="line"><span>| 3            | 3               |</span></span>\n<span class="line"><span>| 4            | 3               |</span></span>\n<span class="line"><span>+--------------+-----------------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+-----------------+</span></span>\n<span class="line"><span>| customer_number |</span></span>\n<span class="line"><span>+-----------------+</span></span>\n<span class="line"><span>| 3               |</span></span>\n<span class="line"><span>+-----------------+</span></span>\n<span class="line"><span>解释: </span></span>\n<span class="line"><span>customer_number 为 \'3\' 的顾客有两个订单，比顾客 \'1\' 或者 \'2\' 都要多，因为他们只有一个订单。</span></span>\n<span class="line"><span>所以结果是该顾客的 customer_number ，也就是 3 。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>进阶：</strong> 如果有多位顾客订单数并列最多，你能找到他们所有的 <code>customer_number</code> 吗？</p>\n</blockquote>',r:{minutes:.72,words:217},t:"586. 订单最多的客户",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/595.%E5%A4%A7%E7%9A%84%E5%9B%BD%E5%AE%B6.html",{loader:()=>a.e(58201).then(a.bind(a,49094)),meta:{e:'\n<blockquote>\n<p><code>World</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>| continent   | varchar |</span></span>\n<span class="line"><span>| area        | int     |</span></span>\n<span class="line"><span>| population  | int     |</span></span>\n<span class="line"><span>| gdp         | bigint  |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>name 是该表的主键（具有唯一值的列）。</span></span>\n<span class="line"><span>这张表的每一行提供：国家名称、所属大陆、面积、人口和 GDP 值。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果一个国家满足下述两个条件之一，则认为该国是 <strong>大国</strong> ：</p>\n<ul>\n<li>面积至少为 300 万平方公里（即，<code>3000000 km2</code>），或者</li>\n<li>人口至少为 2500 万（即 <code>25000000</code>）</li>\n</ul>\n<p>编写解决方案找出 <strong>大国</strong> 的国家名称、人口和面积。</p>\n<p>按 <strong>任意顺序</strong> 返回结果表。</p>\n<p>返回结果格式如下例所示。</p>\n<p><strong>示例：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>World 表：</span></span>\n<span class="line"><span>+-------------+-----------+---------+------------+--------------+</span></span>\n<span class="line"><span>| name        | continent | area    | population | gdp          |</span></span>\n<span class="line"><span>+-------------+-----------+---------+------------+--------------+</span></span>\n<span class="line"><span>| Afghanistan | Asia      | 652230  | 25500100   | 20343000000  |</span></span>\n<span class="line"><span>| Albania     | Europe    | 28748   | 2831741    | 12960000000  |</span></span>\n<span class="line"><span>| Algeria     | Africa    | 2381741 | 37100000   | 188681000000 |</span></span>\n<span class="line"><span>| Andorra     | Europe    | 468     | 78115      | 3712000000   |</span></span>\n<span class="line"><span>| Angola      | Africa    | 1246700 | 20609294   | 100990000000 |</span></span>\n<span class="line"><span>+-------------+-----------+---------+------------+--------------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+-------------+------------+---------+</span></span>\n<span class="line"><span>| name        | population | area    |</span></span>\n<span class="line"><span>+-------------+------------+---------+</span></span>\n<span class="line"><span>| Afghanistan | 25500100   | 652230  |</span></span>\n<span class="line"><span>| Algeria     | 37100000   | 2381741 |</span></span>\n<span class="line"><span>+-------------+------------+---------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.7,words:211},t:"595. 大的国家",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/596.%E8%B6%85%E8%BF%87%205%20%E5%90%8D%E5%AD%A6%E7%94%9F%E7%9A%84%E8%AF%BE.html",{loader:()=>a.e(11087).then(a.bind(a,58253)),meta:{e:'\n<blockquote>\n<p>表: <code>Courses</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| student     | varchar |</span></span>\n<span class="line"><span>| class       | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>(student, class)是该表的主键（不同值的列的组合）。</span></span>\n<span class="line"><span>该表的每一行表示学生的名字和他们注册的班级。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 <strong>至少有 5 个学生</strong> 的所有班级。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Courses table:</span></span>\n<span class="line"><span>+---------+----------+</span></span>\n<span class="line"><span>| student | class    |</span></span>\n<span class="line"><span>+---------+----------+</span></span>\n<span class="line"><span>| A       | Math     |</span></span>\n<span class="line"><span>| B       | English  |</span></span>\n<span class="line"><span>| C       | Math     |</span></span>\n<span class="line"><span>| D       | Biology  |</span></span>\n<span class="line"><span>| E       | Math     |</span></span>\n<span class="line"><span>| F       | Computer |</span></span>\n<span class="line"><span>| G       | Math     |</span></span>\n<span class="line"><span>| H       | Math     |</span></span>\n<span class="line"><span>| I       | Math     |</span></span>\n<span class="line"><span>+---------+----------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+---------+ </span></span>\n<span class="line"><span>| class   | </span></span>\n<span class="line"><span>+---------+ </span></span>\n<span class="line"><span>| Math    | </span></span>\n<span class="line"><span>+---------+</span></span>\n<span class="line"><span>解释: </span></span>\n<span class="line"><span>-数学课有 6 个学生，所以我们包括它。</span></span>\n<span class="line"><span>-英语课有 1 名学生，所以我们不包括它。</span></span>\n<span class="line"><span>-生物课有 1 名学生，所以我们不包括它。</span></span>\n<span class="line"><span>-计算机课有 1 个学生，所以我们不包括它。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.68,words:203},t:"596. 超过 5 名学生的课",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/601.%E4%BD%93%E8%82%B2%E9%A6%86%E7%9A%84%E4%BA%BA%E6%B5%81%E9%87%8F.html",{loader:()=>a.e(42890).then(a.bind(a,79090)),meta:{e:'\n<blockquote>\n<p>表：<code>Stadium</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+---------------+---------+</span></span>\n<span class="line"><span>| Column Name   | Type    |</span></span>\n<span class="line"><span>+---------------+---------+</span></span>\n<span class="line"><span>| id            | int     |</span></span>\n<span class="line"><span>| visit_date    | date    |</span></span>\n<span class="line"><span>| people        | int     |</span></span>\n<span class="line"><span>+---------------+---------+</span></span>\n<span class="line"><span>visit_date 是该表中具有唯一值的列。</span></span>\n<span class="line"><span>每日人流量信息被记录在这三列信息中：序号 (id)、日期 (visit_date)、 人流量 (people)</span></span>\n<span class="line"><span>每天只有一行记录，日期随着 id 的增加而增加</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案找出每行的人数大于或等于 <code>100</code> 且 <code>id</code> 连续的三行或更多行记录。</p>\n<p>返回按 <code>visit_date</code> <strong>升序排列</strong> 的结果表。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Stadium 表:</span></span>\n<span class="line"><span>+------+------------+-----------+</span></span>\n<span class="line"><span>| id   | visit_date | people    |</span></span>\n<span class="line"><span>+------+------------+-----------+</span></span>\n<span class="line"><span>| 1    | 2017-01-01 | 10        |</span></span>\n<span class="line"><span>| 2    | 2017-01-02 | 109       |</span></span>\n<span class="line"><span>| 3    | 2017-01-03 | 150       |</span></span>\n<span class="line"><span>| 4    | 2017-01-04 | 99        |</span></span>\n<span class="line"><span>| 5    | 2017-01-05 | 145       |</span></span>\n<span class="line"><span>| 6    | 2017-01-06 | 1455      |</span></span>\n<span class="line"><span>| 7    | 2017-01-07 | 199       |</span></span>\n<span class="line"><span>| 8    | 2017-01-09 | 188       |</span></span>\n<span class="line"><span>+------+------------+-----------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------+------------+-----------+</span></span>\n<span class="line"><span>| id   | visit_date | people    |</span></span>\n<span class="line"><span>+------+------------+-----------+</span></span>\n<span class="line"><span>| 5    | 2017-01-05 | 145       |</span></span>\n<span class="line"><span>| 6    | 2017-01-06 | 1455      |</span></span>\n<span class="line"><span>| 7    | 2017-01-07 | 199       |</span></span>\n<span class="line"><span>| 8    | 2017-01-09 | 188       |</span></span>\n<span class="line"><span>+------+------------+-----------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>id 为 5、6、7、8 的四行 id 连续，并且每行都有 &gt;= 100 的人数记录。</span></span>\n<span class="line"><span>请注意，即使第 7 行和第 8 行的 visit_date 不是连续的，输出也应当包含第 8 行，因为我们只需要考虑 id 连续的记录。</span></span>\n<span class="line"><span>不输出 id 为 2 和 3 的行，因为至少需要三条 id 连续的记录。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:1.33,words:400},t:"601. 体育馆的人流量",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/602.%E5%A5%BD%E5%8F%8B%E7%94%B3%E8%AF%B7%20II%20%EF%BC%9A%E8%B0%81%E6%9C%89%E6%9C%80%E5%A4%9A%E7%9A%84%E5%A5%BD%E5%8F%8B.html",{loader:()=>a.e(13836).then(a.bind(a,47643)),meta:{e:'\n<blockquote>\n<p><code>RequestAccepted</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+----------------+---------+</span></span>\n<span class="line"><span>| Column Name    | Type    |</span></span>\n<span class="line"><span>+----------------+---------+</span></span>\n<span class="line"><span>| requester_id   | int     |</span></span>\n<span class="line"><span>| accepter_id    | int     |</span></span>\n<span class="line"><span>| accept_date    | date    |</span></span>\n<span class="line"><span>+----------------+---------+</span></span>\n<span class="line"><span>(requester_id, accepter_id) 是这张表的主键(具有唯一值的列的组合)。</span></span>\n<span class="line"><span>这张表包含发送好友请求的人的 ID ，接收好友请求的人的 ID ，以及好友请求通过的日期。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，找出拥有最多的好友的人和他拥有的好友数目。</p>\n<p>生成的测试用例保证拥有最多好友数目的只有 1 个人。</p>\n<p>查询结果格式如下例所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>RequestAccepted 表：</span></span>\n<span class="line"><span>+--------------+-------------+-------------+</span></span>\n<span class="line"><span>| requester_id | accepter_id | accept_date |</span></span>\n<span class="line"><span>+--------------+-------------+-------------+</span></span>\n<span class="line"><span>| 1            | 2           | 2016/06/03  |</span></span>\n<span class="line"><span>| 1            | 3           | 2016/06/08  |</span></span>\n<span class="line"><span>| 2            | 3           | 2016/06/08  |</span></span>\n<span class="line"><span>| 3            | 4           | 2016/06/09  |</span></span>\n<span class="line"><span>+--------------+-------------+-------------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+----+-----+</span></span>\n<span class="line"><span>| id | num |</span></span>\n<span class="line"><span>+----+-----+</span></span>\n<span class="line"><span>| 3  | 3   |</span></span>\n<span class="line"><span>+----+-----+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>编号为 3 的人是编号为 1 ，2 和 4 的人的好友，所以他总共有 3 个好友，比其他人都多。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**进阶：**在真实世界里，可能会有多个人拥有好友数相同且最多，你能找到所有这些人吗？</p>\n</blockquote>',r:{minutes:.96,words:288},t:"602. 好友申请 II ：谁有最多的好友",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/607.%E9%94%80%E5%94%AE%E5%91%98.html",{loader:()=>a.e(74069).then(a.bind(a,77880)),meta:{e:'\n<blockquote>\n<p>表: <code>SalesPerson</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-----------------+---------+</span></span>\n<span class="line"><span>| Column Name     | Type    |</span></span>\n<span class="line"><span>+-----------------+---------+</span></span>\n<span class="line"><span>| sales_id        | int     |</span></span>\n<span class="line"><span>| name            | varchar |</span></span>\n<span class="line"><span>| salary          | int     |</span></span>\n<span class="line"><span>| commission_rate | int     |</span></span>\n<span class="line"><span>| hire_date       | date    |</span></span>\n<span class="line"><span>+-----------------+---------+</span></span>\n<span class="line"><span>sales_id 是该表的主键列(具有唯一值的列)。</span></span>\n<span class="line"><span>该表的每一行都显示了销售人员的姓名和 ID ，以及他们的工资、佣金率和雇佣日期。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表: <code>Company</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| com_id      | int     |</span></span>\n<span class="line"><span>| name        | varchar |</span></span>\n<span class="line"><span>| city        | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>com_id 是该表的主键列(具有唯一值的列)。</span></span>\n<span class="line"><span>该表的每一行都表示公司的名称和 ID ，以及公司所在的城市。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表: <code>Orders</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| order_id    | int  |</span></span>\n<span class="line"><span>| order_date  | date |</span></span>\n<span class="line"><span>| com_id      | int  |</span></span>\n<span class="line"><span>| sales_id    | int  |</span></span>\n<span class="line"><span>| amount      | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>order_id 是该表的主键列(具有唯一值的列)。</span></span>\n<span class="line"><span>com_id 是 Company 表中 com_id 的外键（reference 列）。</span></span>\n<span class="line"><span>sales_id 是来自销售员表 sales_id 的外键（reference 列）。</span></span>\n<span class="line"><span>该表的每一行包含一个订单的信息。这包括公司的 ID 、销售人员的 ID 、订单日期和支付的金额。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，找出没有任何与名为 <strong>“RED”</strong> 的公司相关的订单的所有销售人员的姓名。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>返回结果格式如下所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>SalesPerson 表:</span></span>\n<span class="line"><span>+----------+------+--------+-----------------+------------+</span></span>\n<span class="line"><span>| sales_id | name | salary | commission_rate | hire_date  |</span></span>\n<span class="line"><span>+----------+------+--------+-----------------+------------+</span></span>\n<span class="line"><span>| 1        | John | 100000 | 6               | 4/1/2006   |</span></span>\n<span class="line"><span>| 2        | Amy  | 12000  | 5               | 5/1/2010   |</span></span>\n<span class="line"><span>| 3        | Mark | 65000  | 12              | 12/25/2008 |</span></span>\n<span class="line"><span>| 4        | Pam  | 25000  | 25              | 1/1/2005   |</span></span>\n<span class="line"><span>| 5        | Alex | 5000   | 10              | 2/3/2007   |</span></span>\n<span class="line"><span>+----------+------+--------+-----------------+------------+</span></span>\n<span class="line"><span>Company 表:</span></span>\n<span class="line"><span>+--------+--------+----------+</span></span>\n<span class="line"><span>| com_id | name   | city     |</span></span>\n<span class="line"><span>+--------+--------+----------+</span></span>\n<span class="line"><span>| 1      | RED    | Boston   |</span></span>\n<span class="line"><span>| 2      | ORANGE | New York |</span></span>\n<span class="line"><span>| 3      | YELLOW | Boston   |</span></span>\n<span class="line"><span>| 4      | GREEN  | Austin   |</span></span>\n<span class="line"><span>+--------+--------+----------+</span></span>\n<span class="line"><span>Orders 表:</span></span>\n<span class="line"><span>+----------+------------+--------+----------+--------+</span></span>\n<span class="line"><span>| order_id | order_date | com_id | sales_id | amount |</span></span>\n<span class="line"><span>+----------+------------+--------+----------+--------+</span></span>\n<span class="line"><span>| 1        | 1/1/2014   | 3      | 4        | 10000  |</span></span>\n<span class="line"><span>| 2        | 2/1/2014   | 4      | 5        | 5000   |</span></span>\n<span class="line"><span>| 3        | 3/1/2014   | 1      | 1        | 50000  |</span></span>\n<span class="line"><span>| 4        | 4/1/2014   | 1      | 4        | 25000  |</span></span>\n<span class="line"><span>+----------+------------+--------+----------+--------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| name |</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| Amy  |</span></span>\n<span class="line"><span>| Mark |</span></span>\n<span class="line"><span>| Alex |</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>根据表 orders 中的订单 \'3\' 和 \'4\' ，容易看出只有 \'John\' 和 \'Pam\' 两个销售员曾经向公司 \'RED\' 销售过。</span></span>\n<span class="line"><span>所以我们需要输出表 salesperson 中所有其他人的名字。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:1.47,words:442},t:"607. 销售员",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/608.%E6%A0%91%E8%8A%82%E7%82%B9.html",{loader:()=>a.e(97572).then(a.bind(a,22861)),meta:{e:'\n<blockquote>\n<p>表：<code>Tree</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| id          | int  |</span></span>\n<span class="line"><span>| p_id        | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>id 是该表中具有唯一值的列。</span></span>\n<span class="line"><span>该表的每行包含树中节点的 id 及其父节点的 id 信息。</span></span>\n<span class="line"><span>给定的结构总是一个有效的树。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>树中的每个节点可以是以下三种类型之一：</p>\n<ul>\n<li><strong>"Leaf"</strong>：节点是叶子节点。</li>\n<li><strong>"Root"</strong>：节点是树的根节点。</li>\n<li><strong>"lnner"</strong>：节点既不是叶子节点也不是根节点。</li>\n</ul>\n<p>编写一个解决方案来报告树中每个节点的类型。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>结果格式如下所示。</p>\n<p><strong>示例 1：</strong></p>\n<figure><figcaption>img</figcaption></figure>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Tree table:</span></span>\n<span class="line"><span>+----+------+</span></span>\n<span class="line"><span>| id | p_id |</span></span>\n<span class="line"><span>+----+------+</span></span>\n<span class="line"><span>| 1  | null |</span></span>\n<span class="line"><span>| 2  | 1    |</span></span>\n<span class="line"><span>| 3  | 1    |</span></span>\n<span class="line"><span>| 4  | 2    |</span></span>\n<span class="line"><span>| 5  | 2    |</span></span>\n<span class="line"><span>+----+------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| id | type  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| 1  | Root  |</span></span>\n<span class="line"><span>| 2  | Inner |</span></span>\n<span class="line"><span>| 3  | Leaf  |</span></span>\n<span class="line"><span>| 4  | Leaf  |</span></span>\n<span class="line"><span>| 5  | Leaf  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>节点 1 是根节点，因为它的父节点为空，并且它有子节点 2 和 3。</span></span>\n<span class="line"><span>节点 2 是一个内部节点，因为它有父节点 1 和子节点 4 和 5。</span></span>\n<span class="line"><span>节点 3、4 和 5 是叶子节点，因为它们有父节点而没有子节点。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>\n<figure><figcaption>img</figcaption></figure>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>Tree table:</span></span>\n<span class="line"><span>+----+------+</span></span>\n<span class="line"><span>| id | p_id |</span></span>\n<span class="line"><span>+----+------+</span></span>\n<span class="line"><span>| 1  | null |</span></span>\n<span class="line"><span>+----+------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| id | type  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>| 1  | Root  |</span></span>\n<span class="line"><span>+----+-------+</span></span>\n<span class="line"><span>解释：如果树中只有一个节点，则只需要输出其根属性。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**注意：**本题与 <a href="https://leetcode.cn/problems/binary-tree-nodes/" target="_blank" rel="noopener noreferrer">3054. 二叉树节点</a> 一致。</p>\n</blockquote>',r:{minutes:1.17,words:352},t:"608. 树节点",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/610.%E5%88%A4%E6%96%AD%E4%B8%89%E8%A7%92%E5%BD%A2.html",{loader:()=>a.e(96177).then(a.bind(a,54640)),meta:{e:'\n<blockquote>\n<p>表: <code>Triangle</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| x           | int  |</span></span>\n<span class="line"><span>| y           | int  |</span></span>\n<span class="line"><span>| z           | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>在 SQL 中，(x, y, z)是该表的主键列。</span></span>\n<span class="line"><span>该表的每一行包含三个线段的长度。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对每三个线段报告它们是否可以形成一个三角形。</p>\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Triangle 表:</span></span>\n<span class="line"><span>+----+----+----+</span></span>\n<span class="line"><span>| x  | y  | z  |</span></span>\n<span class="line"><span>+----+----+----+</span></span>\n<span class="line"><span>| 13 | 15 | 30 |</span></span>\n<span class="line"><span>| 10 | 20 | 15 |</span></span>\n<span class="line"><span>+----+----+----+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+----+----+----+----------+</span></span>\n<span class="line"><span>| x  | y  | z  | triangle |</span></span>\n<span class="line"><span>+----+----+----+----------+</span></span>\n<span class="line"><span>| 13 | 15 | 30 | No       |</span></span>\n<span class="line"><span>| 10 | 20 | 15 | Yes      |</span></span>\n<span class="line"><span>+----+----+----+----------+</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.51,words:152},t:"610. 判断三角形",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/619.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97.html",{loader:()=>a.e(7159).then(a.bind(a,14097)),meta:{e:'\n<blockquote>\n<p><code>MyNumbers</code> 表：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| num         | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>该表可能包含重复项（换句话说，在SQL中，该表没有主键）。</span></span>\n<span class="line"><span>这张表的每一行都含有一个整数。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>单一数字</strong> 是在 <code>MyNumbers</code> 表中只出现一次的数字。</p>\n<p>找出最大的 <strong>单一数字</strong> 。如果不存在 <strong>单一数字</strong> ，则返回 <code>null</code> 。</p>\n<p>查询结果如下例所示。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>MyNumbers 表：</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>| num |</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>| 8   |</span></span>\n<span class="line"><span>| 8   |</span></span>\n<span class="line"><span>| 3   |</span></span>\n<span class="line"><span>| 3   |</span></span>\n<span class="line"><span>| 1   |</span></span>\n<span class="line"><span>| 4   |</span></span>\n<span class="line"><span>| 5   |</span></span>\n<span class="line"><span>| 6   |</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>| num |</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>| 6   |</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>解释：单一数字有 1、4、5 和 6 。</span></span>\n<span class="line"><span>6 是最大的单一数字，返回 6 。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>MyNumbers table:</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>| num |</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>| 8   |</span></span>\n<span class="line"><span>| 8   |</span></span>\n<span class="line"><span>| 7   |</span></span>\n<span class="line"><span>| 7   |</span></span>\n<span class="line"><span>| 3   |</span></span>\n<span class="line"><span>| 3   |</span></span>\n<span class="line"><span>| 3   |</span></span>\n<span class="line"><span>+-----+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| num  |</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>| null |</span></span>\n<span class="line"><span>+------+</span></span>\n<span class="line"><span>解释：输入的表中不存在单一数字，所以返回 null 。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.72,words:217},t:"619. 只出现一次的最大数字",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/620.%E6%9C%89%E8%B6%A3%E7%9A%84%E7%94%B5%E5%BD%B1.html",{loader:()=>a.e(81706).then(a.bind(a,63908)),meta:{e:'\n<blockquote>\n<p>表：<code>cinema</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+----------------+----------+</span></span>\n<span class="line"><span>| Column Name    | Type     |</span></span>\n<span class="line"><span>+----------------+----------+</span></span>\n<span class="line"><span>| id             | int      |</span></span>\n<span class="line"><span>| movie          | varchar  |</span></span>\n<span class="line"><span>| description    | varchar  |</span></span>\n<span class="line"><span>| rating         | float    |</span></span>\n<span class="line"><span>+----------------+----------+</span></span>\n<span class="line"><span>id 是该表的主键(具有唯一值的列)。</span></span>\n<span class="line"><span>每行包含有关电影名称、类型和评级的信息。</span></span>\n<span class="line"><span>评级为 [0,10] 范围内的小数点后 2 位浮点数。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案，找出所有影片描述为 <strong>非</strong> <code>boring</code> (不无聊) 的并且 <strong>id 为奇数</strong> 的影片。</p>\n<p>返回结果按 <code>rating</code> <strong>降序排列</strong>。</p>\n<p>结果格式如下示例。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：</span></span>\n<span class="line"><span>+---------+-----------+--------------+-----------+</span></span>\n<span class="line"><span>|   id    | movie     |  description |  rating   |</span></span>\n<span class="line"><span>+---------+-----------+--------------+-----------+</span></span>\n<span class="line"><span>|   1     | War       |   great 3D   |   8.9     |</span></span>\n<span class="line"><span>|   2     | Science   |   fiction    |   8.5     |</span></span>\n<span class="line"><span>|   3     | irish     |   boring     |   6.2     |</span></span>\n<span class="line"><span>|   4     | Ice song  |   Fantacy    |   8.6     |</span></span>\n<span class="line"><span>|   5     | House card|   Interesting|   9.1     |</span></span>\n<span class="line"><span>+---------+-----------+--------------+-----------+</span></span>\n<span class="line"><span>输出：</span></span>\n<span class="line"><span>+---------+-----------+--------------+-----------+</span></span>\n<span class="line"><span>|   id    | movie     |  description |  rating   |</span></span>\n<span class="line"><span>+---------+-----------+--------------+-----------+</span></span>\n<span class="line"><span>|   5     | House card|   Interesting|   9.1     |</span></span>\n<span class="line"><span>|   1     | War       |   great 3D   |   8.9     |</span></span>\n<span class="line"><span>+---------+-----------+--------------+-----------+</span></span>\n<span class="line"><span>解释：</span></span>\n<span class="line"><span>我们有三部电影，它们的 id 是奇数:1、3 和 5。id = 3 的电影是 boring 的，所以我们不把它包括在答案中。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.77,words:232},t:"620. 有趣的电影",y:"a"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/626.%E6%8D%A2%E5%BA%A7%E4%BD%8D.html",{loader:()=>a.e(10008).then(a.bind(a,75064)),meta:{e:'<blockquote>\n<p>表: <code>Seat</code></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| Column Name | Type    |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>| id          | int     |</span></span>\n<span class="line"><span>| student     | varchar |</span></span>\n<span class="line"><span>+-------------+---------+</span></span>\n<span class="line"><span>id 是该表的主键（唯一值）列。</span></span>\n<span class="line"><span>该表的每一行都表示学生的姓名和 ID。</span></span>\n<span class="line"><span>ID 序列始终从 1 开始并连续增加。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写解决方案来交换每两个连续的学生的座位号。如果学生的数量是奇数，则最后一个学生的id不交换。</p>\n<p>按 <code>id</code> <strong>升序</strong> 返回结果表。</p>\n<p>查询结果格式如下所示。</p>\n<p><strong>示例 1:</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Seat 表:</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>| id | student |</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>| 1  | Abbot   |</span></span>\n<span class="line"><span>| 2  | Doris   |</span></span>\n<span class="line"><span>| 3  | Emerson |</span></span>\n<span class="line"><span>| 4  | Green   |</span></span>\n<span class="line"><span>| 5  | Jeames  |</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>| id | student |</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>| 1  | Doris   |</span></span>\n<span class="line"><span>| 2  | Abbot   |</span></span>\n<span class="line"><span>| 3  | Green   |</span></span>\n<span class="line"><span>| 4  | Emerson |</span></span>\n<span class="line"><span>| 5  | Jeames  |</span></span>\n<span class="line"><span>+----+---------+</span></span>\n<span class="line"><span>解释:</span></span>\n<span class="line"><span>请注意，如果学生人数为奇数，则不需要更换最后一名学生的座位。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>',r:{minutes:.75,words:225},t:"",y:"a"}}],["/Interview/Spring/Spring%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Bean%20%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html",{loader:()=>a.e(2454).then(a.bind(a,46682)),meta:{e:"\n<p>Spring 提供了四种主要的方式来实例化 Bean，这些方式允许开发者根据不同的需求灵活地创建和配置 Spring 容器中的 Bean。每种方式适用于不同的场景，下面是这四种方式的详细介绍：</p>\n<h3>1. <strong>通过构造函数实例化 Bean</strong></h3>\n<p>这是最常见的实例化 Bean 的方式，Spring 容器会通过调用 Bean 的构造函数来创建实例。</p>\n<ul>\n<li><strong>使用场景</strong>：当 Bean 需要通过构造函数传递依赖时，通常使用此方式。</li>\n<li><strong>实现方式</strong>：在 Spring 配置中，可以使用 <code>&lt;bean&gt;</code> 标签的 <code>constructor-arg</code> 子元素来指定构造函数参数。</li>\n</ul>",r:{minutes:3.26,words:978},t:"Spring 实例化 Bean 的四种方式",y:"a"}}],["/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%9841.html",{loader:()=>a.e(38581).then(a.bind(a,21391)),meta:{d:17438976e5,l:"2025年4月6日",c:["面试题","Spring"],g:["面试题","高质量"],e:'<h2>基础</h2>\n<h3>1.Spring 是什么？特性？有哪些模块？</h3>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061755544.png" alt="Spring Logo" tabindex="0" loading="lazy"><figcaption>Spring Logo</figcaption></figure>\n<p>一句话概括：<strong>Spring 是一个轻量级、非入侵式的控制反转 (IoC) 和面向切面 (AOP) 的框架。</strong></p>\n',r:{minutes:91.69,words:27507},t:"Spring面试题，41道Spring八股文",y:"a"}}],["/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90%E5%8F%8A%E6%80%BB%E7%BB%93.html",{loader:()=>a.e(49330).then(a.bind(a,20387)),meta:{e:"\n<h2>Spring IoC</h2>\n<h3>什么是Spring IoC?</h3>\n<blockquote>\n<ul>\n<li>\n<p><strong>IoC（Inversion of Control:控制反转）</strong> 是一种设计思想，而不是一个具体的技术实现</p>\n</li>\n<li>\n<p>IoC 的思想就是将原本在程序中手动创建对象的控制权，交由 Spring 框架来负责</p>\n</li>\n<li>\n<p>它是通过依赖注入实现的。</p>\n</li>\n<li>\n<p>IoC容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件或注解即可，完全不用考虑对象是如何被创建出来的。</p>\n</li>\n<li>\n<p>IoC 容器实际上就是个 Map（key，value），Map 中存放的是各种对象。</p>\n</li>\n</ul>\n</blockquote>",r:{minutes:14.8,words:4439},t:"Spring面试题及总结",y:"a"}}],["/Interview/sanfene/Java%E5%9F%BA%E7%A1%80.html",{loader:()=>a.e(98937).then(a.bind(a,84943)),meta:{a:"三分恶&沉默王二",d:17498592e5,l:"2025年6月14日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/javase-mianzhanixi-javase1.jpg" alt="面渣逆袭Java 基础篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭Java 基础篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>2.3 万字 68 张手绘图，详解 56 道 Java 基础面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/t7EYyF0VGEg1rAZut9dwSw" target="_blank" rel="noopener noreferrer">转载链接</a>，原作者：星球嘉宾三分恶，戳<a href="https://mp.weixin.qq.com/s/M-6RSRcRd3X93cR7VXpanw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:97.34,words:29202},t:"Java面试题之Java基础篇，56道Java基础八股文（2.3万字68张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java SE",y:"a"}}],["/Interview/sanfene/Java%E7%BA%BF%E7%A8%8B.html",{loader:()=>a.e(96093).then(a.bind(a,50279)),meta:{a:"三分恶&沉默王二",d:17283456e5,l:"2024年10月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/javathread-mianzhanixi-thread1.jpg" alt="面渣逆袭并发编程篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭并发编程篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>3.5 万字 145 张手绘图，详解 71 道 Java 多线程面试高频题（让天下没有难背的八股），面渣背会这些并发编程八股文，这次吊打面试官，我觉得稳了（手动 dog）。</p>\n<p>第一版作者是二哥编程星球的嘉宾三分恶，第二版由二哥结合球友们的面经+技术派+PmHub+mydb 的项目进行全新升级。更适合拿来背诵突击面试+底层原理理解。</p>',r:{minutes:146.06,words:43819},t:"Java并发编程面试题，71道Java多线程八股文（3.5万字145张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java并发编程",y:"a"}}],["/Interview/sanfene/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.html",{loader:()=>a.e(70657).then(a.bind(a,62368)),meta:{a:"三分恶",d:17498592e5,l:"2025年6月14日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/collection-mianzhanixi-collection1.jpg" alt="面渣逆袭集合框架篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭集合框架篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>14554 字 67 张手绘图，详解 29 道 Java 集合框架面试高频题（让天下没有难背的八股），面渣背会这些 Java 容器八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/ptbM0EqlnCWeWm9VdSCDLg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/SHkQ7LEOT0itt4bXMoDBPw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:58.44,words:17532},t:"Java面试题之Java集合框架篇（Java容器篇），29道Java集合框架八股文（1.4万字67张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java集合框架",y:"a"}}],["/Interview/sanfene/jvm.html",{loader:()=>a.e(40040).then(a.bind(a,89104)),meta:{a:"三分恶",d:17364672e5,l:"2025年1月10日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/jvm-mianzhanixi-jvm.jpg" alt="面渣逆袭JVM篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭JVM篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>2.3 万字 115 张手绘图，详解 54 道 Java 虚拟机面试高频题（让天下没有难背的八股），面渣背会这些 JVM 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/bHhqhl8mH3OAPt3EkaVc8Q" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/XYsEJyIo46jXhHE1sOR_0Q" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:96.33,words:28900},t:"JVM面试题，54道Java虚拟机八股文（2.3万字115张手绘图），面渣逆袭必看👍",s:"面渣逆袭-JVM",y:"a"}}],["/Interview/sanfene/linux.html",{loader:()=>a.e(89537).then(a.bind(a,96277)),meta:{a:"沉默王二",d:17330112e5,l:"2024年12月1日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<h2>1. Linux 常用命令</h2>\n<p>推荐阅读：<a href="https://javabetter.cn/pdf/linux.html" target="_blank" rel="noopener noreferrer">常用高频 Linux 速查备忘手册</a></p>\n<p>我自己常用的 Linux 命令有：</p>\n<ul>\n<li>top 用来查看系统资源</li>\n<li><code>ps -ef | grep java</code> 查看 Java 进程</li>\n<li><code>netstat</code> 查看网络连接</li>\n<li>ping 测试网络连通性</li>\n<li>find 查找文件</li>\n<li>chmod 修改文件权限</li>\n<li>kill 终止进程</li>\n<li>df 查看磁盘空间</li>\n<li>mkdir 创建目录、rm 删除文件、cp 复制文件、mv 移动文件</li>\n<li>zip 压缩文件、unzip 解压文件等等这些。</li>\n</ul>',r:{minutes:13.09,words:3926},t:"Linux面试题，1道Linux八股文（1万字2张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Linux",y:"a"}}],["/Interview/sanfene/mybatis.html",{loader:()=>a.e(79066).then(a.bind(a,38654)),meta:{a:"三分恶",d:1731024e6,l:"2024年11月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>6400 字 30 张手绘图，详解 23 道 MyBatis 面试高频题（让天下没有难背的八股），面渣背会这些 MyBatis 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/en2RgcVx52Ql3tYGLfv3Kw" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/O_5Id2o9IP4loPazJuiHng" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:34.85,words:10455},t:"MyBatis面试题，23道MyBatis八股文（6千字30张手绘图），面渣逆袭必看👍",s:"面渣逆袭-MyBatis",y:"a"}}],["/Interview/sanfene/mysql.html",{loader:()=>a.e(22393).then(a.bind(a,54707)),meta:{a:"三分恶",d:17498592e5,l:"2025年6月14日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/mysql-mianzhanixi-mysql1.jpg" alt="面渣逆袭MySQL篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭MySQL篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>5.5 万字 331 张手绘图，详解 83 道 MySQL 面试高频题（让天下没有难背的八股），面渣背会这些 MySQL 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/JFjFs_7xduCmHOegbJ-Gbg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/zSTyZ-8CFalwAYSB0PN6wA" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:229.41,words:68824},t:"MySQL面试题，83道MySQL八股文（5.5万字331张手绘图），面渣逆袭必看👍",s:"面渣逆袭-MySQL",y:"a"}}],["/Interview/sanfene/netty.html",{loader:()=>a.e(29339).then(a.bind(a,51238)),meta:{a:"沉默王二",c:["面渣逆袭"],g:["面渣逆袭"],e:'<h3>01、说说 Netty 的原理和流程</h3>\n<p>Netty 是一个基于Java NIO的高性能异步事件驱动的网络应用框架，极大简化了网络编程的复杂性。</p>\n<p>常用于构建 RPC 框架，以提升分布式服务之间的通信效率。像 Dubbo 的网络层就可以基于 Netty 来实现。</p>\n<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/netty-20240419084532.png" alt="Netty 官方架构图" tabindex="0" loading="lazy"><figcaption>Netty 官方架构图</figcaption></figure>',r:{minutes:4.13,words:1240},t:"Netty面试题，62道Netty八股文（1万字1张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Netty",y:"a"}}],["/Interview/sanfene/network.html",{loader:()=>a.e(83897).then(a.bind(a,63765)),meta:{a:"三分恶",d:17330112e5,l:"2024年12月1日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>2.2 万字 80 张手绘图，详解 63 道计算机网络面试高频题（让天下没有难背的八股），面渣背会这些计算机网络八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/FvxyiMyq0422yifcyoG8vg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/yAlErlC09GnjaVvwUo3Acg" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:107.6,words:32281},t:"计算机网络面试题，63道计算机网络八股文（2.2万字80张手绘图），面渣逆袭必看👍",s:"面渣逆袭-计算机网络",y:"a"}}],["/Interview/sanfene/os.html",{loader:()=>a.e(11581).then(a.bind(a,76652)),meta:{a:"三分恶",d:17291232e5,l:"2024年10月17日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1 万字 51 张手绘图，详解 34 道操作系统面试高频题（让天下没有难背的八股），面渣背会这些 OS 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/CYsn0M5ddDuG--mALmhsuw" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/KMGyn-FLkvzsMH06LV4OfQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:45.21,words:13562},t:"操作系统面试题，34道操作系统八股文（1万字51张手绘图），面渣逆袭必看👍",s:"面渣逆袭-操作系统",y:"a"}}],["/Interview/sanfene/redis.html",{loader:()=>a.e(81028).then(a.bind(a,26812)),meta:{a:"三分恶",d:17303328e5,l:"2024年10月31日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/redis-mianzhanixi-redis1.jpg" alt="面渣逆袭Redis篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭Redis篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>4.6 万字 286 张手绘图，详解 57 道 Redis 面试高频题（让天下没有难背的八股），面渣背会这些 Redis 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/19u34NXALB1nOlBCE6Eg-Q" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/iJtNJYgirRugNBnzxkbB4Q" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:188.33,words:56499},t:"Redis面试题，57道Redis八股文（4.6万字286张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Redis",y:"a"}}],["/Interview/sanfene/rocketmq.html",{loader:()=>a.e(78941).then(a.bind(a,43819)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1.1 万字 45 张手绘图，详解 23 道 RocketMQ 面试高频题（让天下没有难背的八股），面渣背会这些 RocketMQ 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/N6wq52pBGh8xkS-5uRcO2g" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/IvBt3tB_IWZgPjKv5WGS4A" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:44.22,words:13265},t:"消息队列面试题之RocketMQ篇，23道RocketMQ八股文（1.1万字45张手绘图），面渣逆袭必看👍",s:"面渣逆袭-RocketMQ",y:"a"}}],["/Interview/sanfene/spring.html",{loader:()=>a.e(95246).then(a.bind(a,37053)),meta:{a:"三分恶&沉默王二",d:17527104e5,l:"2025年7月17日",c:["面渣逆袭"],g:["面渣逆袭","Spring","面试题"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/spring-mianzhanixi-spring1.jpg" alt="面渣逆袭 Spring 篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭 Spring 篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>1.3 万字 63 张手绘图，详解 41 道 Spring 面试高频题（让天下没有难背的八股），面渣背会这些 Spring 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/EQge6DmgIqYITM3mAxkatg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/Y17S85ntHm_MLTZMJdtjQQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:134.05,words:40216},t:"Spring面试题，41道Spring八股文（1.3万字63张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Spring",y:"a"}}],["/Interview/sanfene/%E5%88%86%E5%B8%83%E5%BC%8F.html",{loader:()=>a.e(65507).then(a.bind(a,5468)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>8800 字 25 张手绘图，详解 12 道分布式面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/nLwHEmVGtl-2FDugMqYs3A" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/d84tWIjbcGKhwUptzkO2hQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:32.48,words:9743},t:"分布式面试题，12道分布式八股文（8千字25张手绘图），面渣逆袭必看👍",s:"面渣逆袭-分布式",y:"a"}}],["/Interview/sanfene/%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",{loader:()=>a.e(43019).then(a.bind(a,14130)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1.4 万字 33 张手绘图，详解 33 道微服务（Dubbo、Spring Cloud）面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/IgY6cU_5Xic-2KAAhxK9MA" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/S8_I9mDNh7XnnQaXJFr2CQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:53.97,words:16192},t:"微服务面试题（Dubbo、Spring Cloud），33道微服务八股文（1.4万字33张手绘图），面渣逆袭必看👍",s:"面渣逆袭-微服务",y:"a"}}],["/Interview/sanfene/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(53310).then(a.bind(a,52129)),meta:{a:"沉默王二",d:1731024e6,l:"2024年11月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:"<p>设计模式是软件工程中常用的解决特定问题的模版或者蓝图，可以帮助我们开发者以一种更加清晰、高效和可重用的方式来编写代码。通常分为三类：</p>\n<ol>\n<li><strong>创建型模式</strong>：涉及对象实例化，用于创建对象的模式，可以增加程序的灵活性和可重用性。常见的创建型模式有工厂方法、抽象工厂、单例、建造者、原型等。</li>\n<li><strong>结构型模式</strong>：涉及类和对象的组合，用于设计类和对象的结构，以便更好地实现程序的功能。常见的结构型模式有适配器、桥接、组合、装饰、外观、享元、代理等。</li>\n<li><strong>行为型模式</strong>：关注对象之间的通信，包括责任链、命令、解释器、迭代器、中介者、备忘录、观察者、状态、策略、模板方法、访问者等。</li>\n</ol>",r:{minutes:16.1,words:4829},t:"设计模式面试题，5道设计模式八股文（3000字10张手绘图），面渣逆袭必看👍",s:"面渣逆袭-设计模式",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/%E4%BA%AC%E4%B8%9C%E9%9D%A2%E8%AF%95%E9%A2%98%E5%87%86%E5%A4%87.html",{loader:()=>a.e(31769).then(a.bind(a,75690)),meta:{e:"\n<h3>1.一个标准的 Java Web 请求，从前端到数据库，都经历了哪些环节？</h3>\n<h3>面试答案示例</h3>\n<p>一个标准的 Java Web 请求从前端到数据库，大致经历以下环节：</p>\n<ol>\n<li><strong>前端发起请求</strong>\n<ul>\n<li>用户操作触发 HTTP 请求（GET/POST）。</li>\n<li>请求可携带参数、Cookie、Token 等认证信息。</li>\n</ul>\n</li>\n<li><strong>网络传输</strong>\n<ul>\n<li>请求通过 TCP/IP 到达服务器。</li>\n<li>如果有负载均衡（如 Nginx），请求先经过反向代理、SSL 解密，并分发到具体后端实例。</li>\n</ul>\n</li>\n<li><strong>Web 容器接收请求</strong>\n<ul>\n<li>Tomcat/Jetty/Undertow 解析 HTTP 请求，创建 Request/Response 对象。</li>\n<li>通过线程池分配线程处理请求。</li>\n</ul>\n</li>\n<li><strong>Spring MVC / Controller 层</strong>\n<ul>\n<li>DispatcherServlet 接收请求并分发到对应 Controller。</li>\n<li>Controller 处理请求参数并调用 Service 层。</li>\n</ul>\n</li>\n<li><strong>Service 层业务处理</strong>\n<ul>\n<li>处理核心业务逻辑。</li>\n<li>调用 DAO 层访问数据库。</li>\n<li>可以结合缓存（Redis）或异步线程池优化性能。</li>\n</ul>\n</li>\n<li><strong>DAO / 数据库访问</strong>\n<ul>\n<li>使用 MyBatis / JPA / JDBC 执行 SQL。</li>\n<li>从数据库连接池获取连接 → 执行 SQL → 返回结果 → 归还连接。</li>\n</ul>\n</li>\n<li><strong>数据库执行</strong>\n<ul>\n<li>数据库查询优化器解析 SQL，生成执行计划。</li>\n<li>从缓存或磁盘读取数据并返回结果集。</li>\n</ul>\n</li>\n<li><strong>返回前端</strong>\n<ul>\n<li>Service 层将数据封装为 DTO/VO 返回 Controller。</li>\n<li>Controller 以 JSON/XML 响应给前端。</li>\n<li>前端接收数据并进行渲染。</li>\n</ul>\n</li>\n<li><strong>可选优化环节</strong>\n<ul>\n<li><strong>缓存优化</strong>：先查 Redis，减少数据库访问。</li>\n<li><strong>异步消息</strong>：通过 RabbitMQ/Kafka 异步处理耗时任务。</li>\n<li><strong>监控与日志</strong>：AOP 日志、链路追踪（Sleuth/Zipkin/SkyWalking）。</li>\n</ul>\n</li>\n</ol>",r:{minutes:30.02,words:9007},t:"京东面试准备",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/",{loader:()=>a.e(42301).then(a.bind(a,3452)),meta:{r:{minutes:.05,words:14},t:"面试答题卡",i:"fa-solid fa-file-pen",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/%E4%B8%AD%E7%94%B5%E9%87%91%E4%BF%A1.html",{loader:()=>a.e(53453).then(a.bind(a,66158)),meta:{e:"\n<p>面试官：你先做个自我介绍</p>\n<blockquote>\n<p>巴拉巴拉巴拉</p>\n</blockquote>\n<p>面试官：好，我看着你熟悉多线程并发，咱们聊一下线程的生命周期都有哪些？</p>\n<blockquote>\n<p><strong>1.线程的生命周期？</strong></p>\n<p>Java 线程的生命周期主要包括 <strong>新建、就绪、运行、等待/阻塞、终止</strong> 五种状态。</p>\n<ul>\n<li><code>NEW</code>：对象创建但未启动。</li>\n<li><code>RUNNABLE</code>：已启动，等待 CPU 调度。</li>\n<li><code>WAITING/TIMED_WAITING/BLOCKED</code>：线程等待条件满足或获取锁。</li>\n<li><code>TERMINATED</code>：线程执行完成或异常退出。</li>\n</ul>\n</blockquote>",r:{minutes:6.42,words:1926},t:"中电金信",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%B0%E5%BD%95.html",{loader:()=>a.e(43053).then(a.bind(a,23423)),meta:{e:"\n<h1>SpringBoot</h1>\n<h3>1.SpringBoot里面有哪些重要的注解？还有一个配置相关的注解是哪个？</h3>\n<ul>\n<li><strong>依赖注入与装配</strong>：<code>@Autowired</code>、<code>@Qualifier</code>、<code>@Value</code>、<code>@Scope</code></li>\n<li><strong>Bean 定义与配置导入</strong>：<code>@Bean</code>、<code>@Import</code>、</li>\n<li><strong>Web 控制器与请求映射</strong>：<code>@Controller</code>、<code>@RestController</code>、<code>@RequestMapping</code>、<code>@GetMapping</code>、<code>@PostMapping</code>、<code>@PutMapping</code>、<code>@DeleteMapping</code>、<code>@PathVariable</code>、<code>@RequestParam</code>、<code>@RequestBody</code>、<code>@ResponseBody</code>、<code>@ControllerAdvice</code>、<code>@ExceptionHandler</code></li>\n<li><strong>业务逻辑层</strong>：<code>@Service</code></li>\n<li><strong>组件标识</strong>：<code>@Component</code></li>\n<li><strong>数据访问层</strong>：<code>@Repository</code></li>\n<li><strong>事务管理</strong>：<code>@Transactional</code>、<code>@EnableTransactionManagement</code></li>\n<li><strong>AOP 面向切面</strong>：<code>@Aspect</code>、<code>@Before</code>、<code>@After</code>、<code>@Around</code>、<code>@AfterReturning</code>、<code>@AfterThrowing</code>、<code>@Pointcut</code></li>\n<li><strong>Spring Boot 启动与配置</strong>：<code>@SpringBootApplication</code>、<code>@EnableAutoConfiguration</code>、<code>@ConfigurationProperties</code>、<code>@EnableConfigurationProperties</code>、<code>@Configuration</code></li>\n<li><strong>测试相关</strong>：<code>@SpringBootTest</code></li>\n</ul>",r:{minutes:.41,words:123},t:"Java",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html",{loader:()=>a.e(90577).then(a.bind(a,57630)),meta:{e:"\n<h2>1.1 定义</h2>\n<p><strong>程序计数器（Program Counter Register）</strong>：用于记录下一条 JVM 指令的执行地址行号。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>线程私有</li>\n<li>不会导致内存溢出</li>\n</ul>\n",r:{minutes:.91,words:272},t:"1. 程序计数器",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html",{loader:()=>a.e(80702).then(a.bind(a,95098)),meta:{e:"\n<h2>2.1 定义</h2>\n<p>虚拟机栈为每个线程分配的内存区域，由多个栈帧组成。每个栈帧对应一次方法调用时所需的内存。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>栈大小可调整，超出限制会抛出 <code>StackOverflowError</code>。</li>\n<li>栈空间可以动态扩展，但无法收缩。</li>\n</ul>\n<h2>2.2 内存结构</h2>\n<ul>\n<li>虚拟机栈包含多个栈帧，每个栈帧保存当前方法的局部变量表、操作数栈、动态链接、方法出口等信息。</li>\n</ul>\n<h2>2.3 线程切换</h2>\n<ul>\n<li>每个线程有独立的虚拟机栈，确保数据隔离，线程切换时能够正确恢复执行位置。</li>\n</ul>",r:{minutes:1.34,words:403},t:"2. 虚拟机栈",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html",{loader:()=>a.e(58408).then(a.bind(a,92159)),meta:{e:"\n<figure><figcaption>本地方法栈</figcaption></figure>\n<h2>3.1 作用</h2>\n<p>本地方法栈用于执行本地方法（由 C、C++ 等编写），通过 Java Native Interface（JNI）与 Java 程序交互，主要用于与底层系统进行交互。</p>\n<h2>3.2 与 Java 虚拟机栈的区别</h2>\n<ul>\n<li>虚拟机栈用于执行 Java 方法，而本地方法栈用于执行本地方法。</li>\n</ul>\n<h2>3.3 栈帧结构</h2>\n<ul>\n<li>本地方法栈的栈帧结构与虚拟机栈类似，但栈帧中包含本地方法的特定信息，如参数和返回值。</li>\n</ul>",r:{minutes:.69,words:208},t:"3. 本地方法栈",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html",{loader:()=>a.e(66791).then(a.bind(a,57632)),meta:{e:"\n<h2>4.1 定义</h2>\n<p>堆（Heap）是 JVM 中用于存储对象实例的内存区域。所有通过 <code>new</code> 关键字创建的对象都会分配到堆内存中。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>线程共享：所有线程都可以访问堆内存中的对象。</li>\n<li>垃圾回收：堆内存支持垃圾回收，自动回收不再使用的对象。</li>\n</ul>\n<h2>4.2 堆内存溢出</h2>\n<p><strong>堆内存溢出</strong>（Heap OutOfMemoryError）通常发生在堆内存中对象过多，超出了容量限制。可以通过指定堆内存大小（如 <code>-Xmx8m</code>）来避免溢出。</p>",r:{minutes:.68,words:204},t:"4. 堆",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html",{loader:()=>a.e(50460).then(a.bind(a,85912)),meta:{e:"\n<figure><figcaption>方法区</figcaption></figure>\n<h2>5.1 定义</h2>\n<p>方法区用于存储类结构信息、运行时常量池、静态变量以及即时编译器编译后的代码等。</p>\n<h2>5.2 特点</h2>\n<ul>\n<li>方法区是线程共享的，存储类的信息、方法、字段、运行时常量池等数据。</li>\n<li>数据在类加载时存入方法区，是静态数据区域。</li>\n</ul>\n<h2>5.3 内存溢出</h2>\n<p>方法区内存溢出（OutOfMemoryError）通常发生在加载大量类时，导致空间不足。</p>\n<ul>\n<li>在 JDK 1.8 之前，方法区被称为<strong>永久代</strong>，可以通过 <code>-XX:MaxPermSize</code> 参数调整大小。</li>\n<li>在 JDK 1.8 之后，方法区被改为<strong>元空间</strong>，通过 <code>-XX:MaxMetaspaceSize</code> 参数调整大小。</li>\n</ul>",r:{minutes:5.44,words:1633},t:"5 方法区",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html",{loader:()=>a.e(92133).then(a.bind(a,94696)),meta:{e:"\n<h2>6.1 什么是直接内存？</h2>\n<h3>6.1.1 直接内存的定义</h3>\n<blockquote>\n<p>直接内存（Direct Memory）是一种特殊的内存区域，常见于 Java NIO（New Input/Output）操作中，用作数据缓冲区。</p>\n</blockquote>\n<figure><figcaption>不使用直接内存</figcaption></figure>\n<figure><figcaption>使用直接内存</figcaption></figure>\n<h3>6.1.2 直接内存的特点</h3>\n<ul>\n<li>\n<p>性能优势：直接内存不需要在 Java 堆和操作系统内存之间频繁复制数据，读写性能高。</p>\n</li>\n<li>\n<p>管理方式：直接内存由操作系统分配和回收，不受 JVM 垃圾回收（GC）管理。</p>\n</li>\n<li>\n<p>使用代价：分配和回收的成本较高，需要谨慎管理，否则容易导致内存泄漏。</p>\n</li>\n</ul>",r:{minutes:3.05,words:916},t:"6.直接内存",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/",{loader:()=>a.e(24321).then(a.bind(a,98318)),meta:{d:17522784e5,l:"2025年7月12日",c:["JVM"],g:["目录"],e:"\n",r:{minutes:.07,words:22},t:"JVM 系列一命速通",i:"fa-solid fa-microchip",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html",{loader:()=>a.e(14724).then(a.bind(a,81667)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"<blockquote>\n<p>摘要\nlist中存储实例对象，将list中实例对象的两个属性提取出来组成一个新的map</p>\n</blockquote>\n",r:{minutes:7.03,words:2110},t:"Java Stream API",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html",{loader:()=>a.e(18554).then(a.bind(a,51559)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>OS：有一个抽象方法，方法体是传入的，参数也是传入的。类Vue插槽</p>\n",r:{minutes:5.14,words:1542},t:"函数式接口",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html",{loader:()=>a.e(66009).then(a.bind(a,64033)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>Java 8 是 Java 语言历史上一个具有里程碑意义的版本，它引入了一系列的新特性，使得 Java 语言更加现代化、简洁和强大。本文将深入探讨 Java 8 中的关键新特性，帮助你全面理解这些特性及其在实际开发中的应用。</p>\n",r:{minutes:3.72,words:1117},t:"深入理解 Java 8 新特性：从核心到实践",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html",{loader:()=>a.e(98924).then(a.bind(a,53130)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：月饼装箱还是装盒，装什么口味的，装了几个，能不能装在一起</p>\n</blockquote>\n",r:{minutes:3.51,words:1054},t:"深入理解 Java Collector",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html",{loader:()=>a.e(30822).then(a.bind(a,3190)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>前言</h2>\n<blockquote>\n<p><code>Optional</code> 是 Java 8 引入的一个容器类，专门用于处理可能为 <code>null</code> 的值。它提供了一种优雅的方式来避免 <code>NullPointerException</code>（空指针异常）并简化对值的检查和处理。<code>Optional</code> 的使用鼓励开发者显式地处理可能为空的场景，从而使代码更加健壮和可读。</p>\n</blockquote>\n",r:{minutes:3.22,words:966},t:"optional类",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html",{loader:()=>a.e(43282).then(a.bind(a,85660)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：默认方法就是给原来抽象的方法写一个默认实现，类似默认值。静态方法不依赖接口实例及其参数，之际使用<code>接口名.方法名</code>的方式使用，适用于写工具方法</p>\n</blockquote>\n",r:{minutes:2.9,words:869},t:"深入理解 Java 中的默认方法和静态方法",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html",{loader:()=>a.e(77931).then(a.bind(a,95004)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：面粉放到传送带上，做成月饼，分出五仁和枣泥，打包变成月饼礼盒</p>\n</blockquote>\n",r:{minutes:3.42,words:1027},t:"深入理解 Stream API",i:"pen-to-square",y:"a"}}],["/Java/String/Java%E4%B8%AD%E9%87%8D%E5%86%99toString.html",{loader:()=>a.e(97372).then(a.bind(a,78821)),meta:{e:'\n<p>在 Java 中，<code>toString()</code> 方法是 <code>Object</code> 类中的一个方法，所有的 Java 类都继承自 <code>Object</code> 类，因此每个类都可以使用 <code>toString()</code> 方法。默认情况下，<code>Object</code> 类的 <code>toString()</code> 方法返回的是类的名称和该对象的哈希码，例如：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> toString</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getClass</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "@"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toHexString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.27,words:682},t:"Java中重写 toString",y:"a"}}],["/Java/String/isNotEmpty%E5%92%8CisNotBlank.html",{loader:()=>a.e(5282).then(a.bind(a,92508)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<h2>主要区别</h2>\n<blockquote>\n<ul>\n<li><code>isNotEmpty</code> 非空：只检查字符串是否有长度（即不为零长度）。</li>\n<li><code>isNotBlank</code> 非空白：不仅检查长度，还检查字符串是否仅由空白字符（如空格、制表符、换行符）组成。</li>\n</ul>\n</blockquote>\n",r:{minutes:.25,words:76},t:"isNotEmpty和isNotBlank",i:"pen-to-square",y:"a"}}],["/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html",{loader:()=>a.e(31772).then(a.bind(a,35894)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["坑王"],e:"\n<h2>概述</h2>\n<blockquote>\n<p>等号比较的是变量(栈)内存中存放的对象的(堆)内存地址，用来判断两个对象的地址是否相同，即是否是指相同一个对象。</p>\n<p>equals用来比较的是两个对象的内容是否相等</p>\n</blockquote>\n<h2>基本数据类型和引用数据类型</h2>\n<blockquote>\n<p>基本类型：long,int,byte,float,double\n对象类型：Long,Integer,Byte,Float,Double其它一切java提供的，或者你自己创建的类</p>\n<p>Long,Integer,Byte,Float,Double成为包装类</p>\n</blockquote>",r:{minutes:.68,words:205},t:"equals与等号",i:"fa-brands fa-bug",y:"a"}}],["/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/BeanUtil.html",{loader:()=>a.e(44379).then(a.bind(a,52958)),meta:{e:'\n<h2>将 <code>Java </code>对象转换为 <code>Map</code></h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userMap </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> BeanUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">beanToMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userDTO, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(),</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        CopyOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setIgnoreNullValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setFieldValueEditor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((fieldName, fieldValue) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> fieldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.32,words:95},t:"BeanUtil",y:"a"}}],["/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/Java%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8C%85.html",{loader:()=>a.e(17046).then(a.bind(a,54906)),meta:{e:'\n<h2>Hutool</h2>\n<p><a href="https://www.hutool.cn/docs/#/" target="_blank" rel="noopener noreferrer">Hutool官方文档</a></p>\n',r:{minutes:.05,words:15},t:"Java常用工具包",y:"a"}}],["/Java/%E5%BC%82%E5%B8%B8/try-with-resources%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%E8%B5%84%E6%BA%90.html",{loader:()=>a.e(54726).then(a.bind(a,76566)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p><code>try-with-resources</code> 是 Java 7 引入的一种用于自动关闭资源（如文件、网络连接、数据库连接等）的机制。它通过 <code>AutoCloseable</code> 或 <code>Closeable</code> 接口实现资源的自动释放，从而避免了因为忘记关闭资源而导致的内存泄漏或资源浪费问题。</p>\n</div>\n<h3>1. 使用 <code>try-with-resources</code></h3>',r:{minutes:1.89,words:567},t:"try-with-resources",y:"a"}}],["/Java/%E6%9E%B6%E6%9E%84/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",{loader:()=>a.e(63268).then(a.bind(a,81221)),meta:{e:"\n<blockquote>\n<p>🧠 面向三年经验的 Java 后端开发者\n🎯 目标：1~2 年内具备中级架构师所需的核心能力</p>\n</blockquote>\n<hr>\n<h2>🎯 路线图总览</h2>\n<ul>\n<li>阶段一：打牢技术地基（3~6个月）</li>\n<li>阶段二：提升系统设计与架构能力（3~6个月）</li>\n<li>阶段三：主导系统设计与优化（6~12个月）</li>\n<li>阶段四：积累技术影响力与战略视角（持续）</li>\n</ul>\n<hr>\n<h2>📌 阶段一：打牢技术地基（3~6个月）</h2>\n<h3>✅ Java 核心与 JVM</h3>\n<ul>\n<li>Java 并发编程（锁机制、ThreadPoolExecutor）</li>\n<li>Java 内存模型、volatile、happens-before</li>\n<li>JVM 内存结构（堆/栈/方法区/本地内存）</li>\n<li>GC 算法（G1、CMS）、GC 日志分析</li>\n<li>Java Agent、类加载机制</li>\n</ul>",r:{minutes:2.92,words:875},t:"成为 Java 架构师学习路线图",y:"a"}}],["/Java/%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93/System%20%E7%B1%BB%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(4096).then(a.bind(a,32464)),meta:{e:"\n<p>java.lang.System 是 Java 标准库提供的一个工具类，它包含了一组 <strong>与系统交互的静态方法和标准对象引用</strong>，比如控制台输出、系统属性、环境变量、时间获取等。</p>\n<h2><strong>✅ 基本特性</strong></h2>\n<table>\n<thead>\n<tr>\n<th><strong>特性</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是 final 类</td>\n<td>不能被继承</td>\n</tr>\n<tr>\n<td>构造方法私有</td>\n<td>不能被实例化</td>\n</tr>\n<tr>\n<td>所有方法都是静态的</td>\n<td>直接通过 System.method() 使</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.39,words:716},t:"📚 JavaSystem类详解",y:"a"}}],["/Java/%E9%98%9F%E5%88%97/ArrayDeque.html",{loader:()=>a.e(99435).then(a.bind(a,23352)),meta:{e:'\n<p>在本教程中，我们将借助示例来学习ArrayDeque类及其方法。此外，我们还将学习使用ArrayDeque来实现堆栈。</p>\n<p>在Java中，我们可以使用ArrayDeque该类使用数组来实现队列和双端队列数据结构。</p>\n<h2>由ArrayDeque实现的接口</h2>\n<p>在ArrayDeque类实现这两个接口：</p>\n<ul>\n<li><a href="https://www.cainiaojc.com/java/java-queue.html" target="_blank" rel="noopener noreferrer">Java Queue接口</a></li>\n<li><a href="https://www.cainiaojc.com/java/java-deque.html" target="_blank" rel="noopener noreferrer">Java Deque接口</a></li>\n</ul>',r:{minutes:6.32,words:1896},t:"Java ArrayDeque",y:"a"}}],["/Java/%E9%9A%8F%E7%AC%94/Java%20%E4%B8%AD%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F.html",{loader:()=>a.e(64687).then(a.bind(a,38029)),meta:{e:"\n<h2>🧠 一、什么是引用类型？</h2>\n<p>在 Java 中，除了 8 种基本类型，其他都是 <strong>引用类型</strong>，包括：</p>\n<ul>\n<li>类（<code>new</code> 出来的对象）</li>\n<li>接口</li>\n<li>数组</li>\n<li>枚举</li>\n<li>字符串（虽然是特殊的，但也是引用类型）</li>\n</ul>\n<hr>\n<h2>🧩 二、Java 内存结构简要回顾</h2>\n<p>Java 的内存结构大致如下（基于 HotSpot JVM）：</p>\n<table>\n<thead>\n<tr>\n<th>区域</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>栈（Stack）</strong></td>\n<td>存放方法调用帧、局部变量表（包括引用变量）</td>\n</tr>\n<tr>\n<td><strong>堆（Heap）</strong></td>\n<td>存放所有对象实例和数组，垃圾回收主要作用于此</td>\n</tr>\n<tr>\n<td><strong>方法区（MetaSpace）</strong></td>\n<td>类信息、常量池、静态变量等</td>\n</tr>\n<tr>\n<td><strong>程序计数器</strong></td>\n<td>每个线程的执行字节码的指令地址</td>\n</tr>\n<tr>\n<td><strong>本地方法栈</strong></td>\n<td>用于调用本地方法（JNI）</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.61,words:484},t:"Java 中引用类型在内存中的存储方式",y:"a"}}],["/Java/%E9%9A%8F%E7%AC%94/Java%20%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6.html",{loader:()=>a.e(79832).then(a.bind(a,55183)),meta:{e:'\n<hr>\n<h2>🌀 一、Java 是值传递还是引用传递？</h2>\n<p>这个问题常让人困惑——<strong>Java 永远是值传递（pass by value）！</strong></p>\n<h3>👇 区分关键：</h3>\n<ul>\n<li>对于 <strong>基本类型</strong>，传的是值的副本（直接数据）。</li>\n<li>对于 <strong>引用类型</strong>，传的是对象引用的副本（对象地址的拷贝）。</li>\n</ul>\n<h3>✍️ 示例说明：</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> change</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Person</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> p) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "张三"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 改变的是堆中对象的字段 ✅</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 改变的是引用本身 ❌（只在方法内有效）</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "李四"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Person</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> person </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "原名"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">change</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(person)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 输出：张三</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.36,words:709},t:"Java 的引用传递机制，以及四种引用类型对 GC 的影响",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",{loader:()=>a.e(56171).then(a.bind(a,57710)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>序列化是将对象转换为字节流的过程，使对象能够通过网络传输，进行持久化存储或者缓存。Java提供了<code>java.io.serializable</code>接口来支持序列化，只要类实现了该接口，类的实例化对象就能进行序列化。</p>\n<p>反序列化是将字节流重新转化为对象的过程，即从存储中读取数据并重新创建对象。</p>\n<p>每一个实现序列化接口的类都要定义一个<code>serialVersionUID</code>，用于反序列化时验证版本一致性。版本不匹配会导致反序列化失败。若不指定<code>serialVersionUID</code>，Java会根据类的定义自动hash生成一个。不需要进行序列化的成员属性变量可使用<code>transient</code>关键字修饰。</p>\n<p>Java中对应序列化，反序列化机制在java.io包中在顶级父类下封装了ObjectOutputStream类，作用是将Java对象的原始数据类型以流的方式写出到文件,实现对象的持久存储；ObjectInputStream类，作用是把文件中保存的对象,以流的方式读取出来使用。</p>\n<p>Java中默认序列化框架<code>JDK Serializable</code>比较慢，对于大规模分布式系统，选择更加高效的序列化框架（FST， Kryo，Protocol buffer，Thrift，Hessian）</p>\n<p>在身份验证，文件读写，数据传输等功能处，在未对反序列化接口做访问控制，未对序列化数据做加密和签名，加密密钥使用硬编码（如Shiro 1.2.4），使用不安全的反序列化框架库（如Fastjson 1.2.24）或函数的情况下，由于序列化数据可被用户控制，攻击者可以精心构造恶意的序列化数据（执行特定代码或命令的数据）传递给应用程序，在应用程序反序列化对象时执行攻击者构造的恶意代码，达到攻击者的目的。</p>\n</div>',r:{minutes:1.85,words:555},t:"1.序列化与反序列化",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",{loader:()=>a.e(87073).then(a.bind(a,25579)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["了解"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">相关信息</p>\n<p><code>序列化面试题补充，了解即可</code>在实际项目中使用 <strong>FST (Fast Serialization)</strong> 进行序列化和反序列化时，主要的目的是提升性能，尤其是在处理大量数据或者频繁进行对象存取的场景中。以下是一些常见的使用场景和最佳实践。</p>\n</div>\n',r:{minutes:3.98,words:1194},t:"1.补充-FST框架使用实例",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html",{loader:()=>a.e(46338).then(a.bind(a,29624)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3><strong>口述稿</strong></h3>\n",r:{minutes:4.72,words:1417},t:"10.Java内部类及作用",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",{loader:()=>a.e(22819).then(a.bind(a,56306)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<h3>口述稿</h3>\n<p><strong>面试官提问：请简要讲一下 Java 8 的新特性。</strong></p>\n<p>Java 8 引入了很多重要的新特性，增强了语言的功能和性能，以下是几个核心特性：</p>\n",r:{minutes:3.49,words:1047},t:"11.Java8新特性",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(43065).then(a.bind(a,30239)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<p><strong>面试官：请简要说明一下 JDK 和 JRE 之间的区别。</strong></p>\n<p><strong>回答：</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>"好的，JDK（Java Development Kit）和 JRE（Java Runtime Environment）是 Java 开发和运行中两个非常重要的组件。它们之间有一些关键的区别，下面我来详细说明。</p>\n<p>首先，<strong>JDK</strong> 是 Java 开发工具包，它是为开发者设计的。JDK 不仅包含了 JRE，而且还提供了开发 Java 程序所需的各种工具，比如 <strong>Java 编译器（javac）</strong>、<strong>调试工具（jdb）</strong>、以及 <strong>文档生成工具（javadoc）</strong> 等。因此，<strong>JDK 是一个完整的开发环境</strong>，如果我们需要编写、编译、调试、执行 Java 程序，都需要用到 JDK。</p>\n<p>而 <strong>JRE</strong> 是 Java 运行环境，主要用于 <strong>运行 Java 程序</strong>。它包含了 Java 虚拟机（JVM）和 Java 类库等基础运行时环境，但是不包括开发工具。因此，JRE 主要是为用户提供一个能够运行 Java 应用的环境，但它 <strong>不包含编译 Java 程序的功能</strong>。</p>\n<p>简单来说，<strong>JDK 包含了 JRE</strong>，所以如果你是开发人员，通常需要安装 JDK，因为它不仅可以用来运行 Java 程序，还可以进行开发和编译。而 <strong>JRE 主要是为了运行 Java 程序而设计</strong>，如果你只是需要运行一个 Java 应用，那么安装 JRE 就足够了。</p>\n<p>所以总结一下：<strong>JDK 是用于开发 Java 应用程序的工具包，包含了 JRE 和开发工具</strong>；而 <strong>JRE 是用于运行 Java 程序的环境</strong>，不包含开发工具。"</p>\n</div>',r:{minutes:3.37,words:1011},t:"12.JDK和JRE之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html",{loader:()=>a.e(69027).then(a.bind(a,22059)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<p><strong>Java开发工具</strong></p>\n<ul>\n<li><strong>javac</strong>：Java 编译器，负责将 Java 源代码编译成字节码 （.class 文件）。</li>\n<li><strong>java</strong>：运行 Java 应用程序的命令，使用 JVM 来解释并执行编译后的字节码文件。</li>\n<li><strong>javadoc</strong>：生成 API 文档的工具，能够根据源代码中的注释生成 HTML 格式的文档。</li>\n<li><strong>jar</strong>：用于创建和管理 JAR 文件的工具，可以将多个 .class 文件打包为单一文件，便于分发和管理。</li>\n<li><strong>jdb</strong>：Java 调试工具，用于在命令行中调试 Java 应用程序，支持断点设置、变量查看等功能。</li>\n</ul>",r:{minutes:1.59,words:476},t:"13.使用过哪些JDK开发工具",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html",{loader:()=>a.e(58307).then(a.bind(a,48676)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>hashCode</code>、<code>equals</code> 和 <code>==</code> 是 Java 中三个非常重要的概念，它们在对象比较和哈希结构中扮演着不同的角色。下面我来详细说明它们之间的区别。</p>\n<p>首先，<code>==</code> 是 Java 中用于比较对象引用是否相等的操作符。它检查的是两个对象在<code>内存中的地址</code>是否相同，也就是说，<code>==</code> 判断的是两个对象是否指向同一个内存位置。如果两个对象的引用指向的是同一个对象，那么 <code>==</code> 返回 <code>true</code>；如果指向不同的对象，返回 <code>false</code>。</p>\n<p>而 <code>equals</code> 是 <code>Object</code> 类中定义的方法，它用来比较两个对象的内容是否相等。默认情况下，<code>equals</code> 方法会比较对象的内存地址（类似于 <code>==</code> 的行为），但通常我们会在自定义类中重写 <code>equals</code> 方法，以实现对对象内容的比较。比如在 <code>String</code> 类中，<code>equals</code> 方法比较的是字符串的值，而不是它们在内存中的地址。因此，<code>equals</code> 是一种更为常见的内容比较方式，尤其是在集合操作中。</p>\n<p>接下来是 <code>hashCode</code>，它是每个对象的哈希值，用于哈希存储结构中的对象查找和存储优化。<code>hashCode</code> 返回一个整数值，表示对象的哈希地址，它用于加速对象在哈希集合（如 <code>HashMap</code>、<code>HashSet</code>）中的查找。当我们将对象插入这些集合时，<code>hashCode</code> 被用来快速确定对象的存储位置。如果两个对象的 <code>hashCode</code> 不同，它们一定不相等（<code>equals</code> 返回 <code>false</code>）。但需要注意的是，<code>hashCode</code> 相同的对象不一定通过 <code>equals</code> 比较为相等。</p>\n<p>总结一下它们之间的关系：</p>\n<ul>\n<li><code>==</code> 比较的是对象的引用，判断它们是否指向同一个内存地址。</li>\n<li><code>equals</code> 比较的是对象的内容，判断它们的内容是否相等（需要根据具体实现来决定）。</li>\n<li><code>hashCode</code> 是用于哈希结构中对象查找和存储的优化工具，通常需要与 <code>equals</code> 配合使用，以保证哈希结构的正确性。</li>\n</ul>\n<p>简单来说，<code>==</code> 是比较对象的引用，<code>equals</code> 是比较对象的内容，而 <code>hashCode</code> 是为了提高哈希结构效率所使用的哈希值。</p>\n</div>',r:{minutes:4.28,words:1285},t:"14.Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html",{loader:()=>a.e(84390).then(a.bind(a,68395)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<code>hashCode()</code> 和 <code>equals()</code> 方法是紧密相关的，尤其是在哈希数据结构中。根据 Java 的规范，如果两个对象通过 <code>equals()</code> 比较是相等的，它们的 <code>hashCode()</code> 必须相等。反之，<code>hashCode()</code> 相等并不意味着 <code>equals()</code> 必定相等，但通常建议避免不同对象具有相同的 <code>hashCode()</code>，以减少哈希冲突。在实现这两个方法时，通常根据对象的核心属性来重写 <code>equals()</code> 和 <code>hashCode()</code>，这样才能确保在像 <code>HashMap</code> 或 <code>HashSet</code> 这样的哈希数据结构中正常工作。</p>\n</div>',r:{minutes:3.03,words:910},t:"15.hashCode() 和equals() 之间的关系",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",{loader:()=>a.e(61812).then(a.bind(a,487)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>Java 动态代理是一种在程序运行时生成代理类并将其应用到目标对象的机制。动态代理允许我们在不修改目标类的情况下，通过代理类在方法调用前后增加额外的逻辑。它广泛应用于日志记录、权限控制、事务管理等场景。</p>\n</div>\n<h3>工作原理：</h3>\n<p>Java 动态代理主要依赖于 <code>java.lang.reflect.Proxy</code> 类和 <code>InvocationHandler</code> 接口。</p>',r:{minutes:2.98,words:894},t:"16.什么是Java中的动态代理？",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(59027).then(a.bind(a,50286)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li><strong>Java动态代理</strong>适用于实现了接口的类，内存消耗低，但性能稍逊。</li>\n<li><strong>CGLIB动态代理</strong>适用于没有接口的类，性能更好，但不能代理 <code>final</code> 类和方法，且内存消耗较大。</li>\n</ul>\n</div>\n<blockquote>\n<p>Java中的动态代理和CGLIB动态代理是两种常用的代理机制，它们都可以在运行时动态地创建代理对象，通常用于面向切面编程（AOP）和设计模式（如装饰器模式）。下面是对这两种代理机制的总结：</p>\n</blockquote>',r:{minutes:3.22,words:965},t:"17.JDK动态代理和CGLIB动态代理有什么区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",{loader:()=>a.e(45678).then(a.bind(a,35407)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>不可变类的定义</strong></p>\n</div>\n<blockquote>\n<p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p>\n</blockquote>\n',r:{minutes:1.47,words:440},t:"2.什么是 Java 中的不可变类",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(48264).then(a.bind(a,10326)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>定义</strong></p>\n</div>\n<blockquote>\n<p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p>\n<ul>\n<li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li>\n<li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误。</li>\n</ul>\n</blockquote>\n',r:{minutes:.89,words:266},t:"3.Java 中 Exception 和 Error 有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html",{loader:()=>a.e(25349).then(a.bind(a,47409)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p>在 Java 中，异常处理是确保程序健壮性和稳定性的一个关键部分。然而，不恰当的异常处理可能会导致程序出现不易察觉的错误或性能问题。因此，编写异常处理代码时需要特别注意一些细节。以下是 <strong>Java 异常处理中需要注意的地方</strong>：</p>\n</div>\n',r:{minutes:4.93,words:1478},t:"3.扩展-异常处理注意点",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html",{loader:()=>a.e(29244).then(a.bind(a,50723)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java基础"],g:["面试题","简单"],e:"\n<h3>1. <strong>平台无关性（跨平台性）</strong></h3>\n<ul>\n<li><strong>“一次编写，到处运行（Write Once, Run Anywhere）”</strong>：Java 代码编译成字节码（.class 文件），通过 Java 虚拟机（JVM）在不同平台上运行，无需修改源代码。这使得 Java 成为开发跨平台应用的理想选择，支持多种操作系统，如 Windows、Linux、macOS。</li>\n</ul>\n",r:{minutes:3.96,words:1189},t:"4.Java的优势",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html",{loader:()=>a.e(78662).then(a.bind(a,32222)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>多态</strong>（Polymorphism）是面向对象编程（OOP）中的一个重要概念，它指的是“同一方法或操作作用于不同对象时，可以有不同的表现形式”。在 Java 中，多态使得同一个方法调用可以根据实际对象的类型执行不同的操作，从而提高代码的灵活性和可扩展性。</p>\n</div>\n',r:{minutes:3.3,words:989},t:"5.什么是Java的多态",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html",{loader:()=>a.e(94791).then(a.bind(a,34105)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<strong>参数传递是按值传递</strong>（pass-by-value）。</p>\n<ul>\n<li><strong>基本类型参数</strong>：按值传递，即传递的是变量的副本，修改副本不会影响原始变量。</li>\n<li><strong>引用类型参数</strong>：按值传递，即传递的是引用（内存地址）的副本，修改对象的内容会影响原始对象，但修改引用本身（让引用指向新对象）不会影响原始引用。</li>\n</ul>\n</div>\n<h3>1. <strong>基本类型参数：</strong></h3>\n<p>对于基本数据类型（如 <code>int</code>、<code>float</code>、<code>boolean</code> 等），传递的是<strong>值</strong>。也就是说，当你将一个基本数据类型的变量作为参数传递给方法时，传递的是该变量的副本，方法内部对参数的修改不会影响原始变量。</p>\n',r:{minutes:2.46,words:737},t:"6.Java中的参数传递是按值还是按引用",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>a.e(24930).then(a.bind(a,1427)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<p>是的，Java <strong>不支持多重继承</strong>。这意味着一个类不能同时继承自两个或多个类。Java 之所以不支持多重继承，主要是为了避免一些潜在的复杂性和问题，尤其是<strong>菱形继承问题</strong>。</p>\n",r:{minutes:2.82,words:846},t:"7.Java 不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>a.e(10084).then(a.bind(a,56292)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>1. <strong>避免菱形继承问题</strong></h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>多重继承可能会导致“菱形继承”问题。假设有一个类 <code>A</code>，然后类 <code>B</code> 和类 <code>C</code> 都继承自 <code>A</code>，接着类 <code>D</code> 同时继承自 <code>B</code> 和 <code>C</code>。如果 <code>B</code> 和 <code>C</code> 都重写了 <code>A</code> 的某个方法，类 <code>D</code> 在调用这个方法时就无法明确到底调用 <code>B</code> 还是 <code>C</code> 中的实现，导致继承关系的模糊性和不确定性。这种问题被称为“菱形继承”。</p>\n</div>\n',r:{minutes:2.29,words:687},t:"7.为什么Java不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(89157).then(a.bind(a,88202)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>0. A</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>面向过程编程和面向对象编程是两种不同的编程范式，它们的主要区别在于关注的重点和代码的组织方式。</p>\n<ol>\n<li><strong>面向过程编程</strong>，顾名思义，它注重的是“做什么”和“怎么做”。在面向过程的程序中，我们通常通过一系列函数或过程来实现特定的功能。数据和操作数据的逻辑通常是分开的，程序逻辑是按顺序执行的。适用于那些任务明确、功能简单的小型程序。</li>\n<li><strong>面向对象编程</strong>，则关注的是“对象”和“行为”。在这种范式中，程序通过类和对象来组织。对象是数据和操作数据的代码的封装体，每个对象既包含数据，也包含对数据的操作方法。面向对象的三大特性——封装、继承和多态，帮助我们将复杂的系统组织得更加清晰、模块化，同时也增强了代码的重用性和可维护性。</li>\n</ol>\n<p>具体来讲，面向过程的程序结构主要由函数组成，函数直接操作全局数据，程序随着功能的增多，代码的可维护性和扩展性会变得较差。而面向对象则通过类和对象来组织代码，类定义了对象的属性和行为，对象之间通过方法进行交互。面向对象的方式使得程序更容易扩展和维护，尤其在处理复杂系统时优势更为明显。</p>\n<p>举个简单的例子，如果我们有一个银行账户的管理程序，<strong>面向过程</strong>的实现可能是通过函数来存取余额，而数据和方法是分开的；而在<strong>面向对象</strong>中，我们会创建一个<code>BankAccount</code>类，这个类封装了余额和存取款的方法，使得代码更加清晰，也更容易扩展，比如未来需要增加更多的功能（例如转账、利息计算等）。</p>\n<p>总结来说，面向过程适合功能简单、需求明确的项目，而面向对象则更适用于需要长期维护和扩展的大型项目。面向对象通过封装、继承和多态，使得系统更加模块化、灵活，并且具有更强的可扩展性和可维护性。</p>\n</div>\n',r:{minutes:5.3,words:1591},t:"8.面向过程和面向对象的区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(82844).then(a.bind(a,10018)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3>0. A</h3>\n",r:{minutes:5.77,words:1730},t:"9.Java方法重载和重写之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(44673).then(a.bind(a,51897)),meta:{e:"\n<h1>前言</h1>\n<h2>为什么学习各类软件在Linux上的部署</h2>\n<p>在前面，我们学习了许多的Linux命令和高级技巧，这些知识点比较零散，同学们跟随着课程的内容进行练习虽然可以基础掌握这些命令和技巧的使用，但是并没有一些具体的实操能够串联起来这些知识点。</p>\n<p>所以，现在我们设计了各类软件在Linux上部署安装的实战章节，可以让同学们：</p>\n<ul>\n<li>对前面学习的各类操作命令进行复习和练习，从而深度掌握它们</li>\n<li>本章节中演示部署的软件，包含了IT行业各类岗位中所必须使用的，如：Java后台、大数据开发、运维开发、测试、AI等。无论学习Linux后从事什么岗位，这些内容都会给你带来帮助</li>\n</ul>",r:{minutes:57.96,words:17389},t:"实战章节：在Linux上部署各类软件",y:"a"}}],["/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0.html",{loader:()=>a.e(24651).then(a.bind(a,38446)),meta:{e:"\n<h2>Linux的目录结构</h2>\n<figure><figcaption>image-20221027214128453</figcaption></figure>\n<ul>\n<li><code>/</code>，根目录是最顶级的目录了</li>\n<li>Linux只有一个顶级目录：<code>/</code></li>\n<li>路径描述的层次关系同样适用<code>/</code>来表示</li>\n<li>/home/itheima/a.txt，表示根目录下的home文件夹内有itheima文件夹，内有a.txt</li>\n</ul>\n<h2>ls命令</h2>\n<p>功能：列出文件夹信息</p>",r:{minutes:9.74,words:2922},t:"Linux基础命令",y:"a"}}],["/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/V2ray%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(56956).then(a.bind(a,4289)),meta:{e:'<h2>安装 V2Ray</h2>\n<p>在开始安装之前，安装一些必要的软件：</p>\n<ul>\n<li>Ubuntu/Debian 系统: <code>apt-get update -y &amp;&amp; apt-get install curl -y</code></li>\n<li>CentOS 系统: <code>yum update -y &amp;&amp; yum install curl -y</code></li>\n</ul>\n<p>为了简化安装，我们使用一键安装脚本，使用现成的一键安装脚本，使用 root 用户输入下面命令安装：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bash &lt;(curl -s -L https://git.io/v2ray.sh)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.16,words:349},t:"",y:"a"}}],["/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html",{loader:()=>a.e(2522).then(a.bind(a,5141)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["基础知识"],e:"\n<p>Linux 操作系统因其开源特性和灵活性，支持多种硬件架构，适用于从个人电脑到大型服务器、嵌入式设备等各种场景。以下是一些主要的 Linux 架构及其对应的代码标识：</p>\n",r:{minutes:1.69,words:506},t:"Linux 支持的主要架构",i:"fa-brands fa-linux",y:"a"}}],["/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/Linux%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4.html",{loader:()=>a.e(12836).then(a.bind(a,58041)),meta:{d:17515872e5,l:"2025年7月4日",c:["Linux","运维工具","性能排查"],g:["Linux","性能优化","系统监控","运维","常用命令"],e:'\n<p>本文汇总了常用的 Linux 系统性能查看命令，适用于服务器调优、故障排查、容量评估、性能监控等场景，并附带一个可执行的自动巡检脚本。</p>\n<hr>\n<h2>🖥️ 1. CPU 信息</h2>\n<h3>查看 CPU 基本信息</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lscpu</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>查看详细 CPU 架构、型号等</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /proc/cpuinfo</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><hr>\n<h2>🧠 2. 内存信息</h2>\n<h3>查看内存使用情况</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">free</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -h</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>查看内存与 Swap 详情</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /proc/meminfo</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:3.5,words:1049},t:"Linux 服务器性能查看命令大全（含自动巡检脚本）",i:"fa-solid fa-linux",y:"a"}}],["/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/systemctl.html",{loader:()=>a.e(17635).then(a.bind(a,58208)),meta:{e:'\n<p>Systemd 是许多现代 Linux 发行版中默认的初始化系统和服务管理器。通过 systemctl 命令，系统管理员可以方便地管理和监控系统中的各种服务。本文将介绍 systemctl 命令的常见用法，帮助读者更好地掌握 Systemd 服务管理。</p>\n<h3>1. 启动和停止服务</h3>\n<p>启动一个服务：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> servicename</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.28,words:383},t:"systemctl 命令的常见用法",y:"a"}}],["/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/reset-failed.html",{loader:()=>a.e(95099).then(a.bind(a,42821)),meta:{e:"\n<p><code>systemctl reset-failed</code> 命令用于重置 Systemd 记录的所有失败的服务状态信息。当一个服务启动失败后，Systemd 会记录该服务的失败状态，这些状态信息可以帮助系统管理员诊断问题。但有时候，当问题已经解决或者不再需要这些失败状态信息时，可以使用 <code>systemctl reset-failed</code> 命令将这些失败状态信息清除，以便重新开始服务的状态跟踪。</p>\n<p>重置失败状态信息后，Systemd 将不再记录之前失败的服务状态，这样在下一次服务启动时，Systemd 将重新开始跟踪服务的状态。这个命令通常用于清除旧的失败状态信息，以便更清晰地查看当前系统状态。</p>",r:{minutes:.81,words:243},t:"reset-failed",y:"a"}}],["/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5.html",{loader:()=>a.e(64397).then(a.bind(a,97843)),meta:{d:1739232e6,l:"2025年2月11日",c:["Linux"],g:["基础"],e:"\n<p>在Linux中，软链接（Symbolic Link）和硬链接（Hard Link）是两种不同的文件链接方式。它们都允许你创建指向文件或目录的引用，但它们在工作原理和用途上有一些显著的区别。以下是对两者的总结：</p>\n",r:{minutes:3.59,words:1078},t:"软硬链接",i:"fa-brands fa-linux",y:"a"}}],["/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html",{loader:()=>a.e(67917).then(a.bind(a,78380)),meta:{d:17324064e5,l:"2024年11月24日",c:["Linux"],g:["总结"],e:"\n<p>启动Linux Centos7系统，当出现如下画面时，直接按“e”键继续。</p>\n<h3></h3>\n<h3>2、看到如下界面后，往下拉</h3>\n<p>⚠️注意⬇️拉一下，否则看不到那行</p>\n<h3></h3>\n<h3>3、在如下截图的位置，添加“rw single init=/bin/bash”，添加后按“Ctrl + x”引导系统。</h3>\n<h3></h3>\n<h3>4、输入“passwd”重置root密码</h3>\n<h3></h3>\n<h3>5、运行命令“exec /sbin/init”来正常启动系统，需要输入修改后的root密码。</h3>\n<h3></h3>\n<h3>6、进入系统后，输入命令“reboot”重启系统。</h3>",r:{minutes:.63,words:189},t:"单用户模式重置root密码",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html",{loader:()=>a.e(43712).then(a.bind(a,5274)),meta:{d:17299872e5,l:"2024年10月27日",c:["Linux"],g:["总结"],e:'\n<blockquote>\n<p>设置默认开机模式</p>\n</blockquote>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-user.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "默认进入命令行界面"</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> graphical.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   "默认进入图形化界面"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.45,words:134},t:"界面切换",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/daemon-reload.html",{loader:()=>a.e(98681).then(a.bind(a,89866)),meta:{e:"\n<p><code>systemctl daemon-reload</code> 是一个 Systemd 工具命令，用于重新加载 Systemd 的配置文件，以便使最新的更改生效。当你手动编辑了 Systemd 单元文件（如服务单元文件）并想要立即应用这些更改时，你可以运行 <code>systemctl daemon-reload</code> 命令。</p>\n<p>具体来说，<code>systemctl daemon-reload</code> 的作用包括：</p>\n<ol>\n<li>\n<p><strong>重新加载配置文件</strong>：当你编辑了 Systemd 单元文件（如 <code>.service</code> 文件）时，使用 <code>systemctl daemon-reload</code> 可以重新加载 Systemd 的配置，使更改生效。</p>\n</li>\n<li>\n<p><strong>更新 Systemd 管理的单元</strong>：Systemd 会监视系统中的单元文件，包括服务、套接字、挂载点等。<code>daemon-reload</code> 命令会更新 Systemd 对这些单元的管理状态。</p>\n</li>\n<li>\n<p><strong>确保新配置生效</strong>：在修改 Systemd 配置后，如果没有运行 <code>systemctl daemon-reload</code>，Systemd 可能仍然使用旧的配置信息。通过运行此命令，可以确保 Systemd 使用最新的配置。</p>\n</li>\n</ol>",r:{minutes:.92,words:275},t:"daemon-reload",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(55871).then(a.bind(a,82637)),meta:{d:17299872e5,l:"2024年10月27日",c:["Linux"],g:["总结"],e:"\n<h2>概述</h2>\n<blockquote>\n<p>把控制命令发送给 init 守护程序。</p>\n<p>init 进程号始终为 1，发送 TERM 信号给 init 会终止所有用户进程、守护进程等。</p>\n<hr>\n<p>init 可用于<code>安全</code>关闭 重启 停止计算机，init 是所有进程的祖先，是 Linux 系统不可或缺的程序。</p>\n<p>强制直接关闭 Linux 系统计算机电源可能导致进程数据丢失，使系统处于不稳定状态 (甚至损坏硬件设备)。</p>\n<hr>\n<p><code>shutdown</code>命令需有 root 权限，shutdown 是把信号发送给<code>init</code>命令，要求 init 改变 runlevel，以此进行相关操作。</p>\n<p>关机或重启计算机实际上是 <code>runlevel</code> 的调整，因此，也可使用 <code>init</code> 命令 (需 root 权限) 直接调整 <code>runlevel </code>进行相关操作。</p>\n</blockquote>",r:{minutes:2.15,words:644},t:"init命令详解",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/rc.local.html",{loader:()=>a.e(9905).then(a.bind(a,39337)),meta:{e:"\n<p><code>rc.local</code> 是一个在 Unix/Linux 系统中用来执行系统启动时自定义命令或脚本的文件。在系统启动过程中，操作系统会执行一系列的启动脚本来初始化系统环境，其中就包括执行 <code>rc.local</code> 文件中的命令或脚本。</p>\n<p>具体来说，<code>rc.local</code> 文件通常位于 <code>/etc/rc.local</code> 或 <code>/etc/rc.d/rc.local</code> 这样的路径下。在系统启动时，操作系统会在启动过程的某个阶段执行这个文件中包含的命令或脚本，用户可以在其中添加自定义的启动任务。</p>",r:{minutes:1.24,words:372},t:"rc.local",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(18014).then(a.bind(a,55587)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["总结"],e:"\n<p>在 Linux 系统上查看设备信息通常可以通过多种工具和命令实现。以下是对常用方法的总结：</p>\n<hr>\n",r:{minutes:1.83,words:550},t:"查看系统配置",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E8%AF%A2%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE.html",{loader:()=>a.e(47573).then(a.bind(a,64519)),meta:{d:1739232e6,l:"2025年2月11日",c:["Linux"],g:["基础"],e:"\n<h3>1. <strong>使用 <code>which</code> 命令（适用于可执行文件）</strong></h3>\n<p>如果你知道进程所对应的可执行文件名称，可以使用 <code>which</code> 命令来查找它的路径。</p>\n",r:{minutes:2.29,words:687},t:"查询安装位置",i:"fa-brands fa-linux",y:"a"}}],["/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/%E4%BF%AE%E6%94%B9yum%E6%BA%90.html",{loader:()=>a.e(55086).then(a.bind(a,77757)),meta:{e:'\n<p>1.首先备份系统自带yum源配置文件/etc/yum.repos.d/CentOS-Base.repo</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/yum.repos.d/CentOS-Base.repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/yum.repos.d/CentOS-Base.repo.backup</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.02,words:606},t:"更换yum国内源",y:"a"}}],["/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%BF%9B%E7%A8%8B.html",{loader:()=>a.e(33479).then(a.bind(a,27893)),meta:{e:'\n<h3>1. 查找使用 8080 端口的进程</h3>\n<p>首先，你需要找出哪个进程正在使用 8080 端口。在不同操作系统上，命令略有不同。</p>\n<h4>在 Linux/macOS 上：</h4>\n<p>打开终端，输入以下命令：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lsof</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> :8080</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.92,words:275},t:"关闭端口占用进程",y:"a"}}],["/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/dos2unix%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%B8%85%E7%90%86.html",{loader:()=>a.e(11837).then(a.bind(a,60300)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>dos2unix</code> 是一个用于转换文本文件格式的工具，它的主要功能是将 Windows 风格的换行符（<code>\\r\\n</code>）转换为 UNIX/Linux 风格的换行符（<code>\\n</code>）。通过使用 <code>dos2unix</code>，可以避免由于换行符问题导致的脚本执行错误或不兼容问题。</p>\n</div>\n<h3>主要特点：</h3>\n<ul>\n<li><strong>转换换行符格式</strong>：Windows 系统使用 <code>\\r\\n</code> 作为行结束符，而 UNIX/Linux 系统只使用 <code>\\n</code>。<code>dos2unix</code> 可以帮助你将 Windows 格式的换行符转换为 UNIX 格式。</li>\n<li><strong>解决跨平台问题</strong>：如果在 Windows 上创建或编辑的文件被传输到 Linux 系统，可能会出现执行错误或显示异常的情况。<code>dos2unix</code> 可以确保文件格式适应不同的操作系统。</li>\n<li><strong>简洁易用</strong>：只需运行一个简单的命令，就能转换文件格式。</li>\n</ul>\n',r:{minutes:1.01,words:303},t:"dos2unix换行符清理",y:"a"}}],["/Linux/8.Shell%E4%B8%8E%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Shell%E7%BC%96%E7%A8%8B.html",{loader:()=>a.e(65946).then(a.bind(a,85692)),meta:{e:"\n<h2>shell概述</h2>\n<p>是一个命令行解释器，接受应用程序或用户命令，然后调用操作系统内核。</p>\n<p>是一个功能强大的编程语言。</p>\n<p>$SHELL：查看当前使用的shell</p>\n<h2>基本使用</h2>\n<p>#!bin/bash：指定使用的shell</p>\n<p>执行脚本：</p>\n<ul>\n<li>方式一：指定使用bash执行，不需要修改权限<code>bash test.sh</code>或<code>sh test.sh </code></li>\n<li>方式二：使用当前命令行使用的shell执行，给脚本赋予执行权限<code>chomd +x test.sh</code>后<code>./test.sh</code></li>\n</ul>",r:{minutes:7.15,words:2144},t:"Shell编程",y:"a"}}],["/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html",{loader:()=>a.e(31872).then(a.bind(a,57582)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["总结"],e:"\n<p>在 Linux 系统中，挂载硬盘是指将一个存储设备（如硬盘分区或 U 盘）与文件系统中的某个目录关联起来，使其可以被访问。以下是挂载硬盘的一般步骤：</p>\n",r:{minutes:1.7,words:510},t:"硬盘挂载",i:"fa-brands fa-linux",y:"a"}}],["/MQ/Kafka/%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6demo.html",{loader:()=>a.e(90872).then(a.bind(a,11264)),meta:{d:17307648e5,l:"2024年11月5日",c:["中间件"],g:["命令"],e:"\n<p>要在两台服务器之间通过 Kafka 发送和接收消息，你需要确保以下条件满足：</p>\n<ol>\n<li><strong>Kafka 集群已正确配置并运行</strong>：Kafka 集群需要在两台服务器上正确配置，并且能够互相通信。</li>\n<li><strong>网络配置</strong>：确保两台服务器之间的网络是通的，Kafka broker 的端口（默认 <code>9092</code>）和 Zookeeper 的端口（默认 <code>2181</code>）可以互相访问。</li>\n<li><strong>Kafka Topic 已创建</strong>：确保 Kafka topic 已经创建。</li>\n</ol>",r:{minutes:2.2,words:659},t:"Kafka 发送和接收消息",i:"fa-brands fa-chart-network",y:"a"}}],["/MQ/RabbitMQ/%E4%BB%80%E4%B9%88%E6%98%AFRabbitMQ.html",{loader:()=>a.e(92567).then(a.bind(a,82425)),meta:{e:'\n<p>你是一个程序员，假设你维护了两个服务 A 和 B。</p>\n<p>A 服务负责转发用户请求到 B 服务，B 服务是个算法服务，GPU 资源有限，当请求量大到 B 服务处理不过来的时候，希望能优先处理会员用户的请求。</p>\n<p>那么问题就来了，如果普通用户和会员用户同时发起请求，怎样才能做到<strong>会员优先</strong>呢？</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504012255156.jpeg" alt="怎么做到会员优先" tabindex="0" loading="lazy"><figcaption>怎么做到会员优先</figcaption></figure>',r:{minutes:9.11,words:2732},t:"RabbitMQ 是什么？架构是怎么样的？",y:"a"}}],["/Mybatis/Mybatis/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%96%B9%E5%BC%8F.html",{loader:()=>a.e(637).then(a.bind(a,81290)),meta:{e:'\n<p>在日常开发中，批量插入数据是一个常见的场景。如果处理不当，可能会导致性能低下甚至数据库压力过大。MyBatis 提供了多种方式来实现批量插入，下面我们总结三种常见方式，并对比它们的优缺点及适用场景。</p>\n<hr>\n<h2>1. Foreach 拼接多值 INSERT</h2>\n<p>最常见的方式是利用 MyBatis 的动态 SQL，将多条数据拼接成一条 <code>INSERT</code> 语句：</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">insert</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insertBatch"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> parameterType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  INSERT INTO user (id, name, age)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  VALUES</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foreach</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"item"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> separator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">","</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (#{item.id}, #{item.name}, #{item.age})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.04,words:613},t:"MyBatis 批量插入数据的三种实现方式",y:"a"}}],["/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html",{loader:()=>a.e(41420).then(a.bind(a,75528)),meta:{e:'\n<p><a href="https://baomidou.com/guides/logic-delete/" target="_blank" rel="noopener noreferrer">逻辑删除支持 | MyBatis-Plus</a></p>\n<h2>原理</h2>\n<blockquote>\n<p>数据表中设计一个字段表示记录为“已删除”而非物理删除</p>\n</blockquote>\n',r:{minutes:.78,words:234},t:"逻辑删除",y:"a"}}],["/Mybatis/Mybatis%20Plus/Mybatis%20Plus%E7%AC%94%E8%AE%B0.html",{loader:()=>a.e(91399).then(a.bind(a,35114)),meta:{e:"\n<p>通过今天的学习，我们要达成下面的目标：</p>\n<ul>\n<li>能利用MybatisPlus实现基本的CRUD</li>\n<li>会使用条件构建造器构建查询和更新语句</li>\n<li>会使用MybatisPlus中的常用注解</li>\n<li>会使用MybatisPlus处理枚举、JSON类型字段</li>\n<li>会使用MybatisPlus实现分页</li>\n</ul>\n<h1><strong>1.快速入门</strong></h1>\n<p>为了方便测试，我们先创建一个新的项目，并准备一些基础数据。</p>\n<h2><strong>1.1.环境准备</strong></h2>\n",r:{minutes:38.14,words:11441},t:"MybatisPlus笔记",y:"a"}}],["/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html",{loader:()=>a.e(90782).then(a.bind(a,93967)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<blockquote>\n<p>在使用 MyBatis-Plus 进行数据库操作时，查询条件的构造是一个常见的任务。MyBatis-Plus 提供了两种主要的查询条件构造器：<code>QueryWrapper</code> 和 <code>LambdaQueryWrapper</code>。</p>\n</blockquote>\n",r:{minutes:1.15,words:344},t:"QueryWrapper vs LambdaQueryWrapper",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html",{loader:()=>a.e(88994).then(a.bind(a,98850)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:'\n<p><code>queryWrapper.apply("1=1");</code> 这行代码是在使用 <code>LambdaQueryWrapper</code> 进行查询时，通过 <code>apply</code> 方法添加一个自定义的 SQL 片段，即将 <code>where 1=1</code> 作为一个条件加入到查询中。以下是关于这行代码的总结：</p>\n<ol>\n<li>\n<p><strong>代码解释</strong>：</p>\n<ul>\n<li><code>queryWrapper</code> 是一个 <code>LambdaQueryWrapper</code> 对象，用于构建查询条件。</li>\n<li><code>apply</code> 方法用于添加自定义的 SQL 片段到查询条件中。</li>\n<li><code>"1=1"</code> 是一个 SQL 条件，表示始终为真，因为任何数等于自身。</li>\n</ul>\n</li>\n<li>\n<p><strong>逻辑</strong>：</p>\n<ul>\n<li><code>apply("1=1")</code> 将 <code>where 1=1</code> 添加到查询条件中，这个条件始终为真，因为任何数等于自身。</li>\n<li>在实际查询中，这个条件可以作为一个基础条件，确保查询条件的合法性。</li>\n</ul>\n</li>\n<li>\n<p><strong>用法总结</strong>：</p>\n<ul>\n<li>通过 <code>apply("1=1")</code> 方法，可以在查询条件中添加一个始终为真的条件，提供一些灵活性和基础条件。</li>\n<li>这种方式可以用于构建复杂的查询条件，同时保持查询的灵活性和可读性。</li>\n</ul>\n</li>\n</ol>',r:{minutes:.93,words:279},t:'queryWrapper.apply("1=1")',i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/this.page().html",{loader:()=>a.e(99352).then(a.bind(a,7866)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<h1>分页</h1>\n<p>在 <strong>MyBatis-Plus</strong> 中，<code>this.page()</code> 是 <code>BaseMapper</code> 或 <code>Service</code> 接口提供的分页查询方法，用于简化分页操作。其主要作用是查询指定页的数据，并返回分页结果。</p>\n<hr>\n",r:{minutes:2,words:601},t:"this.page()",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/where%201_1.html",{loader:()=>a.e(20546).then(a.bind(a,94395)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p><code>where 1=1</code> 是一个常见的 SQL 片段，在查询语句中的作用是添加一个始终为真的条件。以下是关于 <code>where 1=1</code> 的作用的总结：</p>\n<ol>\n<li>\n<p><strong>始终为真</strong>：</p>\n<ul>\n<li><code>1=1</code> 这个条件始终为真，因为任何数等于自身。因此，<code>where 1=1</code> 不会对查询结果产生影响，它实际上是一个无条件的条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>用途</strong>：</p>\n<ul>\n<li>在动态构建 SQL 查询语句时，<code>where 1=1</code> 可以作为一个基础条件，确保查询条件的合法性。</li>\n<li>可以作为一个占位符，方便在后续动态添加其他条件而无需判断是否已经存在其他条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>简化条件拼接</strong>：</p>\n<ul>\n<li>使用 <code>where 1=1</code> 可以简化动态拼接查询条件的逻辑，因为无论是否有其他条件，它都会起作用，不会影响查询结果。</li>\n</ul>\n</li>\n<li>\n<p><strong>避免错误</strong>：</p>\n<ul>\n<li>在动态拼接复杂的查询条件时，<code>where 1=1</code> 可以避免由于条件缺失而导致的语法错误或逻辑错误。</li>\n</ul>\n</li>\n</ol>",r:{minutes:1.16,words:349},t:"where 1=1",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/wrapper.and().html",{loader:()=>a.e(6497).then(a.bind(a,38816)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p>在 <strong>MyBatis-Plus</strong> 中，<code>wrapper.and</code> 是用来添加分组条件的，它的主要作用是将多个条件逻辑分组，以便生成带括号的 SQL 语句。</p>\n",r:{minutes:1.62,words:486},t:"wrapper.and()",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html",{loader:()=>a.e(33833).then(a.bind(a,83233)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p><code>wrapper.eq(categoryId！=null，AttrGroupEntity::getCatelogId, categoryId);</code></p>\n<p>这段代码是使用 <code>LambdaQueryWrapper</code> 的 <code>eq</code> 方法来构建一个查询条件，主要用于在查询时根据 <code>categoryId</code> 的值来设置条件。以下是对这段代码的总结：</p>\n<ol>\n<li>\n<p><strong>代码解释</strong>：</p>\n<ul>\n<li><code>wrapper</code> 是一个 <code>LambdaQueryWrapper</code> 对象，用于构建查询条件。</li>\n<li><code>eq</code> 方法用于设置等于条件。</li>\n<li><code>AttrGroupEntity::getCatelogId</code> 是一个方法引用，表示要查询的字段为 <code>catelogId</code>。</li>\n<li><code>categoryId != null</code> 是一个条件判断，用于确定 <code>categoryId</code> 是否为 <code>null</code>。</li>\n<li><code>categoryId</code> 是一个变量，用于存储某个值。</li>\n</ul>\n</li>\n<li>\n<p><strong>逻辑</strong>：</p>\n<ul>\n<li>如果 <code>categoryId</code> 不为 <code>null</code>，则会设置查询条件为 <code>catelogId = categoryId</code>。</li>\n<li>如果 <code>categoryId</code> 为 <code>null</code>，则不会添加该查询条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>用法总结</strong>：</p>\n<ul>\n<li>这种写法利用了条件判断来动态设置查询条件，根据 <code>categoryId</code> 的值决定是否添加特定的查询条件，实现了灵活性和可重用性。</li>\n<li>通过这种方式，可以根据不同的情况动态构建查询条件，避免了重复的代码和提高了代码的可读性。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.96,words:287},t:"动态构建查询条件",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html",{loader:()=>a.e(37281).then(a.bind(a,75366)),meta:{d:17318016e5,l:"2024年11月17日",c:["Mybatis"],g:["插件"],e:"\n<blockquote>\n<p><code>Mybatis Plus 3.4</code>版本之后的新分页插件</p>\n</blockquote>\n<h3>Step1 引入依赖</h3>\n",r:{minutes:.65,words:194},t:"新分页插件",i:"mybatis plus",y:"a"}}],["/Netty/API/API.html",{loader:()=>a.e(15490).then(a.bind(a,76919)),meta:{e:'\n<hr>\n<h3><code>scheduleAtFixedRate</code></h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ScheduledFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> scheduleAtFixedRate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var6)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.16,words:647},t:"API",y:"a"}}],["/Netty/API/ExecutorService.html",{loader:()=>a.e(32650).then(a.bind(a,95628)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["API"],e:"\n<p><code>ExecutorService</code> 是 Java 中的一个接口，它继承自 <code>Executor</code> 接口，用于提供更为高级的任务执行功能。它定义了线程池的基本操作，能够提交和管理任务，并且提供了一些额外的方法来控制和管理线程池的生命周期。下面是对 <code>ExecutorService</code> 的总结和接口文档的概述：</p>\n",r:{minutes:3.03,words:910},t:"ExecutorService",i:"pen-to-square",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html",{loader:()=>a.e(59777).then(a.bind(a,22464)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["基础"],e:'\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'__main__\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"测试..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>\n<p>判断py文件是否是直接运行，是则输出。若是由其他模块调用则不输出。</p>\n</blockquote>\n',r:{minutes:.18,words:55},t:"Python序章",i:"fa-brands fa-python",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/video.html",{loader:()=>a.e(67963).then(a.bind(a,76477)),meta:{e:"\n",r:{minutes:.11,words:34},t:"YouTube 视频示例",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(40879).then(a.bind(a,79564)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["基础"],e:"\n<table>\n<thead>\n<tr>\n<th>数据结构</th>\n<th>是否有序</th>\n<th>是否可变类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>列表[]</td>\n<td>有</td>\n<td>可变类型</td>\n</tr>\n<tr>\n<td>元组()</td>\n<td>有</td>\n<td>不可变类型</td>\n</tr>\n<tr>\n<td>字典{}</td>\n<td>无</td>\n<td>key不可变val可变</td>\n</tr>\n<tr>\n<td>集合{}</td>\n<td>无</td>\n<td>可变类型不重复</td>\n</tr>\n</tbody>\n</table>\n",r:{minutes:3.71,words:1114},t:"核心数据类型",i:"fa-brands fa-python",y:"a"}}],["/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html",{loader:()=>a.e(14661).then(a.bind(a,75322)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["爬虫"],e:"\n",r:{minutes:3.25,words:974},t:"爬取豆瓣电影250",i:"fa-brands fa-python",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/Maven%E9%AB%98%E7%BA%A7.html",{loader:()=>a.e(58901).then(a.bind(a,91678)),meta:{d:17456256e5,l:"2025年4月26日",c:["Maven"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>理解并实现分模块开发</li>\n<li>能够使用聚合工程快速构建项目</li>\n<li>能够使用继承简化项目配置</li>\n<li>能够根据需求配置生成、开发、测试环境，并在各个环境间切换运行</li>\n<li>了解Maven的私服</li>\n</ul>\n</blockquote>\n",r:{minutes:40.87,words:12262},t:"Maven高级",i:"fa-solid fa-boxes-stacked",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/POM%E6%96%87%E4%BB%B6%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html",{loader:()=>a.e(74873).then(a.bind(a,26764)),meta:{e:'\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">project</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://maven.apache.org/POM/4.0.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">xmlns:xsi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://www.w3.org/2001/XMLSchema-instance"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         坐标包括group ID，artifact ID和 version。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被继承的父项目的构件标识符 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被继承的父项目的全球唯一标识符 --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被继承的父项目的版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             然后在本地仓库，最后在远程仓库寻找父项目的pom。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 4.0.0 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         如com.mycompany.app生成的相对路径为：/com/mycompany/app --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         和groupID；在某个特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         为项目产生的构件包括：JARs，源码，二进制发布和WARs等。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; jar &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 1.0-SNAPSHOT &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的名称, Maven产生的文档用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; xxx-maven &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目主页的URL, Maven产生的文档用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://maven.apache.org &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的详细描述, Maven 产生的文档用。 当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         就可以包含HTML标签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         索引页文件，而不是调整这里的文档。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; A maven project to study maven. &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 描述了这个项目构建环境中的前提条件。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prerequisites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构建该项目或使用该插件所需要的Maven的最低版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prerequisites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">issueManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 问题管理系统（例如jira）的名字， --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; jira &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该项目使用的问题管理系统的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://jira.baidu.com/banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">issueManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目持续集成信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ciManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 持续集成系统的名字，例如continuum --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifiers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 配置一种方式，当构建中断时，以该方式通知用户/开发者 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 传送通知的途径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 发生错误时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建失败时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnFailure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnFailure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建成功时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 发生警告时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnWarning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnWarning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 不赞成使用。通知发送到哪里 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 扩展配置项 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifiers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ciManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目创建年份，4位数字。当产生版权信息时需要使用这个值。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inceptionYear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目相关邮件列表信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingLists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 邮件的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Demo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">unsubscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">unsubscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 你可以浏览邮件信息的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">archive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http:/hi.baidu.com/banseon/demo/dev/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">archive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingLists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目开发者列表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 某个项目开发者的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- SCM里项目开发者的唯一标识符 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; HELLO WORLD &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者的全名 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者的email --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者的主页的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者在项目中扮演的角色，角色元素描述了各种角色 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Project Manager &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Architect &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者所属组织 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; demo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者所属组织的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://hi.baidu.com/xxx &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者属性，如即时消息如何处理等 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; No &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者所在时区， -11到12范围内的整数。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; -5 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的其他贡献者列表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 项目的其他贡献者。参见developers/developer元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者的全名 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者的email --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者的主页的URL --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者所属组织 --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者所属组织的URL --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者在项目中扮演的角色，角色元素描述了各种角色 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Project Manager &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Architect &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者所在时区， -11到12范围内的整数。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者属性，如即时消息如何处理等 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; No &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;  </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         如果列出多个license，用户可以选择它们中的一个而不是接受所有license。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">licenses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">license</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- license用于法律上的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Apache 2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 官方的license正文页面的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://www.baidu.com/banseon/LICENSE-2.0.txt &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目分发的主要方式： </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    repo，可以从Maven库下载 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    manual， 用户必须手动下载和安装依赖 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distribution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; repo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distribution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 关于license的补充信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">comments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; A business-friendly OSS license &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">comments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">license</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">licenses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 给开发者使用的，类似connection元素。即该连接不仅仅只读 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developerConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developerConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 当前代码的标签，在开发阶段默认为HEAD --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://svn.baidu.com/banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 描述项目所属组织的各种属性。Maven产生的文档用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 组织的全名 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; demo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 组织主页的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://www.baidu.com/banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 构建项目需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             于pom.xml的相对路径。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scriptSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scriptSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             该路径是相对于pom.xml的相对路径。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被编译过的应用程序class文件存放的目录。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被编译过的测试class文件存放的目录。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testOutputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testOutputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 使用来自该项目的一系列构建扩展 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 描述使用到的构建扩展。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extension</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建扩展的groupId --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建扩展的artifactId --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建扩展的版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extension</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 当项目没有规定目标（Maven2 叫做阶段）时的默认值 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaultGoal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaultGoal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             最终的打包文件里。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 这个元素描述了项目相关或测试相关的所有资源路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     里列出。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述存放资源的目录，该路径相对POM路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 包含的模式列表，例如**/*.xml. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 排除的模式列表，例如**/*.xml --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述了测试相关的资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     里列出。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述存放测试相关的资源的目录，该路径相对POM路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 包含的模式列表，例如**/*.xml. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 排除的模式列表，例如**/*.xml --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构建产生的所有文件存放的目录 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 产生的构件的文件名，默认值是${artifactId}-${version}。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 当filtering开关打开时，使用到的过滤器属性文件列表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             地配置都会覆盖这里的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 使用的插件列表 。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 插件在仓库里的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 插件在仓库里的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 被使用的插件的版本（或版本范围） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                         元素才被设置成enabled。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- execution元素包含了插件执行需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 配置的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 配置是否被传播到子POM --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 项目引入插件所需要的额外依赖 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 任何配置是否被传播到子项目 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该项目使用的插件列表 。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 插件在仓库里的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 插件在仓库里的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 被使用的插件的版本（或版本范围） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     元素才被设置成enabled。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- execution元素包含了插件执行需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 配置的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 配置是否被传播到子POM --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 项目引入插件所需要的额外依赖 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 任何配置是否被传播到子项目 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 在列的项目构建profile，如果被激活，会修改构建处理 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 根据环境参数或命令行参数激活某个构建处理 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它能够</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 素并不是激活profile的唯一方式。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- profile默认是否激活的标志 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     不是以1.4开头的JDK。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jdk版本，如:1.7&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统的名字 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Windows XP &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统所属家族(如 \'windows\') --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">family</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Windows &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">family</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统体系结构 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; x86 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 5.1.2600 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 如果Maven检测到某一个属性（其值可以在POM中通过${名称}引用），其拥有对应的名称和值，Profile</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     就会被激活。如果值字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     配属性值字段 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的属性的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; mavenVersion &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的属性的值 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 2.0.3 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 如果指定的文件存在，则激活profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; /usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 如果指定的文件不存在，则激活profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">missing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; /usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">missing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构建项目所需要的信息。参见build元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaultGoal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 参见build/pluginManagement/plugins/plugin元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                                &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 参见build/pluginManagement/plugins/plugin元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 相对路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!--子项目相对路径--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 发现依赖和扩展的远程仓库列表。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 参见repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 仓库中下载。要获取更多信息，请看项目依赖机制。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 不赞成使用. 现在Maven忽略该元素. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 到所有报表的链接。参见reporting元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见dependencyManagement元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见distributionManagement元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见properties元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!--子项目相对路径--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 发现依赖和扩展的远程仓库列表。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 包含需要连接到远程仓库的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 如何处理远程仓库里发布版本的下载 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-repository-proxy &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 远程仓库名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-repository-proxy &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 远程仓库URL，按protocol://hostname/path形式 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://192.168.1.169:9999/repository/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 的布局；然而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; default &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         要获取更多信息，请看项目依赖机制。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; org.apache.maven &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; maven-artifact &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 3.8.1 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 名或分类器。类型经常和使用的打包方式对应，尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 如果设置extensions为 true，就可以在plugin里定义新的类型。所以前面的类型的例子不完整。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; jar &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 如果你想要构建两个单独的构件成JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 成两个单独的JAR构件。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">classifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">classifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - compile ：默认范围，用于编译 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - runtime: 在执行时需要使用 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - test: 用于test任务时使用 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - system: 需要外在提供相应的元素。通过systemPath来取得 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - systemPath: 仅用于范围为system。提供相应的路径 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - optional: 当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; test &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">systemPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">systemPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 依赖。此元素主要用于解决版本冲突问题 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; spring-core &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; org.springframework &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 可选依赖阻断依赖的传递性。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">optional</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; true &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">optional</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 不赞成使用. 现在Maven忽略该元素. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludeDefaults</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 所有产生的报表存放到哪里。默认值是${project.build.directory}/site。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 使用的报表插件和他们的配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- plugin元素包含描述报表插件需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 报表插件在仓库里的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 报表插件在仓库里的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 被使用的报表插件的版本（或版本范围） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 任何配置是否被传播到子项目 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 报表插件的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     表集，对应另一个执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 表示报表的一个集合，以及产生该集合的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 报表集合的唯一标识符，POM继承时用到 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 产生报表集合时，被使用的报表的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 配置是否被继承到子POMs --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 这个集合里使用到哪些报表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        （必须描述group ID和artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            group ID和artifact ID匹配到这里的依赖，并使用这里的依赖信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         把构件部署到远程仓库。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 部署项目产生的构件到远程仓库需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">uniqueVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-maven2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon maven2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; file://${basedir}/target/deploy &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             distributionManagement/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshotRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">uniqueVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-maven2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Banseon-maven2 Snapshot Repository &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; scp://svn.baidu.com/banseon:/usr/local/maven-snapshot &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshotRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 部署项目的网站需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">site</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-site &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 部署位置的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; business api website &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 部署位置的URL，按protocol://hostname/path形式 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">site</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             那些不在仓库里的构件（由于license限制）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">downloadUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构件新的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构件新的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构件新的版本号 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 显示给用户的，关于移动的额外信息，例如原因。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             有：none（默认），converted（仓库管理员从Maven 1 POM转换过来），partner（直接从伙伴Maven </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             2仓库同步过来），deployed（从Maven 2实例部署），verified（被核实时正确的和最终的）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;value&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:31.12,words:9335},t:"附件1：POM文件总体配置说明",y:"a"}}],["/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/SpringBoot.html",{loader:()=>a.e(96756).then(a.bind(a,21485)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标：</strong></p>\n<blockquote>\n<ul>\n<li>掌握基于SpringBoot框架的程序开发步骤</li>\n<li>熟练使用SpringBoot配置信息修改服务器配置</li>\n<li>基于SpringBoot的完成SSM整合项目开发</li>\n</ul>\n</blockquote>\n",r:{minutes:30.65,words:9194},t:"SpringBoot",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/MyBatisPlus.html",{loader:()=>a.e(74027).then(a.bind(a,79901)),meta:{d:17455392e5,l:"2025年4月25日",c:["MyBatis","Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<p>基于MyBatisPlus完成标准Dao的增删改查功能</p>\n<p>掌握MyBatisPlus中的分页及条件查询构建</p>\n<p>掌握主键ID的生成策略</p>\n<p>了解MyBatisPlus的代码生成器</p>\n</blockquote>\n<h2>1，MyBatisPlus入门案例与简介</h2>\n<p>这一节我们来学习下MyBatisPlus的入门案例与简介，这个和其他课程都不太一样，其他的课程都是先介绍概念，然后再写入门案例。而对于MyBatisPlus的学习，我们将顺序做了调整，主要的原因MyBatisPlus主要是对MyBatis的简化，所有我们先体会下它简化在哪，然后再学习它是什么，以及它帮我们都做哪些事。</p>",r:{minutes:50.6,words:15179},t:"MyBatisPlus",i:"fa-solid fa-leaf",y:"a"}}],["/Spring/Junit/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3.html",{loader:()=>a.e(56845).then(a.bind(a,70559)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 <strong>JUnit 5</strong> 中，生命周期注解用于控制测试方法执行前后或在所有测试执行前后的行为。它们帮助开发者进行初始化、清理和资源管理。下面是 JUnit 5 中常用的生命周期注解的总结：</p>\n</div>\n<h3>1. <strong><code>@BeforeEach</code></strong></h3>\n<ul>\n<li><strong>作用</strong>：在每个测试方法执行之前运行。</li>\n<li><strong>用途</strong>：用于每个测试方法之前需要执行的初始化操作，如设置测试数据、创建对象等。</li>\n<li><strong>执行时机</strong>：在每个测试方法执行之前。</li>\n</ul>',r:{minutes:2.4,words:719},t:"生命周期注解",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html",{loader:()=>a.e(69146).then(a.bind(a,72096)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<h2>1. 概述</h2>\n<blockquote>\n<p><code>@ControllerAdvice</code>，是Spring3.2提供的新注解，它是一个Controller增强器，可对controller进行增强处理。</p>\n<p><code>@ControllerAdvice</code>注解将作用在所有<code>Controller层</code>的方法上</p>\n</blockquote>\n",r:{minutes:3.08,words:923},t:"@ControllerAdvice",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html",{loader:()=>a.e(90913).then(a.bind(a,42925)),meta:{d:1731888e6,l:"2024年11月18日",c:["Spring"],g:["注解"],e:"\n<p><code>@EnableTransactionManagement</code> 是 Spring 提供的注解，用于开启基于注解的事务管理功能。本文档将详细介绍其使用方法、最佳实践以及推荐的配置位置。</p>\n<hr>\n",r:{minutes:3,words:901},t:"@EnableTransactionManagement",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html",{loader:()=>a.e(69982).then(a.bind(a,42291)),meta:{d:1735776e6,l:"2025年1月2日",c:["Spring"],g:["注解"],e:'\n<blockquote>\n<p><code>@FeignClient("coupon")</code> 注解用于声明一个 Feign 客户端，表示当前接口是一个远程服务的调用接口，通过 Feign 来实现 HTTP 请求的自动代理。<code>@FeignClient</code> 中的 <code>"coupon"</code> 表示目标服务的名称，Feign 会通过服务发现机制（如 Nacos、Eureka 等）找到该服务，并发起 HTTP 请求。</p>\n</blockquote>\n',r:{minutes:2.45,words:734},t:"@FeignClient",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@Import.html",{loader:()=>a.e(14951).then(a.bind(a,13842)),meta:{e:"\n<hr>\n<h2>一、@Import 的作用</h2>\n<blockquote>\n<p><strong>核心作用：</strong></p>\n<p><code>@Import</code> 用于向 Spring 容器中 <strong>导入一个或多个组件（Bean）</strong>，这些组件会被注册到 Spring 的 <code>ApplicationContext</code> 中。</p>\n</blockquote>\n<hr>\n<h2>二、常见用法（支持 4 种类型）</h2>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>普通配置类 Class</td>\n<td>最常见，导入一个被 <code>@Configuration</code> 标注的类</td>\n</tr>\n<tr>\n<td>实现 <code>ImportSelector</code> 的类</td>\n<td>实现按条件动态返回需要注册的类名数组</td>\n</tr>\n<tr>\n<td>实现 <code>DeferredImportSelector</code> 的类</td>\n<td>更晚执行的 ImportSelector，用于自动配置场景</td>\n</tr>\n<tr>\n<td>实现 <code>ImportBeanDefinitionRegistrar</code> 的类</td>\n<td>可以手动注册 BeanDefinition，粒度最细，功能最强</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.05,words:615},t:"🔍 @Import 注解详解",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html",{loader:()=>a.e(79716).then(a.bind(a,10999)),meta:{d:17318016e5,l:"2024年11月17日",c:["Spring"],g:["注解"],e:"\n<h2>前言</h2>\n<blockquote>\n<p>在开发中，后端通常使用专用模型对象（<code>FindStudentInfoReq.java</code>）来接收web请求参数。该对象仅声明输入所需的值，可以防止恶意客户端提供额外的值。</p>\n<p>另一种方法是构造函数绑定</p>\n<p><code>@InitBinder</code> 在 Spring 开发中是一个有用但<strong>相对较少使用</strong>的功能。这主要是因为现代 Web 开发中，很多绑定和数据处理的需求已经被更高级和专用的机制（如 <code>@RequestBody</code>、校验框架、全局拦截器等）所替代。</p>\n</blockquote>",r:{minutes:4,words:1201},t:"@InitBinder",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html",{loader:()=>a.e(44371).then(a.bind(a,91792)),meta:{e:'\n<blockquote>\n<p><code>@JsonFormat</code> 是 <strong>Jackson</strong> 序列化库中的一个注解，用于指定对象字段在序列化和反序列化时的格式，特别适用于日期、时间、枚举等类型的数据。通过这个注解，开发者可以灵活地控制这些数据的输出和输入格式。</p>\n</blockquote>\n<h3>主要功能：</h3>\n<ol>\n<li><strong>日期和时间格式化</strong>：指定日期、时间字段的格式，例如 <code>"yyyy-MM-dd HH:mm:ss"</code>。</li>\n<li><strong>时区控制</strong>：可以指定字段的时区，例如 <code>"GMT+8"</code>。</li>\n<li><strong>枚举类型格式化</strong>：用于指定枚举类型在序列化和反序列化时的显示方式，如使用字符串或数字表示。</li>\n</ol>',r:{minutes:1.06,words:317},t:"@JsonFormat",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html",{loader:()=>a.e(39186).then(a.bind(a,35738)),meta:{d:17318016e5,l:"2024年11月17日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p><code>@JsonInclude(JsonInclude.Include.NON_EMPTY)</code></p>\n<p>在实体类的字段上添加注解：<strong>当值为空时，返回的数据不返回当前字段</strong></p>\n</blockquote>\n",r:{minutes:.15,words:46},t:"@JsonInclude",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html",{loader:()=>a.e(98645).then(a.bind(a,83593)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p>使用在使用在控制层（controller）的方法上。</p>\n<p>是组成<code>@RestController</code>的分子</p>\n</blockquote>\n",r:{minutes:.56,words:169},t:"@ResponseBody",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html",{loader:()=>a.e(48586).then(a.bind(a,2478)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p>元注解：定义注解的注解</p>\n<p>Java从1.5开始提供注解的使用，同时提供了四个元注解<code>Target、Retention、Documented、Inherited</code>。Java8新增了一个<code>Repeatable</code>，共5个元注解。</p>\n<p>点进<code>@SpringBootApplication</code>注解后发现，这个注解使用了上述四个元注解。</p>\n</blockquote>\n",r:{minutes:3.08,words:924},t:"元注解",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html",{loader:()=>a.e(75610).then(a.bind(a,28898)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:'\n<blockquote>\n<p><code>@RequestMapping</code>、<code>@PostMapping</code>和<code>@GetMapping</code>是三个非常常用的注解，用于处理<a href="https://so.csdn.net/so/search?q=HTTP%E8%AF%B7%E6%B1%82&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">HTTP请求</a>映射。</p>\n</blockquote>\n<h2><strong>@RequestMapping注解</strong></h2>',r:{minutes:1.13,words:339},t:"注解@RequestMapping、@PostMapping、@GetMapping",i:"fa-solid fa-hashtag",y:"a"}}],["/SpringBoot/lombok%E6%B3%A8%E8%A7%A3/@RequiredArgsConstructor.html",{loader:()=>a.e(75248).then(a.bind(a,76714)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["Java","Lombok"],g:["Lombok","注解","构造函数","自动生成"],e:"\n<h2>🔍 什么是 <code>@RequiredArgsConstructor</code></h2>\n<p><code>@RequiredArgsConstructor</code> 是 Lombok 提供的注解，用于<strong>自动生成包含所有 <code>final</code> 字段和带 <code>@NonNull</code> 注解字段的构造函数</strong>，简化代码书写，尤其适用于 Spring 的构造函数依赖注入。</p>\n<hr>\n",r:{minutes:2.59,words:776},t:"RequiredArgsConstructor",i:"fa-solid fa-code",y:"a"}}],["/SpringBoot/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/Logback%20%E5%88%87%E6%8D%A2%E5%88%B0%20Log4j2.html",{loader:()=>a.e(92255).then(a.bind(a,16836)),meta:{a:"JeanHu",d:17516736e5,l:"2025年7月5日",c:["Spring Boot","日志系统","项目实战"],g:["Log4j2","日志归档","多级日志","彩色控制台","日志分模块","异步日志","Spring Boot 配置"],e:"\n<blockquote>\n<p>Spring Boot 默认使用 Logback 作为日志实现，但 Log4j2 拥有更高的性能、更强的灵活性和更丰富的配置能力。本文将带你一步一步完成从 Logback 到 Log4j2 的切换过程，并附带实战示例。</p>\n</blockquote>\n<hr>\n",r:{minutes:2.44,words:731},t:"🚀从 Logback 切换到 Log4j2",i:"fa-solid fa-file-lines",y:"a"}}],["/SpringBoot/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/Spring%20Boot%20%E6%95%B4%E5%90%88%20Log4j2.html",{loader:()=>a.e(93518).then(a.bind(a,53460)),meta:{a:"JeanHu",d:17516736e5,l:"2025年7月5日",c:["Spring Boot","日志系统","项目实战"],g:["Log4j2","日志归档","多级日志","彩色控制台","日志分模块","异步日志","Spring Boot 配置"],e:'\n<blockquote>\n<p>本文介绍如何在 Spring Boot 项目中替换默认的 Logback 日志框架为 Log4j2，并实现多目标日志输出（控制台 + 多级日志文件）、彩色日志、高级归档策略和模块级日志划分。适用于生产环境的中大型项目。</p>\n</blockquote>\n<hr>\n<h2>🧱 项目结构</h2>\n<p>项目整体结构如下图所示：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── config</span></span>\n<span class="line"><span>│   └── LogSystemPropertyInjector.java  // 日志属性注入器</span></span>\n<span class="line"><span>├── service</span></span>\n<span class="line"><span>│   └── TestService.java                // 定时输出测试日志</span></span>\n<span class="line"><span>├── resources</span></span>\n<span class="line"><span>│   ├── application.yml                 // 日志相关配置</span></span>\n<span class="line"><span>│   └── log4j2-spring.xml               // Log4j2 配置文件</span></span>\n<span class="line"><span>├── pom.xml                             // 日志相关依赖声明</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:7.57,words:2271},t:"Spring Boot 整合 Log4j2 日志系统实战",i:"fa-solid fa-file-lines",y:"a"}}],["/SpringBoot/%E6%B3%A8%E8%A7%A3/@ConfigurationProperties.html",{loader:()=>a.e(82991).then(a.bind(a,91358)),meta:{d:17519328e5,l:"2025年7月8日",c:["SpringBoot"],g:["注解"],e:"\n<p>在 Spring Boot 项目中，配置文件（如 <code>application.properties</code> 或 <code>application.yml</code>）承载着大量环境和业务相关的参数。如何优雅、类型安全地将这些配置映射到 Java 对象中，成为每个开发者必须掌握的技能。<code>@ConfigurationProperties</code> 正是解决这一需求的利器。</p>\n<p>本文将带你深入理解 <code>@ConfigurationProperties</code> 的原理、使用方法及最佳实践。</p>\n<hr>\n<h2>什么是 @ConfigurationProperties？</h2>",r:{minutes:2.33,words:698},t:"@ConfigurationProperties",i:"fa-solid fa-hashtag",y:"a"}}],["/SpringBoot/%E6%B3%A8%E8%A7%A3/@EnableConfigurationProperties.html",{loader:()=>a.e(46666).then(a.bind(a,66723)),meta:{d:17519328e5,l:"2025年7月8日",c:["SpringBoot"],g:["注解"],e:"\n<h2>一、简介</h2>\n<p><code>@EnableConfigurationProperties</code> 是 Spring Boot 提供的注解，用于<strong>手动注册使用 <code>@ConfigurationProperties</code> 注解的配置类</strong>到 Spring 容器中。</p>\n<blockquote>\n<p><strong>作用：</strong></p>\n<ul>\n<li>让 <code>@ConfigurationProperties</code> 注解的类生效并被注入为 Bean。</li>\n<li>可替代在配置类上加 <code>@Component</code> 的方式。</li>\n</ul>\n</blockquote>",r:{minutes:2.07,words:620},t:"@EnableConfigurationProperties",i:"fa-solid fa-hashtag",y:"a"}}],["/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html",{loader:()=>a.e(98877).then(a.bind(a,69343)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:"\n<h2>原生SDK使用</h2>\n<p><strong>product模块导入依赖</strong></p>\n",r:{minutes:1.53,words:460},t:"阿里云oss使用记录",i:"fa-solid fa-cloud",O:2,y:"a"}}],["/SpringCloud/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1ACID%E5%8E%9F%E5%88%99.html",{loader:()=>a.e(94545).then(a.bind(a,84480)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud"],g:["事务"],e:"\n<p>ACID原则是数据库管理系统中用于保证事务处理正确性的四个基本原则，ACID是以下四个英文单词的首字母缩写：</p>\n<ol>\n<li>\n<p><strong>原子性 (Atomicity)</strong>：</p>\n<ul>\n<li>事务中的操作要么全部执行，要么全部不执行。即使发生了故障，事务中的操作也不会部分完成。保证事务要么完全成功，要么完全失败。</li>\n</ul>\n</li>\n<li>\n<p><strong>一致性 (Consistency)</strong>：</p>\n<ul>\n<li>事务执行前后，数据库必须从一个一致的状态转换到另一个一致的状态。即事务执行不应破坏数据库的完整性约束和规则。</li>\n</ul>\n</li>\n<li>\n<p><strong>隔离性 (Isolation)</strong>：</p>\n<ul>\n<li>并发执行的事务应该互不干扰。即一个事务的执行不应受到其他事务的干扰，事务间的操作应该是独立的，直到它们各自完成。</li>\n</ul>\n</li>\n<li>\n<p><strong>持久性 (Durability)</strong>：</p>\n<ul>\n<li>一旦事务提交，其结果应该永久保存到数据库中，即使系统崩溃，已提交的事务也不能丢失。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.94,words:281},t:"事务ACID原则",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/",{loader:()=>a.e(67681).then(a.bind(a,92166)),meta:{e:'\n<h2>Sentinel教程</h2>\n<p><a href="/blog/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html" target="_blank">Sentinel讲义</a></p>\n<p><a href="/blog/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html" target="_blank">Sentinel规则持久化</a></p>',r:{minutes:.29,words:88},t:"SpringCloud高级篇",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html",{loader:()=>a.e(342).then(a.bind(a,73096)),meta:{e:'\n<h2>概述</h2>\n<blockquote>\n<p>Hibernate Validator 是 Java 中一个广泛使用的校验框架，它实现了 Bean Validation 规范（JSR 380）。Hibernate Validator 提供了丰富的内置注解用于校验常见的数据类型和格式。</p>\n</blockquote>\n<h2>常用注解</h2>\n<ol>\n<li>\n<p><strong>@NotNull</strong>：字段不能为 null，但可以是空字符串、空集合等。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotNull</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能为空"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@NotEmpty</strong>：字段不能为 null 或空，适用于字符串、集合、数组等。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能为空或空"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@NotBlank</strong>：字段不能为空或只包含空白字符，适用于字符串。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotBlank</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能是空白字符"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Size</strong>：限制字符串、集合、数组等的长度或大小范围。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Size</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长度必须在2到10之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nickname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Min</strong> / <strong>@Max</strong>：限定数值的最小值和最大值。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Min</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "年龄不能小于18"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Max</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "年龄不能超过60"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@DecimalMin</strong> / <strong>@DecimalMax</strong>：限定小数的最小值和最大值。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">DecimalMin</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值不能小于1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">DecimalMax</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "10.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值不能超过10.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Pattern</strong>：使用正则表达式匹配字符串格式。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">regexp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "^[A-Za-z0-9]+$"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "只能包含字母和数字"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Email</strong>：验证是否为合法的电子邮件地址。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Email</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "邮箱格式不正确"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Past</strong> / <strong>@Future</strong> / <strong>@PastOrPresent</strong> / <strong>@FutureOrPresent</strong>：限制日期必须在过去、将来或包含当前日期。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Past</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "生日必须是过去的日期"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDate</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> birthDate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@AssertTrue</strong> / <strong>@AssertFalse</strong>：字段必须为 <code>true</code> 或 <code>false</code>。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">AssertTrue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "必须接受条款"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> acceptedTerms</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Digits</strong>：限制数值的整数位和小数位数。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Digits</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> fraction</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值格式不正确，最多3位整数和2位小数"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> discount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Positive</strong> / <strong>@PositiveOrZero</strong> / <strong>@Negative</strong> / <strong>@NegativeOrZero</strong>：限制数值必须为正、负或包含零。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Positive</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "金额必须为正数"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> amount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Length</strong>：定义字符串的长度范围（需要 <code>hibernate-validator</code> 提供的扩展）。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长度必须在5到20之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Range</strong>：指定数值的范围（需要 <code>hibernate-validator</code> 提供的扩展）。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Range</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "范围必须在1到100之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> percentage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:1.98,words:595},t:"Hibernate Validator",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html",{loader:()=>a.e(29409).then(a.bind(a,48910)),meta:{e:"\n<blockquote>\n<p><strong>JSR303： Java数据校验规范提案。</strong></p>\n<p><em>jsr</em>，是Java Specification Requests的缩写，意思是Java规范提案，是指向JCP(Java Community Process)提出新增一个标准化技术规范的正式请求。</p>\n<p>303号规定了数据校验的标准。</p>\n</blockquote>\n<h2>1.引入依赖</h2>\n<blockquote>\n<p>springboot2.3.0以上需要手动<strong>引入依赖</strong></p>\n</blockquote>",r:{minutes:2.29,words:688},t:"JSR303数字校验",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/",{loader:()=>a.e(94690).then(a.bind(a,70143)),meta:{d:17440704e5,l:"2025年4月8日",e:"\n",r:{minutes:.03,words:10},t:"SpringMVC",i:"fa-solid fa-leaf",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html",{loader:()=>a.e(73084).then(a.bind(a,58664)),meta:{d:17317152e5,l:"2024年11月16日",c:["Spring"],g:["注解"],e:"\n<p>自定义校验注解在 Java 的 Spring 框架中使用得较为广泛，尤其是结合 <strong>Hibernate Validator</strong>（JSR 380 实现）来实现复杂的字段校验逻辑。以下是自定义校验注解的总结和实现步骤：</p>\n<hr>\n<h3><strong>1. 自定义校验注解的核心概念</strong></h3>\n<p>自定义校验注解允许开发者定义特定的校验规则，用于校验对象字段或方法参数。这种方法通常用于解决内置校验注解（如 <code>@NotNull</code>, <code>@Size</code>, <code>@Pattern</code>）无法满足的场景。</p>",r:{minutes:3.14,words:941},t:"自定义校验注解",i:"pen-to-square",y:"a"}}],["/VCS/Git/%E5%88%A0%E9%99%A4%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E6%8E%A8%E9%80%81.html",{loader:()=>a.e(37959).then(a.bind(a,17957)),meta:{d:17402688e5,l:"2025年2月23日",c:["Git"],g:["总结"],e:'\n<h3>1. <strong>撤销本地提交并保留更改</strong>（如果你希望保留修改内容在工作目录中）</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --soft</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD~1</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.03,words:309},t:"删除最近一次提推送",i:"fa-brands fa-git-alt",y:"a"}}],["/VCS/Git/%E5%BF%BD%E7%95%A5idea%E6%96%87%E4%BB%B6%E5%A4%B9.html",{loader:()=>a.e(98817).then(a.bind(a,77158)),meta:{d:1736208e6,l:"2025年1月7日",c:["Git"],g:["总结"],e:"\n<blockquote>\n<p>举例：要在 Git 中忽略 <code>.idea</code> 文件夹（通常是 JetBrains 系列 IDE 生成的配置文件夹），需要使用 <code>.gitignore</code> 文件来指定 Git 不跟踪该文件夹中的文件。</p>\n</blockquote>\n",r:{minutes:1.36,words:409},t:"忽略.idea文件夹",i:"fa-brands fa-git-alt",y:"a"}}],["/VCS/Git/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E8%87%B3%E8%BF%9C%E7%A8%8B%E5%BA%93.html",{loader:()=>a.e(41917).then(a.bind(a,83562)),meta:{d:1736208e6,l:"2025年1月7日",c:["Git"],g:["总结"],e:"\n<p>要将本地项目推送到 Git 创建的远程库，你可以按照以下步骤操作：</p>\n",r:{minutes:2.37,words:711},t:"本地项目推送至远程库",i:"fa-brands fa-git-alt",y:"a"}}],["/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>a.e(584).then(a.bind(a,37837)),meta:{e:'\n<table>\n<thead>\n<tr>\n<th style="text-align:left">镜像</th>\n<th style="text-align:left">命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">淘宝镜像源</td>\n<td style="text-align:left">npm config set registry https://registry.npmmirror.com</td>\n</tr>\n<tr>\n<td style="text-align:left">阿里云镜像源</td>\n<td style="text-align:left">npm config set registry https://npm.aliyun.com</td>\n</tr>\n<tr>\n<td style="text-align:left">腾讯云镜像源</td>\n<td style="text-align:left">npm config set registry http://mirrors.cloud.tencent.com/npm/</td>\n</tr>\n<tr>\n<td style="text-align:left">华为云镜像源</td>\n<td style="text-align:left">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</td>\n</tr>\n<tr>\n<td style="text-align:left">官方原始镜像</td>\n<td style="text-align:left">npm config set registry https://registry.npmjs.org/</td>\n</tr>\n<tr>\n<td style="text-align:left">查看当前的镜像源</td>\n<td style="text-align:left">npm config get registry</td>\n</tr>\n</tbody>\n</table>',r:{minutes:.27,words:81},t:"npm更换镜像源",y:"a"}}],["/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>a.e(9666).then(a.bind(a,26476)),meta:{e:'\n<blockquote>\n<p>nvm是一个node版本管理工具</p>\n</blockquote>\n<p>阿里云镜像</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> npm_mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://npmmirror.com/mirrors/npm/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> node_mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://npmmirror.com/mirrors/node/</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.15,words:46},t:"nvm更换镜像源",y:"a"}}],["/%E8%A3%85%E6%9C%BA/N1%E7%9B%92%E5%AD%90/N1%E7%9B%92%E5%AD%90%E9%85%8D%E7%BD%AEAdGuard%E5%8F%8Apasswall.html",{loader:()=>a.e(8501).then(a.bind(a,28552)),meta:{e:"\n<h2>1.修改重定向模式为<code>重定向53端口到AdGuardHOME</code></h2>\n<figure><figcaption>image-20250711205255724</figcaption></figure>\n<h2>2.PassWall的DNS分流使用<code>ChinaDNS-NG</code></h2>\n<p>🔥取消勾选DNS重定向：使ChinaDNS-NG发送请求给AdGuard</p>\n<p>🎉清空IPSET缓存</p>\n<figure><figcaption>image-20250711205512356</figcaption></figure>",r:{minutes:.82,words:245},t:"N1盒子配置AdGuard 及PassWall",y:"a"}}],["/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/socket%E6%98%AF%E4%BB%80%E4%B9%88.html",{loader:()=>a.e(57417).then(a.bind(a,46692)),meta:{e:'\n<p>我相信大家刚开始学 socket 的时候，都跟我一样。</p>\n<p>云里雾里的，对 socket 的概念很模糊。</p>\n<p>这篇文章我打算从一个初学者的角度开始聊起，让大家了解下<strong>我眼里</strong>的 socket 到底是什么以及 socket 的原理和内核实现。</p>\n<h2>socket 的概念</h2>\n<p>故事要从一个<strong>插头</strong>说起。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202505182310176.png" alt="插头与插座" tabindex="0" loading="lazy"><figcaption>插头与插座</figcaption></figure>',r:{minutes:14.9,words:4470},t:"socket 到底是什么？",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/A%E5%88%9B%E5%BB%BA%E5%9E%8B/a%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(19935).then(a.bind(a,34904)),meta:{e:"\n<hr>\n<h2>🧠 模式简介</h2>\n<p><strong>单例模式（Singleton Pattern）</strong> 是一种创建型设计模式，旨在<strong>保证一个类在整个应用程序中只有一个实例</strong>，并提供一个全局访问点。\n常用于管理全局资源（如配置对象、线程池、日志工具、数据库连接等）。</p>\n<hr>\n<h2>📌 适用场景</h2>\n<p>单例模式适用于以下场景：</p>\n<ul>\n<li><strong>全局唯一资源管理</strong>：例如配置中心、日志记录器、线程池、缓存对象。</li>\n<li><strong>避免频繁创建销毁对象</strong>：某些对象初始化开销大（如数据库连接、网络客户端）。</li>\n<li><strong>需要统一访问控制</strong>：如统一的业务网关、单点入口。</li>\n</ul>",r:{minutes:3.08,words:925},t:"☕ 设计模式总结：单例模式（Singleton Pattern）",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/A%E5%88%9B%E5%BB%BA%E5%9E%8B/b%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(10969).then(a.bind(a,7561)),meta:{e:"\n<hr>\n<h2>🧠 模式简介</h2>\n<p>工厂模式（Factory Pattern）是一类创建型设计模式，<strong>将对象的创建过程封装到工厂类中，由工厂决定实例化哪一个具体类</strong>。</p>\n<p>核心思想：客户端不直接 new 对象，通过工厂获取实例，实现解耦与可扩展性。</p>\n<p>工厂模式主要包括三种形式：</p>\n<ol>\n<li>简单工厂模式（Simple Factory）</li>\n<li>工厂方法模式（Factory Method）</li>\n<li>抽象工厂模式（Abstract Factory）</li>\n</ol>\n<hr>\n<h2>1️⃣ 简单工厂模式（Simple Factory）</h2>",r:{minutes:3.37,words:1011},t:"🏭 设计模式总结：工厂模式系列",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/B%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(55246).then(a.bind(a,8260)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>适配器模式（Adapter Pattern）是一种结构型设计模式，它允许将一个类的接口转换成客户端希望的另一个接口。适配器模式让原本接口不兼容的类能够协同工作，常常用于解决现有代码与新代码之间的兼容问题。</p>\n<p>在Java中，适配器模式可以通过**类适配器（Class Adapter）或者对象适配器（Object Adapter）**来实现。下面我将介绍适配器模式的基本概念、使用场景、以及如何在Java中实现适配器模式。</p>\n</div>',r:{minutes:4.37,words:1312},t:"适配器模式（Adapter Pattern）",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%E8%A1%8C%E4%B8%BA%E5%9E%8B/a%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(68716).then(a.bind(a,89481)),meta:{e:"\n<hr>\n<h2>🧠 模式简介</h2>\n<p>观察者模式是一种 <strong>行为型设计模式</strong>，用于 <strong>对象间一对多的依赖关系</strong>。\n当一个对象（称为 <strong>目标对象 / Subject</strong>）的状态发生变化时，<strong>所有依赖它的对象（称为观察者 / Observer）都会得到自动通知并更新</strong>。</p>\n<p>核心思想：<strong>将状态变化的通知逻辑从主体对象中分离出来，使系统松耦合。</strong></p>\n<hr>\n<h2>1️⃣ 参与角色</h2>\n<table>\n<thead>\n<tr>\n<th>角色</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Subject（目标/被观察者）</strong></td>\n<td>拥有状态的对象，维护观察者列表，状态变化时通知观察者</td>\n</tr>\n<tr>\n<td><strong>Observer（观察者）</strong></td>\n<td>依赖目标对象并关注其状态变化，收到通知后执行更新操作</td>\n</tr>\n<tr>\n<td><strong>ConcreteSubject（具体目标）</strong></td>\n<td>实现目标接口，存储状态并在状态变化时通知所有观察者</td>\n</tr>\n<tr>\n<td><strong>ConcreteObserver（具体观察者）</strong></td>\n<td>实现观察者接口，根据目标对象状态执行具体操作</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.17,words:651},t:"👀 设计模式总结：观察者模式（Observer Pattern）",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%E8%A1%8C%E4%B8%BA%E5%9E%8B/b%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(15404).then(a.bind(a,12223)),meta:{e:"\n<hr>\n<h2>🧠 模式简介</h2>\n<p><strong>策略模式</strong>（Strategy Pattern）是一种行为型设计模式。它定义了一系列算法，并将每个算法封装起来，使它们可以互相替换，从而让算法的变化独立于使用算法的客户。</p>\n<p>一句话概括：\n👉 <strong>策略模式就是把一组算法封装成独立的类，让它们可以自由替换，避免硬编码的 if-else。</strong></p>\n<hr>\n<h2>💡 解决的问题</h2>\n<p>在实际开发中，经常会遇到这样的场景：</p>\n<ul>\n<li>一个功能可以通过多种算法或逻辑实现。</li>\n<li>不同情况下需要选择不同的实现。</li>\n<li>如果直接在业务代码里用 <code>if-else</code> 或 <code>switch</code> 来控制，会导致代码臃肿、难以维护。</li>\n</ul>",r:{minutes:2.68,words:804},t:"🎯 策略模式（Strategy Pattern）详解",y:"a"}}],["/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/UML%E5%9B%BE/UML%E7%B1%BB%E5%9B%BE%E7%BB%98%E5%88%B6.html",{loader:()=>a.e(44306).then(a.bind(a,51035)),meta:{e:"\n<figure><figcaption>UML类图箭头</figcaption></figure>\n",r:{minutes:.08,words:23},t:"UML类图绘制",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2.html",{loader:()=>a.e(62033).then(a.bind(a,23798)),meta:{e:'\n<h2>1. 项目打包</h2>\n<p>在 <code>VSCode</code> 中新打开一个终端窗口，执行如下命令，对前端项目进行打包：</p>\n<div class="language-undefined line-numbers-mode" data-highlighter="shiki" data-ext="undefined" data-title="undefined" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm run build</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:3.08,words:924},t:"前端工程打包部署至 Nginx",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/",{loader:()=>a.e(61486).then(a.bind(a,50606)),meta:{d:17291232e5,l:"2024年10月17日",c:["项目"],g:["教程"],e:"\n",r:{minutes:.08,words:23},t:"谷粒商城",i:"fa-brands fa-shopify",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html",{loader:()=>a.e(40010).then(a.bind(a,49837)),meta:{e:'\n<blockquote>\n<p>注释掉webpack.base.conf.js中的配置</p>\n</blockquote>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 关闭eslint检查</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> createLintingRule</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ({</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // test: /\\.(js|vue)$/,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // loader: \'eslint-loader\',</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // enforce: \'pre\',</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // include: [resolve(\'src\'), resolve(\'test\')],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // options: {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //   formatter: require(\'eslint-friendly-formatter\'),</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //   emitWarning: !config.dev.showEslintErrorsInOverlay</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.18,words:54},t:"关闭eslint检查",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>a.e(8741).then(a.bind(a,82575)),meta:{d:17291232e5,l:"2024年10月17日",c:["项目"],g:["教程"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.17,words:51},t:"视频教程",i:"fa-solid fa-play",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html",{loader:()=>a.e(33525).then(a.bind(a,57704)),meta:{e:'\n<h2>什么是跨域</h2>\n<blockquote>\n<p>当一个请求URL的协议，域名，端口三者之间任何一个与当前页面不同即为跨域</p>\n<p><strong>跨域都是目标地址需要配置规则，所以在阿里云网页配置规则。</strong></p>\n</blockquote>\n<h2>为什么有跨域问题</h2>\n<blockquote>\n<p>浏览器有同源策略限制，同源策略规定只有在协议，域名（IP地址）及端口号三者均相同的情况下，一个网页或则JavaScript脚本才能访问另一个网页中的资源。防止恶意网站窃取数据。</p>\n</blockquote>\n<h2>cors</h2>\n<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noopener noreferrer">跨源资源共享（CORS)</a></p>',r:{minutes:.53,words:158},t:"cors跨域访问",y:"a"}}],["/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat-web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html",{loader:()=>a.e(47032).then(a.bind(a,3870)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["分库分表"],e:"\n<h2>安装Zookeeper</h2>\n<p>A. 上传安装包\nzookeeper-3.4.6.tar.gz</p>\n<p>B. 解压\ntar -zxvf zookeeper-3.4.6.tar.gz -C /usr/local/</p>\n<p>​</p>\n<p>C. 创建数据存放目录\ncd /usr/local/zookeeper-3.4.6/\nmkdir data</p>\n<p>​</p>\n<p>D. 修改配置文件名称并配置</p>\n<p>​\tcd config</p>\n<p>​\tmv zoo_sample.cfg zoo.cfg</p>\n<p>​</p>\n<p>E. 配置数据存放目录\ndataDir=/usr/local/zookeeper-3.4.6/data</p>\n<p>F. 启动Zookeeper\nbin/zkServer.sh start</p>\n<p>​\tbin/zkServer.sh status</p>\n",r:{minutes:.66,words:199},t:"MyCat-web安装文档",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html",{loader:()=>a.e(3412).then(a.bind(a,71675)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["分库分表"],e:"\n<h2>JDK安装</h2>\n<p>JDK具体安装步骤如下：</p>\n<h3>1. 上传安装包</h3>\n<p>使用FinalShell自带的上传工具将jdk的二进制发布包上传到Linux</p>\n<p>由于上述在进行文件上传时，选择的上传目录为根目录 /，上传完毕后，我们执行指令 cd / 切换到根目录下，查看上传的安装包。</p>\n<figure><figcaption>image-20210814180702071</figcaption></figure>\n",r:{minutes:1.41,words:424},t:"MyCat安装文档",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/rule.html",{loader:()=>a.e(21728).then(a.bind(a,28780)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["配置文件"],e:"\n<h2>最终配置</h2>\n<p>🐈分片算法及方法实现</p>\n",r:{minutes:3.45,words:1034},t:"rule.xml配置文件",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/schema.html",{loader:()=>a.e(98717).then(a.bind(a,45011)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["配置文件"],e:"\n",r:{minutes:6.62,words:1985},t:"MyCat配置文件schema.xml",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/server.html",{loader:()=>a.e(89009).then(a.bind(a,26790)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["配置文件"],e:'\n<p>😹注意用户访问权限配置，忘记配置会导致mycat-web连接逻辑库失败</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">user</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"root"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> defaultAccount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"password"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;123123&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"schemas"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;DB01,SHOPPING,ITCAST,ITCAST_RW2&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.13,words:940},t:"MyCat配置文件server.xml",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/union%E5%92%8CunionAll.html",{loader:()=>a.e(89949).then(a.bind(a,99627)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["基础","SQL优化"],e:"\n<blockquote>\n<p><code>UNION</code> 和 <code>UNION ALL</code> 都是用于合并两个或多个 <code>SELECT</code> 语句的结果集，但它们之间有以下区别：</p>\n</blockquote>\n",r:{minutes:1.61,words:482},t:"UNION 和 UNION ALL",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/MySQL%E5%8D%B8%E8%BD%BD-Linux.html",{loader:()=>a.e(40742).then(a.bind(a,74927)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL","Linux"],g:["卸载"],e:'\n<h2>MySQL卸载-Linux版</h2>\n<p>停止MySQL服务</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>systemctl stop mysqld</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.47,words:142},t:"MySQL卸载-Linux版",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows%E7%89%88.html",{loader:()=>a.e(18074).then(a.bind(a,31710)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","Windows"],g:["卸载"],e:'\n<h3>1. 停止MySQL服务</h3>\n<p>win+R 打开运行，输入 services.msc 点击 "确定" 调出系统服务。</p>\n',r:{minutes:.75,words:225},t:"MySQL卸载文档-Windows版",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html",{loader:()=>a.e(66544).then(a.bind(a,21373)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","数据库"],g:["笔记"],e:'\n<blockquote>\n<p><a href="https://www.bilibili.com/video/BV1Kr4y1i7ru/?share_source=copy_web&amp;vd_source=e43c1de8e41e1499f7f3fdb03fba0eb6" target="_blank" rel="noopener noreferrer">黑马程序员 MySQL数据库入门到精通，从mysql安装到mysql高级、mysql优化全囊括</a></p>\n</blockquote>\n<h1>1.基础篇</h1>\n<h2>通用语法及分类</h2>\n<ul>\n<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>\n<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>\n<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>\n<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>\n</ul>\n',r:{minutes:79.08,words:23723},t:"MySQL学习笔记",i:"fa-solid fa-database",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html",{loader:()=>a.e(56541).then(a.bind(a,76747)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["安全"],e:"\n<blockquote>\n<p>数据库授权是数据库管理中至关重要的一环，通过授权可以精确控制用户对数据库的访问和操作权限。在 MySQL 中，我们可以使用一系列命令来管理用户权限，包括创建用户、授予权限、撤销权限以及刷新权限。以下是一些常见的权限类型以及相关操作示例：</p>\n</blockquote>\n",r:{minutes:1.63,words:490},t:"MySQL 数据库授权管理指南",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(61685).then(a.bind(a,34698)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["安全"],e:"\n<h2>关闭root远程登录</h2>\n<p>要查看 'root' 用户的连接权限，可以执行以下步骤：</p>\n<ol>\n<li>\n<p><strong>登录到 MySQL 数据库：</strong></p>\n<p>使用具有管理员权限的用户（例如 'root' 用户）登录到 MySQL 数据库。</p>\n</li>\n</ol>\n",r:{minutes:3.43,words:1028},t:"数据库安全配置",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",{loader:()=>a.e(12880).then(a.bind(a,58730)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["事务"],e:"\n<blockquote>\n<ul>\n<li><strong>读未提交 (Read Uncommitted)</strong>：事务可以读取其他事务尚未提交的数据，可能会读取到脏数据。</li>\n<li><strong>读已提交 (Read Committed)</strong>：事务只能读取其他事务已提交的数据，避免了脏读。</li>\n<li><strong>可重复读 (Repeatable Read)</strong>：事务中读取的数据在整个事务期间都是一致的，避免了不可重复读。</li>\n<li><strong>串行化 (Serializable)</strong>：事务完全隔离，避免了幻读。</li>\n</ul>\n</blockquote>\n",r:{minutes:3.79,words:1136},t:"数据库的隔离级别",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(96114).then(a.bind(a,68828)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL"],g:["安装","yum安装","docker安装"],e:"\n<h2>普通安装</h2>\n<h3>获取源安装包</h3>\n<ul>\n<li>确定当前linux系统内核版本：[root@localhost ~]# cat /etc/redhat-release</li>\n<li>进入官网下载匹配的安装包：https://dev.mysql.com/downloads/repo/yum/</li>\n<li>假设为centos7则对应的版本为</li>\n<li><figcaption>img</figcaption></li>\n</ul>\n",r:{minutes:2.64,words:792},t:"MySQL8.0使用Yum或docker安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(90376).then(a.bind(a,60361)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL","Linux"],g:["安装"],e:"\n<h2>MySQL8.0.26-Linux版离线安装</h2>\n<h3>1. 准备一台Linux服务器</h3>\n<p>云服务器或者虚拟机都可以;</p>\n<p>Linux的版本为 CentOS7;</p>\n",r:{minutes:1.55,words:466},t:"MySQL8.0.26-Linux版离线安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/MySQL%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(71754).then(a.bind(a,3836)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","Windows"],g:["安装"],e:"\n<h3>1. 安装</h3>\n<p><strong>1). 双击官方下来的安装包文件</strong></p>\n<figure><figcaption>image-20210916184347938</figcaption></figure>\n",r:{minutes:1.13,words:338},t:"MySQL安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/mysql%E6%98%AF%E4%BB%80%E4%B9%88_%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html",{loader:()=>a.e(23126).then(a.bind(a,10047)),meta:{e:'\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504012300300.jpeg" alt="mysql是什么" tabindex="0" loading="lazy"><figcaption>mysql是什么</figcaption></figure>\n<p>你是一个程序员，你做了一个网站应用，站点里的用户数据，需要存到某个地方，方便随时读写。</p>\n<p>很容易想到可以将数据存到文件里。</p>\n<p>但如果数据量很大，想从大量文件数据中查找某部分数据，并更新，是一件很痛苦的事情。</p>',r:{minutes:12.91,words:3874},t:"mysql 是什么？架构是怎么样的？",y:"a"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html",{loader:()=>a.e(15107).then(a.bind(a,89467)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["踩坑"],e:'\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">2003-Can’t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ‘XXX.XX.XX.XX’（10060）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.65,words:196},t:"Navicat连接mysql报错",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html",{loader:()=>a.e(1736).then(a.bind(a,40680)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["踩坑"],e:"\n<blockquote>\n<p>错误信息：“2059 - Authentication plugin 'caching_sha2_password' cannot be loaded”。这个问题通常是由于MySQL 8.0默认使用了<code>caching_sha2_password</code>身份验证插件而导致的。该插件需要相关的共享库文件来正常工作，但如果这些文件缺失或无法加载，就会导致身份验证插件无法正确加载，从而导致错误的出现。</p>\n</blockquote>\n",r:{minutes:.93,words:279},t:"caching_sha2_password无法加载",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/mysql-uroot-p%E6%8A%A5%E9%94%99.html",{loader:()=>a.e(60385).then(a.bind(a,60753)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["踩坑"],e:"\n<blockquote>\n<p>使用xshell登录MySQL时,<code>mysql -uroot -p</code>报错Can't connect to local MySQL server through socket '/tmp/mysql.sock'</p>\n</blockquote>\n",r:{minutes:.36,words:107},t:"mysql -uroot -p报错",i:"pen-to-square",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/DCL%E8%AF%AD%E5%8F%A5%E6%BC%94%E7%A4%BA.html",{loader:()=>a.e(79513).then(a.bind(a,63441)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建用户 itcast , 只能够在当前主机localhost访问, 密码123456;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">itcast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'localhost\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> identified </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'123456\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建用户 heima , 可以在任意主机访问该数据库, 密码123456 ;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">heima</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> identified </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'123456\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 修改用户 heima 的访问密码为 1234 ;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> identified </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mysql_native_password </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'1234\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 删除itcast@localhost用户</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'itcast\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'localhost\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 查询权限</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">show grants </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 授予权限</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">grant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> all </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> itcast.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 撤销权限</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">revoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> all </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> itcast.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.41,words:123},t:"DCL语句演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(54892).then(a.bind(a,83958)),meta:{e:"\n<h2>数值类型</h2>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>大小</th>\n<th>有符号(SIGNED)范围</th>\n<th>无符号(UNSIGNED)范围</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TINYINT</td>\n<td>1 byte</td>\n<td>(-128，127)</td>\n<td>(0，255)</td>\n<td>小整数值</td>\n</tr>\n<tr>\n<td>SMALLINT</td>\n<td>2 bytes</td>\n<td>(-32768，32767)</td>\n<td>(0，65535)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>MEDIUMINT</td>\n<td>3 bytes</td>\n<td>(-8388608，8388607)</td>\n<td>(0，16777215)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>INT或INTEGER</td>\n<td>4 bytes</td>\n<td>(-2147483648，2147483647)</td>\n<td>(0，4294967295)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>BIGINT</td>\n<td>8 bytes</td>\n<td>(-2<sup>63，2</sup>63-1)</td>\n<td>(0，2^64-1)</td>\n<td>极大整数值</td>\n</tr>\n<tr>\n<td>FLOAT</td>\n<td>4 bytes</td>\n<td>(-3.402823466 E+38，3.402823466351 E+38)</td>\n<td>0 和 (1.175494351 E-38，3.402823466 E+38)</td>\n<td>单精度浮点数值</td>\n</tr>\n<tr>\n<td>DOUBLE</td>\n<td>8 bytes</td>\n<td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td>\n<td>0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td>\n<td>双精度浮点数值</td>\n</tr>\n<tr>\n<td>DECIMAL</td>\n<td></td>\n<td>依赖于M(精度)和D(标度)的值</td>\n<td>依赖于M(精度)和D(标度)的值</td>\n<td>小数值(精确定点数)</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.56,words:467},t:"MySQL数据类型",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%E6%BC%94%E7%A4%BA.html",{loader:()=>a.e(41671).then(a.bind(a,2396)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ---------------------------- 事务操作 ----------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 数据准备</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    money</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'余额\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'账户表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account(id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 恢复数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@autocommit;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@autocommit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置为手动提交</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 转账操作 (张三给李四转账1000)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询张三账户余额</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 将张三账户余额-1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">程序执行报错 ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 将李四账户余额+1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 提交事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 回滚事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">rollback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 方式二</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 转账操作 (张三给李四转账1000)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">start transaction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询张三账户余额</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 将张三账户余额-1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">程序执行报错 ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 将李四账户余额+1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 提交事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 回滚事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">rollback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 查看事务隔离级别</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@transaction_isolation;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置事务隔离级别</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> session</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> transaction</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> isolation</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> level</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> read</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> uncommitted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> session</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> transaction</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> isolation</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> level</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> repeatable</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.96,words:289},t:"事务操作演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0.html",{loader:()=>a.e(80057).then(a.bind(a,41389)),meta:{e:'\n<h3>1. <strong>字符串函数</strong></h3>\n<p>这些函数用于操作字符串数据类型。</p>\n<ul>\n<li>\n<p><strong><code>CONCAT(str1, str2, ...)</code></strong><br>\n连接多个字符串。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> CONCAT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\' \'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'World\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>LENGTH(str)</code></strong><br>\n返回字符串的字节长度。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> LENGTH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>SUBSTRING(str, start, length)</code></strong><br>\n提取字符串的一部分。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> SUBSTRING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 输出 \'Hel\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>UPPER(str)</code></strong><br>\n将字符串转换为大写。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> UPPER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>LOWER(str)</code></strong><br>\n将字符串转换为小写。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> LOWER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'HELLO\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>TRIM(str)</code></strong><br>\n删除字符串两端的空格。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> TRIM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'   Hello   \'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>REPLACE(str, old_substring, new_substring)</code></strong><br>\n替换字符串中的子字符串。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> REPLACE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello World\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'World\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>LPAD(str, length, pad_string)</code></strong><br>\n将字符串填充到指定长度，填充发生在字符串的左侧。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> LPAD(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'123\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 输出 \'00123\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>RPAD(str, length, pad_string)</code></strong><br>\n将字符串填充到指定长度，填充发生在字符串的右侧。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> RPAD(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'123\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 输出 \'12300\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:3.41,words:1022},t:"函数",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0%E6%BC%94%E7%A4%BA.html",{loader:()=>a.e(41263).then(a.bind(a,75730)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ---------------------------------------------------- 函数演示 ------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 字符串函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- concat</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> concat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\' MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- lower</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> lower</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- upper</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> upper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- lpad</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lpad(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'-\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- rpad</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> rpad(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'-\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- trim</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> trim</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\' Hello  MySQL \'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- substring</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> substring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例:  由于业务需求变更，企业员工的工号，统一为5位数，目前不足5位数的全部在前面补0。比如： 1号员工的工号应该为00001。</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> workno </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lpad(workno, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- -------------------------------------------------------------------------------------------------------------</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 数值函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ceil</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ceil(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- floor</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> floor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- mod</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mod(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- rand</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> rand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- round</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> round</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">344</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例: 通过数据库的函数，生成一个六位数的随机验证码。</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lpad(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">round</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">rand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- --------------------------------------------------------------------------------------------------------</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 日期函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- curdate()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> curdate();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- curtime()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> curtime();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- now()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- YEAR , MONTH , DAY</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> YEAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> MONTH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> DAY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- date_add</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> date_add(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), INTERVAL </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">70</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> YEAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- datediff</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> datediff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2021-10-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2021-12-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例: 查询所有员工的入职天数，并根据入职天数倒序排序。</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">datediff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(curdate(), entrydate) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'entrydays\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">order by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydays </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">desc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 流程控制函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- if</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(false, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Ok\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Error\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ifnull</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ifnull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Ok\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Default\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ifnull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Default\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ifnull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Default\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- case when then else end</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 需求: 查询emp表的员工姓名和工作地址 (北京/上海 ----&gt; 一线城市 , 其他 ----&gt; 二线城市)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> workaddress </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">when</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'北京\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'一线城市\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'上海\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'一线城市\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'二线城市\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'工作地址\'</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例: 统计班级各个学员的成绩，展示的规则如下：</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- &gt;= 85，展示优秀</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- &gt;= 60，展示及格</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 否则，展示不及格</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> score</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    math </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'数学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    english </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'英语\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    chinese </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'语文\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学员成绩表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> score(id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, math, english, chinese) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">67</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">88</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">95</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Rose\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">66</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">90</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Jack\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">56</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">98</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">76</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> math </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'优秀\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> math </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'不及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'数学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> english </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'优秀\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> english </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'不及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'英语\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> chinese </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'优秀\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> chinese </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'不及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'语文\'</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> score;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.65,words:495},t:"函数演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA.html",{loader:()=>a.e(46034).then(a.bind(a,60541)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ---------------------------------------&gt; 多表查询案例 &lt;----------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> salgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    grade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    losal </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    hisal </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'薪资等级表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">25000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">25001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询员工的姓名、年龄、职位、部门信息 （隐式内连接）</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询年龄小于30岁的员工的姓名、年龄、职位、部门信息（显式内连接）</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">inner join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 查询拥有员工的部门ID、部门名称</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select distinct</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 4. 查询所有年龄大于40岁的员工, 及其归属的部门名称; 如果员工没有分配部门, 也需要展示出来</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 外连接</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 5. 查询所有员工的工资等级</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , salgrade</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件 : emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.* , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">grade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , salgrade s </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.* , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">grade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , salgrade s </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> between</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 6. 查询 "研发部" 所有员工的信息及 工资等级</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , salgrade , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件 : emp.salary between salgrade.losal and salgrade.hisal , emp.dept_id = dept.id</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 查询条件 : dept.name = \'研发部\'</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.* , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">grade</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d , salgrade s </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> between</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 7. 查询 "研发部" 员工的平均工资</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件 :  emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e, dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 8. 查询工资比 "灭绝" 高的员工信息。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "灭绝" 的薪资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'灭绝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询比她工资高的员工数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'灭绝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 9. 查询比平均薪资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询员工的平均薪资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询比平均薪资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 10. 查询低于本部门平均工资的员工信息</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询指定部门平均薪资  1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e1 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e1 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询低于本部门平均工资的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e2 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e1 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 11. 查询所有的部门信息, 并统计部门的员工人数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'人数\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 12. 查询所有学生的选课情况, 展示出学生名称, 学号, 课程名称</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: student , course , student_course</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: student.id = student_course.studentid , course.id = student_course.courseid</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">no</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student s , student_course sc , course c </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> sc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">studentid</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> sc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">courseid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.44,words:732},t:"多表查询案例演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%BC%94%E7%A4%BA.html",{loader:()=>a.e(77875).then(a.bind(a,65707)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ------------------------------------&gt; 多表查询 &lt;--------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 准备数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门名称\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    job </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职位\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'薪资\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'入职时间\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'直属领导ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门ID\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'员工表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加外键</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总经办\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'人事部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, age, job,salary, entrydate, managerid, dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'金庸\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">66</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总裁\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'项目经理\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2005-12-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杨逍\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-11-03\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'韦一笑\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">48</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2002-02-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'常遇春\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-09-07\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'小昭\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'程序员鼓励师\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'灭绝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'财务总监\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2002-09-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'周芷若\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'会计\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">48000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2006-06-02\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'丁敏君\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'出纳\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5250</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2009-05-13\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'赵敏\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'市场部总监\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'鹿杖客\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">56</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职员\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3750</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2006-10-03\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'鹤笔翁\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职员\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3750</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2007-05-09\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">13</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'方东白\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职员\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2009-02-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张三丰\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">88</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售总监\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'俞莲舟\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">38</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'宋远桥\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'陈友谅\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2011-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 多表查询 -- 笛卡尔积</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp , dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 内连接演示</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询每一个员工的姓名 , 及关联的部门的名称 (隐式内连接实现)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp , dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询每一个员工的姓名 , 及关联的部门的名称 (显式内连接实现)  --- INNER JOIN ... ON ...</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">inner join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 外连接演示</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询emp表的所有数据, 和对应的部门信息(左外连接)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp, dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left outer join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询dept表的所有数据, 和对应的员工信息(右外连接)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> d.*, e.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">right outer join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> d.*, e.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left outer join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 自连接</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询员工 及其 所属领导的名字</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp a , emp b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">managerid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导, 也需要查询出来</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp a , emp b</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'员工\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'领导\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">managerid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- union all , union</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 将薪资低于 5000 的员工 , 和 年龄大于 50 岁的员工全部查询出来.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">union all</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">union</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- -------------------------------------- 子查询 ------------------------</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 标量子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询 "销售部" 的所有员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "销售部" 部门ID</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 根据销售部部门ID, 查询员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询在 "方东白" 入职之后的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 方东白 的入职日期</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'方东白\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询指定入职日期之后入职的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'方东白\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 列子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询 "销售部" 和 "市场部" 的所有员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "销售部" 和 "市场部" 的部门ID</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 根据部门ID, 查询员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询比 财务部 所有人工资都高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询所有 财务部 人员工资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 比 财务部 所有人工资都高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> all ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 查询比研发部其中任意一人工资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询研发部所有人工资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 比研发部其中任意一人工资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> some ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 行子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "张无忌" 的薪资及直属领导</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary, managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (salary,managerid) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary, managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "鹿杖客" , "宋远桥" 的职位和薪资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> job, salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'鹿杖客\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'宋远桥\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (job,salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> job, salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'鹿杖客\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'宋远桥\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询入职日期是 "2006-01-01" 之后的员工信息 , 及其部门信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 入职日期是 "2006-01-01" 之后的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'2006-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询这部分员工, 对应的部门信息;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, d.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'2006-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:4.86,words:1459},t:"多表查询演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80DCL.html",{loader:()=>a.e(76062).then(a.bind(a,16669)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 MySQL 中，<strong>数据控制语言（DCL）</strong> 主要用于管理用户权限和访问控制。DCL 语句可以控制哪些用户可以访问数据库以及他们能够执行的操作。常见的 DCL 类型语句包括：</p>\n</div>\n<h3>1. <strong>CREATE USER</strong></h3>\n<ul>\n<li>用于创建新的数据库用户。</li>\n<li><strong>语法</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> USER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'host\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> IDENTIFIED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">BY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'password\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li><strong>示例</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> USER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">user1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'localhost\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> IDENTIFIED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">BY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'password123\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:1.94,words:581},t:"数据控制语言（DCL）",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87.html",{loader:()=>a.e(89898).then(a.bind(a,86827)),meta:{d:17416512e5,l:"2025年3月11日",c:["MySQL","数据库"],g:["笔记"],e:"\n<h2>1.1 通用语法及分类</h2>\n<ul>\n<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>\n<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>\n<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>\n<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>\n</ul>\n",r:{minutes:18.54,words:5562},t:"1.基础篇",i:"fa-database",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%BA%A6%E6%9D%9F%E5%8F%8A%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%BC%94%E7%A4%BA.html",{loader:()=>a.e(46695).then(a.bind(a,42798)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ------------------------------------------------------------------- 约束演示 ----------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unique</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'状态\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    gender </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'性别\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 插入数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom2\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom3\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom3\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom4\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom5\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom5\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">121</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom5\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- --------------------------------------------- 约束 (外键) -------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 准备数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门名称\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总经办\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    job </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职位\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'薪资\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'入职时间\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'直属领导ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门ID\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'员工表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, age, job,salary, entrydate, managerid, dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'金庸\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">66</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总裁\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'项目经理\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2005-12-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杨逍\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-11-03\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'韦一笑\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">48</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2002-02-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'常遇春\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-09-07\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'小昭\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'程序员鼓励师\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加外键</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 删除外键</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 外键的删除和更新行为</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> cascade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on delete cascade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> on delete</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- -------------------------------- 多表关系 演示 ---------------------------------------------</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 多对多 ----------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    no</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学号\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学生表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'黛绮丝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100101\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'谢逊\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100102\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'殷天正\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100103\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'韦一笑\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100104\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> course</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'课程名称\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'课程表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> course </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Java\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'PHP\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) , (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hadoop\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> student_course</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    studentid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学生ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    courseid  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'课程ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_courseid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (courseid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> course (id),</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_studentid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (studentid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student (id)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学生课程中间表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student_course </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- --------------------------------- 一对一 ---------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tb_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    gender </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1: 男 , 2: 女\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    phone </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'手机号\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户基本信息表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tb_user_edu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    degree </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学历\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    major </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'专业\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    primaryschool </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    middleschool </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    university </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'大学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    userid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unique</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_userid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (userid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tb_user(id)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户教育信息表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tb_user(id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, age, gender, phone) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'黄渤\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">45</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800001111\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'冰冰\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800002222\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'码云\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">55</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800008888\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'李彦宏\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800009999\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tb_user_edu(id, degree, major, primaryschool, middleschool, university, userid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'本科\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'舞蹈\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'静安区第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'静安区第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'北京舞蹈学院\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'硕士\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'表演\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'朝阳区第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'朝阳区第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'北京电影学院\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'本科\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'英语\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杭州市第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杭州市第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杭州师范大学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'本科\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'应用数学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'阳泉第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'阳泉区第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'清华大学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.93,words:880},t:"约束及多表关系演示",y:"a"}}],["/Database/MySQL/%E5%B7%A5%E5%85%B7/%E9%97%AA%E5%9B%9E-flashback.html",{loader:()=>a.e(35174).then(a.bind(a,77111)),meta:{e:"\n<h3><strong>1. 简介</strong></h3>\n<p>mysqlbinlog flashback（闪回）用于快速恢复由于误操作丢失的数据。在DBA误操作时，可以把数据库恢复到以前某个时间点（或者说某个binlog的某个pos）。比如忘了带where条件的update、delete操作，传统的恢复方式是利用全备+二进制日志前滚进行恢复，相比于传统的全备+增备，flashback显然更为快速、简单。</p>\n<p>目前MySQL的flashback功能是利用binlog完成的，第一个实现该功能的是阿里云的<strong>彭立勋</strong>， 他在MySQL 5.5版本上就已实现，并将其提交给MariaDB。</p>",r:{minutes:1.6,words:481},t:"闪回-flashback",y:"a"}}],["/Database/MySQL/%E8%BF%90%E7%BB%B4/MyCat%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E5%90%AB%E4%B9%89.html",{loader:()=>a.e(26145).then(a.bind(a,11166)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","数据库"],g:["配置文件"],e:"\n",r:{minutes:2.7,words:810},t:"MyCat系统配置信息含义",i:"fa-solid fa-database",y:"a"}}],["/Database/MySQL/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E7%AF%87.html",{loader:()=>a.e(55489).then(a.bind(a,27637)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","数据库"],g:["讲义","阅读完毕"],e:'\n<h2>日志</h2>\n<h3>错误日志</h3>\n<p>错误日志是 MySQL 中最重要的日志之一，它记录了当 mysqld 启动和停止时，以及服务器在运行过程中发生任何严重错误时的相关信息当数据库出现任何故障导致无法正常使用时，建议首先查看此日志。</p>\n<p>该日志是默认开启的，默认存放目录 /var/log/，默认的日志文件名为 mysqld.log 。查看日志位置：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>show variables like \'%log_error%\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:8.94,words:2683},t:"运维篇",i:"fa-solid fa-database",y:"a"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html",{loader:()=>a.e(37179).then(a.bind(a,53527)),meta:{e:"<h3></h3>\n<h1>1.为什么InnoDB存储引擎选择使用B+tree索引结构？</h1>\n<blockquote>\n<p>相对于二叉树，层级更少，搜索效率高；\n对于B-tree,无论是叶子节点还是非叶子节点，都会保存数据，这样导致一\n页中存储的键值减少，指针跟着减少，要同样保存大量数据，只能增加树的\n高度，导致性能降低；\n相对Hash索引，B+tree支持范围匹配及排序操作；</p>\n</blockquote>\n",r:{minutes:.4,words:119},t:"1.为什么InnoDB存储引擎选择使用B+tree索引结构？",y:"a"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%87%BA%E7%8E%B0%E8%AF%BB%E5%8F%96%E8%AE%B0%E5%BD%95%E7%9A%84%E4%BA%8B%E5%8A%A1id%E6%AF%94%E5%88%9B%E5%BB%BAreadview%E7%9A%84%E4%BA%8B%E5%8A%A1id%E5%A4%A7.html",{loader:()=>a.e(88888).then(a.bind(a,79334)),meta:{d:17416512e5,l:"2025年3月11日",c:["MySQL"],g:["事务","了解"],e:"\n",r:{minutes:2.85,words:854},t:"1.什么情况下会出现读取记录的事务id比创建readview的事务id大",i:"pen-to-square",y:"a"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/%E7%AC%94%E8%AE%B0-%E8%BF%9B%E9%98%B6%E7%AF%87.html",{loader:()=>a.e(94430).then(a.bind(a,418)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","数据库"],g:["笔记","阅读完毕"],e:"\n<h2>2.1 存储引擎</h2>\n<p>MySQL体系结构：</p>\n<p>\n</p>\n<p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。\n默认存储引擎是InnoDB。</p>\n",r:{minutes:52.86,words:15859},t:"2.进阶篇",i:"fa-database",y:"a"}}],["/Database/MySQL/%E9%9A%8F%E7%AC%94/CTE%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90d.html",{loader:()=>a.e(64922).then(a.bind(a,57663)),meta:{e:'\n<p>在 SQL 开发中，CTE（Common Table Expression，公共表表达式）是一种提高可读性和可维护性的工具。本文将系统介绍 CTE 的用法、优势、性能注意事项以及在不同数据库中的特性。</p>\n<hr>\n<h2>1️⃣ CTE 的基本概念</h2>\n<p>CTE 是 SQL-92 引入的语法糖，用于在 SQL 语句中定义一个临时的结果集，供后续查询使用。\nCTE 可以让 SQL 更清晰，尤其是在多层嵌套查询或递归查询中非常有用。</p>\n<p><strong>语法示例：</strong></p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">WITH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> cte_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> column1, column2</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    FROM</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> condition</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> cte_name</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ...</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.85,words:854},t:"📝 SQL CTE（Common Table Expression）全面解析",y:"a"}}],["/Database/MySQL/%E9%9A%8F%E7%AC%94/FROM%20A_%20B%20%E4%B8%8E%20JOIN%20%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(20932).then(a.bind(a,22185)),meta:{e:'\n<p>在日常开发或面试中，经常会被问到：\n<strong>「SQL 里 <code>FROM A, B</code> 和 <code>JOIN</code> 有什么区别？」</strong>\n很多人以为它们是等价的，其实并不完全正确。本文将深入解析这两种写法的区别，并扩展一些常见的陷阱和最佳实践。</p>\n<hr>\n<h2>1️⃣ 基本写法对比</h2>\n<h3>🔹 传统逗号分隔</h3>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> A, B</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">WHERE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.63,words:789},t:"📝 SQL 中 FROM A, B 与 JOIN 的区别详解",y:"a"}}],["/Database/Redis/1.%E5%85%A5%E9%97%A8/Redis%E5%9F%BA%E7%A1%80%E7%AF%87.html",{loader:()=>a.e(91547).then(a.bind(a,45725)),meta:{d:17291232e5,l:"2024年10月17日",c:["Redis"],g:["讲义","阅读完毕"],e:"\n<h2>开篇导读</h2>\n<p><strong>理想课程</strong></p>\n<p>小伙伴们理想的课程一定是能够通过讲解的方式，得到如下这些启发，我们的课程会从基础到精通，从redis小白，到redis大牛，还在等什么，这套课程一定就是你最适合你的课程~</p>\n",r:{minutes:27.31,words:8193},t:"基础篇Redis",i:"pen-to-square",O:1,y:"a"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87-%E5%9C%A8%E7%BA%BF.html",{loader:()=>a.e(49557).then(a.bind(a,27020)),meta:{d:17397504e5,l:"2025年2月17日",c:["Redis"],g:["讲义","阅读完毕"],e:"\n<h2>开篇导读</h2>\n<p>亲爱的小伙伴们大家好，马上咱们就开始实战篇的内容了，相信通过本章的学习，小伙伴们就能理解各种redis的使用啦，接下来咱们来一起看看实战篇我们要学习一些什么样的内容</p>\n<ul>\n<li>短信登录</li>\n</ul>\n<p>这一块我们会使用redis共享session来实现</p>\n<ul>\n<li>商户查询缓存</li>\n</ul>\n<p>通过本章节，我们会理解缓存击穿，缓存穿透，缓存雪崩等问题，让小伙伴的对于这些概念的理解不仅仅是停留在概念上，更是能在代码中看到对应的内容</p>\n<ul>\n<li>优惠卷秒杀</li>\n</ul>\n<p>通过本章节，我们可以学会Redis的计数器功能， 结合Lua完成高性能的redis操作，同时学会Redis分布式锁的原理，包括Redis的三种消息队列</p>",r:{minutes:109.65,words:32895},t:"实战篇Redis",i:"pen-to-square",O:2,y:"a"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87.html",{loader:()=>a.e(57011).then(a.bind(a,21974)),meta:{d:17397504e5,l:"2025年2月17日",c:["Redis"],g:["讲义","阅读完毕"],e:"\n<h2>开篇导读</h2>\n<p>亲爱的小伙伴们大家好，马上咱们就开始实战篇的内容了，相信通过本章的学习，小伙伴们就能理解各种redis的使用啦，接下来咱们来一起看看实战篇我们要学习一些什么样的内容</p>\n<ul>\n<li>短信登录</li>\n</ul>\n<p>这一块我们会使用redis共享session来实现</p>\n<ul>\n<li>商户查询缓存</li>\n</ul>\n<p>通过本章节，我们会理解缓存击穿，缓存穿透，缓存雪崩等问题，让小伙伴的对于这些概念的理解不仅仅是停留在概念上，更是能在代码中看到对应的内容</p>\n<ul>\n<li>优惠卷秒杀</li>\n</ul>\n<p>通过本章节，我们可以学会Redis的计数器功能， 结合Lua完成高性能的redis操作，同时学会Redis分布式锁的原理，包括Redis的三种消息队列</p>",r:{minutes:110.93,words:33278},t:"实战篇Redis",i:"pen-to-square",O:2,y:"a"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/pending-list.html",{loader:()=>a.e(38523).then(a.bind(a,85514)),meta:{e:'\n<p>🍃<strong>Pending List</strong>存的就是已经分配给消费者了，但是消费者还没有处理完，没有确认的消息</p>\n<p><code>命令 1: XREADGROUP GROUP g1 c1 COUNT 1 BLOCK 2000 STREAMS stream.orders &gt;</code></p>\n<p><code>&gt;</code>: 这个符号表示消费者 <code>c1</code> 只会读取那些 <strong>尚未被其他消费者组消费的消息</strong>【<strong>pending-list</strong>】。也就是说，<code>&gt;</code> 确保了它只会消费那些 "未被任何消费者确认" 或 "尚未被处理" 的消息。</p>',r:{minutes:2.04,words:611},t:"Pending List",y:"a"}}],["/Database/Redis/4.%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%90%86%E7%AF%87.html",{loader:()=>a.e(25206).then(a.bind(a,248)),meta:{e:"\n<h2>1、原理篇-Redis数据结构</h2>\n<h3>1.1 Redis数据结构-动态字符串</h3>\n<p>我们都知道Redis中保存的Key是字符串，value往往是字符串或者字符串的集合。可见字符串是Redis中最常用的一种数据结构。</p>\n<p>不过Redis没有直接使用C语言中的字符串，因为C语言字符串存在很多问题：\n获取字符串长度的需要通过运算\n非二进制安全\n不可修改\nRedis构建了一种新的字符串结构，称为简单动态字符串（Simple Dynamic String），简称SDS。\n例如，我们执行命令：</p>\n<figure><figcaption>1653984583289</figcaption></figure>",r:{minutes:45.83,words:13749},t:"Redis原理篇",y:"a"}}],["/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/Redis%E9%9B%86%E7%BE%A4.html",{loader:()=>a.e(80544).then(a.bind(a,45954)),meta:{e:'\n<p>本章是基于CentOS7下的Redis集群教程，包括：</p>\n<ul>\n<li>单机安装Redis</li>\n<li>Redis主从</li>\n<li>Redis分片集群</li>\n</ul>\n<h1>1.单机安装Redis</h1>\n<p>首先需要安装Redis所需要的依赖：</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tcl</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:8.91,words:2672},t:"Redis集群",y:"a"}}],["/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/%E5%AE%89%E8%A3%85Canal.html",{loader:()=>a.e(69732).then(a.bind(a,40710)),meta:{e:"\n<p>下面我们就开启mysql的主从同步机制，让Canal来模拟salve</p>\n<h1>1.开启MySQL主从</h1>\n<p>Canal是基于MySQL的主从同步功能，因此必须先开启MySQL的主从功能才可以。</p>\n<p>这里以之前用Docker运行的mysql为例：</p>\n<h2>1.1.开启binlog</h2>\n<p>打开mysql容器挂载的日志文件，我的在<code>/tmp/mysql/conf</code>目录:</p>\n<figure><figcaption>image-20210813153241537</figcaption></figure>\n<p>修改文件：</p>",r:{minutes:2.1,words:631},t:"安装和配置Canal",y:"a"}}],["/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/%E5%AE%89%E8%A3%85OpenResty.html",{loader:()=>a.e(89526).then(a.bind(a,93088)),meta:{e:'\n<h1>1.安装</h1>\n<p>首先你的Linux虚拟机必须联网</p>\n<h2><strong>1）安装开发库</strong></h2>\n<p>首先要安装OpenResty的依赖开发库，执行命令：</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pcre-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> openssl-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gcc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --skip-broken</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.9,words:871},t:"安装OpenResty",y:"a"}}],["/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/%E6%A1%88%E4%BE%8B%E5%AF%BC%E5%85%A5%E8%AF%B4%E6%98%8E.html",{loader:()=>a.e(77429).then(a.bind(a,39018)),meta:{e:'\n<p>为了演示多级缓存，我们先导入一个商品管理的案例，其中包含商品的CRUD功能。我们将来会给查询商品添加多级缓存。</p>\n<h1>1.安装MySQL</h1>\n<p>后期做数据同步需要用到MySQL的主从功能，所以需要大家在虚拟机中，利用Docker来运行一个MySQL容器。</p>\n<h2>1.1.准备目录</h2>\n<p>为了方便后期配置MySQL，我们先准备两个目录，用于挂载容器的数据和配置文件目录：</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 进入/tmp目录</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /tmp</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 创建文件夹</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mysql</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 进入mysql目录</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mysql</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.8,words:1139},t:"案例导入说明",y:"a"}}],["/Database/Redis/%E9%9A%8F%E7%AC%94/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B7%B3%E8%A1%A8.html",{loader:()=>a.e(2750).then(a.bind(a,48340)),meta:{e:"\n<h2>1. 背景：为什么需要跳表？</h2>\n<ul>\n<li><strong>普通链表查找问题</strong>\n链表在查找时只能从头一个一个遍历，时间复杂度是 <strong>O(N)</strong>。</li>\n<li><strong>目标</strong>\n希望在链表上“加速”查找，就像高速公路有“匝道”一样，不必从头到尾走一遍。</li>\n</ul>\n<hr>\n<h2>2. 核心思想：在链表上加“多层索引”</h2>\n<figure><figcaption>img</figcaption></figure>\n<p>跳表（Skip List）就是在有序链表的基础上，增加 <strong>多层“跳跃”指针</strong>，用空间换时间：</p>",r:{minutes:5.94,words:1783},t:"什么是跳表",y:"a"}}],["/Interview/Java/01-Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(43231).then(a.bind(a,58351)),meta:{e:'\n<h2>概念</h2>\n<h3>1.说一下Java的特点？</h3>\n<p>主要有以下的特点：</p>\n<ul>\n<li><strong>平台无关性</strong>：Java的“编写一次，运行无处不在"哲学是其最大的特点之一。Java编译器将源代码编译成\n字节码(bytecode)，该字节码可以在任何安装了Java虚拟机（JVM)的系统上运行。</li>\n<li><strong>面向对象</strong>：Java是一门严格的面向对象编程语言，几乎一切都是对象。面向对象编程(OOP)特性使\n得代码更易于维护和重用，包括类(class)、对象（object)、继承(inheritance)、多态\n(polymorphism)、抽象（abstraction)和封装(encapsulation)。</li>\n<li><strong>内存管理</strong>：Java有自己的垃圾回收机制，自动管理内存和回收不再使用的对象。这样，开发者不需要\n手动管理内存，从而减少内存泄漏和其他内存相关的问题。</li>\n</ul>',r:{minutes:72.35,words:21704},t:"Java基础面试题",y:"a"}}],["/Interview/Java/01-Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98A.html",{loader:()=>a.e(8532).then(a.bind(a,48341)),meta:{a:"三分恶&沉默王二",d:17498592e5,l:"2025年6月14日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><figcaption>面渣逆袭Java 基础篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>2.3 万字 68 张手绘图，详解 56 道 Java 基础面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/t7EYyF0VGEg1rAZut9dwSw" target="_blank" rel="noopener noreferrer">转载链接</a>，原作者：星球嘉宾三分恶，戳<a href="https://mp.weixin.qq.com/s/M-6RSRcRd3X93cR7VXpanw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:97.09,words:29126},t:"Java面试题之Java基础篇，56道Java基础八股文（2.3万字68张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java SE",y:"a"}}],["/Interview/Java/02-Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/2.Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%AF%87A.html",{loader:()=>a.e(55686).then(a.bind(a,17191)),meta:{a:"三分恶",d:17498592e5,l:"2025年6月14日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><figcaption>面渣逆袭集合框架篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>14554 字 67 张手绘图，详解 29 道 Java 集合框架面试高频题（让天下没有难背的八股），面渣背会这些 Java 容器八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/ptbM0EqlnCWeWm9VdSCDLg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/SHkQ7LEOT0itt4bXMoDBPw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:58.23,words:17469},t:"Java面试题之Java集合框架篇（Java容器篇），29道Java集合框架八股文（1.4万字67张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java集合框架",y:"a"}}],["/Interview/Java/02-Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/2.Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(51123).then(a.bind(a,92345)),meta:{e:"\n<h2>概念</h2>\n<h3>1.数组与集合区别，用过哪些？</h3>\n<p>数组和集合的区别：</p>\n<ul>\n<li>数组是固定长度的数据结构，一旦创建长度就无法改变，而集合是动态长度的数据结构，可以根据需要动态增加或减少元素。</li>\n<li>数组可以包含基本数据类型和对象，而集合只能包含对象。</li>\n<li>数组可以直接访问元素，而集合需要通过迭代器或其他方法访问元素。</li>\n</ul>\n<p>我用过的一些 Java 集合类：</p>\n<ul>\n<li><strong>ArrayList：</strong> 动态数组，实现了List接口，支持动态增长。</li>\n<li><strong>LinkedList：</strong> 双向链表，也实现了List接口，支持快速的插入和删除操作。</li>\n<li><strong>HashMap：</strong> 基于哈希表的Map实现，存储键值对，通过键快速查找值。</li>\n<li><strong>HashSet：</strong> 基于HashMap实现的Set集合，用于存储唯一元素。</li>\n<li><strong>TreeMap：</strong> 基于红黑树实现的有序Map集合，可以按照键的顺序进行排序。</li>\n<li><strong>LinkedHashMap：</strong> 基于哈希表和双向链表实现的Map集合，保持插入顺序或访问顺序。</li>\n<li><strong>PriorityQueue：</strong> 优先队列，可以按照比较器或元素的自然顺序进行排序。</li>\n</ul>",r:{minutes:48.27,words:14482},t:"Java集合面试题",y:"a"}}],["/Interview/Java/03-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98/3.Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(49271).then(a.bind(a,79215)),meta:{e:"\n<h2>多线程</h2>\n<h3>1.java里面的线程和操作系统的线程一样吗？</h3>\n<p>Java 底层会调用 pthread_create 来创建线程，所以本质上 java 程序创建的线程，就是和操作系统线程是一样的，是 1 对 1 的线程模型。</p>\n<figure><figcaption>img</figcaption></figure>\n<h3>2.使用多线程要注意哪些问题？</h3>\n<p>要保证多线程的程序是安全，不要出现数据竞争造成的数据混乱的问题。Java的线程安全在三个方面体现：</p>\n<ul>\n<li><strong>原子性</strong>：提供互斥访问，同一时刻只能有一个线程对数据进行操作，在Java中使用了atomic包（这个包提供了一些支持原子操作的类，这些类可以在多线程环境下保证操作的原子性）和synchronized关键字来确保原子性；</li>\n<li><strong>可见性</strong>：一个线程对主内存的修改可以及时地被其他线程看到，在Java中使用了synchronized和volatile这两个关键字确保可见性；</li>\n<li><strong>有序性</strong>：一个线程观察其他线程中的指令执行顺序，由于指令重排序，该观察结果一般杂乱无序，在Java中使用了happens-before原则来确保有序性。</li>\n</ul>",r:{minutes:87.69,words:26306},t:"Java并发编程面试题",y:"a"}}],["/Interview/Java/03-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98/3.Java%E7%BA%BF%E7%A8%8B.html",{loader:()=>a.e(95362).then(a.bind(a,96922)),meta:{a:"三分恶&沉默王二",d:17283456e5,l:"2024年10月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:"<figure><figcaption>面渣逆袭并发编程篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>3.5 万字 145 张手绘图，详解 71 道 Java 多线程面试高频题（让天下没有难背的八股），面渣背会这些并发编程八股文，这次吊打面试官，我觉得稳了（手动 dog）。</p>\n<p>第一版作者是二哥编程星球的嘉宾三分恶，第二版由二哥结合球友们的面经+技术派+PmHub+mydb 的项目进行全新升级。更适合拿来背诵突击面试+底层原理理解。</p>\n<p>亮白版本更适合拿出来打印，这也是很多学生党喜欢的方式，打印出来背诵的效率会更高。</p>\n<figure><figcaption>面渣逆袭并发编程篇.pdf第二版</figcaption></figure>",r:{minutes:147.4,words:44220},t:"Java并发编程面试题，71道Java多线程八股文（3.5万字145张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java并发编程",y:"a"}}],["/Interview/Java/04-Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98/4.JVM.html",{loader:()=>a.e(67628).then(a.bind(a,50546)),meta:{a:"三分恶",d:17364672e5,l:"2025年1月10日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><figcaption>面渣逆袭JVM篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>2.3 万字 115 张手绘图，详解 54 道 Java 虚拟机面试高频题（让天下没有难背的八股），面渣背会这些 JVM 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/bHhqhl8mH3OAPt3EkaVc8Q" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/XYsEJyIo46jXhHE1sOR_0Q" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:96.55,words:28964},t:"JVM面试题，54道Java虚拟机八股文（2.3万字115张手绘图），面渣逆袭必看👍",s:"面渣逆袭-JVM",y:"a"}}],["/Interview/Java/04-Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(39925).then(a.bind(a,86321)),meta:{e:"\n<h2>内存模型</h2>\n<h3>1.JVM的内存模型介绍一下</h3>\n<p>根据 JDK 8 规范，JVM 运行时内存共分为虚拟机栈、堆、元空间、程序计数器、本地方法栈五个部分。还有一部分内存叫直接内存，属于操作系统的本地内存，也是可以直接操作的。</p>\n<p>JVM的内存结构主要分为以下几个部分：</p>\n<ul>\n<li><strong>程序计数器</strong>：可以看作是当前线程所执行的字节码的行号指示器，用于存储当前线程正在执行的 Java 方法的 JVM 指令地址。如果线程执行的是 Native 方法，计数器值为 null。是唯一一个在 Java 虚拟机规范中没有规定任何 OutOfMemoryError 情况的区域，生命周期与线程相同。</li>\n<li><strong>Java 虚拟机栈</strong>：每个线程都有自己独立的 Java 虚拟机栈，生命周期与线程相同。每个方法在执行时都会创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。可能会抛出 StackOverflowError 和 OutOfMemoryError 异常。</li>\n<li><strong>本地方法栈</strong>：与 Java 虚拟机栈类似，主要为虚拟机使用到的 Native 方法服务，在 HotSpot 虚拟机中和 Java 虚拟机栈合二为一。本地方法执行时也会创建栈帧，同样可能出现 StackOverflowError 和 OutOfMemoryError 两种错误。</li>\n<li><strong>Java 堆</strong>：是 JVM 中最大的一块内存区域，被所有线程共享，在虚拟机启动时创建，用于存放对象实例。从内存回收角度，堆被划分为新生代和老年代，新生代又分为 Eden 区和两个 Survivor 区（From Survivor 和 To Survivor）。如果在堆中没有内存完成实例分配，并且堆也无法扩展时会抛出 OutOfMemoryError 异常。</li>\n<li><strong>方法区（元空间）</strong>：在 JDK 1.8 及以后的版本中，方法区被元空间取代，使用本地内存。用于存储已被虚拟机加载的类信息、常量、静态变量等数据。虽然方法区被描述为堆的逻辑部分，但有 “非堆” 的别名。方法区可以选择不实现垃圾收集，内存不足时会抛出 OutOfMemoryError 异常。</li>\n<li><strong>运行时常量池</strong>：是方法区的一部分，用于存放编译期生成的各种字面量和符号引用，具有动态性，运行时也可将新的常量放入池中。当无法申请到足够内存时，会抛出 OutOfMemoryError 异常。</li>\n<li><strong>直接内存</strong>：不属于 JVM 运行时数据区的一部分，通过 NIO 类引入，是一种堆外内存，可以显著提高 I/O 性能。直接内存的使用受到本机总内存的限制，若分配不当，可能导致 OutOfMemoryError 异常。</li>\n</ul>",r:{minutes:43.86,words:13158},t:"Java虚拟机面试题",y:"a"}}],["/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/5.SpringA.html",{loader:()=>a.e(91679).then(a.bind(a,53199)),meta:{a:"三分恶&沉默王二",d:17527104e5,l:"2025年7月17日",c:["面渣逆袭"],g:["面渣逆袭","Spring","面试题"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/spring-mianzhanixi-spring1.jpg" alt="面渣逆袭 Spring 篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭 Spring 篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>1.3 万字 63 张手绘图，详解 41 道 Spring 面试高频题（让天下没有难背的八股），面渣背会这些 Spring 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/EQge6DmgIqYITM3mAxkatg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/Y17S85ntHm_MLTZMJdtjQQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:134.05,words:40216},t:"Spring面试题，41道Spring八股文（1.3万字63张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Spring",y:"a"}}],["/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/5.SpringB.html",{loader:()=>a.e(47862).then(a.bind(a,57324)),meta:{a:"三分恶&沉默王二",d:17527104e5,l:"2025年7月17日",c:["面渣逆袭"],g:["面渣逆袭","Spring","面试题"],e:'<figure><figcaption>面渣逆袭 Spring 篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>1.3 万字 63 张手绘图，详解 41 道 Spring 面试高频题（让天下没有难背的八股），面渣背会这些 Spring 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/EQge6DmgIqYITM3mAxkatg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/Y17S85ntHm_MLTZMJdtjQQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:133.89,words:40166},t:"Spring面试题，41道Spring八股文（1.3万字63张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Spring",y:"a"}}],["/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/5.Spring%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(9383).then(a.bind(a,82279)),meta:{e:"\n<h2>Spring</h2>\n<h3>1.说一下你对 Spring 的理解</h3>\n<p>Spring框架核心特性包括：</p>\n<ul>\n<li><strong>IoC容器</strong>：Spring通过控制反转实现了对象的创建和对象间的依赖关系管理。开发者只需要定义好Bean及其依赖关系，Spring容器负责创建和组装这些对象。</li>\n<li><strong>AOP</strong>：面向切面编程，允许开发者定义横切关注点，例如事务管理、安全控制等，独立于业务逻辑的代码。通过AOP，可以将这些关注点模块化，提高代码的可维护性和可重用性。</li>\n<li><strong>事务管理</strong>：Spring提供了一致的事务管理接口，支持声明式和编程式事务。开发者可以轻松地进行事务管理，而无需关心具体的事务API。</li>\n<li><strong>MVC框架</strong>：Spring MVC是一个基于Servlet API构建的Web框架，采用了模型-视图-控制器（MVC）架构。它支持灵活的URL到页面控制器的映射，以及多种视图技术。</li>\n</ul>",r:{minutes:80.06,words:24018},t:"Spring面试题",y:"a"}}],["/Interview/Java/06-MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/6.MySQL%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(95299).then(a.bind(a,93716)),meta:{e:"\n<h2>SQL基础</h2>\n<h3>1.NOSQL和SQL的区别？</h3>\n<p>SQL数据库，指关系型数据库</p>\n<ul>\n<li>主要代表：SQL Server，Oracle，MySQL(开源)，PostgreSQL(开源)。关系型数据库存储结构化数据。这些数据逻辑上以行列二维表的形式存在，每一列代表数据的一种属性，每一行代表一个数据实体。</li>\n</ul>\n<p>NoSQL指非关系型数据库</p>\n<p>主要代表：MongoDB，Redis。NoSQL 数据库逻辑上提供了不同于二维表的存储方式，存储方式可以是JSON文档、哈希表或者其他方式。</p>\n<figure><figcaption>img</figcaption></figure>",r:{minutes:106.64,words:31992},t:"MySQL面试题",y:"a"}}],["/Interview/Java/06-MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/6.MySQL%E9%9D%A2%E8%AF%95%E9%A2%98A.html",{loader:()=>a.e(89856).then(a.bind(a,76684)),meta:{a:"JeanHu",d:17566848e5,l:"2025年9月1日",c:["数据库","面试题"],g:["MySQL","SQL","数据库原理","面试"],e:"\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>PostgreSQL</th>\n<th>MySQL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>设计理念</td>\n<td>功能丰富，标准兼容</td>\n<td>简单易用，高性能</td>\n</tr>\n<tr>\n<td>SQL 标准支持</td>\n<td>高度兼容</td>\n<td>部分兼容</td>\n</tr>\n<tr>\n<td>事务与并发控制</td>\n<td>强大的 ACID 和 MVCC 支持</td>\n<td>支持 ACID 和 MVCC（InnoDB）</td>\n</tr>\n<tr>\n<td>存储引擎</td>\n<td>单一存储引擎，功能强大</td>\n<td>多种存储引擎，灵活选择</td>\n</tr>\n<tr>\n<td>扩展性</td>\n<td>支持丰富的扩展和插件</td>\n<td>扩展性较弱</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>复杂查询和大数据量场景表现优异</td>\n<td>高并发和简单查询场景表现优异</td>\n</tr>\n<tr>\n<td>复制与高可用</td>\n<td>支持多种复制和高可用方案</td>\n<td>支持主从复制和组复制</td>\n</tr>\n<tr>\n<td>JSON 支持</td>\n<td>强大的 JSONB 支持</td>\n<td>基本的 JSON 支持</td>\n</tr>\n<tr>\n<td>全文搜索</td>\n<td>强大的全文搜索功能</td>\n<td>基本的全文搜索功能</td>\n</tr>\n<tr>\n<td>适用场景</td>\n<td>数据分析、GIS、企业级应用</td>\n<td>Web 应用、CMS、OLTP</td>\n</tr>\n</tbody>\n</table>",r:{minutes:229.68,words:68905},t:"MySQL 面试题汇总与解析",i:"fa-solid fa-database",y:"a"}}],["/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/7.Redis%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(32363).then(a.bind(a,83551)),meta:{e:"\n<h2>数据结构</h2>\n<h3>1.讲一下Redis底层的数据结构</h3>\n<p>Redis 提供了丰富的数据类型，常见的有五种数据类型：<strong>String（字符串），Hash（哈希），List（列表），Set（集合）、Zset（有序集合）</strong>。</p>\n<figure><figcaption>img</figcaption></figure>\n<p>随着 Redis 版本的更新，后面又支持了四种数据类型：<strong>BitMap（2.2 版新增）、HyperLogLog（2.8 版新增）、GEO（3.2 版新增）、Stream（5.0 版新增)</strong>。</p>",r:{minutes:7.1,words:2129},t:"Redis面试题",y:"a"}}],["/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/7.Redis%E9%9D%A2%E8%AF%95%E9%A2%98A.html",{loader:()=>a.e(9016).then(a.bind(a,25685)),meta:{e:"\n<h2>基础</h2>\n<h3>1.说说什么是 Redis?</h3>\n<figure><figcaption>Redis图标</figcaption></figure>\n<p>Redis 全称是 <strong>Re</strong>mote <strong>Di</strong>ctionary <strong>S</strong>ervice，它是一个基于键值对的 <strong>高性能 NoSQL 数据库</strong>。</p>\n<p>相比传统的键值存储（比如 <code>HashMap</code>），Redis 的 <code>value</code> 不仅支持 <code>String</code>，还支持 <code>Hash</code>、<code>List</code>、<code>Set</code>、<code>ZSet</code>、<code>Bitmap</code>、<code>HyperLogLog</code>、<code>GEO</code> 等丰富的数据结构，能够满足更多业务场景。</p>",r:{minutes:102.27,words:30681},t:"Redis面试题A货",y:"a"}}],["/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/7.Redis%E9%9D%A2%E8%AF%95%E9%A2%98B.html",{loader:()=>a.e(51501).then(a.bind(a,71375)),meta:{a:"三分恶",d:17303328e5,l:"2024年10月31日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><figcaption>面渣逆袭Redis篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>4.6 万字 286 张手绘图，详解 57 道 Redis 面试高频题（让天下没有难背的八股），面渣背会这些 Redis 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/19u34NXALB1nOlBCE6Eg-Q" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/iJtNJYgirRugNBnzxkbB4Q" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:188.52,words:56557},t:"Redis面试题，57道Redis八股文（4.6万字286张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Redis",y:"a"}}],["/Interview/Java/08-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%9D%A2%E8%AF%95%E9%A2%98/8.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(94635).then(a.bind(a,32262)),meta:{e:"\n<h2>概念</h2>\n<hr>\n<h3>1.了解哪些数据结构？</h3>\n<ul>\n<li>数组：数组的内存空间是连续的，随机访问的时间复杂度是O1，适用于需要按索引访问元素的场景，但是插入和删除元素较慢，时间复杂度是On</li>\n<li>链表：链表是由节点组成，节点之间是分散存储的，内存不连续，每个节点存储数据和指向下一个节点的指针。适用于频繁插入和删除元素的场景，随机访问元素较慢。</li>\n<li>栈：栈是一种先进后出的数据结构，只允许在栈顶进行插入和删除操作。</li>\n<li>队列：队列是一种先进先出（FIFO）的数据结构，允许在队尾插入元素，在队首删除元素。</li>\n<li>树：树是一种非线性数据结构，由节点和边组成，每个节点可以有多个子节点。树适用于表示层次关系的场景，例如文件系统、组织结构等。</li>\n</ul>",r:{minutes:18.86,words:5657},t:"数据结构",y:"a"}}],["/Interview/Java/09-MQ%E9%9D%A2%E8%AF%95%E9%A2%98/RabbitMQ%E9%9D%A2%E8%AF%95%E9%A2%98A.html",{loader:()=>a.e(5811).then(a.bind(a,98519)),meta:{e:"\n<h3>1.流量消峰</h3>\n<p>举个例子：如果订单系统最多能处理一万次订单，这个处理能力应付正常时段的下单时绰绰有余，正常时段我们下单一秒后就能返回结果。但是在高峰期，如果有两万次下单操作系统是处理不了的，只能限制订单超过一万后不允许用户下单。使用消息队列做缓冲，我们可以取消这个限制，把一秒内下的订单分散成一段时间来处理，这时有些用户可能在下单十几秒后才能收到下单成功的操作，但是比不能下单的体验要好。</p>\n<h3>2.应用解耦</h3>\n<p>以电商应用为例，应用中有订单系统、库存系统、物流系统、支付系统。用户创建订单后，如果耦合调用库存系统、物流系统、支付系统，任何一个子系统出了故障，都会造成下单操作异常。当转变成基于消息队列的方式后，系统间调用的问题会减少很多，比如物流系统因为发生故障，需要几分钟来修复。在这几分钟的时间里，物流系统要处理的内存被缓存在消息队列中，用户的下单操作可以正常完成。当物流系统恢复后，继续处理订单信息即可，中单用户感受不到物流系统的故障，提升系统的可用性。</p>",r:{minutes:22.24,words:6671},t:"RabbitMQ面试题",y:"a"}}],["/Interview/Java/10-%E5%88%86%E5%B8%83%E5%BC%8F/%E5%88%86%E5%B8%83%E5%BC%8F.html",{loader:()=>a.e(63760).then(a.bind(a,38905)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>8800 字 25 张手绘图，详解 12 道分布式面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/nLwHEmVGtl-2FDugMqYs3A" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/d84tWIjbcGKhwUptzkO2hQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:32.48,words:9743},t:"分布式面试题，12道分布式八股文（8千字25张手绘图），面渣逆袭必看👍",s:"面渣逆袭-分布式",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",{loader:()=>a.e(25921).then(a.bind(a,76384)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>序列化是将对象转换为字节流的过程，使对象能够通过网络传输，进行持久化存储或者缓存。Java提供了<code>java.io.serializable</code>接口来支持序列化，只要类实现了该接口，类的实例化对象就能进行序列化。</p>\n<p>反序列化是将字节流重新转化为对象的过程，即从存储中读取数据并重新创建对象。</p>\n<p>每一个实现序列化接口的类都要定义一个<code>serialVersionUID</code>，用于反序列化时验证版本一致性。版本不匹配会导致反序列化失败。若不指定<code>serialVersionUID</code>，Java会根据类的定义自动hash生成一个。不需要进行序列化的成员属性变量可使用<code>transient</code>关键字修饰。</p>\n<p>Java中对应序列化，反序列化机制在java.io包中在顶级父类下封装了ObjectOutputStream类，作用是将Java对象的原始数据类型以流的方式写出到文件,实现对象的持久存储；ObjectInputStream类，作用是把文件中保存的对象,以流的方式读取出来使用。</p>\n<p>Java中默认序列化框架<code>JDK Serializable</code>比较慢，对于大规模分布式系统，选择更加高效的序列化框架（FST， Kryo，Protocol buffer，Thrift，Hessian）</p>\n<p>在身份验证，文件读写，数据传输等功能处，在未对反序列化接口做访问控制，未对序列化数据做加密和签名，加密密钥使用硬编码（如Shiro 1.2.4），使用不安全的反序列化框架库（如Fastjson 1.2.24）或函数的情况下，由于序列化数据可被用户控制，攻击者可以精心构造恶意的序列化数据（执行特定代码或命令的数据）传递给应用程序，在应用程序反序列化对象时执行攻击者构造的恶意代码，达到攻击者的目的。</p>\n</div>',r:{minutes:1.85,words:555},t:"1.序列化与反序列化",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",{loader:()=>a.e(86459).then(a.bind(a,34884)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["了解"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">相关信息</p>\n<p><code>序列化面试题补充，了解即可</code>在实际项目中使用 <strong>FST (Fast Serialization)</strong> 进行序列化和反序列化时，主要的目的是提升性能，尤其是在处理大量数据或者频繁进行对象存取的场景中。以下是一些常见的使用场景和最佳实践。</p>\n</div>\n',r:{minutes:3.98,words:1194},t:"1.补充-FST框架使用实例",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html",{loader:()=>a.e(56208).then(a.bind(a,25201)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3><strong>口述稿</strong></h3>\n",r:{minutes:4.72,words:1417},t:"10.Java内部类及作用",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",{loader:()=>a.e(73237).then(a.bind(a,17450)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<h3>口述稿</h3>\n<p><strong>面试官提问：请简要讲一下 Java 8 的新特性。</strong></p>\n<p>Java 8 引入了很多重要的新特性，增强了语言的功能和性能，以下是几个核心特性：</p>\n",r:{minutes:3.49,words:1047},t:"11.Java8新特性",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(16231).then(a.bind(a,96917)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<p><strong>面试官：请简要说明一下 JDK 和 JRE 之间的区别。</strong></p>\n<p><strong>回答：</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>"好的，JDK（Java Development Kit）和 JRE（Java Runtime Environment）是 Java 开发和运行中两个非常重要的组件。它们之间有一些关键的区别，下面我来详细说明。</p>\n<p>首先，<strong>JDK</strong> 是 Java 开发工具包，它是为开发者设计的。JDK 不仅包含了 JRE，而且还提供了开发 Java 程序所需的各种工具，比如 <strong>Java 编译器（javac）</strong>、<strong>调试工具（jdb）</strong>、以及 <strong>文档生成工具（javadoc）</strong> 等。因此，<strong>JDK 是一个完整的开发环境</strong>，如果我们需要编写、编译、调试、执行 Java 程序，都需要用到 JDK。</p>\n<p>而 <strong>JRE</strong> 是 Java 运行环境，主要用于 <strong>运行 Java 程序</strong>。它包含了 Java 虚拟机（JVM）和 Java 类库等基础运行时环境，但是不包括开发工具。因此，JRE 主要是为用户提供一个能够运行 Java 应用的环境，但它 <strong>不包含编译 Java 程序的功能</strong>。</p>\n<p>简单来说，<strong>JDK 包含了 JRE</strong>，所以如果你是开发人员，通常需要安装 JDK，因为它不仅可以用来运行 Java 程序，还可以进行开发和编译。而 <strong>JRE 主要是为了运行 Java 程序而设计</strong>，如果你只是需要运行一个 Java 应用，那么安装 JRE 就足够了。</p>\n<p>所以总结一下：<strong>JDK 是用于开发 Java 应用程序的工具包，包含了 JRE 和开发工具</strong>；而 <strong>JRE 是用于运行 Java 程序的环境</strong>，不包含开发工具。"</p>\n</div>',r:{minutes:3.37,words:1011},t:"12.JDK和JRE之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html",{loader:()=>a.e(63309).then(a.bind(a,29802)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<p><strong>Java开发工具</strong></p>\n<ul>\n<li><strong>javac</strong>：Java 编译器，负责将 Java 源代码编译成字节码 （.class 文件）。</li>\n<li><strong>java</strong>：运行 Java 应用程序的命令，使用 JVM 来解释并执行编译后的字节码文件。</li>\n<li><strong>javadoc</strong>：生成 API 文档的工具，能够根据源代码中的注释生成 HTML 格式的文档。</li>\n<li><strong>jar</strong>：用于创建和管理 JAR 文件的工具，可以将多个 .class 文件打包为单一文件，便于分发和管理。</li>\n<li><strong>jdb</strong>：Java 调试工具，用于在命令行中调试 Java 应用程序，支持断点设置、变量查看等功能。</li>\n</ul>",r:{minutes:1.59,words:476},t:"13.使用过哪些JDK开发工具",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html",{loader:()=>a.e(85929).then(a.bind(a,73859)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>hashCode</code>、<code>equals</code> 和 <code>==</code> 是 Java 中三个非常重要的概念，它们在对象比较和哈希结构中扮演着不同的角色。下面我来详细说明它们之间的区别。</p>\n<p>首先，<code>==</code> 是 Java 中用于比较对象引用是否相等的操作符。它检查的是两个对象在<code>内存中的地址</code>是否相同，也就是说，<code>==</code> 判断的是两个对象是否指向同一个内存位置。如果两个对象的引用指向的是同一个对象，那么 <code>==</code> 返回 <code>true</code>；如果指向不同的对象，返回 <code>false</code>。</p>\n<p>而 <code>equals</code> 是 <code>Object</code> 类中定义的方法，它用来比较两个对象的内容是否相等。默认情况下，<code>equals</code> 方法会比较对象的内存地址（类似于 <code>==</code> 的行为），但通常我们会在自定义类中重写 <code>equals</code> 方法，以实现对对象内容的比较。比如在 <code>String</code> 类中，<code>equals</code> 方法比较的是字符串的值，而不是它们在内存中的地址。因此，<code>equals</code> 是一种更为常见的内容比较方式，尤其是在集合操作中。</p>\n<p>接下来是 <code>hashCode</code>，它是每个对象的哈希值，用于哈希存储结构中的对象查找和存储优化。<code>hashCode</code> 返回一个整数值，表示对象的哈希地址，它用于加速对象在哈希集合（如 <code>HashMap</code>、<code>HashSet</code>）中的查找。当我们将对象插入这些集合时，<code>hashCode</code> 被用来快速确定对象的存储位置。如果两个对象的 <code>hashCode</code> 不同，它们一定不相等（<code>equals</code> 返回 <code>false</code>）。但需要注意的是，<code>hashCode</code> 相同的对象不一定通过 <code>equals</code> 比较为相等。</p>\n<p>总结一下它们之间的关系：</p>\n<ul>\n<li><code>==</code> 比较的是对象的引用，判断它们是否指向同一个内存地址。</li>\n<li><code>equals</code> 比较的是对象的内容，判断它们的内容是否相等（需要根据具体实现来决定）。</li>\n<li><code>hashCode</code> 是用于哈希结构中对象查找和存储的优化工具，通常需要与 <code>equals</code> 配合使用，以保证哈希结构的正确性。</li>\n</ul>\n<p>简单来说，<code>==</code> 是比较对象的引用，<code>equals</code> 是比较对象的内容，而 <code>hashCode</code> 是为了提高哈希结构效率所使用的哈希值。</p>\n</div>',r:{minutes:4.28,words:1285},t:"14.Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html",{loader:()=>a.e(27056).then(a.bind(a,93570)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<code>hashCode()</code> 和 <code>equals()</code> 方法是紧密相关的，尤其是在哈希数据结构中。根据 Java 的规范，如果两个对象通过 <code>equals()</code> 比较是相等的，它们的 <code>hashCode()</code> 必须相等。反之，<code>hashCode()</code> 相等并不意味着 <code>equals()</code> 必定相等，但通常建议避免不同对象具有相同的 <code>hashCode()</code>，以减少哈希冲突。在实现这两个方法时，通常根据对象的核心属性来重写 <code>equals()</code> 和 <code>hashCode()</code>，这样才能确保在像 <code>HashMap</code> 或 <code>HashSet</code> 这样的哈希数据结构中正常工作。</p>\n</div>',r:{minutes:3.03,words:910},t:"15.hashCode() 和equals() 之间的关系",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",{loader:()=>a.e(20782).then(a.bind(a,40773)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>Java 动态代理是一种在程序运行时生成代理类并将其应用到目标对象的机制。动态代理允许我们在不修改目标类的情况下，通过代理类在方法调用前后增加额外的逻辑。它广泛应用于日志记录、权限控制、事务管理等场景。</p>\n</div>\n<h3>工作原理：</h3>\n<p>Java 动态代理主要依赖于 <code>java.lang.reflect.Proxy</code> 类和 <code>InvocationHandler</code> 接口。</p>',r:{minutes:2.98,words:894},t:"16.什么是Java中的动态代理？",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(92089).then(a.bind(a,42789)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li><strong>Java动态代理</strong>适用于实现了接口的类，内存消耗低，但性能稍逊。</li>\n<li><strong>CGLIB动态代理</strong>适用于没有接口的类，性能更好，但不能代理 <code>final</code> 类和方法，且内存消耗较大。</li>\n</ul>\n</div>\n<blockquote>\n<p>Java中的动态代理和CGLIB动态代理是两种常用的代理机制，它们都可以在运行时动态地创建代理对象，通常用于面向切面编程（AOP）和设计模式（如装饰器模式）。下面是对这两种代理机制的总结：</p>\n</blockquote>',r:{minutes:3.22,words:965},t:"17.JDK动态代理和CGLIB动态代理有什么区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/18.%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(52411).then(a.bind(a,26400)),meta:{e:"\n",r:{minutes:.04,words:11},t:"接口和抽象类有什么区别",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",{loader:()=>a.e(32052).then(a.bind(a,98817)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>不可变类的定义</strong></p>\n</div>\n<blockquote>\n<p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p>\n</blockquote>\n',r:{minutes:1.47,words:440},t:"2.什么是 Java 中的不可变类",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(1386).then(a.bind(a,20192)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>定义</strong></p>\n</div>\n<blockquote>\n<p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p>\n<ul>\n<li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li>\n<li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误。</li>\n</ul>\n</blockquote>\n',r:{minutes:.89,words:266},t:"3.Java 中 Exception 和 Error 有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html",{loader:()=>a.e(69815).then(a.bind(a,65736)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p>在 Java 中，异常处理是确保程序健壮性和稳定性的一个关键部分。然而，不恰当的异常处理可能会导致程序出现不易察觉的错误或性能问题。因此，编写异常处理代码时需要特别注意一些细节。以下是 <strong>Java 异常处理中需要注意的地方</strong>：</p>\n</div>\n',r:{minutes:4.93,words:1478},t:"3.扩展-异常处理注意点",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html",{loader:()=>a.e(71390).then(a.bind(a,66251)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<h3>1. <strong>平台无关性（跨平台性）</strong></h3>\n<ul>\n<li><strong>“一次编写，到处运行（Write Once, Run Anywhere）”</strong>：Java 代码编译成字节码（.class 文件），通过 Java 虚拟机（JVM）在不同平台上运行，无需修改源代码。这使得 Java 成为开发跨平台应用的理想选择，支持多种操作系统，如 Windows、Linux、macOS。</li>\n</ul>\n",r:{minutes:3.95,words:1184},t:"4.Java的优势",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html",{loader:()=>a.e(27200).then(a.bind(a,95657)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>多态</strong>（Polymorphism）是面向对象编程（OOP）中的一个重要概念，它指的是“同一方法或操作作用于不同对象时，可以有不同的表现形式”。在 Java 中，多态使得同一个方法调用可以根据实际对象的类型执行不同的操作，从而提高代码的灵活性和可扩展性。</p>\n</div>\n',r:{minutes:3.3,words:989},t:"5.什么是Java的多态",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html",{loader:()=>a.e(42477).then(a.bind(a,54597)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<strong>参数传递是按值传递</strong>（pass-by-value）。</p>\n<ul>\n<li><strong>基本类型参数</strong>：按值传递，即传递的是变量的副本，修改副本不会影响原始变量。</li>\n<li><strong>引用类型参数</strong>：按值传递，即传递的是引用（内存地址）的副本，修改对象的内容会影响原始对象，但修改引用本身（让引用指向新对象）不会影响原始引用。</li>\n</ul>\n</div>\n<h3>1. <strong>基本类型参数：</strong></h3>\n<p>对于基本数据类型（如 <code>int</code>、<code>float</code>、<code>boolean</code> 等），传递的是<strong>值</strong>。也就是说，当你将一个基本数据类型的变量作为参数传递给方法时，传递的是该变量的副本，方法内部对参数的修改不会影响原始变量。</p>\n',r:{minutes:2.46,words:737},t:"6.Java中的参数传递是按值还是按引用",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>a.e(52968).then(a.bind(a,10885)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<p>是的，Java <strong>不支持多重继承</strong>。这意味着一个类不能同时继承自两个或多个类。Java 之所以不支持多重继承，主要是为了避免一些潜在的复杂性和问题，尤其是<strong>菱形继承问题</strong>。</p>\n",r:{minutes:2.82,words:846},t:"7.Java 不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>a.e(38006).then(a.bind(a,81923)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>1. <strong>避免菱形继承问题</strong></h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>多重继承可能会导致“菱形继承”问题。假设有一个类 <code>A</code>，然后类 <code>B</code> 和类 <code>C</code> 都继承自 <code>A</code>，接着类 <code>D</code> 同时继承自 <code>B</code> 和 <code>C</code>。如果 <code>B</code> 和 <code>C</code> 都重写了 <code>A</code> 的某个方法，类 <code>D</code> 在调用这个方法时就无法明确到底调用 <code>B</code> 还是 <code>C</code> 中的实现，导致继承关系的模糊性和不确定性。这种问题被称为“菱形继承”。</p>\n</div>\n',r:{minutes:2.29,words:687},t:"7.为什么Java不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(44079).then(a.bind(a,34849)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>0. A</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>面向过程编程和面向对象编程是两种不同的编程范式，它们的主要区别在于关注的重点和代码的组织方式。</p>\n<ol>\n<li><strong>面向过程编程</strong>，顾名思义，它注重的是“做什么”和“怎么做”。在面向过程的程序中，我们通常通过一系列函数或过程来实现特定的功能。数据和操作数据的逻辑通常是分开的，程序逻辑是按顺序执行的。适用于那些任务明确、功能简单的小型程序。</li>\n<li><strong>面向对象编程</strong>，则关注的是“对象”和“行为”。在这种范式中，程序通过类和对象来组织。对象是数据和操作数据的代码的封装体，每个对象既包含数据，也包含对数据的操作方法。面向对象的三大特性——封装、继承和多态，帮助我们将复杂的系统组织得更加清晰、模块化，同时也增强了代码的重用性和可维护性。</li>\n</ol>\n<p>具体来讲，面向过程的程序结构主要由函数组成，函数直接操作全局数据，程序随着功能的增多，代码的可维护性和扩展性会变得较差。而面向对象则通过类和对象来组织代码，类定义了对象的属性和行为，对象之间通过方法进行交互。面向对象的方式使得程序更容易扩展和维护，尤其在处理复杂系统时优势更为明显。</p>\n<p>举个简单的例子，如果我们有一个银行账户的管理程序，<strong>面向过程</strong>的实现可能是通过函数来存取余额，而数据和方法是分开的；而在<strong>面向对象</strong>中，我们会创建一个<code>BankAccount</code>类，这个类封装了余额和存取款的方法，使得代码更加清晰，也更容易扩展，比如未来需要增加更多的功能（例如转账、利息计算等）。</p>\n<p>总结来说，面向过程适合功能简单、需求明确的项目，而面向对象则更适用于需要长期维护和扩展的大型项目。面向对象通过封装、继承和多态，使得系统更加模块化、灵活，并且具有更强的可扩展性和可维护性。</p>\n</div>\n',r:{minutes:5.3,words:1591},t:"8.面向过程和面向对象的区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(58658).then(a.bind(a,3025)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3>0. A</h3>\n",r:{minutes:5.77,words:1730},t:"9.Java方法重载和重写之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/B%E4%B8%AD%E7%AD%89/1.Java%E4%B8%ADString%E3%80%81StringBuffer%E5%92%8CStringBuilder%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(32248).then(a.bind(a,61428)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>它们都是Java中处理字符串的类，区别主要体现在<strong>可变性</strong>、<strong>线程安全性</strong>和<strong>性能</strong>上：</p>\n</div>\n<h2>1)String</h2>\n<ul>\n<li>不可变:String是不可变类，字符串一旦创建，其内容无法更改。每次对String进行修改操作（如拼接、截取等），都会创建新的String对象。</li>\n<li>适合场景：String适用于字符串内容不会频繁变化的场景，例如少量的字符串拼接操作或字符串常量。</li>\n</ul>',r:{minutes:1.2,words:361},t:"1.Java中String、StringBuffer和StringBuilder的区别是什么？",y:"a"}}],["/Interview/Java/B%E4%B8%AD%E7%AD%89/2.Java%E4%B8%ADvolatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8.html",{loader:()=>a.e(13857).then(a.bind(a,65038)),meta:{e:"\n<blockquote>\n<p>volatile关键字的主要作用是<code>确保变量的可见性</code>和<code>禁止指令重排</code></p>\n</blockquote>\n<h3>1. <strong>确保变量的可见性</strong></h3>\n<p>在多线程环境中，每个线程都会有自己的工作内存（缓存），当一个线程修改了某个共享变量的值时，其他线程可能无法立即看到这个修改。<code>volatile</code> 关键字确保了当一个线程修改了被 <code>volatile</code> 修饰的变量时，其他线程会立刻看到最新的值。这是通过禁止线程缓存该变量的值并保证它直接从主内存读取来实现的。<code>volatile</code> 关键字不能保证操作的<strong>原子性</strong>，</p>",r:{minutes:.91,words:274},t:"2.Java中volatile关键字的作用是什么？",y:"a"}}],["/Interview/Java/%E7%83%AD%E7%82%B9%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%83%AD%E7%82%B9%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>a.e(76164).then(a.bind(a,22132)),meta:{e:"\n<h2>Java集合</h2>\n<ol>\n<li>\n<p>线程安全的集合有哪些？</p>\n<figure><figcaption>image-20250903214741304</figcaption></figure>\n</li>\n</ol>\n<h2>多线程</h2>\n<h4>1.守护线程了解吗？</h4>\n<p>守护线程是一种特殊的线程，它的作用是为其他线程提供服务。</p>\n<p>Java 中的线程分为两类，一种是守护线程，另外一种是用户线程。</p>\n<p>JVM 启动时会调用 main 方法，main 方法所在的线程就是一个用户线程。在 JVM 内部，同时还启动了很多守护线程，比如垃圾回收线程。</p>",r:{minutes:1.23,words:370},t:"Java",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Git/Merge%20VS%20Rebase.html",{loader:()=>a.e(85815).then(a.bind(a,60166)),meta:{a:"JeanHu",d:17520192e5,l:"2025年7月9日",c:["Git"],g:["Git","merge","rebase","版本控制"],e:"\n<hr>\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p><code>merge</code> 用于合并分支，保留分支历史；<code>rebase</code> 将当前分支的提交变基到目标分支之上，历史更线性，但可能重写提交历史。</p>\n</blockquote>\n<hr>\n<h2>🧱 基本概念</h2>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>定义说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>git merge</code></td>\n<td>合并两个分支，生成一个新的合并提交，保留所有历史</td>\n</tr>\n<tr>\n<td><code>git rebase</code></td>\n<td>将当前分支的提交“搬到”目标分支之后，使提交历史更整洁</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.6,words:780},t:"Git 面试答题卡：merge 和 rebase 全面详解",i:"fa-brands fa-git-alt",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/JVM%20%E7%B1%BB%E5%8A%A0%E8%BD%BD%E4%B8%8E%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(37134).then(a.bind(a,56731)),meta:{e:'\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>Java 类从编译后的 .class 文件被加载到 JVM 运行内存中，要经历类加载的五个阶段，最终在类初始化阶段执行 <code>&lt;clinit&gt;</code> 方法，完成静态变量赋值和静态语句块的执行。</p>\n</blockquote>\n<h2>🧱 1. JVM 类加载的五大阶段</h2>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>加载 → 验证 → 准备 → 解析 → 初始化</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.96,words:887},t:"☕ JVM面试答题卡：JVM 类加载与类初始化详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B.html",{loader:()=>a.e(84861).then(a.bind(a,70828)),meta:{e:'\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>双亲委派模型是一种类加载机制，每个类加载器在加载类时，<strong>优先委托其父加载器</strong>，父加载器无法完成加载时，才由当前加载器尝试加载，从而保证 Java 核心类的安全和唯一性。</p>\n</blockquote>\n<h2>🧱 1. 类加载器层级结构</h2>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>BootstrapClassLoader（启动类加载器）</span></span>\n<span class="line"><span>            ↓</span></span>\n<span class="line"><span> ExtensionClassLoader（扩展类加载器）</span></span>\n<span class="line"><span>            ↓</span></span>\n<span class="line"><span>AppClassLoader（应用类加载器）</span></span>\n<span class="line"><span>            ↓</span></span>\n<span class="line"><span>用户自定义 ClassLoader（程序员手动实现）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.04,words:613},t:"☕ JVM面试答题卡：双亲委派模型（Parent Delegation Model）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%20CMS%20%E4%B8%8E%20G1%20%E7%9A%84%E5%8C%BA%E5%88%AB%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(113).then(a.bind(a,55923)),meta:{a:"JeanHu",d:17523648e5,l:"2025年7月13日",c:["JVM","GC机制"],g:["JVM","GC","CMS","G1","回收器对比"],e:"\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>CMS 是一款低延迟、基于“标记-清除”算法的并发回收器，而 G1 是面向服务端的低延迟垃圾回收器，采用分区式管理、并发标记和“标记-整理”算法，具备更好的吞吐量和更可控的 GC 停顿时间。</p>\n</blockquote>\n<hr>\n",r:{minutes:2.82,words:845},t:"垃圾回收器 CMS 与 G1 的区别详解",i:"fa-solid fa-recycle",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95%E5%93%AA%E4%BA%9B%E9%98%B6%E6%AE%B5%E4%BC%9Astop%20the%20world.html",{loader:()=>a.e(85161).then(a.bind(a,53506)),meta:{a:"JeanHu",d:17523648e5,l:"2025年7月13日",c:["JVM","GC机制"],g:["JVM","Stop The World","GC阶段","回收器对比"],e:"\n<blockquote>\n<p>JVM 会在某些 GC 阶段<strong>暂停所有用户线程（包括主线程）</strong>，只运行 GC 线程。这种行为叫做 “Stop The World”。</p>\n</blockquote>\n<hr>\n<h2>📦 哪些垃圾回收阶段会 STW？</h2>\n<table>\n<thead>\n<tr>\n<th>回收器</th>\n<th>GC 类型</th>\n<th>Stop The World 发生阶段</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Serial</strong></td>\n<td>Minor/Full</td>\n<td>✅ 整个回收过程都会 STW（单线程回收）</td>\n</tr>\n<tr>\n<td><strong>Parallel</strong></td>\n<td>Minor/Full</td>\n<td>✅ 整个回收过程 STW（多线程提升了回收速度）</td>\n</tr>\n<tr>\n<td><strong>CMS</strong></td>\n<td>Minor</td>\n<td>✅ 是（使用默认 <code>ParNew</code> 执行 Young GC）</td>\n</tr>\n<tr>\n<td></td>\n<td>Major (老年代)</td>\n<td>部分阶段 STW（如初始标记、重新标记）</td>\n</tr>\n<tr>\n<td><strong>G1</strong></td>\n<td>Young</td>\n<td>✅ 是（Young GC 是 STW 的）</td>\n</tr>\n<tr>\n<td></td>\n<td>Mixed/Major</td>\n<td>✅ 初始标记和最终标记阶段 STW</td>\n</tr>\n<tr>\n<td><strong>ZGC</strong></td>\n<td>并发回收</td>\n<td>✅ 初始标记、最终标记 是 STW，但耗时非常短</td>\n</tr>\n<tr>\n<td><strong>Shenandoah</strong></td>\n<td>并发回收</td>\n<td>✅ 初始标记、最终标记 是 STW，但延迟极小</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.21,words:664},t:"哪些垃圾回收阶段会 STW？",i:"fa-solid fa-hourglass-half",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/AQS%EF%BC%88AbstractQueuedSynchronizer%EF%BC%89%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(94108).then(a.bind(a,53636)),meta:{e:"\n<hr>\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>AQS 是 Java 并发包 <code>java.util.concurrent.locks</code> 的核心抽象类，用于构建各种同步器，如：<code>ReentrantLock</code>、<code>CountDownLatch</code>、<code>Semaphore</code> 等，其通过一个共享的 <code>state</code> 状态字段 + FIFO 等待队列，实现线程间的同步控制。</p>\n</blockquote>\n<hr>\n<h2>✅ 1. 核心角色与结构</h2>\n<h2>📦 类名：</h2>",r:{minutes:3.08,words:925},t:"☕ Java 面试答题卡：AQS（AbstractQueuedSynchronizer）详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/CompletableFuture%20%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(18993).then(a.bind(a,16337)),meta:{e:"\n<h2><strong>✅ 1. 简介</strong></h2>\n<ul>\n<li>CompletableFuture 是 Java 8 引入的异步编程 API，属于 java.util.concurrent 包。</li>\n<li>支持非阻塞、链式编程风格。</li>\n<li>是 Future 的增强版，支持回调、组合多个任务结果、异常处理等。</li>\n</ul>\n<h2><strong>✅ 2. 常用方法分类总结</strong></h2>\n<table>\n<thead>\n<tr>\n<th><strong>类型</strong></th>\n<th><strong>方法</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>创建异步任务</td>\n<td>supplyAsync() / runAsync()</td>\n<td>异步获取值 / 异步执行无返回任务</td>\n</tr>\n<tr>\n<td>任务串联</td>\n<td>thenApply() / thenAccept()</td>\n<td>接收上一步结果并继续处理</td>\n</tr>\n<tr>\n<td>组合任务</td>\n<td>thenCombine() / allOf() / anyOf()</td>\n<td>多个任务并发执行与组合</td>\n</tr>\n<tr>\n<td>异常处理</td>\n<td>exceptionally() / handle()</td>\n<td>捕获并处理异常</td>\n</tr>\n<tr>\n<td>阻塞获取结果</td>\n<td>get() / join()</td>\n<td>获取最终结果（同步）</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.07,words:622},t:"📝 Java 面试答题卡：CompletableFuture使用详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/ConcurrentHashMap%20%E7%9A%84%20put%20%E6%93%8D%E4%BD%9C%E4%B8%AD%20CAS%20%E5%92%8C%20synchronized%20%E7%9A%84%E4%BD%BF%E7%94%A8.html",{loader:()=>a.e(48110).then(a.bind(a,4128)),meta:{e:"\n<hr>\n<h2>✅ 1. 总体结构回顾（JDK 1.8）</h2>\n<blockquote>\n<p>JDK 1.8 的 <code>ConcurrentHashMap</code> 不再使用分段锁（Segment），而是使用：</p>\n</blockquote>\n<ul>\n<li><strong>数组 + 链表 + 红黑树结构</strong></li>\n<li><strong>节点槽位粒度的同步控制</strong></li>\n<li>高效使用 <code>CAS + synchronized</code> 控制并发写入</li>\n</ul>\n<hr>\n<h2>✅ 2. put() 流程图简化版</h2>",r:{minutes:2.29,words:686},t:"☕ Java 面试答题卡：ConcurrentHashMap 的 put 操作中 CAS 和 synchronized 的使用",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/ConcurrentHashMap%20%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(21844).then(a.bind(a,45152)),meta:{e:"\n<h2>✅ 1. 什么是 ConcurrentHashMap？</h2>\n<blockquote>\n<p>ConcurrentHashMap 是 Java 中一个<strong>线程安全的哈希表实现</strong>，支持并发读写操作，性能远优于 Hashtable 和 Collections.synchronizedMap()。</p>\n</blockquote>\n<p>它是并发编程中非常重要的基础组件。</p>\n<h2><strong>✅ 2. 所在包与版本</strong></h2>\n<ul>\n<li>所在包：java.util.concurrent</li>\n<li>出现版本：Java 1.5，引入了分段锁实现</li>\n<li>Java 8 重写为基于<strong>CAS + synchronized + 红黑树</strong>的结构</li>\n</ul>",r:{minutes:3.06,words:919},t:"☕ Java 面试答题卡：ConcurrentHashMap详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/CopyOnWriteArrayList%20%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(35305).then(a.bind(a,86843)),meta:{e:"\n<h2><strong>✅ 1. 什么是 CopyOnWriteArrayList？</strong></h2>\n<blockquote>\n<p>CopyOnWriteArrayList 是 Java 提供的一个 <strong>线程安全</strong> 的 List 实现，底层通过“<strong>写时复制（Copy-On-Write）</strong>”机制来实现并发安全，适用于<strong>读多写少</strong>的场景。</p>\n</blockquote>\n<p>它是 ArrayList 的并发替代方案，属于 java.util.concurrent 包。</p>\n<h2><strong>✅ 2. 底层原理：什么是写时复制？</strong></h2>",r:{minutes:2.61,words:782},t:"☕ Java 面试答题卡：CopyOnWriteArrayList详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%20%E4%B8%AD%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",{loader:()=>a.e(73966).then(a.bind(a,59475)),meta:{e:'\n<h2>❓面试题目：</h2>\n<p><strong>请简述 Java 中常用的深拷贝实现方式。</strong></p>\n<hr>\n<h2>✅ 答题要点：</h2>\n<h3>1. 手动拷贝（推荐做法，最清晰）</h3>\n<ul>\n<li>适合结构简单、可控的类。</li>\n<li>对每个字段进行手动复制，<strong>引用字段必须创建新对象并复制内容</strong>。</li>\n</ul>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> city</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Address</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> deepCopy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Person</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> copy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">city</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">city</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> copy;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.52,words:455},t:"☕Java面试答题卡：Java 中的深拷贝实现方式",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java_%E5%A4%9A%E6%80%81_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(35776).then(a.bind(a,28257)),meta:{e:"\n<hr>\n<h2>1️⃣ 多态基础概念</h2>\n<ul>\n<li><strong>定义</strong>：同一个方法调用，在运行时可表现为不同的行为。</li>\n<li><strong>实现方式</strong>：继承/接口 + 方法重写 + 父类引用指向子类对象 + 动态绑定（虚方法表）。</li>\n<li><strong>解决的问题</strong>：\n<ul>\n<li>调用方式统一，行为多样</li>\n<li>实现开闭原则，增强扩展性</li>\n<li>降低耦合，提高代码复用</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>2️⃣ 多态与常见设计模式</h2>\n<table>\n<thead>\n<tr>\n<th>设计模式</th>\n<th>多态的体现方式</th>\n<th>关键词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>策略模式</td>\n<td>一组算法实现同一接口，运行时动态替换</td>\n<td>interface + 多实现类</td>\n</tr>\n<tr>\n<td>工厂模式</td>\n<td>返回父类引用，实际是子类对象</td>\n<td>多态返回值</td>\n</tr>\n<tr>\n<td>模板方法模式</td>\n<td>父类定义流程，子类重写细节步骤方法</td>\n<td>抽象类 + 方法重写</td>\n</tr>\n<tr>\n<td>状态模式</td>\n<td>不同状态类实现同一接口，行为动态切换</td>\n<td>上下文 + 多态</td>\n</tr>\n<tr>\n<td>观察者模式</td>\n<td>通知所有观察者，具体响应由各自决定</td>\n<td>统一回调接口</td>\n</tr>\n<tr>\n<td>责任链模式</td>\n<td>各个处理器实现统一接口，动态传递处理请求</td>\n<td>next.handle()</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.87,words:561},t:"☕Java 面试答题卡：Java 多态 + 设计模式",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86.html",{loader:()=>a.e(10184).then(a.bind(a,5418)),meta:{e:"\n<h2><strong>❓面试题目：</strong></h2>\n<p><strong>请简述 Java 注解的原理及其实现机制。</strong></p>\n<h2><strong>✅ 答题要点：</strong></h2>\n<h3><strong>1️⃣ 什么是注解（Annotation）</strong></h3>\n<ul>\n<li>注解是 Java 5 引入的一种元数据机制，用于在 <strong>源代码中嵌入信息</strong>，这些信息可供编译器、工具或运行时使用。</li>\n<li>注解本质上是 <strong>继承了 java.lang.annotation.Annotation 接口的特殊接口</strong>。</li>\n</ul>",r:{minutes:1.87,words:560},t:"☕Java面试答题卡：Java 中注解的原理",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/LSP%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E5%8F%8D%E4%BE%8B.html",{loader:()=>a.e(72256).then(a.bind(a,53995)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>LSP（Liskov Substitution Principle）—— 里氏替换原则：</strong></p>\n<blockquote>\n<p>所有引用基类的地方必须能透明地使用其子类对象，且不会引发错误或改变程序原有逻辑。</p>\n</blockquote>\n<hr>\n<h2>❌ 经典反例：正方形继承矩形</h2>\n<h3>代码示例：</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Rectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> w; }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h; }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> width </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> height; }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Square</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Rectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> w;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> w;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 强制长宽相等</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 同样强制长宽相等</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> resize</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Rectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> r) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 预期输出 50</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.33,words:399},t:"☕Java 面试答题卡：设计原则反例 —— 里氏替换原则（LSP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/PriorityQueue.html",{loader:()=>a.e(26349).then(a.bind(a,28349)),meta:{e:"\n<h2><strong>✅ 1. 简介：什么是 PriorityQueue？</strong></h2>\n<blockquote>\n<p>PriorityQueue 是 Java 中基于<strong>优先级堆（最小堆或最大堆）实现的队列结构</strong>，属于 java.util 包，实现了 Queue 接口。</p>\n</blockquote>\n<p>它保证每次出队（poll()）返回<strong>优先级最高（或最低）的元素，而不是按元素入队顺序</strong>返回。</p>\n<h2><strong>✅ 2. 特性总结</strong></h2>\n<table>\n<thead>\n<tr>\n<th><strong>特性</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内部结构</td>\n<td>默认使用 <strong>最小堆</strong>（小顶堆），基于数组实现</td>\n</tr>\n<tr>\n<td>元素顺序</td>\n<td>入队无序，出队有序（优先级高的先出）</td>\n</tr>\n<tr>\n<td>默认排序方式</td>\n<td>元素需实现 Comparable 接口</td>\n</tr>\n<tr>\n<td>自定义排序</td>\n<td>可通过构造方法传入 Comparator</td>\n</tr>\n<tr>\n<td>允许重复元素</td>\n<td>✅ 允许</td>\n</tr>\n<tr>\n<td>线程安全性</td>\n<td>❌ 非线程安全（需手动加锁或使用 PriorityBlockingQueue）</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.18,words:653},t:"☕ Java 面试答题卡： PriorityQueue详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/String%20vs%20StringBuffer%20vs%20StringBuilder.html",{loader:()=>a.e(63696).then(a.bind(a,21750)),meta:{e:"\n<h3><strong>✅ 1. 三者的基本作用</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>类型</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>不可变的字符序列（final 类）</td>\n</tr>\n<tr>\n<td>StringBuffer</td>\n<td>可变字符序列，<strong>线程安全</strong></td>\n</tr>\n<tr>\n<td>StringBuilder</td>\n<td>可变字符序列，<strong>非线程安全</strong></td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.34,words:402},t:"☕Java 面试答题卡：String vs StringBuffer vs StringBuilder",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/hashCode()%20%E4%B8%8E%20equals()%20%E7%9A%84%E5%85%B3%E7%B3%BB.html",{loader:()=>a.e(82942).then(a.bind(a,25436)),meta:{e:"\n<h2>❓面试题目</h2>\n<blockquote>\n<p><strong>在 Java 中，hashCode() 方法与 equals() 方法有什么关系？为什么必须同时重写？</strong></p>\n</blockquote>\n<h3><strong>✅ 答题要点</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>关键点</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>逻辑含义</td>\n<td>equals() 用来判断<strong>两个对象的“逻辑相等”</strong>；hashCode() 用来计算<strong>对象在散列表中的桶位置</strong>。</td>\n</tr>\n<tr>\n<td>合同（Contract）</td>\n<td><strong>若 a.equals(b) 为 true，则 a.hashCode() == b.hashCode() 必须成立</strong>。反之不要求：false 的对象可以具有相同的哈希值（允许碰撞）。</td>\n</tr>\n<tr>\n<td>适用场景</td>\n<td>所有基于哈希结构的容器（HashMap、HashSet、Hashtable、ConcurrentHashMap 等）都会<strong>先比 hashCode，再根据 equals 判定真正相等</strong>。</td>\n</tr>\n<tr>\n<td>同步重写</td>\n<td>只重写其一会破坏合同，引发集合语义错误或数据丢失。</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.98,words:595},t:"☕ Java面试答题卡：hashCode() 与 equals() 的关系？",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/synchronized%20%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(86823).then(a.bind(a,9173)),meta:{e:"\n<h2>✅ 1. <code>synchronized</code> 是什么？</h2>\n<blockquote>\n<p><code>synchronized</code> 是 Java 提供的一种<strong>内置锁机制</strong>，用于实现线程之间的<strong>互斥与可见性</strong>。它可以修饰方法或代码块，确保同一时间只能有一个线程访问被锁定的资源。</p>\n</blockquote>\n<h2>✅ 2. 三种基本用法</h2>\n<table>\n<thead>\n<tr>\n<th>用法形式</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>synchronized 方法</code></td>\n<td>修饰实例方法，锁的是<strong>当前对象 this</strong></td>\n</tr>\n<tr>\n<td><code>synchronized static 方法</code></td>\n<td>修饰静态方法，锁的是<strong>类对象 Class&lt;?&gt;</strong></td>\n</tr>\n<tr>\n<td><code>synchronized (obj)</code> 代码块</td>\n<td>显式锁定某个对象</td>\n</tr>\n</tbody>\n</table>",r:{minutes:3.2,words:959},t:"☕ Java 面试答题卡：synchronized 详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/volatile%20%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(98257).then(a.bind(a,51018)),meta:{e:"\n<h2>✅ 1. 基本概念</h2>\n<blockquote>\n<p><code>volatile</code> 是 Java 中的一个轻量级同步机制，用于<strong>修饰变量</strong>，确保对该变量的<strong>可见性</strong>与<strong>禁止指令重排序</strong>，但<strong>不保证原子性</strong>。</p>\n</blockquote>\n<hr>\n<h2>✅ 2. 作用说明</h2>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>可见性</td>\n<td>一个线程对 <code>volatile</code> 变量的修改，对其他线程立即可见</td>\n</tr>\n<tr>\n<td>禁止重排序</td>\n<td>避免编译器和 CPU 对代码指令重排，从而防止执行顺序错乱（特别是双检锁 DCL）</td>\n</tr>\n<tr>\n<td>非原子性</td>\n<td>对变量的操作（如 i++）仍然不是原子的，需要借助 <code>AtomicXXX</code> 或锁同步</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.3,words:690},t:"☕ Java 面试答题卡：volatile 详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%B8%BA%E4%BB%80%E4%B9%88%20ArrayList%20%E4%B8%8D%E6%98%AF%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84.html",{loader:()=>a.e(15836).then(a.bind(a,1012)),meta:{e:"\n<h2>✅ 1. 结论先行</h2>\n<blockquote>\n<p>ArrayList <strong>不是线程安全的</strong>，因为它的<strong>增删查改操作没有任何同步控制</strong>，多个线程同时修改共享的 ArrayList 实例，可能导致：</p>\n</blockquote>\n<ul>\n<li>数据丢失</li>\n<li>越界异常</li>\n<li>并发修改异常（ConcurrentModificationException）</li>\n<li>元素覆盖或脏读</li>\n</ul>\n<h2><strong>✅ 2. 哪些方法不安全？举例说明</strong></h2>",r:{minutes:2.07,words:621},t:"☕ Java面试答题卡：为什么ArrayList不是线程安全的？",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%9E%E8%B0%83%E5%9C%B0%E7%8B%B1.html",{loader:()=>a.e(21315).then(a.bind(a,64012)),meta:{e:'\n<blockquote>\n<p>回调地狱是指在异步编程中，多个回调函数层层嵌套，使得代码结构<strong>不清晰、难以维护、逻辑混乱</strong>，常见于任务链式依赖时。</p>\n</blockquote>\n<h2>🔍 Java 示例：典型回调嵌套</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onComplete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getUserInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Callback</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> cb) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    asyncFetch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"userId"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> userId </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        asyncFetch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"userDetail:"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> userId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> userDetail </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            asyncFetch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"accountInfo:"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> userDetail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> account </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onComplete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Final Info: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            })</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        })</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    })</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.64,words:492},t:"☕ Java 面试答题卡：什么是“回调地狱”？",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%EF%BC%88Proxy%20Pattern%EF%BC%89.html",{loader:()=>a.e(78572).then(a.bind(a,13080)),meta:{e:'\n<h2>✅ 1. 什么是代理模式？</h2>\n<blockquote>\n<p><strong>代理模式</strong>是一种结构型设计模式，它为其他对象提供一种<strong>代理以控制对这个对象的访问</strong>。</p>\n</blockquote>\n<p>简单说，代理对象在真实对象前起一个“中介”的作用，用于控制、增强或延迟对真实对象的访问。</p>\n<hr>\n<h2>✅ 2. 模式结构图</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Client → Proxy → </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">RealSubject</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.7,words:809},t:"☕ Java 面试答题卡：代理模式（Proxy Pattern）详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99%EF%BC%88DIP%EF%BC%89.html",{loader:()=>a.e(89671).then(a.bind(a,57951)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>依赖倒置原则（DIP，Dependency Inversion Principle）</strong></p>\n<blockquote>\n<p>高层模块不应该依赖低层模块，二者都应该依赖抽象（接口或抽象类）。\n抽象不应该依赖细节，细节应该依赖抽象。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：高层模块依赖低层模块实现</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MySQLDatabase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"保存数据到 MySQL: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> data);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MySQLDatabase</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> db </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MySQLDatabase</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">saveData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.13,words:338},t:"☕Java 面试答题卡：依赖倒置原则（DIP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%86%85%E5%AD%98%E5%B1%8F%E9%9A%9C%EF%BC%88Memory%20Barrier%EF%BC%89%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(33238).then(a.bind(a,19617)),meta:{e:"\n<h2>✅ 1. 什么是内存屏障？</h2>\n<blockquote>\n<p>内存屏障（Memory Barrier）也称为<strong>内存栅栏</strong>，是一种用于<strong>控制 CPU 和编译器执行顺序</strong>的指令，确保<strong>内存操作的可见性、有序性</strong>。</p>\n</blockquote>\n<p>它是硬件和编译器提供的一种机制，用于<strong>禁止特定指令的重排序</strong>，是实现 Java 内存模型语义的基础。</p>\n<hr>\n<h2>✅ 2. 为什么需要内存屏障？</h2>\n<p>CPU 和编译器为了提高性能，会对指令执行顺序进行<strong>乱序优化（Out-of-Order Execution）</strong>。\n这种优化在单线程下没问题，但在<strong>多线程环境中可能引起数据可见性和有序性问题</strong>。</p>",r:{minutes:2.77,words:830},t:"☕ Java 面试答题卡：内存屏障（Memory Barrier）详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99%EF%BC%88SRP%EF%BC%89.html",{loader:()=>a.e(69160).then(a.bind(a,63501)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>单一职责原则（SRP，Single Responsibility Principle）：</strong></p>\n<blockquote>\n<p>一个类应该只有一个引起它变化的原因，即一个类只负责一项职责。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：职责混乱的类</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> addUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 添加用户逻辑</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveToDatabase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 保存用户到数据库</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sendEmail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 给用户发送邮件</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.04,words:312},t:"☕Java面试答题卡：单一职责原则（SRP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E4%B8%8E%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",{loader:()=>a.e(72390).then(a.bind(a,44058)),meta:{e:"\n<hr>\n<h2>🧠 知识点简介</h2>\n<p>Java 提供了三种常用的字符串操作方式：</p>\n<ul>\n<li><strong>String</strong>：不可变对象，拼接会生成新对象。</li>\n<li><strong>StringBuffer</strong>：可变对象，<strong>线程安全</strong>，方法加了 <code>synchronized</code>。</li>\n<li><strong>StringBuilder</strong>：可变对象，<strong>线程不安全</strong>，但性能更高。</li>\n</ul>\n<hr>\n<h2>🔑 重点区别</h2>",r:{minutes:1.47,words:442},t:"☕ Java 面试答题卡：字符串拼接与性能优化",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%88OCP%EF%BC%89.html",{loader:()=>a.e(95815).then(a.bind(a,44381)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>开放封闭原则（OCP，Open-Closed Principle）：</strong></p>\n<blockquote>\n<p>软件实体（类、模块、函数等）应该对扩展开放，对修改封闭。\n意思是说，系统功能可以通过扩展来实现，而不应该通过修改已有代码来实现。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：修改已有代码实现新功能</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> GraphicEditor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drawShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Shape</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            drawCircle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(shape);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            drawRectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(shape);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 新增形状时需要修改此方法，违反OCP</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drawCircle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Shape</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 画圆形 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drawRectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Shape</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 画矩形 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.25,words:374},t:"☕Java 面试答题卡：开放封闭原则（OCP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99%EF%BC%88ISP%EF%BC%89.html",{loader:()=>a.e(34810).then(a.bind(a,39776)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>接口隔离原则（ISP，Interface Segregation Principle）：</strong></p>\n<blockquote>\n<p>客户端不应该依赖它不需要的接口，即接口应该“小而专”，避免设计“胖接口”。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：胖接口导致问题</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IWorker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> work</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RobotWorker</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IWorker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> work</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 实现工作 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> UnsupportedOperationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"机器人不需要吃饭"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> UnsupportedOperationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"机器人不需要睡觉"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.24,words:372},t:"☕Java 面试答题卡：接口隔离原则（ISP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%9C%80%E5%B0%91%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%99%EF%BC%88LoD%EF%BC%89.html",{loader:()=>a.e(26216).then(a.bind(a,94205)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>最少知识原则（LoD，Law of Demeter）：</strong></p>\n<blockquote>\n<p>一个对象应当对其他对象有尽可能少的了解，只与直接的“朋友”通信，避免与“陌生人”交互。\n简单来说，就是“只和你的直接朋友说话，不和朋友的朋友说话”。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：违反最少知识原则</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Engine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 启动引擎 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Engine</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> engine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Engine</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getEngine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> engine;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Car</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEngine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 直接调用“朋友的朋友”的方法，违反LoD</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.22,words:366},t:"☕Java 面试答题卡：最少知识原则（LoD）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%A0%B9%E6%8D%AE%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E9%80%89%E6%8B%A9%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%8F%82%E6%95%B0.html",{loader:()=>a.e(28279).then(a.bind(a,23259)),meta:{e:'\n<hr>\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>线程池参数的选择应根据任务的特性（CPU 密集 / IO 密集 / 混合型）和业务实际需求来综合考虑，以达到<strong>资源利用最大化</strong>和<strong>系统稳定性</strong>的平衡。</p>\n</blockquote>\n<hr>\n<h2>✅ 1. 常见线程池参数回顾（ThreadPoolExecutor 构造函数）</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ThreadPoolExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> corePoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 核心线程数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> maximumPoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 最大线程数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> keepAliveTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      // 空闲线程存活时间</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> unit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           // 时间单位</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    BlockingQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> workQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 任务队列</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    ThreadFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> threadFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    RejectedExecutionHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> handler   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 拒绝策略</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.13,words:939},t:"☕ Java 面试答题卡：如何根据业务场景选择线程池参数？",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%EF%BC%88Adapter%20Pattern%EF%BC%89.html",{loader:()=>a.e(1285).then(a.bind(a,72948)),meta:{e:'\n<h2>✅ 1. 什么是适配器模式？</h2>\n<blockquote>\n<p><strong>适配器模式</strong>是一种结构型设计模式，主要用于将一个类的接口转换成客户端所期望的另一个接口，从而实现<strong>接口不兼容的类之间协同工作</strong>。</p>\n</blockquote>\n<p>通俗地说：<strong>旧接口不能直接用？写个“转接头”适配上就能用了。</strong></p>\n<hr>\n<h2>✅ 2. 模式结构图</h2>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>          ┌────────────┐</span></span>\n<span class="line"><span>          │ Target     │&lt;────────────┐</span></span>\n<span class="line"><span>          │（期望接口）│              │</span></span>\n<span class="line"><span>          └────────────┘              │</span></span>\n<span class="line"><span>                 ▲                    │</span></span>\n<span class="line"><span>                 │                    │</span></span>\n<span class="line"><span>           ┌──────────┐         ┌────────────┐</span></span>\n<span class="line"><span>           │ Adapter  │────────▶│ Adaptee    │</span></span>\n<span class="line"><span>           │（适配器）│         │（被适配者）│</span></span>\n<span class="line"><span>           └──────────┘         └────────────┘</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.11,words:632},t:"☕ Java 面试答题卡：适配器模式（Adapter Pattern）详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%94%81%E7%9A%84%E7%8A%B6%E6%80%81%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%81%8F%E5%90%91%E9%94%81%20%E2%86%92%20%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81%20%E2%86%92%20%E9%87%8D%E9%87%8F%E7%BA%A7%E9%94%81%EF%BC%89.html",{loader:()=>a.e(26923).then(a.bind(a,3492)),meta:{e:'\n<h2>✅ 1. 背景：为什么锁有这么多“状态”？</h2>\n<p>为了<strong>提高并发性能、减少线程切换的开销</strong>，JVM 从 JDK 1.6 开始引入了锁的多种状态：\n<strong>根据竞争情况自动升级（或降级）</strong>，实现从无锁到偏向锁、轻量级锁、重量级锁的渐进控制。</p>\n<h2>✅ 2. 锁状态切换图</h2>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>无锁</span></span>\n<span class="line"><span> ↓</span></span>\n<span class="line"><span>偏向锁（Bias Lock）       ← 如果另一个线程竞争</span></span>\n<span class="line"><span> ↓                             ↑</span></span>\n<span class="line"><span>轻量级锁（Lightweight Lock）  ← 自旋失败或激烈竞争</span></span>\n<span class="line"><span> ↓</span></span>\n<span class="line"><span>重量级锁（Heavyweight Lock）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.68,words:1105},t:"☕ Java 面试答题卡：锁的状态详解（偏向锁 → 轻量级锁 → 重量级锁）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%EF%BC%88SOLID%20%E5%8F%8A%E7%9B%B8%E5%85%B3%EF%BC%89.html",{loader:()=>a.e(75723).then(a.bind(a,51481)),meta:{e:"\n<hr>\n<h2>1. 单一职责原则（SRP）</h2>\n<ul>\n<li><strong>定义</strong>：一个类应该只有一个引起它变化的原因，即一个类只负责一项职责。</li>\n<li><strong>作用</strong>：降低类的复杂度，提高可维护性。</li>\n<li><strong>示例</strong>：将用户管理、数据存储和通知拆分到不同的类中。</li>\n</ul>\n<hr>\n<h2>2. 开放封闭原则（OCP）</h2>\n<ul>\n<li><strong>定义</strong>：软件实体应对扩展开放，对修改封闭。</li>\n<li><strong>作用</strong>：新增功能时，避免修改已有代码，降低风险。</li>\n<li><strong>示例</strong>：使用抽象类和接口，通过继承和多态实现扩展。</li>\n</ul>",r:{minutes:1.59,words:478},t:"☕Java面试答题卡：面向对象设计原则（SOLID 及相关）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/Linux%20%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5.html",{loader:()=>a.e(81351).then(a.bind(a,3217)),meta:{e:"\n<h2>❓面试题目：</h2>\n<p><strong>请简述 Linux 中两种链接方式（软链接与硬链接）的区别。</strong></p>\n<hr>\n<h2>✅ 答题要点：</h2>\n<h3>1. 链接类型简介</h3>\n<table>\n<thead>\n<tr>\n<th>链接方式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>软链接（Symbolic Link）</td>\n<td>类似于快捷方式，保存的是目标文件路径</td>\n</tr>\n<tr>\n<td>硬链接（Hard Link）</td>\n<td>与原文件共享 inode，指向相同的数据块</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.22,words:366},t:"🐧Linux面试答题卡：Linux 中的两种链接方式",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/MySQL/%E9%94%81%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(15308).then(a.bind(a,4456)),meta:{e:"\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>MySQL 锁机制：</strong></p>\n<blockquote>\n<p>MySQL 为了保证数据一致性与并发控制，引入了多种锁机制，主要分为：<strong>全局锁、表级锁、行级锁、记录锁、间隙锁、临键锁、意向锁、元数据锁、乐观锁、悲观锁</strong>等。不同锁的粒度与性能差异显著，适用场景各不相同。</p>\n</blockquote>\n<hr>\n<h2>🔍 MySQL 锁类型详解与示例</h2>\n<hr>\n<h3>1️⃣ 全局锁（Global Lock）</h3>\n<ul>\n<li><strong>作用</strong>：锁定整个数据库实例，所有表都不能进行写操作。</li>\n<li><strong>特点</strong>：粒度最大，阻塞性最强，常用于全库逻辑备份。</li>\n<li><strong>加锁方式</strong>：</li>\n</ul>",r:{minutes:3.76,words:1129},t:"🐬MySQL 面试答题卡：锁机制详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/OS/%E7%94%A8%E6%88%B7%E6%80%81%E4%B8%8E%E5%86%85%E6%A0%B8%E6%80%81%E5%88%87%E6%8D%A2%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(10388).then(a.bind(a,25622)),meta:{e:"\n<hr>\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>用户态和内核态是操作系统为保证系统安全性和稳定性而设计的两种 CPU 执行级别。程序从用户态切换到内核态通常是为了执行特权操作，如访问硬件、文件系统、内存管理等。</p>\n</blockquote>\n<hr>\n<h2>🎯 1. 什么是用户态和内核态？</h2>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>权限级别</th>\n<th>执行内容</th>\n<th>代表示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>用户态</td>\n<td>低（Ring 3）</td>\n<td>应用程序运行环境</td>\n<td>Java 应用、浏览器等</td>\n</tr>\n<tr>\n<td>内核态</td>\n<td>高（Ring 0）</td>\n<td>操作系统核心代码及硬件操作权限</td>\n<td>系统调用、中断处理等</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.47,words:740},t:"💻 操作系统面试答题卡：用户态与内核态切换详解",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Spring/Spring%20%E4%B8%89%E7%BA%A7%E7%BC%93%E5%AD%98%E8%A7%A3%E5%86%B3%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(10194).then(a.bind(a,79925)),meta:{a:"JeanHu",d:17524512e5,l:"2025年7月14日",c:["Spring","依赖注入"],g:["Spring","三级缓存","循环依赖","依赖注入"],e:'\n<hr>\n<h2>✅ 一句话概括</h2>\n<blockquote>\n<p>Spring 通过三级缓存（单例池、提前暴露的半成品缓存、工厂缓存）机制，有效解决单例 Bean 在创建过程中因相互依赖导致的循环依赖问题。</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>自始至终BeanA和BeanB都只有一个对象实例。</p>\n<p><strong>A 还没完全初始化完时，就能被 B 引用</strong></p>\n<p>提前暴露的半成品 Bean 其实就像是一个“承诺”，告诉其他依赖它的 Bean：“我已经实例化了，你可以先引用我，后续我会完善你看到的功能。”</p>\n</div>\n<hr>\n',r:{minutes:2.61,words:784},t:"Spring 三级缓存解决循环依赖详解",i:"fa-solid fa-layer-group",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B7%B3%E8%A1%A8.html",{loader:()=>a.e(28681).then(a.bind(a,24965)),meta:{e:'\n<hr>\n<h2>🧠 概念简介</h2>\n<p><strong>跳表（Skip List）：</strong></p>\n<blockquote>\n<p>一种基于多层有序链表的数据结构，通过“跳跃式”索引实现快速查找、插入和删除，平均时间复杂度为 <strong>O(log n)</strong>，常用于替代平衡树（如红黑树）实现有序集合。</p>\n</blockquote>\n<hr>\n<h2>❌ 传统链表的问题</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Node</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value; }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 顺序查找</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ...;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 有序链表头</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> target </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> target) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 必须一个一个走，O(n)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.57,words:471},t:"☕Java 面试答题卡：跳表（Skip List）",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%9F%BA%E7%A1%80%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>a.e(8922).then(a.bind(a,11465)),meta:{e:"\n<blockquote>\n<p><em><strong>基础篇要点：算法、数据结构、基础设计模式</strong></em></p>\n</blockquote>\n<h2>1. 二分查找</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>能够用自己语言描述二分查找算法</li>\n<li>能够手写二分查找代码</li>\n<li>能够解答一些变化后的考法</li>\n</ul>\n<p><strong>算法描述</strong></p>\n<ol>\n<li>\n<p>前提：有已排序数组 A（假设已经做好）</p>\n</li>\n<li>\n<p>定义左边界 L、右边界 R，确定搜索范围，循环执行二分查找（3、4两步）</p>\n</li>\n<li>\n<p>获取中间索引 M = Floor((L+R) /2)</p>\n</li>\n<li>\n<p>中间索引的值  A[M] 与待搜索的值 T 进行比较</p>\n<p>① A[M] == T 表示找到，返回中间索引</p>\n<p>② A[M] &gt; T，中间值右侧的其它元素都大于 T，无需比较，中间索引左边去找，M - 1 设置为右边界，重新查找</p>\n<p>③ A[M] &lt; T，中间值左侧的其它元素都小于 T，无需比较，中间索引右边去找， M + 1 设置为左边界，重新查找</p>\n</li>\n<li>\n<p>当 L &gt; R 时，表示没有找到，应结束循环</p>\n</li>\n</ol>",r:{minutes:19.86,words:5959},t:"基础篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/%E5%B9%B6%E5%8F%91%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>a.e(20381).then(a.bind(a,85913)),meta:{e:"\n<h2>1. 线程状态</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>掌握 Java 线程六种状态</li>\n<li>掌握 Java 线程状态转换</li>\n<li>能理解五种状态与六种状态两种说法的区别</li>\n</ul>\n<p><strong>六种状态及转换</strong></p>\n<figure><figcaption>image-20210831090722658</figcaption></figure>\n<p>分别是</p>\n<ul>\n<li>新建\n<ul>\n<li>当一个线程对象被创建，但还未调用 start 方法时处于<strong>新建</strong>状态</li>\n<li>此时未与操作系统底层线程关联</li>\n</ul>\n</li>\n<li>可运行\n<ul>\n<li>调用了 start 方法，就会由<strong>新建</strong>进入<strong>可运行</strong></li>\n<li>此时与底层线程关联，由操作系统调度执行</li>\n</ul>\n</li>\n<li>终结\n<ul>\n<li>线程内代码已经执行完毕，由<strong>可运行</strong>进入<strong>终结</strong></li>\n<li>此时会取消与底层线程关联</li>\n</ul>\n</li>\n<li>阻塞\n<ul>\n<li>当获取锁失败后，由<strong>可运行</strong>进入 Monitor 的阻塞队列<strong>阻塞</strong>，此时不占用 cpu 时间</li>\n<li>当持锁线程释放锁时，会按照一定规则唤醒阻塞队列中的<strong>阻塞</strong>线程，唤醒后的线程进入<strong>可运行</strong>状态</li>\n</ul>\n</li>\n<li>等待\n<ul>\n<li>当获取锁成功后，但由于条件不满足，调用了 wait() 方法，此时从<strong>可运行</strong>状态释放锁进入 Monitor 等待集合<strong>等待</strong>，同样不占用 cpu 时间</li>\n<li>当其它持锁线程调用 notify() 或 notifyAll() 方法，会按照一定规则唤醒等待集合中的<strong>等待</strong>线程，恢复为<strong>可运行</strong>状态</li>\n</ul>\n</li>\n<li>有时限等待\n<ul>\n<li>当获取锁成功后，但由于条件不满足，调用了 wait(long) 方法，此时从<strong>可运行</strong>状态释放锁进入 Monitor 等待集合进行<strong>有时限等待</strong>，同样不占用 cpu 时间</li>\n<li>当其它持锁线程调用 notify() 或 notifyAll() 方法，会按照一定规则唤醒等待集合中的<strong>有时限等待</strong>线程，恢复为<strong>可运行</strong>状态，并重新去竞争锁</li>\n<li>如果等待超时，也会从<strong>有时限等待</strong>状态恢复为<strong>可运行</strong>状态，并重新去竞争锁</li>\n<li>还有一种情况是调用 sleep(long) 方法也会从<strong>可运行</strong>状态进入<strong>有时限等待</strong>状态，但与 Monitor 无关，不需要主动唤醒，超时时间到自然恢复为<strong>可运行</strong>状态</li>\n</ul>\n</li>\n</ul>",r:{minutes:12.4,words:3721},t:"并发篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>a.e(4253).then(a.bind(a,51578)),meta:{e:"\n<h2>1. JVM 内存结构</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>掌握 JVM 内存结构划分</li>\n<li>尤其要知道方法区、永久代、元空间的关系</li>\n</ul>\n<p><strong>结合一段 java 代码的执行理解内存划分</strong></p>\n<figure><figcaption>image-20210831165728217</figcaption></figure>\n<ul>\n<li>执行 javac 命令编译源代码为字节码</li>\n<li>执行 java 命令\n<ol>\n<li>创建 JVM，调用类加载子系统加载 class，将类的信息存入<strong>方法区</strong></li>\n<li>创建 main 线程，使用的内存区域是 <strong>JVM 虚拟机栈</strong>，开始执行 main 方法代码</li>\n<li>如果遇到了未见过的类，会继续触发类加载过程，同样会存入<strong>方法区</strong></li>\n<li>需要创建对象，会使用<strong>堆</strong>内存来存储对象</li>\n<li>不再使用的对象，会由<strong>垃圾回收器</strong>在内存不足时回收其内存</li>\n<li>调用方法时，方法内的局部变量、方法参数所使用的是  <strong>JVM 虚拟机栈</strong>中的栈帧内存</li>\n<li>调用方法时，先要到<strong>方法区</strong>获得到该方法的字节码指令，由<strong>解释器</strong>将字节码指令解释为机器码执行</li>\n<li>调用方法时，会将要执行的指令行号读到<strong>程序计数器</strong>，这样当发生了线程切换，恢复时就可以从中断的位置继续</li>\n<li>对于非 java 实现的方法调用，使用内存称为<strong>本地方法栈</strong>（见说明）</li>\n<li>对于热点方法调用，或者频繁的循环代码，由 <strong>JIT 即时编译器</strong>将这些代码编译成机器码缓存，提高执行性能</li>\n</ol>\n</li>\n</ul>",r:{minutes:19.43,words:5828},t:"虚拟机篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/%E6%A1%86%E6%9E%B6%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>a.e(52779).then(a.bind(a,97149)),meta:{e:"\n<h2>1. Spring refresh 流程</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>掌握 refresh 的 12 个步骤</li>\n</ul>\n<p><strong>Spring refresh 概述</strong></p>\n<p>refresh 是 AbstractApplicationContext 中的一个方法，负责初始化 ApplicationContext 容器，容器必须调用 refresh 才能正常工作。它的内部主要会调用 12 个方法，我们把它们称为 refresh 的 12 个步骤：</p>\n<ol>\n<li>\n<p>prepareRefresh</p>\n</li>\n<li>\n<p>obtainFreshBeanFactory</p>\n</li>\n<li>\n<p>prepareBeanFactory</p>\n</li>\n<li>\n<p>postProcessBeanFactory</p>\n</li>\n<li>\n<p>invokeBeanFactoryPostProcessors</p>\n</li>\n<li>\n<p>registerBeanPostProcessors</p>\n</li>\n<li>\n<p>initMessageSource</p>\n</li>\n<li>\n<p>initApplicationEventMulticaster</p>\n</li>\n<li>\n<p>onRefresh</p>\n</li>\n<li>\n<p>registerListeners</p>\n</li>\n<li>\n<p>finishBeanFactoryInitialization</p>\n</li>\n<li>\n<p>finishRefresh</p>\n</li>\n</ol>",r:{minutes:26.83,words:8050},t:"框架篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/",{loader:()=>a.e(81594).then(a.bind(a,66445)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在文档中对所有的面试题都进行了<strong>难易程度</strong>和<strong>出现频率</strong>的等级说明</p>\n<p>星数越多代表权重越大，最多五颗星（☆☆☆☆☆） 最少一颗星（☆）</p>\n</div>\n<h2>线程的基础知识</h2>\n',r:{minutes:.21,words:62},t:"08并发编程",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/1.1%E6%9E%B6%E6%9E%84%E7%BB%84%E6%88%90%E4%B8%8E%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.html",{loader:()=>a.e(54099).then(a.bind(a,14723)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","架构","执行流程","虚拟机"],e:"\n<hr>\n<h2>🧠 什么是 JVM？</h2>\n<p>JVM（Java Virtual Machine，Java 虚拟机）是 Java 技术的核心，它实现了“编译一次，到处运行”的跨平台特性。JVM 是一个运行 Java 字节码的抽象计算机，通过将 <code>.class</code> 文件加载并执行，实现 Java 程序在各种硬件和操作系统上的兼容性。</p>\n<hr>\n",r:{minutes:2.62,words:787},t:"1.1 深入理解 JVM：架构组成与执行流程",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/1.2%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3.html",{loader:()=>a.e(17794).then(a.bind(a,19717)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","类加载","双亲委派模型","机制详解"],e:"\n<hr>\n<h2>🚀 什么是类加载？</h2>\n<p>类加载是指 JVM 在运行时将 <code>.class</code> 字节码文件加载进内存，转化为 <code>java.lang.Class</code> 对象的过程。它是 Java 程序得以动态运行的基础。</p>\n<hr>\n",r:{minutes:2.82,words:847},t:"1.2 JVM 类加载机制详解（含双亲委派模型）",i:"fa-solid fa-code-branch",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/1.3%E7%B1%BB%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8E%E5%8A%A0%E8%BD%BD%E7%9A%84%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6.html",{loader:()=>a.e(31764).then(a.bind(a,55517)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","类加载","初始化","触发条件"],e:"\n<hr>\n<h2>🚀 初始化是类加载生命周期的最后一步</h2>\n<p>类的初始化阶段，是 JVM 将类的静态变量赋予初始值并执行 <code>&lt;clinit&gt;</code> 静态代码块的过程。它确保类在使用前是安全可用的。</p>\n<hr>\n",r:{minutes:2.41,words:724},t:"1.3 类的初始化与加载的触发条件",i:"fa-solid fa-bolt",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/10.%20JVM%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E9%97%AE%E7%AD%94/10.1JVM%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E9%97%AE%E7%AD%94%E6%B1%87%E6%80%BB.html",{loader:()=>a.e(35781).then(a.bind(a,77224)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","面试"],g:["JVM","面试题","高频问题","总结","Java基础"],e:"\n<p>本节汇总了 Java JVM 相关的高频面试问题及简明回答，涵盖内存模型、垃圾回收、类加载、性能调优等核心知识，帮助准备面试的朋友快速掌握重点。</p>\n<hr>\n",r:{minutes:2.09,words:626},t:"10.1 JVM 面试高频问答汇总",i:"fa-solid fa-question-circle",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/2.1JVM%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%A0%86%E3%80%81%E6%A0%88%E3%80%81%E6%96%B9%E6%B3%95%E5%8C%BA%E7%AD%89%EF%BC%89.html",{loader:()=>a.e(47819).then(a.bind(a,100)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","内存结构","堆","栈","方法区"],e:"\n<hr>\n<h2>🧠 JVM 内存结构分区概览</h2>\n<p>JVM 在运行时会将内存划分为若干个逻辑区域，每个区域负责不同的功能，统一称为“运行时数据区”。理解这些区域是掌握 GC、线程隔离、性能调优的基础。</p>\n<hr>\n",r:{minutes:2.95,words:886},t:"2.1 JVM 内存结构详解（堆、栈、方法区等）",i:"fa-solid fa-memory",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/2.2Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%88JMM%EF%BC%89%E4%B8%8Ehappens-before%20%E5%8E%9F%E5%88%99.html",{loader:()=>a.e(19437).then(a.bind(a,86002)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","Java内存模型","JMM","happens-before","并发"],e:"\n<hr>\n<h2>🧠 什么是 Java 内存模型（JMM）？</h2>\n<p>Java 内存模型（Java Memory Model）定义了多线程环境下，Java 程序如何在主内存和线程本地工作内存之间交互的规范。JMM 确保了在不同 CPU 缓存与内存之间的一致性，避免了多线程环境下的可见性和有序性问题。</p>\n<ul>\n<li><strong>主内存</strong>：共享的内存区域，所有线程都可访问。</li>\n<li><strong>工作内存</strong>：每个线程独立持有的本地内存，用于缓存主内存中的变量副本。</li>\n</ul>\n<p>JMM 规范了线程之间如何读写共享变量的规则，以保证程序执行的正确性。</p>\n<hr>\n",r:{minutes:4,words:1199},t:"2.2 Java 内存模型（JMM）与 happens-before 原则",i:"fa-solid fa-network-wired",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/2.3%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98DirectMemory%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%A3%8E%E9%99%A9.html",{loader:()=>a.e(88317).then(a.bind(a,60934)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","直接内存","DirectMemory","内存管理","风险"],e:"\n<h2>📦 什么是直接内存（Direct Memory）？</h2>\n<p>直接内存是 JVM 外的一块内存区域，不受 Java 堆空间限制。它通过 <code>sun.misc.Unsafe</code> 或 <code>java.nio.ByteBuffer.allocateDirect()</code> 分配，在 Java 程序中可用于高性能 IO 操作。</p>\n<p>直接内存的最大优势是<strong>绕过 Java 堆内存与 GC 管理，提高数据传输效率</strong>，尤其适用于 Netty、Kafka、Zero-Copy 场景。</p>\n",r:{minutes:2.4,words:721},t:"2.3 直接内存 DirectMemory 的使用与风险",i:"fa-solid fa-database",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.1%20Java%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95%E4%B8%8E%E5%88%86%E4%BB%A3%E6%9C%BA%E5%88%B6.html",{loader:()=>a.e(50800).then(a.bind(a,18973)),meta:{d:17520192e5,l:"2025年7月9日",c:["JVM","GC","性能优化","博客专栏"],e:"\n<p>JVM 的垃圾回收机制是自动内存管理的核心，它通过回收不再被使用的对象，释放内存空间，防止内存泄漏。Java 中使用了多种垃圾回收算法，并在堆内存中采用“分代”设计提高性能。</p>\n<hr>\n<h2>📦 垃圾收集目标：回收不可达对象</h2>\n<p>JVM 使用“可达性分析算法”判定对象是否存活。即：从一组称为 <strong>GC Roots</strong> 的根对象出发，能否通过引用链触达到目标对象。</p>\n<p>如果对象不可达，就被视为“垃圾”，可被回收。</p>\n<h3>🌱 常见 GC Roots 示例：</h3>\n<ul>\n<li>虚拟机栈中的引用（栈帧中的局部变量）</li>\n<li>方法区中的静态变量</li>\n<li>方法区中的常量引用</li>\n<li>JNI 中的引用</li>\n</ul>",r:{minutes:2.44,words:733},t:"3.1 Java 垃圾回收算法与分代机制（图解）",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.2%20CMS%E3%80%81G1%E3%80%81ZGC%E3%80%81Shenandoah%20%E5%AF%B9%E6%AF%94.html",{loader:()=>a.e(2637).then(a.bind(a,97042)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","GC","CMS","G1","ZGC","Shenandoah"],e:"\n<p>本篇将深入比较四大现代垃圾回收器：<strong>CMS、G1、ZGC、Shenandoah</strong>，它们是 Java 在不同版本中主推的低延迟或并发收集器，适用于不同规模与场景的后端系统。</p>\n<hr>\n<h2>🚀 概览对比表</h2>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>CMS</th>\n<th>G1</th>\n<th>ZGC</th>\n<th>Shenandoah</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>引入版本</td>\n<td>JDK 5</td>\n<td>JDK 7u4</td>\n<td>JDK 11（生产）</td>\n<td>JDK 12（实验）</td>\n</tr>\n<tr>\n<td>收集目标</td>\n<td>低停顿</td>\n<td>停顿+吞吐均衡</td>\n<td>极低停顿</td>\n<td>极低停顿</td>\n</tr>\n<tr>\n<td>并发标记</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>并发整理</td>\n<td>❌（Stop-the-world）</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>区域模型</td>\n<td>分代</td>\n<td>Region</td>\n<td>Region（无分代）</td>\n<td>Region（无分代）</td>\n</tr>\n<tr>\n<td>最大堆支持</td>\n<td>TB 级</td>\n<td>TB 级</td>\n<td>最大 16TB</td>\n<td>最大 16TB</td>\n</tr>\n<tr>\n<td>延迟控制能力</td>\n<td>一般</td>\n<td>中等</td>\n<td>精细</td>\n<td>精细</td>\n</tr>\n<tr>\n<td>增量式并发回收</td>\n<td>❌</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>适合场景</td>\n<td>老系统、过渡阶段</td>\n<td>大多数中大型系统</td>\n<td>极致延迟敏感系统</td>\n<td>大型数据密集系统</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.6,words:780},t:"3.2 CMS、G1、ZGC、Shenandoah 对比详解",i:"fa-solid fa-broom-ball",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.3%20GC%20%E6%97%A5%E5%BF%97%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3%E4%B8%8E%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.html",{loader:()=>a.e(75648).then(a.bind(a,27110)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","GC","GC日志","性能调优"],e:'\n<p>本节将深入讲解如何开启 GC 日志、理解日志内容结构，并通过真实日志样本进行性能诊断与调优。</p>\n<hr>\n<h2>📌 如何开启 GC 日志？</h2>\n<h3>JDK 8 常用参数：</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-XX:+PrintGC</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-XX:+PrintGCDetails</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-XX:+PrintGCTimeStamps</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-Xloggc:/var/logs/gc.log</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.29,words:686},t:"3.3 GC 日志参数详解与案例分析",i:"fa-solid fa-file-lines",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/3.4%20GC%20%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E7%AD%96%E7%95%A5.html",{loader:()=>a.e(70551).then(a.bind(a,69030)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","GC","参数调优","性能优化"],e:"\n<p>掌握垃圾收集器本身还不够，真实项目中需要根据业务场景、硬件配置、内存分布特点等，灵活调整 GC 参数，以减少 STW 停顿、避免 Full GC、提高吞吐能力。</p>\n<p>Stop一the一World，简称STW，<strong>指的是GC事件发生过程中，会产生应用程序的停顿</strong>。</p>\n<hr>\n<h2>📦 GC 调优的四个核心指标</h2>\n<table>\n<thead>\n<tr>\n<th>目标</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>停顿时间</td>\n<td>控制用户线程暂停时间（STW）</td>\n</tr>\n<tr>\n<td>吞吐量</td>\n<td>程序运行时间 /（运行时间 + GC 时间）</td>\n</tr>\n<tr>\n<td>CPU 占用</td>\n<td>GC 线程是否抢占系统核心资源</td>\n</tr>\n<tr>\n<td>内存占用</td>\n<td>是否高效利用堆内存、避免频繁 GC</td>\n</tr>\n</tbody>\n</table>",r:{minutes:2.5,words:750},t:"3.4 GC 参数调优实战策略",i:"fa-solid fa-screwdriver-wrench",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.1JVM%E5%B8%B8%E8%A7%81%20OOM%20%E9%94%99%E8%AF%AF%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%8E%92%E6%9F%A5.html",{loader:()=>a.e(28519).then(a.bind(a,55496)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","OOM","排查","内存泄漏"],e:"\n<p>OutOfMemoryError（OOM）是 JVM 中最致命的运行时错误之一，直接影响系统稳定性。不同类型的 OOM 指向 JVM 内部不同的内存区域。</p>\n<hr>\n",r:{minutes:2.35,words:704},t:"4.1 JVM 常见 OOM 错误类型与排查",i:"fa-solid fa-bug",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.2%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%20Java%20%E5%A0%86%E8%BD%AC%E5%82%A8%E6%96%87%E4%BB%B6%EF%BC%88hprof%EF%BC%89.html",{loader:()=>a.e(90590).then(a.bind(a,65222)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM"],g:["JVM","hprof","堆分析","内存排查","MAT"],e:"\n<p>在面对 OOM、内存泄漏、对象激增等问题时，分析堆转储（heap dump）文件是最直接有效的方式之一。本节介绍如何生成、加载与分析 <code>.hprof</code> 文件。</p>\n<hr>\n",r:{minutes:2.17,words:650},t:"4.2 如何分析 Java 堆转储文件（hprof）",i:"fa-solid fa-dumpster-fire",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.3%E5%B8%B8%E8%A7%81%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%AE%9A%E4%BD%8D%E6%8A%80%E5%B7%A7.html",{loader:()=>a.e(53198).then(a.bind(a,13255)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","内存泄漏","故障排查"],g:["内存泄漏","实战经验","MAT分析"],e:"\n<p>内存泄漏并非对象无法被 GC，而是对象<strong>不再被使用却仍被引用</strong>，无法释放。此类问题不会立刻崩溃，却会持续吞噬内存，最终触发 OOM。</p>\n<hr>\n",r:{minutes:2.24,words:673},t:"4.3 常见内存泄漏模式与定位技巧",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.1JDK%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E5%85%A8%E6%99%AF%E5%9B%BE%E4%B8%8E%E5%85%B8%E5%9E%8B%E7%94%A8%E9%80%94.html",{loader:()=>a.e(54902).then(a.bind(a,40491)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","工具"],g:["JDK","命令行工具","性能分析","诊断"],e:"\n<p>Java 开发和运维过程中，JDK 自带的命令行工具是定位性能瓶颈、诊断内存问题、排查线程死锁的利器。掌握这些工具能大幅提升排查效率和准确度。</p>\n<hr>\n",r:{minutes:1.85,words:556},t:"5.1 JDK 命令行工具全景图与典型用途",i:"fa-solid fa-terminal",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.2%E4%BD%BF%E7%94%A8%20Java%20Mission%20Control%EF%BC%88JMC%EF%BC%89%E8%BF%9B%E8%A1%8C%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.html",{loader:()=>a.e(77583).then(a.bind(a,56180)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","性能分析","工具"],g:["JMC","Java Mission Control","性能监控","诊断"],e:"\n<p>Java Mission Control（JMC）是 Oracle JDK 自带的轻量级性能分析和监控工具，基于 Java Flight Recorder（JFR）技术。它能捕获 JVM 运行时详细事件，帮助开发和运维人员深入理解程序性能瓶颈和资源消耗。</p>\n<hr>\n",r:{minutes:2.2,words:659},t:"5.2 使用 Java Mission Control（JMC）进行性能分析",i:"fa-solid fa-chart-line",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.3Arthas%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A7%A3%E6%9E%90.html",{loader:()=>a.e(46730).then(a.bind(a,50006)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","诊断工具"],g:["Arthas","Java","诊断","性能分析"],e:"\n<p>Arthas 是阿里开源的 Java 在线诊断工具，支持动态查看线程状态、JVM 信息、方法调用栈、热更新代码等，极大提升线上问题定位效率。</p>\n<hr>\n",r:{minutes:1.72,words:517},t:"5.3 Arthas 使用指南及常用命令解析",i:"fa-solid fa-tools",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/6.%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%B0%83%E4%BC%98/6.1Tomcat%20%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3%E4%B8%8E%E8%B0%83%E4%BC%98%E6%8C%87%E5%8D%97.html",{loader:()=>a.e(43837).then(a.bind(a,58129)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["服务器","Tomcat"],g:["Tomcat","线程模型","性能调优","连接池"],e:"\n<p>Tomcat 作为广泛使用的 Java Web 容器，其线程模型直接影响 Web 应用的并发性能与稳定性。本节深入解析 Tomcat 工作线程的命名、来源、配置参数及调优实践。</p>\n<hr>\n",r:{minutes:1.71,words:514},t:"6.1 Tomcat 线程模型详解与调优指南",i:"fa-solid fa-network-wired",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/7.%20JVM%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93%E4%B8%8E%E6%A1%88%E4%BE%8B/7.1JVM%20%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93%E4%B8%8E%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90.html",{loader:()=>a.e(89387).then(a.bind(a,78458)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","性能调优"],g:["JVM","调优实战","性能分析","GC调优","案例分析"],e:"\n<p>本章总结常见 JVM 调优方法，结合真实项目案例，分享性能优化思路、实践技巧和常见误区，助力开发者快速提升应用性能与稳定性。</p>\n<hr>\n",r:{minutes:2.03,words:610},t:"7.1 JVM 调优实战总结与案例分析",i:"fa-solid fa-wrench",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/8.%20JVM%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/8.1JVM%20%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D.html",{loader:()=>a.e(60199).then(a.bind(a,5460)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","工具"],g:["JVM","性能分析","调试工具","可视化","JFR"],e:"\n<p>为了更精准、高效地诊断 JVM 性能问题，开发者和运维人员常借助多款高级分析工具。本节将介绍一些主流工具及其核心功能，帮助你快速选用合适的分析手段。</p>\n<hr>\n",r:{minutes:1.57,words:470},t:"8.1 JVM 高级性能分析工具介绍",i:"fa-solid fa-toolbox",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/8.%20JVM%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/8.2JVM%20%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%E8%A7%A3%E6%9E%90.html",{loader:()=>a.e(3110).then(a.bind(a,63831)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","性能调优"],g:["JVM","性能优化","调优实战","案例分析","GC诊断"],e:"\n<p>本节通过实际项目中的 JVM 性能问题案例，分享诊断思路、调优过程和最终效果，帮助读者理解如何结合工具和业务场景进行优化。</p>\n<hr>\n",r:{minutes:1.72,words:515},t:"8.2 JVM 性能调优实战案例解析",i:"fa-solid fa-stethoscope",y:"a"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/9.%20%E9%AB%98%E7%BA%A7%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE%E6%95%B4%E5%90%88/9.1JVM%E9%AB%98%E7%BA%A7%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE%E6%95%B4%E5%90%88.html",{loader:()=>a.e(85130).then(a.bind(a,48461)),meta:{a:"JeanHu",d:17521056e5,l:"2025年7月10日",c:["JVM","调试诊断"],g:["JVM","调试技巧","工具链","性能分析","故障排查"],e:"\n<p>高级 JVM 调试涉及多工具、多技术的配合使用，以快速准确定位复杂问题。通过合理整合和运用各类诊断工具，可形成高效的调试流程。</p>\n<hr>\n",r:{minutes:1.94,words:583},t:"9.1 JVM 高级调试技巧与工具链整合",i:"fa-solid fa-bug-slash",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html",{loader:()=>a.e(11592).then(a.bind(a,12384)),meta:{e:'\n<h2>今日内容</h2>\n<ul>\n<li>抽象类</li>\n<li>接口</li>\n<li>内部类</li>\n</ul>\n<h2>教学目标</h2>\n<ul class="task-list-container">\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 能够写出抽象类的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 能够写出抽象方法的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 能说出抽象类的应用场景</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 写出定义接口的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 写出实现接口的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 说出接口中成员的特点</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 能说出接口的应用场景</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 能说出接口中为什么会出现带有方法体的方法</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 能完成适配器设计模式</label></li>\n</ul>',r:{minutes:18.22,words:5466},t:"面向对象进阶",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html",{loader:()=>a.e(46683).then(a.bind(a,39938)),meta:{e:"\n<h2>1.抽象类的作用是什么样的？</h2>\n<ul>\n<li>抽取共性时，无法确定方法体，就把方法定义为抽象的。</li>\n<li>强制让子类按照某种格式重写。</li>\n<li>抽象方法所在的类，必须是抽象类。</li>\n</ul>\n<hr>\n<h2>2.抽象类和抽象方法的格式？</h2>\n<ul>\n<li><code>public abstract 返回值类型 方法名（参数列表);</code></li>\n<li>``public abstract class 类名{}`</li>\n</ul>\n<hr>\n<h2>3.继承抽象类有哪些要注意？</h2>\n<ul>\n<li>要么重写抽象类中的所有抽象方法</li>\n<li>要么是抽象类</li>\n</ul>",r:{minutes:2.19,words:657},t:"课堂笔记",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/%E9%9B%86%E5%90%8801.html",{loader:()=>a.e(47755).then(a.bind(a,58172)),meta:{e:"\n<h2>1.1数组和集合的区别【理解】</h2>\n<ul>\n<li>\n<p>相同点</p>\n<p>都是容器,可以存储多个数据</p>\n</li>\n<li>\n<p>不同点</p>\n<ul>\n<li>\n<p>数组的长度是不可变的,集合的长度是可变的</p>\n</li>\n<li>\n<p>数组可以存基本数据类型和引用数据类型</p>\n<p>集合只能存引用数据类型,如果要存基本数据类型,需要存对应的包装类</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>1.2集合类体系结构【理解】</h2>\n<figure><figcaption>01_集合类体系结构图</figcaption></figure>",r:{minutes:11.62,words:3487},t:"1.Collection集合",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html",{loader:()=>a.e(69312).then(a.bind(a,16157)),meta:{e:'\n<h2>1.1泛型概述</h2>\n<ul>\n<li>\n<p>泛型的介绍</p>\n<p>​\t泛型是JDK5中引入的特性，它提供了编译时类型安全检测机制</p>\n</li>\n<li>\n<p>泛型的好处</p>\n<ol>\n<li>把运行时期的问题提前到了编译期间</li>\n<li>避免了强制类型转换</li>\n</ol>\n</li>\n<li>\n<p>泛型的定义格式</p>\n<ul>\n<li><code>&lt;类型&gt;</code>: 指定一种类型的格式.尖括号里面可以任意书写,一般只写一个字母.例如: <code>&lt;E&gt; &lt;T&gt;</code></li>\n<li><code>&lt;类型1,类型2…&gt;</code>: 指定多种类型的格式,多种类型之间用逗号隔开.例如: <code>&lt;E,T&gt; &lt;K,V&gt;</code></li>\n</ul>\n<p>🔥泛型就是为了统一集合中的类型</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// extends:同一个长辈的数据允许进集合</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// super:同一个子辈的数据允许进集合</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> extends Ye</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> list) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> method2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Zi</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> list) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:11.63,words:3489},t:"1.泛型",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html",{loader:()=>a.e(91837).then(a.bind(a,27384)),meta:{e:"\n<h2>1.1 什么是不可变集合</h2>\n<p>​\t是一个长度不可变，内容也无法修改的集合</p>\n<h2>1.2 使用场景</h2>\n<p>​\t如果某个数据不能被修改，把它防御性地拷贝到不可变集合中是个很好的实践。</p>\n<p>​\t当集合对象被不可信的库调用时，不可变形式是安全的。</p>\n<p>简单理解：</p>\n<p>​\t不想让别人修改集合中的内容</p>\n<p>比如说：</p>\n<p>1，斗地主的54张牌，是不能添加，不能删除，不能修改的</p>\n<p>2，斗地主的打牌规则：单张，对子，三张，顺子等，也是不能修改的</p>\n<p>3，用代码获取的操作系统硬件信息，也是不能被修改的</p>",r:{minutes:17.29,words:5188},t:"1.不可变集合",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html",{loader:()=>a.e(80490).then(a.bind(a,76980)),meta:{d:1740528e6,l:"2025年2月26日",c:["Java高级"],g:["多线程","阅读完毕"],e:"<h2>1.实现多线程</h2>\n<h3>1.1简单了解多线程【理解】</h3>\n<p>是指从软件或者硬件上实现多个线程并发执行的技术。\n具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。</p>\n",r:{minutes:20.77,words:6230},t:"",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html",{loader:()=>a.e(51571).then(a.bind(a,99165)),meta:{e:'<h2>1. 线程池</h2>\n<h3>1.1 线程状态介绍</h3>\n<p>当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程</p>\n<p>状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 新建 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        NEW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 可运行状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        RUNNABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 阻塞状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        BLOCKED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 无限等待状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 计时等待 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TIMED_WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 终止 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TERMINATED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">\t}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取当前线程的状态</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">internal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">misc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">VM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toThreadState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(threadStatus);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:34.03,words:10208},t:"",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%80%BB%E7%BB%93.html",{loader:()=>a.e(65203).then(a.bind(a,30536)),meta:{e:"\n<h3>1.什么是多线程？</h3>\n<p>有了多线程，可以让程序做多件事情</p>\n<h3>2.多线程的作用？</h3>\n<p>提高效率</p>\n<h3>3.多线程的应用场景？</h3>\n<p>只要你想要多个事情同时运行就需要用到多线程</p>\n<p>比如：软件中的耗时操作，所有的聊天软件，所有的服务器</p>\n<h3>4.并发和并行</h3>\n<p>并发：在同一时刻，有多个指令在单个CPU上<code>交替</code>执行</p>\n<p>并行：在同一时刻，有多个指令在多个CPU上<code>同时</code>执行</p>\n<h3>5.守护线程</h3>\n<p><code>备胎线程</code></p>",r:{minutes:2.13,words:639},t:"多线程总结",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",{loader:()=>a.e(41655).then(a.bind(a,69128)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java高级"],g:["反射动态代理"],e:"\n<h2>1.1 反射的概述：</h2>\n<p>​\t<strong>专业的解释（了解一下）：</strong></p>\n<p>​       是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；</p>\n<p>​       对于任意一个对象，都能够调用它的任意属性和方法；</p>\n<p>​       这种动态获取信息以及动态调用对象方法的功能称为Java语言的反射机制。</p>\n<p>​\t<strong>通俗的理解：（掌握）</strong></p>\n<ul>\n<li>\n<p>利用<strong>反射</strong>创建的对象<strong>可以无视修饰符</strong>调用类里面的内容</p>\n</li>\n<li>\n<p>可以跟<strong>配置文件结合起来使用</strong>，把要创建的对象信息和方法写在配置文件中。</p>\n<p>读取到什么类，就创建什么类的对象</p>\n<p>读取到什么方法，就调用什么方法</p>\n<p>此时当需求变更的时候不需要修改代码，只要修改配置文件即可。</p>\n</li>\n</ul>\n",r:{minutes:19.23,words:5769},t:"1. 反射",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(9134).then(a.bind(a,46494)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["反射"],e:"\n<p>在 <strong>反射机制</strong> 中，它们的区别在于可以访问的字段类型和访问权限。具体区别如下：</p>\n",r:{minutes:1.67,words:500},t:"getDeclaredField()和getField()区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(27850).then(a.bind(a,11150)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["反射"],e:"\n<blockquote>\n<p><code>getMethods()</code> 和 <code>getDeclaredMethods()</code> 都是 Java 反射中 <code>Class</code> 类的方法，用于获取类中定义的方法。它们之间的主要区别在于<strong>访问权限</strong>和<strong>方法范围</strong>。下面是它们的区别详细解释：</p>\n</blockquote>\n",r:{minutes:1.94,words:582},t:"getMethods()和getDeclaredMethods()的区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html",{loader:()=>a.e(90279).then(a.bind(a,93450)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["高级特性","总结","面试题"],e:'\n<h2>反射</h2>\n<h3>1.反射的作用</h3>\n<p>①获取任意一个类中的所有信息</p>\n<p>②结合配置文件动态创建对象</p>\n<h3>2.获得class字节码文件对象的三种方式</h3>\n<p>①Class.forName("全类名")</p>\n<p>②类名.class</p>\n<p>③对象的.getClass</p>\n<h3>3.如何获取构造方法、成员方法、成员变量</h3>\n<ul>\n<li>get:获取</li>\n<li>set:设置</li>\n<li>Constructor:构造方法</li>\n<li>Parameter:参数</li>\n<li>Field:成员变量</li>\n<li>Modifiers:修饰符</li>\n<li>Method:方法</li>\n<li>Declared:私有的</li>\n</ul>',r:{minutes:.8,words:240},t:"反射&动态代理总结",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html",{loader:()=>a.e(93284).then(a.bind(a,37318)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["SE基础"],e:"\n<blockquote>\n<p><strong>反射</strong>是Java语言的一种强大功能，它允许程序在运行时查询和操作类、方法、字段、构造函数等信息。反射机制使得程序能够在运行时获取有关类和对象的详细信息，甚至动态创建对象、调用方法、访问字段等。</p>\n</blockquote>\n",r:{minutes:2.51,words:753},t:"Java中的反射 (Reflection)",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html",{loader:()=>a.e(37759).then(a.bind(a,77759)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["SE基础"],e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在Java虚拟机（JVM）中，每当一个类被加载时，JVM会为该类创建一个字节码对象，类型为<code>Class</code>，用于存储类的结构信息（比如类名、字段信息、方法信息等）。字节码对象是反射机制的基础，可以通过它动态地获取和操作类的信息。</p>\n</div>\n',r:{minutes:1.98,words:593},t:"字节码对象",i:"fa-brands fa-java",y:"a"}}],["/MQ/RabbitMQ/%E5%9F%BA%E7%A1%80/MQ%E5%9F%BA%E7%A1%80.html",{loader:()=>a.e(13815).then(a.bind(a,58241)),meta:{a:"JeanHu",d:17575488e5,l:"2025年9月11日",c:["消息队列","Middleware"],g:["RabbitMQ","MQ","消息中间件"],e:"<p>微服务一旦拆分，必然涉及到服务之间的相互调用，目前我们服务之间调用采用的都是基于OpenFeign的调用。这种调用中，调用者发起请求后需要<strong>等待</strong>服务提供者执行业务返回结果后，才能继续执行后面的业务。也就是说调用者在调用过程中处于阻塞状态，因此我们成这种调用方式为<strong>同步调用</strong>，也可以叫<strong>同步通讯</strong>。但在很多场景下，我们可能需要采用<strong>异步通讯</strong>的方式，为什么呢？</p>\n",r:{minutes:38.81,words:11642},t:"RabbitMQ 基础",i:"fa-solid fa-envelope",y:"a"}}],["/MQ/RabbitMQ/%E9%AB%98%E7%BA%A7/MQ%E9%AB%98%E7%BA%A7.html",{loader:()=>a.e(76173).then(a.bind(a,19028)),meta:{a:"JeanHu",d:17566848e5,l:"2025年9月1日",c:["消息队列","Middleware"],g:["RabbitMQ","MQ","高级特性"],e:"<p>在昨天的练习作业中，我们改造了余额支付功能，在支付成功后利用RabbitMQ通知交易服务，更新业务订单状态为已支付。\n但是大家思考一下，如果这里MQ通知失败，支付服务中支付流水显示支付成功，而交易服务中的订单状态却显示未支付，数据出现了不一致。\n此时前端发送请求查询支付状态时，肯定是查询交易服务状态，会发现业务订单未支付，而用户自己知道已经支付成功，这就导致用户体验不一致。</p>\n<p>因此，这里我们必须尽可能确保MQ消息的可靠性，即：消息应该至少被消费者处理1次\n那么问题来了：</p>\n",r:{minutes:39.54,words:11862},t:"RabbitMQ 高级",i:"fa-solid fa-cubes",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html",{loader:()=>a.e(51295).then(a.bind(a,35991)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["接口文档"],e:"\n<blockquote>\n<p><code>MetaObjectHandler</code> 接口是一个与 MyBatis-Plus 插件相关的接口，主要用于插入和更新操作中自动填充字段的处理。此接口提供了一系列的方法，供开发者在处理数据库操作时动态填充字段值。以下是接口的详细说明及方法文档。</p>\n</blockquote>\n",r:{minutes:4.47,words:1340},t:"MetaObjectHandler 接口文档",i:"fa-file",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html",{loader:()=>a.e(50842).then(a.bind(a,98341)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["接口示例"],e:"\n<blockquote>\n<p><code>MetaObjectHandler</code> 是 MyBatis-Plus 提供的一个接口，用于处理自动填充（自动填充字段）功能。通过实现这个接口，可以在执行插入或更新操作时，自动为指定字段填充数据，比如填充创建时间、更新时间等常见字段。</p>\n</blockquote>\n",r:{minutes:3.32,words:995},t:"MetaObjectHandler示例",i:"fa-screwdriver-wrench",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html",{loader:()=>a.e(938).then(a.bind(a,85524)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["注解"],e:'\n<blockquote>\n<p><code>@TableField</code> 是 MyBatis-Plus 提供的注解，用于指定实体类字段与数据库表列之间的映射关系，并可以进行一些字段属性的控制。它的常用方法可以帮助我们灵活地配置字段的行为，特别是在执行数据库操作时，如何映射字段、处理自动填充等。</p>\n</blockquote>\n<h3><code>@TableField</code> 常用属性总结</h3>\n<ol>\n<li>\n<p><strong>value</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段对应的数据库表列名。</li>\n<li><strong>类型</strong>：<code>String</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"user_name"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>exist</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定该字段是否参与数据库映射。默认值是 <code>true</code>，表示该字段会参与数据库操作。</li>\n<li><strong>类型</strong>：<code>boolean</code>（默认为 <code>true</code>）</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">exist</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tempField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 该字段不会映射到数据库</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>fill</strong>:</p>\n<ul>\n<li>\n<p><strong>说明</strong>：指定字段的自动填充策略，可以通过 <code>FieldFill</code> 枚举来设置填充操作的时机。</p>\n</li>\n<li>\n<p><strong>类型</strong>：<code>FieldFill</code></p>\n</li>\n<li>\n<p><strong>常用值</strong>：</p>\n<ul>\n<li><code>FieldFill.INSERT</code>: 插入时填充。</li>\n<li><code>FieldFill.UPDATE</code>: 更新时填充。</li>\n<li><code>FieldFill.INSERT_UPDATE</code>: 插入或更新时填充。</li>\n<li><code>FieldFill.DEFAULT</code>: 默认行为，通常不进行自动填充。</li>\n</ul>\n</li>\n<li>\n<p><strong>示例</strong>：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">fill</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldFill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">INSERT</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 只在插入时自动填充</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>updateStrategy</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定更新时的策略。主要用于在更新操作时，决定是否更新该字段。</li>\n<li><strong>类型</strong>：<code>FieldStrategy</code></li>\n<li><strong>常用值</strong>：\n<ul>\n<li><code>FieldStrategy.NOT_NULL</code>: 更新时只有非 <code>null</code> 的字段才会更新。</li>\n<li><code>FieldStrategy.IGNORED</code>: 更新时忽略该字段。</li>\n<li><code>FieldStrategy.NOT_EMPTY</code>: 更新时只有字段非空时才会更新。</li>\n<li><code>FieldStrategy.DEFAULT</code>: 默认行为。</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">updateStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NOT_NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 更新时仅当该字段不为null时才会更新</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>insertStrategy</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定插入时的策略。与 <code>updateStrategy</code> 类似，但它是在插入操作时生效的。</li>\n<li><strong>类型</strong>：<code>FieldStrategy</code></li>\n<li><strong>常用值</strong>：\n<ul>\n<li><code>FieldStrategy.NOT_NULL</code>: 插入时只有非 <code>null</code> 的字段才会插入。</li>\n<li><code>FieldStrategy.IGNORED</code>: 插入时忽略该字段。</li>\n<li><code>FieldStrategy.NOT_EMPTY</code>: 插入时只有字段非空时才会插入。</li>\n<li><code>FieldStrategy.DEFAULT</code>: 默认行为。</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">insertStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NOT_NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 插入时仅当该字段不为null时才会插入</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>select</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定该字段在查询时是否参与查询操作。默认为 <code>true</code>，表示该字段会参与查询。</li>\n<li><strong>类型</strong>：<code>boolean</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">select</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 查询时不包含该字段</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>typeHandler</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段使用的 <code>TypeHandler</code>，用于处理数据库类型与 Java 类型之间的转换。一般用于特殊类型的字段，例如枚举类型、JSON 类型等。</li>\n<li><strong>类型</strong>：<code>Class&lt;? extends TypeHandler&lt;?&gt;&gt;</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">typeHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> MyEnumTypeHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyEnum</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 自定义 TypeHandler 用于 MyEnum 类型的字段</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>el</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段在 SQL 语句中是否作为 <code>null</code> 使用。可选值为：\n<ul>\n<li><code>true</code>：字段在 SQL 中作为 <code>null</code> 处理。</li>\n<li><code>false</code>：字段在 SQL 中不会作为 <code>null</code> 使用。</li>\n</ul>\n</li>\n<li><strong>类型</strong>：<code>boolean</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">el</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "status!=null"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 如果 status 不为 null 则会在 SQL 语句中作为字段插入</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n</ol>',r:{minutes:3.35,words:1004},t:"@TableField",i:"fa-solid fa-hashtag",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%85%A5%E5%8F%82%E5%A4%84%E7%90%86%E5%88%87%E9%9D%A2.html",{loader:()=>a.e(39775).then(a.bind(a,8239)),meta:{e:'\n<h2>1 需求分析</h2>\n<p>需求: 对百度网盘分享链接输入密码时尾部多输入的空格做兼容处理。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504102255551.png" alt="1630240203033" tabindex="0" loading="lazy"><figcaption>1630240203033</figcaption></figure>\n<p>问题描述:</p>\n<ul>\n<li>\n<p>点击链接，会提示，请输入提取码，如下图所示</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504102255523.png" alt="1630240528228" tabindex="0" loading="lazy"><figcaption>1630240528228</figcaption></figure>\n</li>\n<li>\n<p>当我们从别人发给我们的内容中复制提取码的时候，有时候会多复制到一些空格，直接粘贴到百度的提取码输入框</p>\n</li>\n<li>\n<p>但是百度那边记录的提取码是没有空格的</p>\n</li>\n<li>\n<p>这个时候如果不做处理，直接对比的话，就会引发提取码不一致，导致无法访问百度盘上的内容</p>\n</li>\n<li>\n<p>所以多输入一个空格可能会导致项目的功能无法正常使用。</p>\n</li>\n<li>\n<p>此时我们就想能不能将输入的参数先帮用户去掉空格再操作呢?</p>\n</li>\n</ul>',r:{minutes:3.61,words:1084},t:"百度网盘密码数据兼容处理",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%20AOP%20%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2.html",{loader:()=>a.e(11095).then(a.bind(a,93053)),meta:{a:"JeanHu",d:17524512e5,l:"2025年7月14日",c:["Spring","AOP"],g:["AOP","注解","日志切面","Spring","切点表达式"],e:'\n<h2>✍ 1. 自定义注解 <code>@Loggable</code></h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Target</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">METHOD</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Retention</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RUNTIME</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Documented</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B"> Loggable</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 操作描述</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> logResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 是否记录返回值</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.13,words:640},t:"基于注解的 AOP 日志切面",i:"fa-solid fa-scroll",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%88%87%E9%9D%A2.html",{loader:()=>a.e(76142).then(a.bind(a,42648)),meta:{e:'\n<h2>环境准备</h2>\n<ul>\n<li>\n<p>创建一个Maven项目</p>\n</li>\n<li>\n<p>pom.xml添加Spring依赖</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-context&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.2.10.RELEASE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-jdbc&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.2.10.RELEASE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.2.10.RELEASE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.aspectj&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;aspectjweaver&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.9.4&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mysql&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mysql-connector-java&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.1.47&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;com.alibaba&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;druid&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.1.16&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.mybatis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mybatis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;3.5.6&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.mybatis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mybatis-spring&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.3.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;4.12&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>添加AccountService、AccountServiceImpl、AccountDao与Account类</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Account</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Service</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountServiceImpl</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autowired</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountDao</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(account);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(account);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(id);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Account</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(id);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Insert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insert into tbl_account(name,money)values(#{name},#{money})"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Delete</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"delete from tbl_account where id = #{id} "</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Update</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"update tbl_account set name = #{name} , money = #{money} where id = #{id} "</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Select</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"select * from tbl_account"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Select</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"select * from tbl_account where id = #{id} "</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Account</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Account</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Serializable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //setter..getter..toString方法省略</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>resources下提供一个jdbc.properties</p>\n<div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">com.mysql.jdbc.Driver</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">jdbc:mysql://localhost:3306/spring_db?</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">useSSL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">false</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">root</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">root</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>创建相关配置类</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//Spring配置类:SpringConfig</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Configuration</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ComponentScan</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.itheima"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">PropertySource</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"classpath:jdbc.properties"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Import</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">JdbcConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MybatisConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SpringConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//JdbcConfig配置类</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> JdbcConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.driver}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.url}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.username}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.password}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DataSource</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        DruidDataSource</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DruidDataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDriverClassName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(driver);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(url);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUsername</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userName);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(password);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ds;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//MybatisConfig配置类</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MybatisConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SqlSessionFactoryBean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sqlSessionFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DataSource</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        SqlSessionFactoryBean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ssfb</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SqlSessionFactoryBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ssfb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTypeAliasesPackage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.itheima.domain"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ssfb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dataSource);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ssfb;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MapperScannerConfigurer</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mapperScannerConfigurer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        MapperScannerConfigurer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> msc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MapperScannerConfigurer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        msc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setBasePackage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.itheima.dao"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> msc;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>编写Spring整合Junit的测试类</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RunWith</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SpringJUnit4ClassRunner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ContextConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">classes</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> SpringConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountServiceTestCase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autowired</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testFindById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Account</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ac</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testFindAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">all</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:3.67,words:1101},t:"性能监控切面",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84.html",{loader:()=>a.e(61263).then(a.bind(a,58921)),meta:{e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Aspect</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Component</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyAspect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 定义切点，拦截所有的请求，但排除特定路径</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"execution(* com.example.controller.*.*(..)) &amp;&amp; !execution(* com.example.controller.ExcludedController.*(..))"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 切点定义</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 在切点上增加通知</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Before</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pointcut()"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">JoinPoint</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> joinPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 你的逻辑代码</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Before method execution: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> joinPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.26,words:78},t:"日志切面排除路径",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/Spring_day01.html",{loader:()=>a.e(53495).then(a.bind(a,13990)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>掌握Spring相关概念</li>\n<li>完成IOC/DI的入门案例编写</li>\n<li>掌握IOC的相关配置与使用</li>\n<li>掌握DI的相关配置与使用</li>\n</ul>\n</blockquote>\n<h2>1，课程介绍</h2>\n<p>对于一门新技术，我们需要从<code>为什么要学</code>、<code>学什么</code>以及<code>怎么学</code>这三个方向入手来学习。那对于Spring来说:</p>\n",r:{minutes:51.89,words:15566},t:"Spring_day01",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/Spring_day02.html",{loader:()=>a.e(60737).then(a.bind(a,67335)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>掌握IOC/DI配置管理第三方bean</li>\n<li>掌握IOC/DI的注解开发</li>\n<li>掌握IOC/DI注解管理第三方bean</li>\n<li>完成Spring与Mybatis及Junit的整合开发</li>\n</ul>\n</blockquote>\n<h2>1，IOC/DI配置管理第三方bean</h2>\n<p>前面所讲的知识点都是基于我们自己写的类，现在如果有需求让我们去管理第三方jar包中的类，该如何管理?</p>\n",r:{minutes:42.96,words:12887},t:"Spring_day02",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/Spring_day03.html",{loader:()=>a.e(84983).then(a.bind(a,34093)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>理解并掌握AOP相关概念</li>\n<li>能够说出AOP的工作流程</li>\n<li>能运用AOP相关知识完成对应的案例编写</li>\n<li>重点掌握Spring的声明式事务管理</li>\n</ul>\n</blockquote>\n",r:{minutes:55.11,words:16533},t:"Spring_day03",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E6%B3%A8%E8%A7%A3.html",{loader:()=>a.e(66436).then(a.bind(a,58133)),meta:{e:"\n<h2>AOP</h2>\n<h3>@PropertySource</h3>\n<p>用于指定外部的配置文件路径，并将文件中的属性加载到 Spring 的 Environment 中，方便在应用程序中使用</p>\n<h3>@Import</h3>\n<p>可以帮助你将多个配置类模块化地导入到一个主配置类中，避免单一配置类过于庞大</p>\n<h3>@RunWith</h3>\n<p><code>@RunWith</code> 的作用是为测试类指定一个自定义的 <strong>Test Runner</strong>，JUnit 默认使用的运行器<code>BlockJUnit4ClassRunner</code>，但可以通过 <code>@RunWith</code> 来指定其他的测试运行器</p>",r:{minutes:1.93,words:579},t:"Spring注解",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E9%9A%8F%E7%AC%94.html",{loader:()=>a.e(43986).then(a.bind(a,30244)),meta:{e:'\n<h2>AOP</h2>\n<h3>AOP通知获取数据</h3>\n<p><code> @Before("pt()")</code>获取参数使用<code>JoinPoint</code></p>\n<p><code> @Around("pt()")</code>获取次参数使用<code>ProceedingJoinPoint</code></p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Component</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Aspect</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyAdvice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"execution(* com.itheima.dao.BookDao.findName(..))"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Before</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pt()"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">JoinPoint</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> jp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        Object[] args = jp.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        System.out.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(args));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        System.out.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"before advice ..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Around</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pt()"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> around</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ProceedingJoinPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> pjp)throws Throwable {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] args </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> pjp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(args));</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ret </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> pjp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">proceed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> ret</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t//其他的略</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.37,words:411},t:"Spring随笔",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/SpringMVC_day01.html",{loader:()=>a.e(16774).then(a.bind(a,68139)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>理解SpringMVC相关概念</li>\n<li>完成SpringMVC的入门案例</li>\n<li>学会使用PostMan工具发送请求和数据</li>\n<li>掌握SpringMVC如何接收请求、数据和响应结果</li>\n<li>掌握RESTful风格及其使用</li>\n<li>完成基于RESTful的案例编写</li>\n</ul>\n</blockquote>\n<p>SpringMVC是隶属于Spring框架的一部分，主要是用来进行Web开发，是对Servlet进行了封装。</p>\n<p>对于SpringMVC我们主要学习如下内容:</p>\n",r:{minutes:50.77,words:15230},t:"SpringMVC_day01",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/SpringMVC_day02.html",{loader:()=>a.e(10806).then(a.bind(a,61774)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>完成SSM的整合开发</li>\n<li>能够理解并实现统一结果封装与统一异常处理</li>\n<li>能够完成前后台功能整合开发</li>\n<li>掌握拦截器的编写</li>\n</ul>\n</blockquote>\n",r:{minutes:38.2,words:11459},t:"SpringMVC_day02",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E6%B3%A8%E8%A7%A3.html",{loader:()=>a.e(94555).then(a.bind(a,4799)),meta:{e:"\n<h2>@EnableWebMvc</h2>\n<p><code>@EnableWebMvc</code> 注解会启用 Spring MVC 的默认配置，包括：</p>\n<ul>\n<li><strong>配置 DispatcherServlet</strong>：Spring MVC 的核心控制器，负责处理 HTTP 请求。</li>\n<li><strong>启用视图解析器</strong>：默认的 <code>InternalResourceViewResolver</code>，用于解析 JSP 或其他视图。</li>\n<li><strong>启用注解驱动的控制器</strong>：允许使用 <code>@Controller</code>, <code>@RequestMapping</code> 等注解来定义请求处理方法。</li>\n<li><strong>启用消息转换器</strong>：支持请求和响应的 JSON、XML 等格式的转换。</li>\n</ul>",r:{minutes:.51,words:153},t:"SpringMVC注解",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E9%9A%8F%E7%AC%94.html",{loader:()=>a.e(89785).then(a.bind(a,75637)),meta:{e:"\n<h2>1.servlet的坐标为什么需要添加<code>&lt;scope&gt;provided&lt;/scope&gt;</code>?</h2>\n<ul>\n<li>\n<p>scope是maven中jar包依赖作用范围的描述，</p>\n</li>\n<li>\n<p>如果不设置默认是<code>compile</code>在在编译、运行、测试时均有效</p>\n</li>\n<li>\n<p>如果运行有效的话就会和<code>tomcat中</code>的<code>servlet-api</code>包发生冲突，导致启动报错</p>\n</li>\n<li>\n<p>provided代表的是该包只在编译和测试的时候用，运行的时候无效直接使用<code>tomcat</code>中的，就避免冲突</p>\n</li>\n</ul>",r:{minutes:1.03,words:309},t:"SpringMVC随笔",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/packaging%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(20598).then(a.bind(a,86749)),meta:{e:'\n<ol>\n<li>\n<p><strong><code>jar</code></strong>（默认值）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 JAR 文件（Java ARchive），适用于普通的 Java 库项目。</li>\n<li><strong>用途</strong>：适用于普通的 Java 应用程序或库项目。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>war</code></strong>（Web Application Archive）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 WAR 文件（Web ARchive），用于 Web 应用程序。</li>\n<li><strong>用途</strong>：适用于基于 Servlet 的 Web 应用程序或使用类似 Spring MVC 的 Web 框架。启动Tomcat服务器时需要改为此类型</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;war&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>ear</code></strong>（Enterprise ARchive）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 EAR 文件（Enterprise ARchive），用于企业级 Java 应用，包含多个模块（如 EJB、Web 模块等）。</li>\n<li><strong>用途</strong>：适用于 Java EE（企业版）应用程序。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;ear&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>pom</code></strong></p>\n<ul>\n<li><strong>描述</strong>：用于 Maven 的父项目，通常不构建任何产物，只是作为项目的管理和依赖的容器。</li>\n<li><strong>用途</strong>：用于构建和管理多个子模块的父项目，常用于多模块的 Maven 项目。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;pom&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>maven-plugin</code></strong></p>\n<ul>\n<li><strong>描述</strong>：用于构建 Maven 插件。</li>\n<li><strong>用途</strong>：当你要创建一个自定义的 Maven 插件时，使用这个 <code>packaging</code> 类型。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;maven-plugin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>bundle</code></strong></p>\n<ul>\n<li><strong>描述</strong>：用于创建 OSGi（开放服务网格）包，通常用于模块化的 Java 应用程序。</li>\n<li><strong>用途</strong>：适用于 OSGi 模块化框架。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;bundle&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>ejb</code></strong>（Enterprise JavaBeans）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 EJB 模块，适用于包含 EJB 组件的企业级应用。</li>\n<li><strong>用途</strong>：适用于 Java EE 应用程序中的 EJB 模块。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;ejb&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>zip</code></strong></p>\n<ul>\n<li><strong>描述</strong>：生成一个 ZIP 文件，通常用于将项目打包为压缩文件。</li>\n<li><strong>用途</strong>：适用于需要将项目以压缩格式分发的情况。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;zip&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>tar</code></strong></p>\n<ul>\n<li><strong>描述</strong>：生成一个 TAR 文件（类似 ZIP 文件），适用于打包为 TAR 格式。</li>\n<li><strong>用途</strong>：适用于类似于 <code>zip</code>，但是打包成 tar 格式的场景。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;tar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>rar</code></strong>（Resource Adapter Archive）</p>\n<ul>\n<li><strong>描述</strong>：用于生成资源适配器的归档文件。</li>\n<li><strong>用途</strong>：适用于 Java EE 的资源适配器（JCA）项目。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;rar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:1.69,words:507},t:"packaging 类型",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/pom%E4%B8%AD%E7%9A%84relativePath.html",{loader:()=>a.e(25465).then(a.bind(a,76641)),meta:{e:'\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-parent&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;2.6.6&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.39,words:118},t:"Pom中的relativePath",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Centos7%E5%AE%89%E8%A3%85Docker.html",{loader:()=>a.e(8368).then(a.bind(a,38068)),meta:{e:'\n<p>Docker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。</p>\n<p>Docker CE 分为 <code>stable</code> <code>test</code> 和 <code>nightly</code> 三个更新频道。</p>\n<p>官方网站上有各种环境下的 <a href="https://docs.docker.com/install/" target="_blank" rel="noopener noreferrer">安装指南</a>，这里主要介绍 Docker CE 在 CentOS上的安装。</p>',r:{minutes:3.08,words:923},t:"0.安装Docker",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Docker%E5%AE%9E%E7%94%A8%E7%AF%87.html",{loader:()=>a.e(39552).then(a.bind(a,2357)),meta:{e:"\n<h1>0.学习目标</h1>\n<h1>1.初识Docker</h1>\n<h2>1.1.什么是Docker</h2>\n<p>微服务虽然具备各种各样的优势，但服务的拆分通用给部署带来了很大的麻烦。</p>\n<ul>\n<li>分布式系统中，依赖的组件非常多，不同组件之间部署时往往会产生一些冲突。</li>\n<li>在数百上千台服务中重复部署，环境不一定一致，会遇到各种问题</li>\n</ul>\n<h3>1.1.1.应用部署的环境问题</h3>\n<p>大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题：</p>\n<ul>\n<li>\n<p>依赖关系复杂，容易出现兼容性问题</p>\n</li>\n<li>\n<p>开发、测试、生产环境有差异</p>\n</li>\n</ul>",r:{minutes:22.5,words:6750},t:"Docker实用篇",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/1.%E4%BB%80%E4%B9%88%E6%98%AFES.html",{loader:()=>a.e(28151).then(a.bind(a,48477)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>什么是elasticsearch?</p>\n<ul>\n<li>一个开源的分布式搜索引擎，可以用来实现搜索、日志统计、分析、系统监控等功能</li>\n</ul>\n<p>什么是elastic stack(ELK)?</p>\n<ul>\n<li>是以elasticsearch为核心的技术栈，包括beats、Logstash、kibana,elasticsearch</li>\n</ul>\n<p>什么是Lucene?</p>\n<ul>\n<li>是Apache的开源搜索引擎类库，提供了搜索引擎的核心APl</li>\n</ul>\n</div>\n<hr>\n',r:{minutes:6.14,words:1841},t:"1.什么是ES?",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/10.%E5%88%86%E9%A1%B5.html",{loader:()=>a.e(54907).then(a.bind(a,8641)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["重点"],e:"\n<p>Elasticsearch的分页操作原理涉及如何高效地处理和返回大量数据的不同策略，避免性能瓶颈。以下是几种常见的分页方式及其优缺点：</p>\n",r:{minutes:3.92,words:1176},t:"10.分页",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/2.%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html",{loader:()=>a.e(77166).then(a.bind(a,21920)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>每一条数据就是一个文档</li>\n<li>对文档中的内容分词，得到的词语就是词条</li>\n</ul>\n<p>什么是正向索引？</p>\n<ul>\n<li>基于文档d创建索引。查询词条时必须先找到文档，而后判断是否包含词条</li>\n</ul>\n<p>什么是倒排索引？</p>\n<ul>\n<li>对文档内容分词，对词条创建索引，并记录词条所在文档的信息。查询时先根据词条查询到文档d,而后获取到文档</li>\n</ul>\n</div>',r:{minutes:.47,words:141},t:"2.倒排索引",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/3.%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html",{loader:()=>a.e(121).then(a.bind(a,3228)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:"\n<h3><strong>基本概念</strong></h3>\n<ul>\n<li>\n<p>文档：一条数据就是一个文档，es中是)son格式</p>\n</li>\n<li>\n<p>字段：Json文档中的字段</p>\n</li>\n<li>\n<p>索引：同类型文档的集合</p>\n</li>\n<li>\n<p>映射：索引中文档的约束，比如字段名称、类型</p>\n</li>\n</ul>\n",r:{minutes:.81,words:244},t:"3.基本概念",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/4.%E5%AE%89%E8%A3%85elasticsearch.html",{loader:()=>a.e(24024).then(a.bind(a,73024)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["讲义"],e:'\n<h1>1.部署单点es</h1>\n<h2>1.1.创建网络</h2>\n<p>因为我们还需要部署kibana容器，因此需要让es和kibana容器互联。这里先创建一个网络：</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> es-net</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:5.93,words:1778},t:"4.安装elasticsearch",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/5.%E5%88%86%E8%AF%8D%E5%99%A8.html",{loader:()=>a.e(52581).then(a.bind(a,24003)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:"\n<h3>分词器的作用是什么？</h3>\n<ul>\n<li>创建倒排索引时对文档分词</li>\n<li>用户搜索时，对输入的内容分词</li>\n</ul>\n",r:{minutes:.44,words:133},t:"5.分词器",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/6.mapping%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7.html",{loader:()=>a.e(4853).then(a.bind(a,17716)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:"\n<h3>mapping常见属性有哪些？</h3>\n<ul>\n<li>type:数据类型</li>\n<li>index:是否索引</li>\n<li>analyzer:分词器</li>\n<li>properties:子字段</li>\n</ul>\n",r:{minutes:.25,words:75},t:"6.mapping常见属性",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/7.%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%BA%93.html",{loader:()=>a.e(83917).then(a.bind(a,74847)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:'\n<h3>示例</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PUT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /heima</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  "mappings"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    "properties"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      "info"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "type"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "text",</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "analyzer"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "standard"</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      "email"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "type"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "keyword",</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "index"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      "name"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "properties"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">          "firstName"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            "type"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">"keyword"</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.14,words:42},t:"7.创建索引库",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/8.%E5%B8%B8%E8%A7%81%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(68999).then(a.bind(a,67241)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["重点"],e:'\n<h3>0.查询语法</h3>\n<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">GET&nbsp;/indexName/_search</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">&nbsp;&nbsp;"query"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:&nbsp;{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">&nbsp;&nbsp;&nbsp;&nbsp;"查询类型"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:&nbsp;{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"查询条件"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:&nbsp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"条件值"</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&nbsp;&nbsp;&nbsp;&nbsp;}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&nbsp;&nbsp;}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.62,words:785},t:"8.常见查询类型",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/9.copy_to%E7%9A%84%E7%94%A8%E6%B3%95.html",{loader:()=>a.e(6078).then(a.bind(a,77149)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["重点"],e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 Elasticsearch 中，<code>copy_to</code> 是一个字段映射选项，它允许将一个字段的值复制到另一个字段。这通常用于将多个字段的内容合并到一个字段中，以便进行更高效的搜索和查询操作。<code>copy_to</code> 主要用于构建复合字段，简化查询，尤其在需要执行全文搜索时。</p>\n</div>\n',r:{minutes:2.43,words:729},t:"copy_to的用法",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>a.e(38398).then(a.bind(a,27583)),meta:{d:17371584e5,l:"2025年1月18日",c:["项目"],g:["教程"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.17,words:51},t:"视频教程",i:"fa-solid fa-play",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E01.html",{loader:()=>a.e(193).then(a.bind(a,64)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["讲义"],e:"\n<p>-- elasticsearch基础</p>\n<h1>0.学习目标</h1>\n<h1>1.初识elasticsearch</h1>\n<h2>1.1.了解ES</h2>\n<h3>1.1.1.elasticsearch的作用</h3>\n<p>elasticsearch是一款非常强大的开源搜索引擎，具备非常多强大功能，可以帮助我们从海量数据中快速找到需要的内容</p>\n",r:{minutes:22.33,words:6699},t:"讲义-分布式搜索引擎01",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E02.html",{loader:()=>a.e(31100).then(a.bind(a,37060)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["讲义"],e:"\n<p>在昨天的学习中，我们已经导入了大量数据到elasticsearch中，实现了elasticsearch的数据存储功能。但elasticsearch最擅长的还是搜索和数据分析。</p>\n<p>所以今天，我们研究下elasticsearch的数据搜索功能。我们会分别使用<strong>DSL</strong>和<strong>RestClient</strong>实现搜索。</p>\n",r:{minutes:30.57,words:9172},t:"讲义-分布式搜索引擎02",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/RabbitMQ.html",{loader:()=>a.e(25327).then(a.bind(a,83651)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud实用篇"],g:["讲义","RabbitMQ"],e:"\n<h1>1.初识MQ</h1>\n",r:{minutes:15.76,words:4729},t:"RabbitMQ",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html",{loader:()=>a.e(75396).then(a.bind(a,53335)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],g:["总结"],e:'\n<blockquote>\n<p>nacos是依附于java的，因为他的启动是一个jar文件，target下的nacos-server.jar，所以使用nacos之前必须确保java以下载，且版本是1.8以上。</p>\n</blockquote>\n<p><a href="https://github.com/alibaba/nacos/releases" target="_blank" rel="noopener noreferrer">下载链接 Releases · alibaba/nacos</a></p>\n<h2>安装</h2>\n<figure><figcaption>image-20241027184717558</figcaption></figure>',r:{minutes:.84,words:253},t:"安装与启动",i:"fa-solid fa-cloud",O:1,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",{loader:()=>a.e(47746).then(a.bind(a,68415)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:'\n<div class="language-application.properties line-numbers-mode" data-highlighter="shiki" data-ext="application.properties" data-title="application.properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 注册应用名</span></span>\n<span class="line"><span>spring.application.name=coupon</span></span>\n<span class="line"><span># 注册地址</span></span>\n<span class="line"><span>spring.cloud.nacos.discovery.server-addr=192.168.68.86:8848</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 参数</span></span>\n<span class="line"><span>coupon.user.name=zhangsan</span></span>\n<span class="line"><span>coupon.user.age=20</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.27,words:82},t:"注册中心",i:"fa-solid fa-cloud",O:2,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html",{loader:()=>a.e(85338).then(a.bind(a,15587)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],g:["总结"],e:'\n<h3>1.引入依赖</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">作为配置中心</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">starter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">nacos</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">config</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.51,words:752},t:"如何使用Nacos作为配置中心统一管理配置",i:"fa-solid fa-cloud",O:3,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html",{loader:()=>a.e(68359).then(a.bind(a,91156)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:'\n<p>application.yml</p>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    gateway</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      routes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">test_route</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">https://www.baidu.com</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Query=url,baidu</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">qq_route</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            https://www.qq.com</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Query=url,qq</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.46,words:139},t:"网关API配置",i:"fa-solid fa-cloud",O:4,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html",{loader:()=>a.e(55846).then(a.bind(a,77921)),meta:{e:"\n<blockquote>\n<p>Nacos在服务端启动时会出现IP地址错误导致无法访问</p>\n</blockquote>\n<ol>\n<li>\n<p>进入Nacos安装目录</p>\n<figure><figcaption>image-20241117112715049</figcaption></figure>\n</li>\n<li>\n<p><code>vim conf/application.properties</code>，修改所示配置项的IP地址。<code>:x</code>退出</p>\n<figure><figcaption>image-20241117112858652</figcaption></figure>\n</li>\n<li>\n<p>重启Nacos服务：使用单例模式启动 <code>./startup.sh -m standalone</code></p>\n</li>\n<li>\n<p>查看启动信息<code>view logs/start.out</code> <strong>IP地址修改成功</strong></p>\n</li>\n</ol>",r:{minutes:.4,words:121},t:"指定Nacos的服务端IP",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/5.Nacos%E5%A4%9A%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2.html",{loader:()=>a.e(56015).then(a.bind(a,60924)),meta:{e:'\n<p>Nacos集群安装一，在每台服务器上安装nacos</p>\n<h3><a class="header-anchor" href="#_1-准备安装包github下载点"><span>1.准备安装包</span></a><a href="https://github.com/alibaba/nacos/releases" target="_blank" rel="noopener noreferrer">github下载点</a></h3>\n<h3>2.在/usr/local/目录下创建一个文件夹用于上传和解压Nacos</h3>\n<div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cd /usr/local/</span></span>\n<span class="line"><span>#这里创建文件夹名字可随意，解压后会生成一个名为nacos的文件夹，后续会移动至/usr/local/</span></span>\n<span class="line"><span>mkdir nacosall</span></span>\n<span class="line"><span>#解压之前cd进安装包根目录</span></span>\n<span class="line"><span>cd /usr/local/nacosall/</span></span>\n<span class="line"><span>#这边选择的Nacos版本为2.1.0</span></span>\n<span class="line"><span>tar -zxxvf nacos-server-2.1.0.tar.gz</span></span>\n<span class="line"><span>#把该文件移动至/usr/local/目录下</span></span>\n<span class="line"><span>mv nacos /usr/local/</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.92,words:877},t:"Nacos多节点部署",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/",{loader:()=>a.e(12565).then(a.bind(a,44050)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],e:"\n",r:{minutes:.04,words:12},t:"Nacos",i:"fa-solid fa-cloud",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/1.MAC%E5%AE%89%E8%A3%85JMeter.html",{loader:()=>a.e(90398).then(a.bind(a,87941)),meta:{e:'\n<h2>一、下载JMeter</h2>\n<ul>\n<li><strong>最新版本</strong>：<a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener noreferrer">JMeter 官方下载</a></li>\n<li><strong>历史版本</strong>：<a href="https://archive.apache.org/dist/jmeter/binaries/" target="_blank" rel="noopener noreferrer">JMeter 历史版本下载</a></li>\n</ul>',r:{minutes:.83,words:248},t:"1.MAC安装JMeter",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/2.Jmeter%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",{loader:()=>a.e(56881).then(a.bind(a,91028)),meta:{e:"\n<h1>1.安装Jmeter</h1>\n<p>Jmeter依赖于JDK，所以必须确保当前计算机上已经安装了JDK，并且配置了环境变量。</p>\n<h2>1.1.下载</h2>\n<p>可以Apache Jmeter官网下载，地址：http://jmeter.apache.org/download_jmeter.cgi</p>\n<figure><figcaption>image-20210715193149837</figcaption></figure>\n<p>当然，我们课前资料也提供了下载好的安装包：</p>\n<figure><figcaption>image-20210715193224094</figcaption></figure>",r:{minutes:1.42,words:426},t:"Jmeter快速入门",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html",{loader:()=>a.e(23771).then(a.bind(a,60963)),meta:{e:'\n<h2>一、修改order-service服务</h2>\n<p>修改OrderService，让其监听Nacos中的sentinel规则配置。</p>\n<p>具体步骤如下：</p>\n<h3>1.引入依赖</h3>\n<p>在order-service中引入sentinel监听nacos的依赖：</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;com.alibaba.csp&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;sentinel-datasource-nacos&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.76,words:527},t:"Sentinel 规则持久化",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html",{loader:()=>a.e(74751).then(a.bind(a,44054)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务"],e:"\n<ul>\n<li><strong>TM（事务管理器）</strong>：在事务开始时负责启动和管理事务生命周期，协调全局事务的进展。</li>\n<li><strong>TC（事务协调者）</strong>：决定全局事务的提交或回滚，并协调所有 <strong>RM</strong> 的操作。</li>\n<li><strong>RM（资源管理器）</strong>：执行本地事务操作，记录操作日志，按照 <strong>TC</strong> 的指令执行提交或回滚。</li>\n</ul>\n",r:{minutes:.41,words:122},t:"TC,TM,RM",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata1.4.2%E5%8D%87%E7%BA%A72.0.0%E6%B3%A8%E6%84%8F%E7%82%B9.html",{loader:()=>a.e(37873).then(a.bind(a,29597)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务"],e:'\n<ol>\n<li>\n<p>lock_table中status字段缺失要补上</p>\n</li>\n<li>\n<p>客户端配置项中，特别注意<code>seata.registry.application</code>配置的要与<code>seata-server</code>在Nacos中注册的服务名一致</p>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">seata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 注册中心</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 参考tc服务自己的registry.conf中的配置</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nacos</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    nacos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># tc</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      server-addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">81.70.62.114:8848</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">DEFAULT_GROUP</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 注意这个地方一定与Nacos中注册的tc服务名一致！！！！</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">seata-server</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # tc服务在nacos中的服务名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      cluster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SH</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  tx-service-group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">seata-demo</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 事务组，根据这个获取tc服务的cluster名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    vgroup-mapping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 事务组与TC服务cluster的映射关系</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      seata-demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SH</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:.7,words:211},t:"seata1.4.2升级2.0.0注意点",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.html",{loader:()=>a.e(55394).then(a.bind(a,35954)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["阅读完毕","讲义","Seata","分布式事务","微服务"],e:'\n<h1>一、部署Seata的tc-server</h1>\n<h2>1.下载</h2>\n<p>首先我们要下载seata-server包，<a href="http://seata.io/zh-cn/blog/download.html" target="_blank" rel="noopener noreferrer">下载地址</a></p>\n<p>当然，课前资料也准备好了：</p>\n<figure><figcaption>image-20210622202357640</figcaption></figure>\n',r:{minutes:5.49,words:1646},t:"seata的部署和集成",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E5%9B%9B%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>a.e(33526).then(a.bind(a,96959)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务"],e:"\n<h2>1. XA 模式</h2>\n<h3>1.1 概念</h3>\n<p><strong>XA（eXtended Architecture）</strong> 是一种分布式事务协议，通常用于支持跨多个资源管理器（如数据库、消息队列等）的事务。</p>\n<ul>\n<li><strong>特点</strong>:\n<ul>\n<li>使用两阶段提交协议（2PC）来保证事务的一致性。</li>\n<li>保证所有参与的资源管理器在同一个事务中要么都成功提交，要么都回滚。</li>\n<li>对于涉及多个资源管理器的事务，XA 协议能够提供强一致性。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>XA模式下RM由数据库提供</p>\n</blockquote>",r:{minutes:9.53,words:2859},t:"四种分布式事务模式",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html",{loader:()=>a.e(31906).then(a.bind(a,19682)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["课堂随笔"],e:"\n<p>XA DB锁</p>\n<p>AT 全局锁 要用undo_log和lock_table两个表（用的多）</p>\n<p>TCC：预授权。不用加锁。性能最好。不依赖于数据库事务，可以用于非事务型数据库。缺点：要写代码（有代码侵入）</p>\n<p>TCC三阶段：try-&gt;confirm-&gt;cancel</p>\n<p>幂等性：</p>\n<p>空回滚：没冻结金额但是要回滚（try卡了结果先执行了cancel）</p>\n<p>业务悬挂：已经空回滚了，卡住的try又执行了，结果没后续尬在那了(先执行了cancel结果try又运行了)</p>\n<p>注解加在谁头上谁是try</p>\n<p>TCC写代码思路</p>",r:{minutes:.7,words:210},t:"模式总结",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html",{loader:()=>a.e(78510).then(a.bind(a,62952)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务","配置文件"],e:'\n<h2>Seata版本</h2>\n<p><code>seata-server-2.0.0</code></p>\n<p><a href="https://seata.apache.org/zh-cn/release-history/seata-server" target="_blank" rel="noopener noreferrer">Seata-Server版本历史 | Apache Seata</a></p>\n<h2>Seata注册/配置到Nacos</h2>\n<div class="language-ya line-numbers-mode" data-highlighter="shiki" data-ext="ya" data-title="ya" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#  Copyright 1999-2019 Seata.io Group.</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#  Licensed under the Apache License, Version 2.0 (the "License");</span></span>\n<span class="line"><span>#  you may not use this file except in compliance with the License.</span></span>\n<span class="line"><span>#  You may obtain a copy of the License at</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#  http://www.apache.org/licenses/LICENSE-2.0</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#  Unless required by applicable law or agreed to in writing, software</span></span>\n<span class="line"><span>#  distributed under the License is distributed on an "AS IS" BASIS,</span></span>\n<span class="line"><span>#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span>\n<span class="line"><span>#  See the License for the specific language governing permissions and</span></span>\n<span class="line"><span>#  limitations under the License.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 本地多开时注意修改端口，默认服务端口+1000=8091</span></span>\n<span class="line"><span>server:</span></span>\n<span class="line"><span>  port: 7091</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>spring:</span></span>\n<span class="line"><span>  application:</span></span>\n<span class="line"><span>    name: seata-server</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>logging:</span></span>\n<span class="line"><span>  config: classpath:logback-spring.xml</span></span>\n<span class="line"><span>  file:</span></span>\n<span class="line"><span>    path: ${log.home:${user.home}/logs/seata}</span></span>\n<span class="line"><span>seata:</span></span>\n<span class="line"><span>  config:</span></span>\n<span class="line"><span>    # support: nacos 、 consul 、 apollo 、 zk  、 etcd3</span></span>\n<span class="line"><span>    type: nacos</span></span>\n<span class="line"><span>    nacos:</span></span>\n<span class="line"><span>      server-addr: 81.70.62.114:8848</span></span>\n<span class="line"><span>      group: DEFAULT_GROUP</span></span>\n<span class="line"><span>      data-id: seataServer.properties</span></span>\n<span class="line"><span>  registry:</span></span>\n<span class="line"><span>    # support: nacos 、 eureka 、 redis 、 zk  、 consul 、 etcd3 、 sofa</span></span>\n<span class="line"><span>    type: nacos</span></span>\n<span class="line"><span>    preferred-networks: 30.240.*</span></span>\n<span class="line"><span>    nacos:</span></span>\n<span class="line"><span>      application: seata-server</span></span>\n<span class="line"><span>      server-addr: 81.70.62.114:8848</span></span>\n<span class="line"><span>      group: DEFAULT_GROUP</span></span>\n<span class="line"><span>      # 多个集群（多开）时注意修改</span></span>\n<span class="line"><span>      cluster: SH</span></span>\n<span class="line"><span>  security:</span></span>\n<span class="line"><span>    secretKey: SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</span></span>\n<span class="line"><span>    tokenValidityInMilliseconds: 1800000</span></span>\n<span class="line"><span>    ignore:</span></span>\n<span class="line"><span>      urls: /,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-fe/public/**,/api/v1/auth/login</span></span>\n<span class="line"><span>console:</span></span>\n<span class="line"><span>  user:</span></span>\n<span class="line"><span>    username: felix</span></span>\n<span class="line"><span>    password: YINSHI9981</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.37,words:412},t:"配置文件示例",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html",{loader:()=>a.e(75839).then(a.bind(a,24329)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["阅读完毕","讲义","Sentinel"],e:"\n<h1>1.初识Sentinel</h1>\n<h2>1.1.雪崩问题及解决方案</h2>\n<h3>1.1.1.雪崩问题</h3>\n<p>微服务中，服务间调用关系错综复杂，一个微服务往往依赖于多个其它微服务。</p>\n<figure><figcaption>1533829099748</figcaption></figure>\n<p>如图，如果服务提供者I发生了故障，当前的应用的部分业务因为依赖于服务I，因此也会被阻塞。此时，其它不依赖于服务I的业务似乎不受影响。</p>\n",r:{minutes:30.21,words:9063},t:"微服务保护",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html",{loader:()=>a.e(76778).then(a.bind(a,14679)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["阅读完毕","讲义","分布式事务","Seata"],e:"\n<h1>0.学习目标</h1>\n",r:{minutes:19.87,words:5962},t:"分布式事务",i:"fa-solid fa-web-awesome",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html",{loader:()=>a.e(67296).then(a.bind(a,56385)),meta:{d:17317152e5,l:"2024年11月16日",c:["实战"],g:["bug"],e:"\n<blockquote>\n<p>修改ValidationMessages.properties的编码格式，改成UTF-8。\nFile &gt; Settings &gt; Editor &gt; File Encodings</p>\n</blockquote>\n",r:{minutes:.22,words:65},t:"SpringBoot读取ValidationMessages.properties，中文乱码",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",{loader:()=>a.e(14997).then(a.bind(a,52040)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<h2>问题描述</h2>\n<blockquote>\n<p>vue项目<code>npm install</code>失败，node-sass版本不匹配</p>\n</blockquote>\n",r:{minutes:.81,words:244},t:"人人前端vue项目启动失败",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(27395).then(a.bind(a,50099)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<h2>问题描述</h2>\n<blockquote>\n<p>spring boot与spring cloud版本不匹配导致nacos注册失败</p>\n</blockquote>\n",r:{minutes:1.57,words:470},t:"人人fast后台注册nacos失败问题",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",{loader:()=>a.e(62229).then(a.bind(a,2781)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<p>报错信息：</p>\n<blockquote>\n<p><code>Error creating bean with name 'scheduleJobController': Unsatisfied dependency expressed through field 'scheduleJobService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scheduleJobService': Invocation of init method failed; nested exception is io.renren.common.exception.RRException: 获取定时任务CronTrigger出现异常</code></p>\n</blockquote>\n",r:{minutes:.29,words:88},t:"定时任务启动失败",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html",{loader:()=>a.e(11546).then(a.bind(a,51302)),meta:{d:173016e7,l:"2024年10月29日",c:["实战"],g:["bug"],e:"\n<blockquote>\n<p>在使用SpringBoot时，由于不同模块间SpringBoot版本不一致，导致Maven未将Entity类打包进target目录的问题。解决方法是统一所有模块的SpringBoot版本号，确保依赖一致性。</p>\n</blockquote>\n",r:{minutes:.3,words:91},t:"谷粒商城 java: 找不到符号 符号: 方法 setCouponName(java.lang.String)",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html",{loader:()=>a.e(14113).then(a.bind(a,72303)),meta:{d:1735776e6,l:"2025年1月2日",c:["实战"],g:["bug"],e:'\n<blockquote>\n<p><code>@FeignClient("coupon")</code>中的服务名<code>coupon</code>在nacos注册中心中找不到</p>\n</blockquote>\n',r:{minutes:.14,words:42},t:"current ips:(0) service: DEFAULT_GROUP@@gulimall-coupon -> []",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html",{loader:()=>a.e(61504).then(a.bind(a,96825)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:'\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">java.lang.NullPointerException</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.atguigu.gulimall.thirdparty.GulimallThirdPartyApplicationTests.testUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">GulimallThirdPartyApplicationTests.java:23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.NativeMethodAccessorImpl.invoke0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.NativeMethodAccessorImpl.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">NativeMethodAccessorImpl.java:62</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.DelegatingMethodAccessorImpl.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">DelegatingMethodAccessorImpl.java:43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> java.lang.reflect.Method.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Method.java:498</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.model.FrameworkMethod</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.runReflectiveCall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">FrameworkMethod.java:50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.internal.runners.model.ReflectiveCallable.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ReflectiveCallable.java:12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.model.FrameworkMethod.invokeExplosively</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">FrameworkMethod.java:47</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.internal.runners.statements.InvokeMethod.evaluate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">InvokeMethod.java:17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.runLeaf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:325</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.BlockJUnit4ClassRunner.runChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BlockJUnit4ClassRunner.java:78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.BlockJUnit4ClassRunner.runChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BlockJUnit4ClassRunner.java:57</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:290</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.schedule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:71</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.runChildren</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:288</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.access</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:58</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.evaluate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:268</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:363</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runner.JUnitCore.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitCore.java:137</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnit4IdeaTestRunner.java:69</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.IdeaTestRunner</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$Repeater</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.startRunnerWithArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">IdeaTestRunner.java:33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitStarter.java:220</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.JUnitStarter.main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitStarter.java:53</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.73,words:218},t:"测试方法启动空指针",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html",{loader:()=>a.e(79927).then(a.bind(a,25759)),meta:{e:'\n<h2>1.JSR303</h2>\n<ol>\n<li>\n<p>给Bean添加校验注解：javax.validation.constraints，并定义自己的message提示</p>\n</li>\n<li>\n<p>开启校验功能<code>@Valid</code>。效果：校验错误以后会有默认的响应</p>\n</li>\n<li>\n<p>给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果</p>\n</li>\n<li>\n<p>分组校验（多场景的复杂校验）</p>\n<ul>\n<li><code>@NotBlank(message = "品牌名必须提交",groups = {AddGroup.class, UpdateGroup.class}) </code>给校验注解标注什么情况下需要进行校验</li>\n<li><code>@Validated({AddGroup.class})</code>：controller层参数前注解</li>\n<li>默认没有指定分组的校验注解<code>@NotBlank</code>，在分组校验情况<code>@Validated({AddGroup.class})</code>下不生效</li>\n</ul>\n</li>\n<li>\n<p>自定义校验</p>\n<ol>\n<li>\n<p>编写一个自定义的校验注解<code>public @interface ListValue {}</code></p>\n</li>\n<li>\n<p>编写一个自定义的校验器ConstraintValidator</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//第一个泛型是校验注解，第二个泛型是校验数据类型</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ListValueConstraintValidator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConstraintValidator</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //初始化方法,ListValue是自定义的注解.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> constraintAnnotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> constraintAnnotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 判断是否校验成功</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 需要校验的值</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConstraintValidatorContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">  set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(value);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>关联自定义的校验器和自定义的校验注解</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Documented</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//约束。【同一个注解可以指定多个不同的校验器，适配不同类型的校验。】这里ListValueConstraintValidator.class是数值校验器</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">validatedBy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ListValueConstraintValidator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//可以标注在哪些位置。方法、字段等。</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Target</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">METHOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">FIELD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ANNOTATION_TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CONSTRUCTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">PARAMETER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TYPE_USE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//注解的时机。这里是可以在运行时获取校验</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Retention</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RUNTIME</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B"> ListValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    校验出错后，错误信息去哪取。前缀一般是当前全类名，在ValidationMessages.properties配置文件里设置com.atguigu.common.valid.ListValue.message=必须提交指定的值</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "{com.vince.common.valid.ListValue.message}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    支持分组校验的功能</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    自定义负载信息</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> extends Payload</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">payload</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    自定义注解里的属性</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>自定义注解使用</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t/**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t * 显示状态[0-不显示；1-显示]</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotNull</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AddGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UpdateGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UpdateStatusGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AddGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UpdateStatusGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">\tprivate</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> showStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>\n</li>\n</ol>',r:{minutes:1.82,words:547},t:"数据校验",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html",{loader:()=>a.e(4825).then(a.bind(a,88666)),meta:{e:"\n<p>-- 基于Redis集群解决单机Redis存在的问题</p>\n<p>单机的Redis存在四大问题：</p>\n<figure><figcaption>image-20210725144240631</figcaption></figure>\n<h1>0.学习目标</h1>\n<h1>1.Redis持久化</h1>\n<p>Redis有两种持久化方案：</p>\n<ul>\n<li>RDB持久化</li>\n<li>AOF持久化</li>\n</ul>\n<h2>1.1.RDB持久化</h2>\n<p>RDB全称Redis Database Backup file（Redis数据备份文件），也被叫做Redis数据快照。简单来说就是把内存中的所有数据都记录到磁盘中。当Redis实例故障重启后，从磁盘读取快照文件，恢复数据。快照文件称为RDB文件，默认是保存在当前运行目录。</p>",r:{minutes:17.65,words:5296},t:"分布式缓存",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html",{loader:()=>a.e(40393).then(a.bind(a,93707)),meta:{e:"\n<h1>0.学习目标</h1>\n<h1>1.什么是多级缓存</h1>\n<p>传统的缓存策略一般是请求到达Tomcat后，先查询Redis，如果未命中则查询数据库，如图：</p>\n<figure><figcaption>image-20210821075259137</figcaption></figure>\n<p>存在下面的问题：</p>\n<p>•请求要经过Tomcat处理，Tomcat的性能成为整个系统的瓶颈</p>\n<p>•Redis缓存失效时，会对数据库产生冲击</p>\n<p>多级缓存就是充分利用请求处理的每个环节，分别添加缓存，减轻Tomcat压力，提升服务性能：</p>\n<ul>\n<li>浏览器访问静态资源时，优先读取浏览器本地缓存</li>\n<li>访问非静态资源（ajax查询数据）时，访问服务端</li>\n<li>请求到达Nginx后，优先读取Nginx本地缓存</li>\n<li>如果Nginx本地缓存未命中，则去直接查询Redis（不经过Tomcat）</li>\n<li>如果Redis查询未命中，则查询Tomcat</li>\n<li>请求进入Tomcat后，优先查询JVM进程缓存</li>\n<li>如果JVM进程缓存未命中，则查询数据库</li>\n</ul>",r:{minutes:28.77,words:8632},t:"多级缓存",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",{loader:()=>a.e(35379).then(a.bind(a,86559)),meta:{e:"<h2>Redis高级篇之最佳实践</h2>\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>Redis键值设计</li>\n<li>批处理优化</li>\n<li>服务端优化</li>\n<li>集群最佳实践</li>\n</ul>\n</blockquote>\n<h2>1、Redis键值设计</h2>\n<h3>1.1、优雅的key结构</h3>\n<p>Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定：</p>\n<ul>\n<li>遵循基本格式：[业务名称]:[数据名]:[id]</li>\n<li>长度不超过44字节</li>\n<li>不包含特殊字符</li>\n</ul>",r:{minutes:20.62,words:6185},t:"",y:"a"}}],["/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html",{loader:()=>a.e(61109).then(a.bind(a,56438)),meta:{e:'\n<blockquote>\n<p>题目</p>\n</blockquote>\n<blockquote>\n<p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>s</code> 的形式给出。</p>\n<p>不要给另外的数组分配额外的空间，你必须**<a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95" target="_blank" rel="noopener noreferrer">原地</a>修改输入数组**、使用 O(1) 的额外空间解决这一问题。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：s = ["h","e","l","l","o"]</span></span>\n<span class="line"><span>输出：["o","l","l","e","h"]</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：s = ["H","a","n","n","a","h"]</span></span>\n<span class="line"><span>输出：["h","a","n","n","a","H"]</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 105</code></li>\n<li><code>s[i]</code> 都是 <a href="https://baike.baidu.com/item/ASCII" target="_blank" rel="noopener noreferrer">ASCII</a> 码表中的可打印字符</li>\n</ul>\n</blockquote>',r:{minutes:.62,words:187},t:"344. 反转字符串",y:"a"}}],["/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/415.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0.html",{loader:()=>a.e(43201).then(a.bind(a,60447)),meta:{e:'\n<blockquote>\n<p>题目</p>\n</blockquote>\n<blockquote>\n<p>给定两个字符串形式的非负整数 <code>num1</code> 和<code>num2</code> ，计算它们的和并同样以字符串形式返回。</p>\n<p>你不能使用任何內建的用于处理大整数的库（比如 <code>BigInteger</code>）， 也不能直接将输入的字符串转换为整数形式。</p>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：num1 = "11", num2 = "123"</span></span>\n<span class="line"><span>输出："134"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：num1 = "456", num2 = "77"</span></span>\n<span class="line"><span>输出："533"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：num1 = "0", num2 = "0"</span></span>\n<span class="line"><span>输出："0"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= num1.length, num2.length &lt;= 104</code></li>\n<li><code>num1</code> 和<code>num2</code> 都只包含数字 <code>0-9</code></li>\n<li><code>num1</code> 和<code>num2</code> 都不包含任何前导零</li>\n</ul>\n</blockquote>',r:{minutes:1.33,words:400},t:"415. 字符串相加",y:"a"}}],["/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/541.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%20II.html",{loader:()=>a.e(51468).then(a.bind(a,93650)),meta:{e:'\n<blockquote>\n<p>给定一个字符串 <code>s</code> 和一个整数 <code>k</code>，从字符串开头算起，每计数至 <code>2k</code> 个字符，就反转这 <code>2k</code> 字符中的前 <code>k</code> 个字符。</p>\n<ul>\n<li>如果剩余字符少于 <code>k</code> 个，则将剩余字符全部反转。</li>\n<li>如果剩余字符小于 <code>2k</code> 但大于或等于 <code>k</code> 个，则反转前 <code>k</code> 个字符，其余字符保持原样。</li>\n</ul>\n<p><strong>示例 1：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：s = "abcdefg", k = 2</span></span>\n<span class="line"><span>输出："bacdfeg"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入：s = "abcd", k = 2</span></span>\n<span class="line"><span>输出："bacd"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 104</code></li>\n<li><code>s</code> 仅由小写英文组成</li>\n<li><code>1 &lt;= k &lt;= 104</code></li>\n</ul>\n</blockquote>',r:{minutes:.74,words:222},t:"541. 反转字符串 II",y:"a"}}],["/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/784.%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%85%A8%E6%8E%92%E5%88%97.html",{loader:()=>a.e(82091).then(a.bind(a,71420)),meta:{e:'<h2><a class="header-anchor" href="#_784-字母大小写全排列"><span></span></a><a href="https://leetcode.cn/problems/letter-case-permutation/" target="_blank" rel="noopener noreferrer">784. 字母大小写全排列</a></h2>\n<figure><figcaption>image-20250902232048842</figcaption></figure>\n<blockquote>\n<p>题目</p>\n</blockquote>\n',r:{minutes:1.53,words:460},t:"",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(91029).then(a.bind(a,52847)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<p><strong>参考回答</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>进程是正在运行程序的实例，进程中包含了线程，每个线程执行不同的任务</li>\n<li>不同的进程使用不同的内存空间，在当前进程下的所有线程可以共享内存空间</li>\n<li>线程更轻量，线程上下文切换成本一般上要比进程上下文切换低(上下文切换指的是从一个线程切换到另一个线程)</li>\n</ul>\n</div>',r:{minutes:1.53,words:460},t:"1.线程和进程的区别？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E4%B8%80%E4%B8%AA%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84%E7%BA%BF%E7%A8%8B.html",{loader:()=>a.e(32636).then(a.bind(a,25594)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>有三种方式可以停止线程</p>\n<ul>\n<li>使用退出标志，使线程正常退出，也就是当run方法完成后线程终止</li>\n<li>使用stop方法强行终止（不推荐，方法已作废）</li>\n<li>使用interrupt方法中断线程</li>\n</ul>\n</div>',r:{minutes:1.18,words:355},t:"10.如何停止一个正在运行的线程？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(93672).then(a.bind(a,27176)),meta:{e:'\n<blockquote>\n<p>难易程度：☆</p>\n<p>出现频率：☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>现在都是多核CPU，在多核CPU下</p>\n<ul>\n<li>\n<p>并发是同一时间应对多件事情的能力，多个线程轮流使用一个或多个CPU</p>\n</li>\n<li>\n<p>并行是同一时间动手做多件事情的能力，4核CPU同时执行4个线程</p>\n</li>\n</ul>\n</div>',r:{minutes:1.39,words:416},t:"2.并行和并发有什么区别?",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html",{loader:()=>a.e(61035).then(a.bind(a,71891)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>在java中一共有四种常见的创建方式，分别是：继承Thread类、实现runnable接口、实现Callable接口、线程池创建线程。通常情况下，我们项目中都会采用线程池的方式创建线程。</p>\n</div>\n<hr>\n<p>共有四种方式可以创建线程，分别是：继承Thread类、实现runnable接口、实现Callable接口、线程池创建线程</p>',r:{minutes:1.3,words:391},t:"3.创建线程的四种方式",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.runnable%20%E5%92%8C%20callable%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(93728).then(a.bind(a,75718)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<p><strong>参考回答</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ol>\n<li>Runnable 接口run方法没有返回值；Callable接口call方法有返回值，是个泛型，和Future、FutureTask配合可以用来获取异步执行的结果</li>\n<li>Callalbe接口支持返回执行结果，需要调用FutureTask.get()得到，此方法会阻塞主进程的继续往下执行，如果不调用不会阻塞。</li>\n<li>Callable接口的call()方法允许抛出异常；而Runnable接口的run()方法的异常只能在内部消化，不能继续上抛</li>\n</ol>\n</div>',r:{minutes:.49,words:147},t:"4.runnable 和 callable 有什么区别?",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E7%BA%BF%E7%A8%8B%E7%9A%84%20run()%E5%92%8C%20start()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(14777).then(a.bind(a,25056)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>\n<p>start(): 用来启动线程，通过该线程调用run方法执行run方法中所定义的逻辑代码。start方法只能被调用一次。</p>\n</li>\n<li>\n<p>run(): 封装了要被线程执行的代码，可以被调用多次。</p>\n</li>\n</ul>\n</div>\n',r:{minutes:.27,words:82},t:"5.线程的 run()和 start()有什么区别？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E7%BA%BF%E7%A8%8B%E5%8C%85%E6%8B%AC%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81%EF%BC%8C%E7%8A%B6%E6%80%81%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E5%8F%98%E5%8C%96%E7%9A%84.html",{loader:()=>a.e(37350).then(a.bind(a,59303)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>在JDK中的Thread类中的枚举State里面定义了6种线程的状态分别是：新建、可运行、终结、阻塞、等待和有时限等待六种。</p>\n<p>关于线程的状态切换情况比较多。我分别介绍一下</p>\n<p>当一个线程对象被创建，但还未调用 start 方法时处于<strong>新建</strong>状态，调用了 start 方法，就会由<strong>新建</strong>进入<strong>可运行</strong>状态。如果线程内代码已经执行完毕，由<strong>可运行</strong>进入<strong>终结</strong>状态。当然这些是一个线程正常执行情况。</p>\n<p>如果线程获取锁失败后，由<strong>可运行</strong>进入 Monitor 的阻塞队列<strong>阻塞</strong>，只有当持锁线程释放锁时，会按照一定规则唤醒阻塞队列中的<strong>阻塞</strong>线程，唤醒后的线程进入<strong>可运行</strong>状态</p>\n<p>如果线程获取锁成功后，但由于条件不满足，调用了 wait() 方法，此时从<strong>可运行</strong>状态释放锁进入<strong>等待</strong>状态，当其它持锁线程调用 notify() 或 notifyAll() 方法，会恢复为<strong>可运行</strong>状态</p>\n<p>还有一种情况是调用 sleep(long) 方法也会从<strong>可运行</strong>状态进入<strong>有时限等待</strong>状态，不需要主动唤醒，超时时间到自然恢复为<strong>可运行</strong>状态</p>\n</div>',r:{minutes:4,words:1201},t:"6.线程包括哪些状态，状态之间是如何变化的",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E6%96%B0%E5%BB%BA%20T1%E3%80%81T2%E3%80%81T3%20%E4%B8%89%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%AE%83%E4%BB%AC%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C.html",{loader:()=>a.e(70622).then(a.bind(a,54601)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>嗯~~，我思考一下 （适当的思考或想一下属于正常情况，脱口而出反而太假[背诵痕迹]）</p>\n<p>可以这么做，在多线程中有多种方法让线程按特定顺序执行，可以用线程类的<strong>join</strong>()方法在一个线程中启动另一个线程，另外一个线程完成该线程继续执行。</p>\n<p>比如说：</p>\n<p>使用join方法，T3调用T2，T2调用T1，这样就能确保T1就会先完成而T3最后完成</p>\n</div>',r:{minutes:1.24,words:373},t:"7.新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.notify()%E5%92%8C%20notifyAll()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(78332).then(a.bind(a,14754)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>notifyAll：唤醒所有wait的线程</p>\n<p>notify：只随机唤醒一个 wait 线程</p>\n</div>\n<hr>\n<p>notifyAll：唤醒所有wait的线程</p>\n<p>notify：只随机唤醒一个 wait 线程</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> com.itheima.basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> WaitNotify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> flag </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> lock </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">         Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">             synchronized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (lock){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                 while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">flag){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...wating..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                     try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 }</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...flag is true"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">         });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">         Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">             synchronized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (lock){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                 while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">flag){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...wating..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                     try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 }</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...flag is true"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">         });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">         Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">             synchronized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (lock) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> " hold lock"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">notifyAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 flag </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                 try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">         });</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">         t1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">         t2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">         t3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.51,words:154},t:"8.notify()和 notifyAll()有什么区别？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E5%9C%A8%20java%20%E4%B8%AD%20wait%20%E5%92%8C%20sleep%20%E6%96%B9%E6%B3%95%E7%9A%84%E4%B8%8D%E5%90%8C.html",{loader:()=>a.e(91700).then(a.bind(a,10846)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>共同点</p>\n<ul>\n<li>wait() ，wait(long) 和 sleep(long) 的效果都是让当前线程暂时放弃 CPU 的使用权，进入阻塞状态</li>\n</ul>\n<p>不同点</p>\n<ul>\n<li>方法归属不同\n<ul>\n<li>sleep(long) 是 Thread 的静态方法</li>\n<li>而 wait()，wait(long) 都是 Object 的成员方法，每个对象都有</li>\n</ul>\n</li>\n<li>醒来时机不同\n<ul>\n<li>执行 sleep(long) 和 wait(long) 的线程都会在等待相应毫秒后醒来</li>\n<li>wait(long) 和 wait() 还可以被 notify 唤醒，wait() 如果不唤醒就一直等下去</li>\n<li>它们都可以被打断唤醒</li>\n</ul>\n</li>\n<li>锁特性不同（重点）\n<ul>\n<li>wait 方法的调用必须先获取 wait 对象的锁，而 sleep 则无此限制</li>\n<li>wait 方法执行后会释放对象锁，允许其它线程获得该对象锁（我放弃 cpu，但你们还可以用）</li>\n<li>而 sleep 如果在 synchronized 代码块中执行，并不会释放对象锁（我放弃 cpu，你们也用不了）</li>\n</ul>\n</li>\n</ul>\n</div>',r:{minutes:1.17,words:351},t:"9.在 java 中 wait 和 sleep 方法的不同？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/1.%E8%AE%B2%E4%B8%80%E4%B8%8Bsynchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html",{loader:()=>a.e(52257).then(a.bind(a,9900)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>synchronized 底层使用的JVM级别中的Monitor 来决定当前线程是否获得了锁，如果某一个线程获得了锁，在没有释放锁之前，其他线程是不能或得到锁的。synchronized 属于<strong>悲观锁</strong>。</p>\n<p>synchronized 因为需要依赖于JVM级别的Monitor ，相对性能也比较低。</p>\n<p>monitor对象存在于每个Java对象的对象头中，synchronized 锁便是通过这种方式获取锁的，也是为什么Java中任意对象可以作为锁的原因</p>\n<p>monitor内部维护了三个变量</p>\n<ul>\n<li>WaitSet：保存处于Waiting状态的线程</li>\n<li>EntryList：保存处于Blocked状态的线程</li>\n<li>Owner：持有锁的线程</li>\n</ul>\n<p>只有一个线程获取到的标志就是在monitor中设置成功了Owner，一个monitor中只能有一个Owner</p>\n<p>在上锁的过程中，如果有其他线程也来抢锁，则进入EntryList 进行阻塞，当获得锁的线程执行完了，释放了锁，就会唤醒EntryList 中等待的线程竞争锁，竞争的时候是非公平的。</p>\n</div>',r:{minutes:3.31,words:994},t:"1.讲一下synchronized关键字的底层原理？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/10.synchronized%E5%92%8CLock%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>a.e(61915).then(a.bind(a,38490)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>第一，语法层面</p>\n<ul>\n<li>synchronized 是关键字，源码在 jvm 中，用 c++ 语言实现，退出同步代码块锁会自动释放</li>\n<li>Lock 是接口，源码由 jdk 提供，用 java 语言实现，需要手动调用 unlock 方法释放锁</li>\n</ul>\n<p>第二，功能层面</p>\n<ul>\n<li>二者均属于悲观锁、都具备基本的互斥、同步、锁重入功能</li>\n<li>Lock 提供了许多 synchronized 不具备的功能，例如获取等待状态、公平锁、可打断、可超时、多条件变量，同时Lock 可以实现不同的场景，如 ReentrantLock， ReentrantReadWriteLock</li>\n</ul>\n<p>第三，性能层面</p>\n<ul>\n<li>在没有竞争时，synchronized 做了很多优化，如偏向锁、轻量级锁，性能不赖</li>\n<li>在竞争激烈时，Lock 的实现通常会提供更好的性能</li>\n</ul>\n<p>统合来看，需要根据不同的场景来选择不同的锁的使用。</p>\n</div>',r:{minutes:.76,words:229},t:"10.synchronized和Lock有什么区别 ?",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/11.%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E7%9A%84%E6%9D%A1%E4%BB%B6.html",{loader:()=>a.e(452).then(a.bind(a,85145)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>嗯，是这样的，一个线程需要同时获取多把锁，这时就容易发生死锁，举个例子来说：t1 线程获得A对象锁，接下来想获取B对象的锁t2 线程获得B对象锁，接下来想获取A对象的锁 这个时候t1线程和t2线程都在互相等待对方的锁，就产生了死锁</p>\n</div>\n<hr>',r:{minutes:1.16,words:349},t:"11.死锁产生的条件是什么？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%AD%BB%E9%94%81%E5%88%A4%E6%96%AD.html",{loader:()=>a.e(29607).then(a.bind(a,73594)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>我们只需要通过jdk自动的工具就能搞定我们可以先通过jps来查看当前java程序运行的进程id然后通过jstack来查看这个进程id，就能展示出来死锁的问题，并且，可以定位代码的具体行号范围，我们再去找到对应的代码进行排查就行了。</p>\n</div>\n<hr>',r:{minutes:1.06,words:317},t:"12.如何进行死锁诊断？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E8%81%8A%E4%B8%80%E4%B8%8BConcurrentHashMap%20.html",{loader:()=>a.e(2336).then(a.bind(a,81135)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>ConcurrentHashMap 是一种<code>线程安全</code>的<code>高效</code>Map集合，jdk1.7和1.8也做了很多调整。</p>\n<ul>\n<li>JDK1.7的底层采用是<strong>分段的数组</strong>+<strong>链表</strong> 实现</li>\n<li>JDK1.8 采用的数据结构跟HashMap1.8的结构一样，数组+链表/红黑二叉树。</li>\n</ul>\n<p>在jdk1.7中 ConcurrentHashMap 里包含一个 Segment 数组。Segment 的结构和HashMap类似，是一 种数组和链表结构，一个 Segment 包含一个 HashEntry 数组，每个 HashEntry 是一个链表结构的元素，每个 Segment 守护着一个HashEntry数组里的元素，当对 HashEntry 数组的数据进行修改时，必须首先获得对应的 Segment的锁。</p>\n<p>Segment 是一种可重入的锁 ReentrantLock，每个 Segment 守护一个HashEntry 数组里得元素，当对 HashEntry 数组的数据进行修改时，必须首先获得对应的 Segment 锁</p>\n<p>在jdk1.8中的ConcurrentHashMap 做了较大的优化，性能提升了不少。首先是它的数据结构与jdk1.8的hashMap数据结构完全一致。其次是放弃了Segment臃肿的设计，取而代之的是采用Node + CAS + Synchronized来保 证并发安全进行实现，synchronized只锁定当前链表或红黑二叉树的首节点，这样<code>只要hash不冲突</code>，就不会产生并发 , 效率得到提升</p>\n</div>',r:{minutes:2.42,words:727},t:"12.聊一下ConcurrentHashMap",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/13.%E5%AF%BC%E8%87%B4%E5%B9%B6%E5%8F%91%E7%A8%8B%E5%BA%8F%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88.html",{loader:()=>a.e(27327).then(a.bind(a,56877)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>Java并发编程有三大核心特性，分别是原子性、可见性和有序性（袁克友）。</p>\n<p>首先，原子性指的是一个线程在CPU中的操作是不可暂停也不可中断的，要么执行完成，要么不执行。比如，一些简单的操作如赋值可能是原子的，但复合操作如自增就不是原子的。为了保证原子性，我们可以使用synchronized关键字或JUC里面的Lock来进行加锁。</p>\n<p>其次，可见性是指让一个线程对共享变量的修改对另一个线程可见。由于线程可能在自己的工作内存中缓存共享变量的副本，因此一个线程对共享变量的修改可能不会立即反映在其他线程的工作内存中。为了解决这个问题，我们可以使用synchronized关键字、volatile关键字或Lock来确保可见性。</p>\n<p>最后，有序性是指处理器为了提高程序运行效率，可能会对输入代码进行优化，导致程序中各个语句的执行先后顺序与代码中的顺序不一致。虽然处理器会保证程序最终执行结果与代码顺序执行的结果一致，但在某些情况下我们可能需要确保特定的执行顺序。为了解决这个问题，我们可以使用volatile关键字来禁止指令重排。</p>\n</div>',r:{minutes:2.3,words:690},t:"13.导致并发程序出现问题的根本原因是什么",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/2.synchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-%E8%BF%9B%E9%98%B6.html",{loader:()=>a.e(9621).then(a.bind(a,56604)),meta:{e:'\n<p>Monitor实现的锁属于重量级锁，你了解过锁升级吗？</p>\n<ul>\n<li>\n<p>Monitor实现的锁属于重量级锁，里面涉及到了用户态和内核态的切换、进程的上下文切换，成本较高，性能比较低。</p>\n</li>\n<li>\n<p>在JDK 1.6引入了两种新型锁机制：偏向锁和轻量级锁，它们的引入是为了解决在没有多线程竞争或基本没有竞争的场景下因使用传统锁机制带来的性能开销问题。</p>\n</li>\n</ul>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<h4>参考回答</h4>\n<p>Java中的synchronized有偏向锁、轻量级锁、重量级锁三种形式，分别对应了锁只被一个线程持有、不同线程交替持有锁、多线程竞争锁三种情况。</p>\n<p>重量级锁：底层使用的Monitor实现，里面涉及到了用户态和内核态的切换、进程的上下文切换，成本较高，性能比较低。</p>\n<p>轻量级锁：线程加锁的时间是错开的（也就是没有竞争），可以使用轻量级锁来优化。轻量级修改了对象头的锁标志，相对重量级锁性能提升很多。每次修改都是CAS操作，保证原子性</p>\n<p>偏向锁：一段很长的时间内都只被一个线程使用锁，可以使用了偏向锁，在第一次获得锁时，会有一个CAS操作，之后该线程再获取锁，只需要判断<code>markword</code>中是否是自己的线程id即可，而不是开销相对较大的CAS命令</p>\n<p>一旦锁发生了竞争，都会升级为重量级锁</p>\n</div>',r:{minutes:5.54,words:1661},t:"2.synchronized关键字的底层原理-进阶",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/3.%E4%BD%A0%E8%B0%88%E8%B0%88%20JMM%EF%BC%88Java%20%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%89.html",{loader:()=>a.e(88720).then(a.bind(a,58066)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<ul>\n<li>JMM(Java Memory Model)Java内存模型，定义了共享内存中多线程程序读写操作的行为规范，通过这些规则来规范对内存的读写操作从而保证指令的正确性</li>\n<li>JMM把内存分为两块，一块是私有线程的工作区域（工作内存），一块是所有线程的共享区域（主内存）</li>\n<li>线程跟线程之间是相互隔离，线程跟线程交互需要通过主内存</li>\n</ul>\n</div>',r:{minutes:1.41,words:423},t:"3.你谈谈 JMM（Java 内存模型）",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/4.CAS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%88%E5%90%AB%E4%B9%90%E8%A7%82%E6%82%B2%E8%A7%82%E9%94%81%EF%BC%89.html",{loader:()=>a.e(63460).then(a.bind(a,16962)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>CAS的全称是： Compare And Swap(比较再交换)。它的核心思想是，比较内存中的一个值与预期值是否相等，如果相等，则将该值更新为新值；如果不相等，则不做任何操作，并且通常会返回当前值。它体现的一种乐观锁的思想，在无锁状态下保证线程操作数据的原子性。</p>\n<ul>\n<li>CAS使用到的地方很多：AQS框架、AtomicXXX类</li>\n<li>在操作共享变量的时候使用的自旋锁，效率上更高一些</li>\n<li>CAS的底层是调用的Unsafe类中的方法，都是操作系统提供的，其他语言实现</li>\n</ul>\n</div>',r:{minutes:2.95,words:885},t:"4.CAS 是什么（含乐观悲观锁）？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/5.%E8%AF%B7%E8%B0%88%E8%B0%88%E4%BD%A0%E5%AF%B9%20volatile%20%E7%9A%84%E7%90%86%E8%A7%A3.html",{loader:()=>a.e(19487).then(a.bind(a,42076)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>volatile 是一个关键字，可以修饰类的成员变量、类的静态成员变量，主要有两个功能</p>\n<p>第一：保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的,volatile关键字会强制将修改的值立即写入主存。</p>\n<p>第二： 禁止进行指令重排序，可以保证代码执行有序性。底层实现原理是，添加了一个<strong>内存屏障</strong>，通过插入内存屏障禁止在内存屏障<strong>前后</strong>的指令执行重排序优化</p>\n</div>',r:{minutes:3.67,words:1101},t:"5.请谈谈你对 volatile 的理解",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/6.%E4%BB%80%E4%B9%88%E6%98%AFAQS.html",{loader:()=>a.e(95665).then(a.bind(a,9641)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>AQS是多线程中的队列同步器。是一种锁机制，它是做为一个基础框架使用的,像ReentrantLock、Semaphore都是基于AQS实现的</li>\n<li>AQS内部维护了一个先进先出的双向队列，队列中存储的排队的线程</li>\n<li>在AQS内部还有一个属性state,这个state就相当于是一个资源，默认是0(无锁状态)，如果队列中的有一个线程修改成功了state为1，则当前线程就相等于获取了资源</li>\n<li>在对state修改的时候使用的cas操作，保证多个线程修改的情况下原子性</li>\n</ul>\n</div>',r:{minutes:2.11,words:634},t:"6.什么是AQS？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/7.%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81.html",{loader:()=>a.e(51921).then(a.bind(a,92589)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>可重入锁（Reentrant Lock）</strong> 是一种允许同一个线程多次获取锁的锁机制，也就是说，当一个线程已经持有某个锁时，它可以再次获得该锁，而不会发生死锁。</p>\n</div>\n<h3>详细解释：</h3>\n<ol>\n<li>\n<p><strong>可重入性</strong>：可重入锁的最关键特性是，如果一个线程已经获得了锁，它可以在同一线程内再次获取该锁。例如，线程可以进入一个已经同步的代码块或方法，继续执行其他同步代码，而不需要等待锁的释放。</p>\n</li>\n<li>\n<p><strong>避免死锁</strong>：可重入锁防止了一个线程因无法再次获取锁而陷入死锁。没有可重入锁时，如果一个线程试图进入自己已经持有的锁所保护的代码块，将会造成死锁。可重入锁通过允许线程重新获得锁来避免这个问题。</p>\n</li>\n<li>\n<p><strong>工作原理</strong>：每个锁都有一个计数器，表示锁被获得的次数。当一个线程第一次请求该锁时，计数器被设为1。如果同一个线程再次请求该锁，计数器的值会递增。每次释放锁时，计数器会递减，直到计数器为0，表示锁被完全释放。</p>\n</li>\n</ol>',r:{minutes:2.15,words:644},t:"7.什么是可重入锁？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/8.%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E6%97%8B%E9%94%81.html",{loader:()=>a.e(63934).then(a.bind(a,29e3)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>自旋锁（Spinlock）是一种同步机制，用于在并发编程中保护共享资源，避免多个线程或进程同时访问同一资源。自旋锁的核心思想是，当一个线程尝试获取锁时，如果锁已经被其他线程持有，它不会进入休眠状态（像传统的互斥锁），而是持续地在<code>循环中“自旋”</code>，不断地检查锁是否可用，直到成功获取锁。</p>\n</div>\n<h3>自旋锁的工作原理：</h3>\n<ol>\n<li><strong>尝试获取锁</strong>：当线程请求锁时，如果锁当前没有被占用，线程立即获取锁并继续执行。</li>\n<li><strong>自旋等待</strong>：如果锁已经被其他线程持有，线程不会进入阻塞状态，而是进入一个忙等待（自旋）的状态，不断地检查锁是否被释放。</li>\n<li><strong>释放锁</strong>：当持有锁的线程完成任务后，它会释放锁，允许其他线程获取锁。</li>\n</ol>',r:{minutes:3.07,words:921},t:"8.什么是自旋锁",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/9.ReentrantLock%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html",{loader:()=>a.e(30499).then(a.bind(a,79009)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>ReentrantLock是一个可重入锁:，调用 lock 方 法获取了锁之后，再次调用 lock，是不会再阻塞，内部直接增加重入次数就行了，标识这个线程已经重复获取一把锁而不需要等待锁的释放。</li>\n<li>ReentrantLock是属于juc报下的类，属于api层面的锁，跟synchronized一样，都是悲观锁。通过lock()用来获取锁，unlock()释放锁。</li>\n<li>它的底层实现原理主要利用<strong>CAS+AQS队列</strong>来实现。它支持公平锁和非公平锁，两者的实现类似</li>\n<li>构造方法接受一个可选的公平参数（<strong>默认非公平锁</strong>），当设置为true时，表示公平锁，否则为非公平锁。公平锁的效率往往没有非公平锁的效率高。</li>\n</ul>\n</div>',r:{minutes:2.35,words:705},t:"9. ReentrantLock的实现原理",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%88%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%EF%BC%89.html",{loader:()=>a.e(74122).then(a.bind(a,2730)),meta:{e:'\n<h2>1.1 状态介绍</h2>\n<p>当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程</p>\n<p>状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 新建 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        NEW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 可运行状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        RUNNABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 阻塞状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        BLOCKED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 无限等待状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 计时等待 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TIMED_WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 终止 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TERMINATED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">\t}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取当前线程的状态</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">internal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">misc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">VM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toThreadState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(threadStatus);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:72.24,words:21672},t:"1 线程状态",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/1.Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html",{loader:()=>a.e(49853).then(a.bind(a,93963)),meta:{e:"\n<p>在多线程编程中，Java内存模型（Java Memory Model，简称JMM）是一个非常重要的概念，它决定了多个线程如何通过共享内存来进行通信、协作，并确保线程安全。在这篇文章中，我们将详细解析JMM的核心概念，包括它的原理、特性、关键字的使用以及如何处理并发问题。</p>\n<h4>什么是JMM？</h4>\n<p>Java内存模型（JMM）是Java虚拟机（JVM）的一部分，它定义了Java程序中多个线程如何与内存交互、如何保证数据一致性、如何确保线程安全。JMM主要解决了多线程编程中的以下问题：</p>\n<ul>\n<li><strong>内存可见性</strong>：一个线程对共享变量的修改，如何确保其他线程能够看到。</li>\n<li><strong>原子性</strong>：线程对共享变量的操作，如何确保不被其他线程中断。</li>\n<li><strong>有序性</strong>：线程对共享变量的操作，如何确保执行顺序符合预期。</li>\n</ul>",r:{minutes:5.95,words:1784},t:"JMM详解：Java内存模型的深度解析",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/2.happens-before%E5%8E%9F%E5%88%99.html",{loader:()=>a.e(96964).then(a.bind(a,56790)),meta:{e:'\n<p>在Java多线程编程中，保证程序的正确性和一致性至关重要。Java内存模型（JMM）通过一系列规则来确保多线程环境下数据的一致性，其中最核心的概念之一就是 <code>happens-before</code> 关系。理解并正确运用 <code>happens-before</code> 规则是开发高效且正确的多线程程序的关键。</p>\n<h4>什么是 <code>happens-before</code>？</h4>\n<p><code>happens-before</code> 是Java内存模型中的一个关键概念，定义了两项操作之间的执行顺序关系。当我们说一个操作 "happens-before" 另一个操作时，意味着第一个操作的结果在第二个操作之前对所有线程可见，并且保证了前者的操作不会被重排到后者的后面。</p>',r:{minutes:4.67,words:1401},t:"Java内存模型中的 happens-before 规则",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.html",{loader:()=>a.e(38028).then(a.bind(a,77860)),meta:{e:'\n<h1>1.单机部署</h1>\n<p>我们在Centos7虚拟机中使用Docker来安装。</p>\n<h2>1.1.下载镜像</h2>\n<p>方式一：在线拉取</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rabbitmq:3-management</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.45,words:436},t:"RabbitMQ部署指南",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/windows%E7%89%88sentinel%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86Unable%20to%20make%20protected%20final%20java.lang.Class%20java.lang.ClassLoader.define.html",{loader:()=>a.e(74772).then(a.bind(a,80886)),meta:{e:"\n<blockquote>\n<p>更改启动命令，打开特定的包装进行反射：\n<code>java --add-opens java.base/java.lang=ALL-UNNAMED -jar sentinel-dashboard-1.8.1.jar</code></p>\n</blockquote>\n",r:{minutes:.15,words:45},t:"windows版sentinel运行报错问题处理:Unable to make protected final java.lang.Class java.lang.ClassLoader.define",y:"a"}}],["/404.html",{loader:()=>a.e(27490).then(a.bind(a,81489)),meta:{t:""}}],["/Bug/",{loader:()=>a.e(30771).then(a.bind(a,99119)),meta:{t:"Bug"}}],["/CICD/",{loader:()=>a.e(104).then(a.bind(a,39615)),meta:{t:"CICD"}}],["/Le%20Penseur/",{loader:()=>a.e(33900).then(a.bind(a,69023)),meta:{t:"Le Penseur"}}],["/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(83230).then(a.bind(a,86513)),meta:{t:"网络"}}],["/%E8%A3%85%E6%9C%BA/",{loader:()=>a.e(47984).then(a.bind(a,85292)),meta:{t:"装机"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>a.e(21090).then(a.bind(a,1213)),meta:{t:"设计模式"}}],["/Bug/Java/",{loader:()=>a.e(93928).then(a.bind(a,79480)),meta:{t:"Java"}}],["/Database/",{loader:()=>a.e(52214).then(a.bind(a,27200)),meta:{t:"Database"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/",{loader:()=>a.e(23105).then(a.bind(a,89778)),meta:{t:"私有云"}}],["/Docker/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(55547).then(a.bind(a,62107)),meta:{t:"随笔"}}],["/Interview/MySQL/",{loader:()=>a.e(60927).then(a.bind(a,47830)),meta:{t:"My SQL"}}],["/Interview/SQL%E5%88%B7%E9%A2%98/",{loader:()=>a.e(35938).then(a.bind(a,50382)),meta:{t:"SQL刷题"}}],["/Interview/Spring/",{loader:()=>a.e(48918).then(a.bind(a,98240)),meta:{t:"Spring"}}],["/Interview/sanfene/",{loader:()=>a.e(86923).then(a.bind(a,29419)),meta:{t:"Sanfene"}}],["/Interview/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",{loader:()=>a.e(68277).then(a.bind(a,87252)),meta:{t:"面试准备"}}],["/Interview/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/",{loader:()=>a.e(47629).then(a.bind(a,91596)),meta:{t:"面试记录"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/",{loader:()=>a.e(46833).then(a.bind(a,62816)),meta:{t:"2.内存结构"}}],["/Java/Java8%E7%89%B9%E6%80%A7/",{loader:()=>a.e(41852).then(a.bind(a,56902)),meta:{t:"Java8特性"}}],["/Java/String/",{loader:()=>a.e(385).then(a.bind(a,80677)),meta:{t:"String"}}],["/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/",{loader:()=>a.e(52069).then(a.bind(a,95856)),meta:{t:"唯手熟尔"}}],["/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/",{loader:()=>a.e(60573).then(a.bind(a,1619)),meta:{t:"工具类"}}],["/Java/%E5%BC%82%E5%B8%B8/",{loader:()=>a.e(54338).then(a.bind(a,68784)),meta:{t:"异常"}}],["/Java/%E6%9E%B6%E6%9E%84/",{loader:()=>a.e(35922).then(a.bind(a,75788)),meta:{t:"架构"}}],["/Java/%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93/",{loader:()=>a.e(27519).then(a.bind(a,18333)),meta:{t:"核心类库"}}],["/Java/%E9%98%9F%E5%88%97/",{loader:()=>a.e(37834).then(a.bind(a,53099)),meta:{t:"队列"}}],["/Java/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(74211).then(a.bind(a,56491)),meta:{t:"随笔"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(89327).then(a.bind(a,34875)),meta:{t:"面试题"}}],["/Linux/0.%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(95710).then(a.bind(a,74384)),meta:{t:"0.笔记"}}],["/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(10754).then(a.bind(a,61451)),meta:{t:"1.安装与配置"}}],["/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/",{loader:()=>a.e(90021).then(a.bind(a,21994)),meta:{t:"13.服务与自动化管理"}}],["/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/",{loader:()=>a.e(28846).then(a.bind(a,40013)),meta:{t:"15.故障排除与修复"}}],["/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/",{loader:()=>a.e(82055).then(a.bind(a,30496)),meta:{t:"2.文件系统"}}],["/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/",{loader:()=>a.e(56625).then(a.bind(a,47597)),meta:{t:"3.用户与组管理"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/",{loader:()=>a.e(39867).then(a.bind(a,9798)),meta:{t:"4.系统与进程管理"}}],["/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/",{loader:()=>a.e(3114).then(a.bind(a,91501)),meta:{t:"5.软件包管理"}}],["/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/",{loader:()=>a.e(20819).then(a.bind(a,46532)),meta:{t:"6.网络配置与管理"}}],["/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/",{loader:()=>a.e(47652).then(a.bind(a,94853)),meta:{t:"7.文件与目录管理"}}],["/Linux/8.Shell%E4%B8%8E%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/",{loader:()=>a.e(8303).then(a.bind(a,55357)),meta:{t:"8. Shell与脚本编程"}}],["/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/",{loader:()=>a.e(74621).then(a.bind(a,38131)),meta:{t:"9.磁盘管理与存储"}}],["/MQ/Kafka/",{loader:()=>a.e(7244).then(a.bind(a,45130)),meta:{t:"Kafka"}}],["/MQ/",{loader:()=>a.e(9469).then(a.bind(a,36262)),meta:{t:"MQ"}}],["/MQ/RabbitMQ/",{loader:()=>a.e(27872).then(a.bind(a,16776)),meta:{t:"Rabbit MQ"}}],["/Mybatis/Mybatis/",{loader:()=>a.e(45686).then(a.bind(a,68954)),meta:{t:"Mybatis"}}],["/Mybatis/",{loader:()=>a.e(81292).then(a.bind(a,31269)),meta:{t:"Mybatis"}}],["/Mybatis/Mybatis%20Plus/",{loader:()=>a.e(90454).then(a.bind(a,22841)),meta:{t:"Mybatis Plus"}}],["/Netty/API/",{loader:()=>a.e(65494).then(a.bind(a,81849)),meta:{t:"API"}}],["/Python/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(83204).then(a.bind(a,84335)),meta:{t:"基础"}}],["/Python/%E7%88%AC%E8%99%AB/",{loader:()=>a.e(26707).then(a.bind(a,1103)),meta:{t:"爬虫"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(77239).then(a.bind(a,32568)),meta:{t:"03 Maven高级笔记"}}],["/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(44209).then(a.bind(a,69422)),meta:{t:"04 Spring Boot笔记"}}],["/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(95322).then(a.bind(a,93584)),meta:{t:"05 Mybatisplus笔记"}}],["/Spring/Junit/",{loader:()=>a.e(20837).then(a.bind(a,78310)),meta:{t:"Junit"}}],["/Spring/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(87950).then(a.bind(a,58977)),meta:{t:"注解"}}],["/SpringBoot/lombok%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(42262).then(a.bind(a,46817)),meta:{t:"Lombok注解"}}],["/SpringBoot/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/",{loader:()=>a.e(33631).then(a.bind(a,64194)),meta:{t:"日志框架"}}],["/SpringBoot/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(51566).then(a.bind(a,28006)),meta:{t:"注解"}}],["/SpringCloud/Alibaba-OSS/",{loader:()=>a.e(39794).then(a.bind(a,87614)),meta:{t:"Alibaba OSS"}}],["/SpringCloud/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(28898).then(a.bind(a,24203)),meta:{t:"基础"}}],["/VCS/Git/",{loader:()=>a.e(69062).then(a.bind(a,9774)),meta:{t:"Git"}}],["/VCS/",{loader:()=>a.e(23577).then(a.bind(a,30835)),meta:{t:"VCS"}}],["/%E5%89%8D%E7%AB%AF/node/",{loader:()=>a.e(88860).then(a.bind(a,87897)),meta:{t:"Node"}}],["/%E5%89%8D%E7%AB%AF/",{loader:()=>a.e(35155).then(a.bind(a,24838)),meta:{t:"前端"}}],["/%E8%A3%85%E6%9C%BA/N1%E7%9B%92%E5%AD%90/",{loader:()=>a.e(27502).then(a.bind(a,42029)),meta:{t:"N1盒子"}}],["/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(57207).then(a.bind(a,7966)),meta:{t:"网络"}}],["/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(50597).then(a.bind(a,88432)),meta:{t:"计算机基础"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/A%E5%88%9B%E5%BB%BA%E5%9E%8B/",{loader:()=>a.e(99536).then(a.bind(a,83198)),meta:{t:"A创建型"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/B%E7%BB%93%E6%9E%84%E5%9E%8B/",{loader:()=>a.e(36593).then(a.bind(a,53644)),meta:{t:"B结构型"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%E8%A1%8C%E4%B8%BA%E5%9E%8B/",{loader:()=>a.e(67315).then(a.bind(a,99980)),meta:{t:"C行为型"}}],["/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/UML%E5%9B%BE/",{loader:()=>a.e(54727).then(a.bind(a,33950)),meta:{t:"UML图"}}],["/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/",{loader:()=>a.e(75922).then(a.bind(a,8392)),meta:{t:"软件工程"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/",{loader:()=>a.e(48891).then(a.bind(a,68089)),meta:{t:"个人博客"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",{loader:()=>a.e(99670).then(a.bind(a,54087)),meta:{t:"项目实战"}}],["/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/",{loader:()=>a.e(68477).then(a.bind(a,40465)),meta:{t:"My Cat Web安装文档"}}],["/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/",{loader:()=>a.e(96390).then(a.bind(a,14285)),meta:{t:"My Cat安装文档"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",{loader:()=>a.e(55588).then(a.bind(a,60204)),meta:{t:"My Cat配置文件"}}],["/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/",{loader:()=>a.e(89192).then(a.bind(a,31185)),meta:{t:"My SQL优化"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/",{loader:()=>a.e(80864).then(a.bind(a,64058)),meta:{t:"My SQL卸载文档 Linux"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/",{loader:()=>a.e(18803).then(a.bind(a,17558)),meta:{t:"My SQL卸载文档 Windows"}}],["/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(29544).then(a.bind(a,31934)),meta:{t:"My SQL学习笔记"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(38428).then(a.bind(a,24029)),meta:{t:"My SQL安全配置"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/",{loader:()=>a.e(61721).then(a.bind(a,42221)),meta:{t:"My SQL安装文档 Linux"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/",{loader:()=>a.e(21130).then(a.bind(a,92592)),meta:{t:"My SQL安装文档 Windows"}}],["/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/",{loader:()=>a.e(36850).then(a.bind(a,67750)),meta:{t:"My SQL小白"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/",{loader:()=>a.e(18650).then(a.bind(a,12310)),meta:{t:"My SQL故障修复"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(10794).then(a.bind(a,77339)),meta:{t:"基础"}}],["/Database/MySQL/%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(79868).then(a.bind(a,82748)),meta:{t:"工具"}}],["/Database/MySQL/%E8%BF%90%E7%BB%B4/",{loader:()=>a.e(24244).then(a.bind(a,4673)),meta:{t:"运维"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/",{loader:()=>a.e(30613).then(a.bind(a,91286)),meta:{t:"进阶"}}],["/Database/MySQL/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(86379).then(a.bind(a,66361)),meta:{t:"随笔"}}],["/Database/Redis/1.%E5%85%A5%E9%97%A8/",{loader:()=>a.e(80337).then(a.bind(a,85469)),meta:{t:"1.入门"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/",{loader:()=>a.e(69149).then(a.bind(a,51332)),meta:{t:"2.实战"}}],["/Database/Redis/4.%E5%8E%9F%E7%90%86/",{loader:()=>a.e(67320).then(a.bind(a,28775)),meta:{t:"4.原理"}}],["/Database/Redis/%E8%AF%BE%E5%89%8D%E8%B5%84%E6%96%99/",{loader:()=>a.e(87681).then(a.bind(a,77360)),meta:{t:"课前资料"}}],["/Database/Redis/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(15260).then(a.bind(a,21996)),meta:{t:"随笔"}}],["/Interview/Java/01-Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(23971).then(a.bind(a,65814)),meta:{t:"01 Java基础面试题"}}],["/Interview/Java/02-Java%E9%9B%86%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(4750).then(a.bind(a,67580)),meta:{t:"02 Java集合面试题"}}],["/Interview/Java/03-Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(86441).then(a.bind(a,96402)),meta:{t:"03 Java并发编程面试题"}}],["/Interview/Java/04-Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(91165).then(a.bind(a,84605)),meta:{t:"04 Java虚拟机面试题"}}],["/Interview/Java/05-Spring%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(53290).then(a.bind(a,79586)),meta:{t:"05 Spring面试题"}}],["/Interview/Java/06-MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(15100).then(a.bind(a,14592)),meta:{t:"06 My SQL面试题"}}],["/Interview/Java/07-Redis%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(85290).then(a.bind(a,25760)),meta:{t:"07 Redis面试题"}}],["/Interview/Java/08-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(96033).then(a.bind(a,78724)),meta:{t:"08 数据结构面试题"}}],["/Interview/Java/09-MQ%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(57827).then(a.bind(a,3168)),meta:{t:"09 MQ面试题"}}],["/Interview/Java/10-%E5%88%86%E5%B8%83%E5%BC%8F/",{loader:()=>a.e(98696).then(a.bind(a,12368)),meta:{t:"10 分布式"}}],["/Interview/Java/A%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(58218).then(a.bind(a,98844)),meta:{t:"A基础"}}],["/Interview/Java/B%E4%B8%AD%E7%AD%89/",{loader:()=>a.e(12796).then(a.bind(a,70342)),meta:{t:"B中等"}}],["/Interview/Java/%E7%83%AD%E7%82%B9%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(4993).then(a.bind(a,8896)),meta:{t:"热点面试题"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Git/",{loader:()=>a.e(22770).then(a.bind(a,51061)),meta:{t:"Git"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/JVM/",{loader:()=>a.e(58453).then(a.bind(a,31525)),meta:{t:"JVM"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/",{loader:()=>a.e(90370).then(a.bind(a,71641)),meta:{t:"Java"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/",{loader:()=>a.e(70452).then(a.bind(a,7393)),meta:{t:"Linux"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/MySQL/",{loader:()=>a.e(43132).then(a.bind(a,17152)),meta:{t:"My SQL"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/OS/",{loader:()=>a.e(97936).then(a.bind(a,53161)),meta:{t:"OS"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Spring/",{loader:()=>a.e(83911).then(a.bind(a,6569)),meta:{t:"Spring"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>a.e(35415).then(a.bind(a,97714)),meta:{t:"数据结构"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/",{loader:()=>a.e(47172).then(a.bind(a,46565)),meta:{t:"01基础篇"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/",{loader:()=>a.e(74193).then(a.bind(a,83432)),meta:{t:"黑马 Java2021"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/",{loader:()=>a.e(23066).then(a.bind(a,39297)),meta:{t:"02并发篇"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/",{loader:()=>a.e(44006).then(a.bind(a,70897)),meta:{t:"03虚拟机"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/",{loader:()=>a.e(667).then(a.bind(a,41753)),meta:{t:"04框架篇"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/",{loader:()=>a.e(33555).then(a.bind(a,57449)),meta:{t:"黑马 Java2023"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/1.%20JVM%20%E6%9E%B6%E6%9E%84%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD/",{loader:()=>a.e(26188).then(a.bind(a,83015)),meta:{t:"1. JVM 架构与类加载"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/10.%20JVM%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E9%97%AE%E7%AD%94/",{loader:()=>a.e(20536).then(a.bind(a,88175)),meta:{t:"10. JVM面试高频问答"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/",{loader:()=>a.e(8198).then(a.bind(a,98733)),meta:{t:"2.内存结构与并发内存模型"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/3.GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/",{loader:()=>a.e(58828).then(a.bind(a,34940)),meta:{t:"3. GC垃圾回收机制"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(5606).then(a.bind(a,8152)),meta:{t:"4. JVM性能调优与监控工具"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/",{loader:()=>a.e(9254).then(a.bind(a,30090)),meta:{t:"5.性能诊断与运维工具推荐"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/6.%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%B9%E5%99%A8%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E8%B0%83%E4%BC%98/",{loader:()=>a.e(15625).then(a.bind(a,25596)),meta:{t:"6. 服务器与容器线程模型调优"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/7.%20JVM%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93%E4%B8%8E%E6%A1%88%E4%BE%8B/",{loader:()=>a.e(79530).then(a.bind(a,17824)),meta:{t:"7. JVM调优实战总结与案例"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/8.%20JVM%E9%AB%98%E7%BA%A7%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(51040).then(a.bind(a,27515)),meta:{t:"8. JVM高级性能分析工具"}}],["/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/9.%20%E9%AB%98%E7%BA%A7%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE%E6%95%B4%E5%90%88/",{loader:()=>a.e(20963).then(a.bind(a,94529)),meta:{t:"9. 高级调试技巧与工具链整合"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/",{loader:()=>a.e(4475).then(a.bind(a,6489)),meta:{t:"15.面向对象进阶（抽象类 接口 内部类）"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/",{loader:()=>a.e(52050).then(a.bind(a,95155)),meta:{t:"入门到起飞"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/",{loader:()=>a.e(2e4).then(a.bind(a,78729)),meta:{t:"22.集合（ List集合）"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/",{loader:()=>a.e(77134).then(a.bind(a,15219)),meta:{t:"23.集合（泛型 Set 数据结构)"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/",{loader:()=>a.e(6767).then(a.bind(a,39110)),meta:{t:"26.集合（ Stream流 方法引用）"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>a.e(17093).then(a.bind(a,83)),meta:{t:"31.多线程"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",{loader:()=>a.e(84325).then(a.bind(a,3769)),meta:{t:"35.反射 动态代理"}}],["/MQ/RabbitMQ/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(25151).then(a.bind(a,40687)),meta:{t:"基础"}}],["/MQ/RabbitMQ/%E9%AB%98%E7%BA%A7/",{loader:()=>a.e(52276).then(a.bind(a,91283)),meta:{t:"高级"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/",{loader:()=>a.e(41703).then(a.bind(a,90464)),meta:{t:"接口"}}],["/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(28330).then(a.bind(a,94587)),meta:{t:"注解"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/",{loader:()=>a.e(40423).then(a.bind(a,90559)),meta:{t:"AOP"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(63240).then(a.bind(a,24116)),meta:{t:"01 Spring笔记"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/",{loader:()=>a.e(4502).then(a.bind(a,96727)),meta:{t:"Spring Day01"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/",{loader:()=>a.e(42975).then(a.bind(a,24952)),meta:{t:"Spring Day02"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/",{loader:()=>a.e(80384).then(a.bind(a,91766)),meta:{t:"Spring Day03"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(98678).then(a.bind(a,31179)),meta:{t:"随笔"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/",{loader:()=>a.e(639).then(a.bind(a,39598)),meta:{t:"Spring MVC Day01"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(99441).then(a.bind(a,78067)),meta:{t:"02 Spring MVC笔记"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/",{loader:()=>a.e(62166).then(a.bind(a,7096)),meta:{t:"Spring MVC Day02"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(29485).then(a.bind(a,11767)),meta:{t:"随笔"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(16647).then(a.bind(a,16397)),meta:{t:"随笔"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/",{loader:()=>a.e(58139).then(a.bind(a,68982)),meta:{t:"Docker"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/",{loader:()=>a.e(67942).then(a.bind(a,10109)),meta:{t:"实用"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/",{loader:()=>a.e(58471).then(a.bind(a,15709)),meta:{t:"ES"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/",{loader:()=>a.e(47373).then(a.bind(a,97727)),meta:{t:"MQ"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/",{loader:()=>a.e(29833).then(a.bind(a,47761)),meta:{t:"Jmeter"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/",{loader:()=>a.e(24654).then(a.bind(a,31574)),meta:{t:"Seata"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/",{loader:()=>a.e(37662).then(a.bind(a,43078)),meta:{t:"Sentinel"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",{loader:()=>a.e(49122).then(a.bind(a,8522)),meta:{t:"分布式事务"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/",{loader:()=>a.e(39426).then(a.bind(a,48284)),meta:{t:"报错记录"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/",{loader:()=>a.e(20382).then(a.bind(a,82424)),meta:{t:"板书"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/",{loader:()=>a.e(18997).then(a.bind(a,87838)),meta:{t:"01 分布式缓存"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/",{loader:()=>a.e(76771).then(a.bind(a,58666)),meta:{t:"3.高级"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/",{loader:()=>a.e(80637).then(a.bind(a,83830)),meta:{t:"02 多级缓存"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/",{loader:()=>a.e(52363).then(a.bind(a,74510)),meta:{t:"03 Redis最佳实践"}}],["/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>a.e(15980).then(a.bind(a,72226)),meta:{t:"字符串"}}],["/Interview/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3/",{loader:()=>a.e(52242).then(a.bind(a,84634)),meta:{t:"力扣"}}],["/Interview/%E7%AE%97%E6%B3%95/",{loader:()=>a.e(37347).then(a.bind(a,35899)),meta:{t:"算法"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",{loader:()=>a.e(38897).then(a.bind(a,90320)),meta:{t:"01基础知识"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/",{loader:()=>a.e(68557).then(a.bind(a,30100)),meta:{t:"02并发安全"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/",{loader:()=>a.e(18790).then(a.bind(a,45103)),meta:{t:"Juc额外扩展资料"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/",{loader:()=>a.e(13551).then(a.bind(a,50090)),meta:{t:"并发编程的艺术"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/",{loader:()=>a.e(2512).then(a.bind(a,77616)),meta:{t:"安装"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/",{loader:()=>a.e(69323).then(a.bind(a,19361)),meta:{t:"Bug"}}],["/category/",{loader:()=>a.e(23583).then(a.bind(a,3233)),meta:{t:"分类",I:!1}}],["/category/markdown/",{loader:()=>a.e(3521).then(a.bind(a,6324)),meta:{t:"markdown 分类",I:!1}}],["/category/java/",{loader:()=>a.e(68236).then(a.bind(a,1730)),meta:{t:"Java 分类",I:!1}}],["/category/mysql/",{loader:()=>a.e(41006).then(a.bind(a,37667)),meta:{t:"MySQL 分类",I:!1}}],["/category/es/",{loader:()=>a.e(23228).then(a.bind(a,11891)),meta:{t:"ES 分类",I:!1}}],["/category/spring/",{loader:()=>a.e(9097).then(a.bind(a,97494)),meta:{t:"Spring 分类",I:!1}}],["/category/jvm/",{loader:()=>a.e(63035).then(a.bind(a,7969)),meta:{t:"JVM 分类",I:!1}}],["/category/linux/",{loader:()=>a.e(38654).then(a.bind(a,70332)),meta:{t:"Linux 分类",I:!1}}],["/category/netty/",{loader:()=>a.e(92776).then(a.bind(a,67690)),meta:{t:"Netty 分类",I:!1}}],["/category/docker/",{loader:()=>a.e(11360).then(a.bind(a,72570)),meta:{t:"docker 分类",I:!1}}],["/category/mybatis/",{loader:()=>a.e(72285).then(a.bind(a,99951)),meta:{t:"Mybatis 分类",I:!1}}],["/category/%E5%AE%9E%E6%88%98/",{loader:()=>a.e(33274).then(a.bind(a,39264)),meta:{t:"实战 分类",I:!1}}],["/category/nacos/",{loader:()=>a.e(8496).then(a.bind(a,75942)),meta:{t:"Nacos 分类",I:!1}}],["/category/%E8%A3%85%E6%9C%BA/",{loader:()=>a.e(28483).then(a.bind(a,39640)),meta:{t:"装机 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>a.e(3863).then(a.bind(a,7241)),meta:{t:"数据库 分类",I:!1}}],["/category/python/",{loader:()=>a.e(91034).then(a.bind(a,99983)),meta:{t:"Python 分类",I:!1}}],["/category/%E9%A1%B9%E7%9B%AE/",{loader:()=>a.e(55459).then(a.bind(a,18260)),meta:{t:"项目 分类",I:!1}}],["/category/git/",{loader:()=>a.e(95612).then(a.bind(a,44232)),meta:{t:"Git 分类",I:!1}}],["/category/mybatis-plus/",{loader:()=>a.e(41512).then(a.bind(a,83795)),meta:{t:"Mybatis-Plus 分类",I:!1}}],["/category/springcloud%E9%AB%98%E7%BA%A7%E7%AF%87/",{loader:()=>a.e(32524).then(a.bind(a,93235)),meta:{t:"SpringCloud高级篇 分类",I:!1}}],["/category/vue/",{loader:()=>a.e(8628).then(a.bind(a,32352)),meta:{t:"vue 分类",I:!1}}],["/category/redis/",{loader:()=>a.e(30007).then(a.bind(a,21902)),meta:{t:"Redis 分类",I:!1}}],["/category/java%E9%AB%98%E7%BA%A7/",{loader:()=>a.e(3621).then(a.bind(a,66968)),meta:{t:"Java高级 分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(24021).then(a.bind(a,14681)),meta:{t:"使用指南 分类",I:!1}}],["/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",{loader:()=>a.e(7281).then(a.bind(a,60529)),meta:{t:"中间件 分类",I:!1}}],["/category/nginx/",{loader:()=>a.e(55552).then(a.bind(a,31320)),meta:{t:"Nginx 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(50953).then(a.bind(a,57796)),meta:{t:"网络 分类",I:!1}}],["/category/java%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(22878).then(a.bind(a,30690)),meta:{t:"Java基础 分类",I:!1}}],["/category/springcloud%E5%AE%9E%E7%94%A8%E7%AF%87/",{loader:()=>a.e(45217).then(a.bind(a,10683)),meta:{t:"SpringCloud实用篇 分类",I:!1}}],["/category/devops/",{loader:()=>a.e(58873).then(a.bind(a,73475)),meta:{t:"DevOps 分类",I:!1}}],["/category/maven/",{loader:()=>a.e(71179).then(a.bind(a,37334)),meta:{t:"Maven 分类",I:!1}}],["/category/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(35451).then(a.bind(a,68677)),meta:{t:"面试题 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",{loader:()=>a.e(26582).then(a.bind(a,59602)),meta:{t:"网络编程 分类",I:!1}}],["/category/redis/",{loader:()=>a.e(30007).then(a.bind(a,21902)),meta:{t:"redis 分类",I:!1}}],["/category/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",{loader:()=>a.e(89462).then(a.bind(a,99232)),meta:{t:"面渣逆袭 分类",I:!1}}],["/category/%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(83812).then(a.bind(a,25520)),meta:{t:"运维工具 分类",I:!1}}],["/category/%E6%80%A7%E8%83%BD%E6%8E%92%E6%9F%A5/",{loader:()=>a.e(50437).then(a.bind(a,52214)),meta:{t:"性能排查 分类",I:!1}}],["/category/mybatis/",{loader:()=>a.e(72285).then(a.bind(a,99951)),meta:{t:"MyBatis 分类",I:!1}}],["/category/lombok/",{loader:()=>a.e(64640).then(a.bind(a,96908)),meta:{t:"Lombok 分类",I:!1}}],["/category/spring-boot/",{loader:()=>a.e(9452).then(a.bind(a,67752)),meta:{t:"Spring Boot 分类",I:!1}}],["/category/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/",{loader:()=>a.e(38494).then(a.bind(a,45817)),meta:{t:"日志系统 分类",I:!1}}],["/category/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",{loader:()=>a.e(62669).then(a.bind(a,29048)),meta:{t:"项目实战 分类",I:!1}}],["/category/springboot/",{loader:()=>a.e(94829).then(a.bind(a,88074)),meta:{t:"SpringBoot 分类",I:!1}}],["/category/springcloud/",{loader:()=>a.e(61762).then(a.bind(a,71499)),meta:{t:"SpringCloud 分类",I:!1}}],["/category/mycat/",{loader:()=>a.e(25046).then(a.bind(a,71968)),meta:{t:"MyCat 分类",I:!1}}],["/category/windows/",{loader:()=>a.e(433).then(a.bind(a,93729)),meta:{t:"Windows 分类",I:!1}}],["/category/gc%E6%9C%BA%E5%88%B6/",{loader:()=>a.e(88858).then(a.bind(a,88404)),meta:{t:"GC机制 分类",I:!1}}],["/category/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/",{loader:()=>a.e(81540).then(a.bind(a,13395)),meta:{t:"依赖注入 分类",I:!1}}],["/category/%E9%9D%A2%E8%AF%95/",{loader:()=>a.e(91673).then(a.bind(a,75302)),meta:{t:"面试 分类",I:!1}}],["/category/gc/",{loader:()=>a.e(33130).then(a.bind(a,54834)),meta:{t:"GC 分类",I:!1}}],["/category/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",{loader:()=>a.e(92698).then(a.bind(a,34185)),meta:{t:"性能优化 分类",I:!1}}],["/category/%E5%8D%9A%E5%AE%A2%E4%B8%93%E6%A0%8F/",{loader:()=>a.e(16590).then(a.bind(a,53738)),meta:{t:"博客专栏 分类",I:!1}}],["/category/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/",{loader:()=>a.e(62108).then(a.bind(a,8637)),meta:{t:"内存泄漏 分类",I:!1}}],["/category/%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/",{loader:()=>a.e(96244).then(a.bind(a,3756)),meta:{t:"故障排查 分类",I:!1}}],["/category/%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(7968).then(a.bind(a,34595)),meta:{t:"工具 分类",I:!1}}],["/category/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/",{loader:()=>a.e(38854).then(a.bind(a,84360)),meta:{t:"性能分析 分类",I:!1}}],["/category/%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(34309).then(a.bind(a,39918)),meta:{t:"诊断工具 分类",I:!1}}],["/category/%E6%9C%8D%E5%8A%A1%E5%99%A8/",{loader:()=>a.e(20890).then(a.bind(a,75474)),meta:{t:"服务器 分类",I:!1}}],["/category/tomcat/",{loader:()=>a.e(98236).then(a.bind(a,39563)),meta:{t:"Tomcat 分类",I:!1}}],["/category/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/",{loader:()=>a.e(939).then(a.bind(a,20289)),meta:{t:"性能调优 分类",I:!1}}],["/category/%E8%B0%83%E8%AF%95%E8%AF%8A%E6%96%AD/",{loader:()=>a.e(43433).then(a.bind(a,83272)),meta:{t:"调试诊断 分类",I:!1}}],["/category/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",{loader:()=>a.e(47647).then(a.bind(a,37864)),meta:{t:"消息队列 分类",I:!1}}],["/category/middleware/",{loader:()=>a.e(83708).then(a.bind(a,40648)),meta:{t:"Middleware 分类",I:!1}}],["/category/mybatis-plus/",{loader:()=>a.e(41512).then(a.bind(a,83795)),meta:{t:"MyBatis-Plus 分类",I:!1}}],["/category/aop/",{loader:()=>a.e(47968).then(a.bind(a,3158)),meta:{t:"AOP 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,83332)),meta:{t:"标签",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8/",{loader:()=>a.e(98781).then(a.bind(a,61812)),meta:{t:"标签: 使用",I:!1}}],["/tag/%E5%BF%85%E8%83%8C/",{loader:()=>a.e(75787).then(a.bind(a,92672)),meta:{t:"标签: 必背",I:!1}}],["/tag/%E6%80%BB%E7%BB%93/",{loader:()=>a.e(95436).then(a.bind(a,32361)),meta:{t:"标签: 总结",I:!1}}],["/tag/java8%E7%89%B9%E6%80%A7/",{loader:()=>a.e(74406).then(a.bind(a,58669)),meta:{t:"标签: Java8特性",I:!1}}],["/tag/%E6%B3%A8%E8%A7%A3/",{loader:()=>a.e(72771).then(a.bind(a,6575)),meta:{t:"标签: 注解",I:!1}}],["/tag/%E9%87%8D%E7%82%B9/",{loader:()=>a.e(29688).then(a.bind(a,24365)),meta:{t:"标签: 重点",I:!1}}],["/tag/%E6%95%99%E7%A8%8B/",{loader:()=>a.e(75154).then(a.bind(a,61628)),meta:{t:"标签: 教程",I:!1}}],["/tag/%E8%AE%B2%E4%B9%89/",{loader:()=>a.e(88319).then(a.bind(a,5746)),meta:{t:"标签: 讲义",I:!1}}],["/tag/bug/",{loader:()=>a.e(26504).then(a.bind(a,12914)),meta:{t:"标签: bug",I:!1}}],["/tag/%E6%9F%A5%E8%AF%A2/",{loader:()=>a.e(5493).then(a.bind(a,42612)),meta:{t:"标签: 查询",I:!1}}],["/tag/%E9%98%85%E8%AF%BB%E5%AE%8C%E6%AF%95/",{loader:()=>a.e(19133).then(a.bind(a,63260)),meta:{t:"标签: 阅读完毕",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(56080).then(a.bind(a,33306)),meta:{t:"标签: 基础",I:!1}}],["/tag/%E8%A3%85%E6%9C%BA/",{loader:()=>a.e(64605).then(a.bind(a,80810)),meta:{t:"标签: 装机",I:!1}}],["/tag/%E9%95%9C%E5%83%8F/",{loader:()=>a.e(15555).then(a.bind(a,26753)),meta:{t:"标签: 镜像",I:!1}}],["/tag/%E4%BA%86%E8%A7%A3/",{loader:()=>a.e(30945).then(a.bind(a,51814)),meta:{t:"标签: 了解",I:!1}}],["/tag/%E7%AC%94%E8%AE%B0/",{loader:()=>a.e(26238).then(a.bind(a,93374)),meta:{t:"标签: 笔记",I:!1}}],["/tag/%E8%B8%A9%E5%9D%91/",{loader:()=>a.e(14820).then(a.bind(a,60410)),meta:{t:"标签: 踩坑",I:!1}}],["/tag/%E7%BB%8F%E9%AA%8C/",{loader:()=>a.e(15785).then(a.bind(a,96439)),meta:{t:"标签: 经验",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",{loader:()=>a.e(25860).then(a.bind(a,50393)),meta:{t:"标签: 网络编程",I:!1}}],["/tag/%E4%BA%8B%E5%8A%A1/",{loader:()=>a.e(75426).then(a.bind(a,33347)),meta:{t:"标签: 事务",I:!1}}],["/tag/%E5%AE%89%E5%85%A8/",{loader:()=>a.e(26123).then(a.bind(a,64610)),meta:{t:"标签: 安全",I:!1}}],["/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>a.e(1033).then(a.bind(a,94390)),meta:{t:"标签: 面试题",I:!1}}],["/tag/%E5%8F%8D%E5%B0%84/",{loader:()=>a.e(85307).then(a.bind(a,33536)),meta:{t:"标签: 反射",I:!1}}],["/tag/se%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(57356).then(a.bind(a,9164)),meta:{t:"标签: SE基础",I:!1}}],["/tag/seata/",{loader:()=>a.e(97418).then(a.bind(a,45007)),meta:{t:"标签: Seata",I:!1}}],["/tag/%E5%AE%B9%E5%99%A8/",{loader:()=>a.e(19387).then(a.bind(a,94688)),meta:{t:"标签: 容器",I:!1}}],["/tag/%E5%91%BD%E4%BB%A4/",{loader:()=>a.e(34827).then(a.bind(a,31118)),meta:{t:"标签: 命令",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",{loader:()=>a.e(14803).then(a.bind(a,54767)),meta:{t:"标签: 基础知识",I:!1}}],["/tag/%E5%85%A5%E9%97%A8/",{loader:()=>a.e(86127).then(a.bind(a,59405)),meta:{t:"标签: 入门",I:!1}}],["/tag/error/",{loader:()=>a.e(86116).then(a.bind(a,77865)),meta:{t:"标签: error",I:!1}}],["/tag/git/",{loader:()=>a.e(88474).then(a.bind(a,63532)),meta:{t:"标签: git",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C/",{loader:()=>a.e(48663).then(a.bind(a,80224)),meta:{t:"标签: 网络",I:!1}}],["/tag/%E5%AE%89%E8%A3%85/",{loader:()=>a.e(21496).then(a.bind(a,57535)),meta:{t:"标签: 安装",I:!1}}],["/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",{loader:()=>a.e(5623).then(a.bind(a,46673)),meta:{t:"标签: 私有云",I:!1}}],["/tag/%E5%9D%91%E7%8E%8B/",{loader:()=>a.e(28634).then(a.bind(a,84290)),meta:{t:"标签: 坑王",I:!1}}],["/tag/%E7%AE%80%E5%8D%95/",{loader:()=>a.e(55533).then(a.bind(a,96979)),meta:{t:"标签: 简单",I:!1}}],["/tag/%E6%8F%92%E4%BB%B6/",{loader:()=>a.e(70506).then(a.bind(a,13470)),meta:{t:"标签: 插件",I:!1}}],["/tag/api/",{loader:()=>a.e(96810).then(a.bind(a,5414)),meta:{t:"标签: API",I:!1}}],["/tag/%E7%88%AC%E8%99%AB/",{loader:()=>a.e(29559).then(a.bind(a,41536)),meta:{t:"标签: 爬虫",I:!1}}],["/tag/rabbitmq/",{loader:()=>a.e(43688).then(a.bind(a,69509)),meta:{t:"标签: RabbitMQ",I:!1}}],["/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>a.e(68042).then(a.bind(a,47657)),meta:{t:"标签: 多线程",I:!1}}],["/tag/%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",{loader:()=>a.e(87993).then(a.bind(a,57042)),meta:{t:"标签: 反射动态代理",I:!1}}],["/tag/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/",{loader:()=>a.e(27155).then(a.bind(a,48062)),meta:{t:"标签: 高级特性",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",{loader:()=>a.e(65076).then(a.bind(a,50369)),meta:{t:"标签: 接口文档",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",{loader:()=>a.e(90609).then(a.bind(a,69468)),meta:{t:"标签: 接口示例",I:!1}}],["/tag/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",{loader:()=>a.e(62156).then(a.bind(a,81050)),meta:{t:"标签: 配置文件",I:!1}}],["/tag/sentinel/",{loader:()=>a.e(1666).then(a.bind(a,85038)),meta:{t:"标签: Sentinel",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",{loader:()=>a.e(79198).then(a.bind(a,18277)),meta:{t:"标签: 分布式事务",I:!1}}],["/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",{loader:()=>a.e(36726).then(a.bind(a,682)),meta:{t:"标签: 微服务",I:!1}}],["/tag/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",{loader:()=>a.e(70535).then(a.bind(a,8812)),meta:{t:"标签: 分库分表",I:!1}}],["/tag/%E5%8D%B8%E8%BD%BD/",{loader:()=>a.e(83037).then(a.bind(a,97314)),meta:{t:"标签: 卸载",I:!1}}],["/tag/cicd/",{loader:()=>a.e(16613).then(a.bind(a,82105)),meta:{t:"标签: CICD",I:!1}}],["/tag/jenkins/",{loader:()=>a.e(97008).then(a.bind(a,42117)),meta:{t:"标签: Jenkins",I:!1}}],["/tag/%E7%9B%AE%E5%BD%95/",{loader:()=>a.e(85119).then(a.bind(a,49619)),meta:{t:"标签: 目录",I:!1}}],["/tag/%E9%AB%98%E8%B4%A8%E9%87%8F/",{loader:()=>a.e(23727).then(a.bind(a,1728)),meta:{t:"标签: 高质量",I:!1}}],["/tag/%E4%BD%8E%E8%B4%A8%E9%87%8F/",{loader:()=>a.e(15897).then(a.bind(a,84854)),meta:{t:"标签: 低质量",I:!1}}],["/tag/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",{loader:()=>a.e(84056).then(a.bind(a,46566)),meta:{t:"标签: 面渣逆袭",I:!1}}],["/tag/spring/",{loader:()=>a.e(16847).then(a.bind(a,40551)),meta:{t:"标签: Spring",I:!1}}],["/tag/linux/",{loader:()=>a.e(94316).then(a.bind(a,45922)),meta:{t:"标签: Linux",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",{loader:()=>a.e(84928).then(a.bind(a,38530)),meta:{t:"标签: 性能优化",I:!1}}],["/tag/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/",{loader:()=>a.e(12232).then(a.bind(a,11840)),meta:{t:"标签: 系统监控",I:!1}}],["/tag/%E8%BF%90%E7%BB%B4/",{loader:()=>a.e(19830).then(a.bind(a,43791)),meta:{t:"标签: 运维",I:!1}}],["/tag/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",{loader:()=>a.e(82203).then(a.bind(a,83522)),meta:{t:"标签: 常用命令",I:!1}}],["/tag/lombok/",{loader:()=>a.e(98262).then(a.bind(a,19618)),meta:{t:"标签: Lombok",I:!1}}],["/tag/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/",{loader:()=>a.e(82835).then(a.bind(a,4467)),meta:{t:"标签: 构造函数",I:!1}}],["/tag/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90/",{loader:()=>a.e(92767).then(a.bind(a,63911)),meta:{t:"标签: 自动生成",I:!1}}],["/tag/log4j2/",{loader:()=>a.e(1012).then(a.bind(a,5883)),meta:{t:"标签: Log4j2",I:!1}}],["/tag/%E6%97%A5%E5%BF%97%E5%BD%92%E6%A1%A3/",{loader:()=>a.e(79533).then(a.bind(a,8645)),meta:{t:"标签: 日志归档",I:!1}}],["/tag/%E5%A4%9A%E7%BA%A7%E6%97%A5%E5%BF%97/",{loader:()=>a.e(3061).then(a.bind(a,80788)),meta:{t:"标签: 多级日志",I:!1}}],["/tag/%E5%BD%A9%E8%89%B2%E6%8E%A7%E5%88%B6%E5%8F%B0/",{loader:()=>a.e(44128).then(a.bind(a,19322)),meta:{t:"标签: 彩色控制台",I:!1}}],["/tag/%E6%97%A5%E5%BF%97%E5%88%86%E6%A8%A1%E5%9D%97/",{loader:()=>a.e(59312).then(a.bind(a,93795)),meta:{t:"标签: 日志分模块",I:!1}}],["/tag/%E5%BC%82%E6%AD%A5%E6%97%A5%E5%BF%97/",{loader:()=>a.e(15907).then(a.bind(a,73411)),meta:{t:"标签: 异步日志",I:!1}}],["/tag/spring-boot-%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(24738).then(a.bind(a,31523)),meta:{t:"标签: Spring Boot 配置",I:!1}}],["/tag/sql%E4%BC%98%E5%8C%96/",{loader:()=>a.e(40396).then(a.bind(a,53284)),meta:{t:"标签: SQL优化",I:!1}}],["/tag/yum%E5%AE%89%E8%A3%85/",{loader:()=>a.e(85737).then(a.bind(a,39798)),meta:{t:"标签: yum安装",I:!1}}],["/tag/docker%E5%AE%89%E8%A3%85/",{loader:()=>a.e(11996).then(a.bind(a,36354)),meta:{t:"标签: docker安装",I:!1}}],["/tag/mysql/",{loader:()=>a.e(72996).then(a.bind(a,7802)),meta:{t:"标签: MySQL",I:!1}}],["/tag/sql/",{loader:()=>a.e(85374).then(a.bind(a,60071)),meta:{t:"标签: SQL",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/",{loader:()=>a.e(63876).then(a.bind(a,3499)),meta:{t:"标签: 数据库原理",I:!1}}],["/tag/%E9%9D%A2%E8%AF%95/",{loader:()=>a.e(50243).then(a.bind(a,78475)),meta:{t:"标签: 面试",I:!1}}],["/tag/git/",{loader:()=>a.e(88474).then(a.bind(a,63532)),meta:{t:"标签: Git",I:!1}}],["/tag/merge/",{loader:()=>a.e(97734).then(a.bind(a,19497)),meta:{t:"标签: merge",I:!1}}],["/tag/rebase/",{loader:()=>a.e(84022).then(a.bind(a,33393)),meta:{t:"标签: rebase",I:!1}}],["/tag/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/",{loader:()=>a.e(62351).then(a.bind(a,25536)),meta:{t:"标签: 版本控制",I:!1}}],["/tag/jvm/",{loader:()=>a.e(65837).then(a.bind(a,58364)),meta:{t:"标签: JVM",I:!1}}],["/tag/gc/",{loader:()=>a.e(75600).then(a.bind(a,74849)),meta:{t:"标签: GC",I:!1}}],["/tag/cms/",{loader:()=>a.e(52287).then(a.bind(a,54937)),meta:{t:"标签: CMS",I:!1}}],["/tag/g1/",{loader:()=>a.e(38422).then(a.bind(a,48773)),meta:{t:"标签: G1",I:!1}}],["/tag/%E5%9B%9E%E6%94%B6%E5%99%A8%E5%AF%B9%E6%AF%94/",{loader:()=>a.e(6491).then(a.bind(a,53149)),meta:{t:"标签: 回收器对比",I:!1}}],["/tag/stop-the-world/",{loader:()=>a.e(7577).then(a.bind(a,10322)),meta:{t:"标签: Stop The World",I:!1}}],["/tag/gc%E9%98%B6%E6%AE%B5/",{loader:()=>a.e(34441).then(a.bind(a,46431)),meta:{t:"标签: GC阶段",I:!1}}],["/tag/%E4%B8%89%E7%BA%A7%E7%BC%93%E5%AD%98/",{loader:()=>a.e(45637).then(a.bind(a,72236)),meta:{t:"标签: 三级缓存",I:!1}}],["/tag/%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/",{loader:()=>a.e(14542).then(a.bind(a,54603)),meta:{t:"标签: 循环依赖",I:!1}}],["/tag/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/",{loader:()=>a.e(30006).then(a.bind(a,96461)),meta:{t:"标签: 依赖注入",I:!1}}],["/tag/%E6%9E%B6%E6%9E%84/",{loader:()=>a.e(24952).then(a.bind(a,68765)),meta:{t:"标签: 架构",I:!1}}],["/tag/%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/",{loader:()=>a.e(57509).then(a.bind(a,5916)),meta:{t:"标签: 执行流程",I:!1}}],["/tag/%E8%99%9A%E6%8B%9F%E6%9C%BA/",{loader:()=>a.e(91233).then(a.bind(a,58082)),meta:{t:"标签: 虚拟机",I:!1}}],["/tag/%E7%B1%BB%E5%8A%A0%E8%BD%BD/",{loader:()=>a.e(54304).then(a.bind(a,73156)),meta:{t:"标签: 类加载",I:!1}}],["/tag/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B/",{loader:()=>a.e(75366).then(a.bind(a,93987)),meta:{t:"标签: 双亲委派模型",I:!1}}],["/tag/%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3/",{loader:()=>a.e(70017).then(a.bind(a,15809)),meta:{t:"标签: 机制详解",I:!1}}],["/tag/%E5%88%9D%E5%A7%8B%E5%8C%96/",{loader:()=>a.e(26180).then(a.bind(a,46932)),meta:{t:"标签: 初始化",I:!1}}],["/tag/%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6/",{loader:()=>a.e(44352).then(a.bind(a,91128)),meta:{t:"标签: 触发条件",I:!1}}],["/tag/%E9%AB%98%E9%A2%91%E9%97%AE%E9%A2%98/",{loader:()=>a.e(88431).then(a.bind(a,51128)),meta:{t:"标签: 高频问题",I:!1}}],["/tag/java%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(32488).then(a.bind(a,88980)),meta:{t:"标签: Java基础",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/",{loader:()=>a.e(41928).then(a.bind(a,77627)),meta:{t:"标签: 内存结构",I:!1}}],["/tag/%E5%A0%86/",{loader:()=>a.e(5672).then(a.bind(a,54553)),meta:{t:"标签: 堆",I:!1}}],["/tag/%E6%A0%88/",{loader:()=>a.e(22066).then(a.bind(a,92688)),meta:{t:"标签: 栈",I:!1}}],["/tag/%E6%96%B9%E6%B3%95%E5%8C%BA/",{loader:()=>a.e(29234).then(a.bind(a,99253)),meta:{t:"标签: 方法区",I:!1}}],["/tag/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/",{loader:()=>a.e(43031).then(a.bind(a,99447)),meta:{t:"标签: Java内存模型",I:!1}}],["/tag/jmm/",{loader:()=>a.e(21206).then(a.bind(a,83405)),meta:{t:"标签: JMM",I:!1}}],["/tag/happens-before/",{loader:()=>a.e(64897).then(a.bind(a,8093)),meta:{t:"标签: happens-before",I:!1}}],["/tag/%E5%B9%B6%E5%8F%91/",{loader:()=>a.e(79171).then(a.bind(a,9880)),meta:{t:"标签: 并发",I:!1}}],["/tag/%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98/",{loader:()=>a.e(8548).then(a.bind(a,57768)),meta:{t:"标签: 直接内存",I:!1}}],["/tag/directmemory/",{loader:()=>a.e(16808).then(a.bind(a,15763)),meta:{t:"标签: DirectMemory",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{loader:()=>a.e(22516).then(a.bind(a,21845)),meta:{t:"标签: 内存管理",I:!1}}],["/tag/%E9%A3%8E%E9%99%A9/",{loader:()=>a.e(12627).then(a.bind(a,16931)),meta:{t:"标签: 风险",I:!1}}],["/tag/zgc/",{loader:()=>a.e(77882).then(a.bind(a,83583)),meta:{t:"标签: ZGC",I:!1}}],["/tag/shenandoah/",{loader:()=>a.e(74237).then(a.bind(a,50664)),meta:{t:"标签: Shenandoah",I:!1}}],["/tag/gc%E6%97%A5%E5%BF%97/",{loader:()=>a.e(48740).then(a.bind(a,41156)),meta:{t:"标签: GC日志",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/",{loader:()=>a.e(28321).then(a.bind(a,29283)),meta:{t:"标签: 性能调优",I:!1}}],["/tag/%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/",{loader:()=>a.e(53411).then(a.bind(a,93247)),meta:{t:"标签: 参数调优",I:!1}}],["/tag/oom/",{loader:()=>a.e(55123).then(a.bind(a,54157)),meta:{t:"标签: OOM",I:!1}}],["/tag/%E6%8E%92%E6%9F%A5/",{loader:()=>a.e(43043).then(a.bind(a,62752)),meta:{t:"标签: 排查",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/",{loader:()=>a.e(90302).then(a.bind(a,87957)),meta:{t:"标签: 内存泄漏",I:!1}}],["/tag/hprof/",{loader:()=>a.e(75917).then(a.bind(a,3773)),meta:{t:"标签: hprof",I:!1}}],["/tag/%E5%A0%86%E5%88%86%E6%9E%90/",{loader:()=>a.e(41742).then(a.bind(a,53572)),meta:{t:"标签: 堆分析",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E6%8E%92%E6%9F%A5/",{loader:()=>a.e(81762).then(a.bind(a,6573)),meta:{t:"标签: 内存排查",I:!1}}],["/tag/mat/",{loader:()=>a.e(12768).then(a.bind(a,49811)),meta:{t:"标签: MAT",I:!1}}],["/tag/%E5%AE%9E%E6%88%98%E7%BB%8F%E9%AA%8C/",{loader:()=>a.e(43695).then(a.bind(a,74598)),meta:{t:"标签: 实战经验",I:!1}}],["/tag/mat%E5%88%86%E6%9E%90/",{loader:()=>a.e(77254).then(a.bind(a,42154)),meta:{t:"标签: MAT分析",I:!1}}],["/tag/jdk/",{loader:()=>a.e(41509).then(a.bind(a,25860)),meta:{t:"标签: JDK",I:!1}}],["/tag/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(99217).then(a.bind(a,61270)),meta:{t:"标签: 命令行工具",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/",{loader:()=>a.e(74364).then(a.bind(a,38027)),meta:{t:"标签: 性能分析",I:!1}}],["/tag/%E8%AF%8A%E6%96%AD/",{loader:()=>a.e(51267).then(a.bind(a,54833)),meta:{t:"标签: 诊断",I:!1}}],["/tag/jmc/",{loader:()=>a.e(54820).then(a.bind(a,59029)),meta:{t:"标签: JMC",I:!1}}],["/tag/java-mission-control/",{loader:()=>a.e(97105).then(a.bind(a,13792)),meta:{t:"标签: Java Mission Control",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/",{loader:()=>a.e(27102).then(a.bind(a,60683)),meta:{t:"标签: 性能监控",I:!1}}],["/tag/arthas/",{loader:()=>a.e(33777).then(a.bind(a,55412)),meta:{t:"标签: Arthas",I:!1}}],["/tag/java/",{loader:()=>a.e(80250).then(a.bind(a,53691)),meta:{t:"标签: Java",I:!1}}],["/tag/tomcat/",{loader:()=>a.e(21986).then(a.bind(a,75925)),meta:{t:"标签: Tomcat",I:!1}}],["/tag/%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/",{loader:()=>a.e(5796).then(a.bind(a,66903)),meta:{t:"标签: 线程模型",I:!1}}],["/tag/%E8%BF%9E%E6%8E%A5%E6%B1%A0/",{loader:()=>a.e(10229).then(a.bind(a,42598)),meta:{t:"标签: 连接池",I:!1}}],["/tag/%E8%B0%83%E4%BC%98%E5%AE%9E%E6%88%98/",{loader:()=>a.e(77575).then(a.bind(a,21188)),meta:{t:"标签: 调优实战",I:!1}}],["/tag/gc%E8%B0%83%E4%BC%98/",{loader:()=>a.e(93659).then(a.bind(a,73334)),meta:{t:"标签: GC调优",I:!1}}],["/tag/%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/",{loader:()=>a.e(29941).then(a.bind(a,50166)),meta:{t:"标签: 案例分析",I:!1}}],["/tag/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(60966).then(a.bind(a,47844)),meta:{t:"标签: 调试工具",I:!1}}],["/tag/%E5%8F%AF%E8%A7%86%E5%8C%96/",{loader:()=>a.e(16583).then(a.bind(a,2535)),meta:{t:"标签: 可视化",I:!1}}],["/tag/jfr/",{loader:()=>a.e(74356).then(a.bind(a,58486)),meta:{t:"标签: JFR",I:!1}}],["/tag/gc%E8%AF%8A%E6%96%AD/",{loader:()=>a.e(30501).then(a.bind(a,85296)),meta:{t:"标签: GC诊断",I:!1}}],["/tag/%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/",{loader:()=>a.e(20531).then(a.bind(a,13678)),meta:{t:"标签: 调试技巧",I:!1}}],["/tag/%E5%B7%A5%E5%85%B7%E9%93%BE/",{loader:()=>a.e(53976).then(a.bind(a,91878)),meta:{t:"标签: 工具链",I:!1}}],["/tag/%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5/",{loader:()=>a.e(57574).then(a.bind(a,48558)),meta:{t:"标签: 故障排查",I:!1}}],["/tag/mq/",{loader:()=>a.e(43120).then(a.bind(a,99696)),meta:{t:"标签: MQ",I:!1}}],["/tag/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/",{loader:()=>a.e(47060).then(a.bind(a,56757)),meta:{t:"标签: 消息中间件",I:!1}}],["/tag/aop/",{loader:()=>a.e(96830).then(a.bind(a,85731)),meta:{t:"标签: AOP",I:!1}}],["/tag/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2/",{loader:()=>a.e(28087).then(a.bind(a,44075)),meta:{t:"标签: 日志切面",I:!1}}],["/tag/%E5%88%87%E7%82%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F/",{loader:()=>a.e(64809).then(a.bind(a,85270)),meta:{t:"标签: 切点表达式",I:!1}}],["/tag/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/",{loader:()=>a.e(97729).then(a.bind(a,18744)),meta:{t:"标签: 课堂随笔",I:!1}}],["/article/",{loader:()=>a.e(97511).then(a.bind(a,2772)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(47199).then(a.bind(a,70353)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(85464).then(a.bind(a,14695)),meta:{t:"时间轴",I:!1}}]])},58761:(s,i,a)=>{a.d(i,{U:()=>n});const n=JSON.parse('{"base":"/blog/","lang":"zh-CN","title":"小满","description":"小满的知识库","head":[],"locales":{}}')},26653:(s,i,a)=>{a.d(i,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$HSupRtpRYYM6LYo8V7OXGurcwqZ/WICWDo5WFZ7dw5ak49XOO2M9m"],"/blog/学习记录.html":["$2a$10$ms0GCqH3ddRL3BePZ3M2teN332MxT6hJyilnFe44jhJrsg5Cj2cI2"]}},"author":{"name":"来杯冰柠檬","url":""},"logo":"/assets/images/avatar.png","repo":"JL-20191210/blog","docsDir":"src","footer":"哟吼~","displayFooter":true,"fullscreen":true,"blog":{"description":"一个全干攻城狮","intro":"/intro.html","medias":{"Gitee":"https://example.com","GitHub":"https://example.com","Zhihu":"https://example.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"后端","icon":"code","prefix":"/Java/","children":[{"text":"Java","link":"/Java/README.md","icon":"fa-brands fa-java","activeMatch":"^/Java/$"},{"text":"Python","link":"/Python/README.md","icon":"fa-brands fa-python","activeMatch":"^/Python/$"},{"text":"JVM","link":"/JVM/README.md","icon":"fa-solid fa-microchip","activeMatch":"^/JVM/$"}]},{"text":"Vue","icon":"fa-brands fa-vuejs","link":"/Vue/","activeMatch":"^/Vue/$"},{"text":"Spring","icon":"fa-solid fa-leaf","prefix":"/Spring/","children":[{"text":"Spring","link":"/Spring/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/Spring/$"},{"text":"SpringBoot","link":"/SpringBoot/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/SpringBoot/$"},{"text":"SpringMVC","link":"/SpringMVC/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/SpringMVC/$"},{"text":"SSM","link":"/SSM/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/SSM/$"}]},{"text":"SpringCloud","icon":"fa-solid fa-cloud","prefix":"/SpringCloud/","children":[{"text":"高级篇","link":"/SpringCloud/高级/","icon":"fa-brands fa-web-awesome","activeMatch":"^/SpringCloud/$"}]},{"text":"数据库","icon":"fa-solid fa-database","prefix":"/Database/","children":[{"text":"MySQL","link":"MySQL/","icon":"fa-solid fa-database","activeMatch":"^/MySQL/$"},{"text":"Redis","link":"Redis/","icon":"fa-solid fa-server","activeMatch":"^/Redis/$"}]},{"text":"Docker","icon":"fa-brands fa-docker","link":"/Docker/","activeMatch":"^/Docker/$"},{"text":"Linux","icon":"fa-brands fa-linux","prefix":"/Linux/","link":"Linux","children":[{"text":"Linux","link":"README.md","icon":"fa-brands fa-linux","activeMatch":"^/Linux/$"}]},{"text":"Netty","icon":"fa-solid fa-n","link":"/Netty/","activeMatch":"^/Netty/$"},{"text":"项目实战","icon":"fa-brands fa-product-hunt","prefix":"/项目实战/","children":[{"text":"谷粒商城","link":"谷粒商城/README.md","icon":"fa-brands fa-codepen","activeMatch":"^/谷粒商城/$"}]},{"text":"面试题","icon":"fa-solid fa-book-tanakh","link":"/Interview/","activeMatch":"^/Interview/$"}],"sidebar":{"/":["","intro"],"/Java/":"structure","/Python/":"structure","/JVM/":"structure","/Vue/":"structure","/Spring/":"structure","/SpringBoot/":"structure","/SpringCloud/":"structure","/SpringMVC/":"structure","/Database/":"structure","/Netty/":"structure","/Nginx/":"structure","/Redis/":"structure","/Docker/":"structure","/项目实战/":"structure","/Linux/":"structure","/Interview/":"structure","/SSM/":"structure"}}}}')},74923:(s,i,a)=>{},38123:(s,i,a)=>{a.d(i,{v:()=>n});const n={"/Java/":["",{text:"Java8特性",prefix:"Java8特性/",collapsible:!0,children:["Java Stream API","深入理解 Java Optional 类","函数式接口","深入理解 Java 8 新特性：从核心到实践","深入理解 Java Collector","深入理解 Java 中的默认方法和静态方法","深入理解 Stream API"]},{text:"String",prefix:"String/",collapsible:!0,children:["isNotEmpty和isNotBlank","Java中重写toString"]},{text:"入门到起飞",prefix:"入门到起飞/",collapsible:!0,children:[{text:"15.面向对象进阶（抽象类&接口&内部类）",prefix:"15.面向对象进阶（抽象类_接口_内部类）/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html"]},{text:"22.集合（ List集合）",prefix:"22.集合（List集合）/",collapsible:!0,children:["集合01"]},{text:"23.集合（泛型& Set&数据结构)",prefix:"23.集合（泛型_Set_数据结构)/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html"]},{text:"26.集合（ Stream流&方法引用）",prefix:"26.集合（Stream流_方法引用）/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html"]},{text:"31.多线程",prefix:"31.多线程/",collapsible:!0,children:["多线程01","多线程02",{text:"Juc额外扩展资料",prefix:"juc额外扩展资料/",collapsible:!0,children:["多线程（额外扩展）"]},"多线程总结",{text:"并发编程的艺术",prefix:"并发编程的艺术/",collapsible:!0,children:["2.happens-before原则","1.Java内存模型"]}]},{text:"35.反射&动态代理",prefix:"35.反射_动态代理/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html"]}]},{text:"唯手熟尔",prefix:"唯手熟尔/",collapsible:!0,children:["equals与等号"]},{text:"工具类",prefix:"工具类/",collapsible:!0,children:["BeanUtil","Java常用工具包"]},{text:"异常",prefix:"异常/",collapsible:!0,children:["try-with-resources自动关闭资源"]},{text:"架构",prefix:"架构/",collapsible:!0,children:["学习路线"]},{text:"核心类库",prefix:"核心类库/",collapsible:!0,children:["System 类详解"]},"空值和null值",{text:"队列",prefix:"队列/",collapsible:!0,children:["ArrayDeque"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["Java 中引用类型在内存中的存储方式","Java 的引用传递机制"]},"雷丰阳Java视频",{text:"面试题",prefix:"面试题/",collapsible:!0,children:["1.序列化与反序列化","1.补充- FST框架使用","2.不可变类","3.Exception和Error的区别","3.扩展-异常处理注意点","4.Java的优势","5.什么是Java的多态","6.Java中的参数传递是按值还是按引用","7.Java 不支持多重继承","7.Java不支持多重继承","8.Java面向对象和面向过程编程的区别","9.Java方法重载和重写之间的区别","10.Java内部类及作用","11.Java8新特性","12.JDK和JRE区别","13.你使用过哪些JDK工具","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","15.Java中的hashCode和equals方法之间有什么关系","16.什么是Java中的动态代理","17.JDK动态代理和CGLIB动态代理有什么区别"]}],"/Python/":["",{text:"基础",prefix:"基础/",collapsible:!0,children:["0.前言","video","核心数据类型"]},{text:"爬虫",prefix:"爬虫/",collapsible:!0,children:["样例"]}],"/JVM/":["","1.学习JVM有什么用","2.1.年轻代老年代","2.内存结构",{text:"2.内存结构",prefix:"2.内存结构/",collapsible:!0,children:["2.1程序计数器","2.2虚拟机栈","2.3本地方法栈","2.4堆","2.5方法区","2.6直接内存"]},"cpu load过高问题","GC类型","jstack用法",{text:"JVM 系列一命速通",prefix:"一命速通/",collapsible:!0,icon:"fa-solid fa-microchip",children:["",{text:"1. JVM 架构与类加载",prefix:"1. JVM 架构与类加载/",collapsible:!0,children:["1.1架构组成与执行流程","1.2类加载机制详解","1.3类的初始化与加载的触发条件"]},{text:"2.内存结构与并发内存模型",prefix:"2.内存结构与并发内存模型/",collapsible:!0,children:["2.1JVM内存结构详解（堆、栈、方法区等）","2.2Java内存模型（JMM）与happens-before 原则","2.3直接内存DirectMemory的使用与风险"]},{text:"3. GC垃圾回收机制",prefix:"3.GC垃圾回收机制/",collapsible:!0,children:["3.1 Java 垃圾回收算法与分代机制","3.2 CMS、G1、ZGC、Shenandoah 对比","3.3 GC 日志参数详解与案例分析","3.4 GC 参数调优实战策略"]},{text:"4. JVM性能调优与监控工具",prefix:"4. JVM性能调优与监控工具/",collapsible:!0,children:["4.1JVM常见 OOM 错误类型与排查","4.2如何分析 Java 堆转储文件（hprof）","4.3常见内存泄漏模式与定位技巧"]},{text:"5.性能诊断与运维工具推荐",prefix:"5.性能诊断与运维工具推荐/",collapsible:!0,children:["5.1JDK 命令行工具全景图与典型用途","5.2使用 Java Mission Control（JMC）进行性能分析","5.3Arthas 使用指南及常用命令解析"]},{text:"6. 服务器与容器线程模型调优",prefix:"6. 服务器与容器线程模型调优/",collapsible:!0,children:["6.1Tomcat 线程模型详解与调优指南"]},{text:"7. JVM调优实战总结与案例",prefix:"7. JVM调优实战总结与案例/",collapsible:!0,children:["7.1JVM 调优实战总结与案例分析"]},{text:"8. JVM高级性能分析工具",prefix:"8. JVM高级性能分析工具/",collapsible:!0,children:["8.1JVM 高级性能分析工具介绍","8.2JVM 性能调优实战案例解析"]},{text:"9. 高级调试技巧与工具链整合",prefix:"9. 高级调试技巧与工具链整合/",collapsible:!0,children:["9.1JVM高级调试技巧与工具链整合"]},{text:"10. JVM面试高频问答",prefix:"10. JVM面试高频问答/",collapsible:!0,children:["10.1JVM面试高频问答汇总"]}]},"OOM","黑马JVM"],"/Vue/":["","vue模板","表单验证"],"/Spring/":["",{text:"Junit",prefix:"Junit/",collapsible:!0,children:["生命周期注解"]},"SpringBoot无数据源启动","Spring5.x概述",{text:"注解",prefix:"注解/",collapsible:!0,children:["@ControllerAdvice","@EnableTransactionManagement","@FeignClient","@InitBinder","@JsonFormat","@JsonInclude","@ResponseBody","@Import","元注解","注解@RequestMapping、@PostMapping、@GetMapping"]}],"/SpringBoot/":["",{text:"Lombok注解",prefix:"lombok注解/",collapsible:!0,children:["@RequiredArgsConstructor"]},{text:"日志框架",prefix:"日志框架/",collapsible:!0,children:["Logback 切换到 Log4j2","Spring Boot 整合 Log4j2"]},{text:"注解",prefix:"注解/",collapsible:!0,children:["@ConfigurationProperties","@EnableConfigurationProperties"]}],"/SpringCloud/":["",{text:"Alibaba OSS",prefix:"Alibaba-OSS/",collapsible:!0,children:["阿里云oss使用记录"]},{text:"SpringCloud高级篇",prefix:"高级/",collapsible:!0,icon:"fa-solid fa-web-awesome",children:["",{text:"Jmeter",prefix:"Jmeter/",collapsible:!0,children:["1.MAC安装JMeter","2.Jmeter快速入门","3.sentinel规则持久化"]},{text:"Seata",prefix:"Seata/",collapsible:!0,children:["seata1.4.2升级2.0.0注意点","seata的部署和集成","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html","四种分布式事务模式","模式总结","配置文件"]},{text:"Sentinel",prefix:"Sentinel/",collapsible:!0,children:[{text:"Bug",prefix:"bug/",collapsible:!0,children:["windows版sentinel运行报错问题处理Unable to make protected final java.lang.Class java.lang.ClassLoader.define"]},"微服务保护"]},{text:"分布式事务",prefix:"分布式事务/",collapsible:!0,children:["分布式事务"]}]},{text:"基础",prefix:"基础/",collapsible:!0,children:["事务ACID原则"]},{text:"实用",prefix:"实用/",collapsible:!0,children:[{text:"Docker",prefix:"Docker/",collapsible:!0,children:["Centos7安装Docker","Docker实用篇"]},{text:"ES",prefix:"ES/",collapsible:!0,children:["1.什么是ES","2.倒排索引","3.基本概念","4.安装elasticsearch","5.分词器","6.mapping常见属性","7.创建索引库","8.常见查询类型","10.分页","9.copy_to的用法","视频教程","讲义-分布式搜索引擎01","讲义-分布式搜索引擎02"]},{text:"MQ",prefix:"MQ/",collapsible:!0,children:["RabbitMQ",{text:"安装",prefix:"安装/",collapsible:!0,children:["RabbitMQ部署指南"]}]},{text:"Nacos",prefix:"Nacos/",collapsible:!0,icon:"fa-solid fa-cloud",children:["","0.安装与启动","1.注册中心","2.配置中心","3.网关配置","5.Nacos多节点部署","4.Nacos指定服务端IP"]}]}],"/SpringMVC/":["",{text:"SpringMVC",prefix:"校验/",collapsible:!0,icon:"fa-solid fa-leaf",children:["","Hibernate Validator","JSR303数字校验","自定义校验"]}],"/Database/":[{text:"MySQL",prefix:"MySQL/",collapsible:!0,icon:"fa-solid fa-database",children:["",{text:"My Cat Web安装文档",prefix:"MyCat-Web安装文档/",collapsible:!0,children:["MyCat-web安装文档"]},{text:"My Cat安装文档",prefix:"MyCat安装文档/",collapsible:!0,children:["MyCat安装文档"]},{text:"My Cat配置文件",prefix:"MyCat配置文件/",collapsible:!0,children:["schema","server","rule"]},{text:"My SQL优化",prefix:"MySQL优化/",collapsible:!0,children:["union和unionAll"]},{text:"My SQL卸载文档 Linux",prefix:"MySQL卸载文档-Linux/",collapsible:!0,children:["MySQL卸载-Linux"]},{text:"My SQL卸载文档 Windows",prefix:"MySQL卸载文档-Windows/",collapsible:!0,children:["MySQL卸载文档-Windows版"]},{text:"My SQL学习笔记",prefix:"MySQL学习笔记/",collapsible:!0,children:["MySQL学习笔记"]},{text:"My SQL安全配置",prefix:"MySQL安全配置/",collapsible:!0,children:["MySQL数据库授权管理","数据库安全配置","数据库隔离级别"]},{text:"My SQL安装文档 Linux",prefix:"MySQL安装文档-Linux/",collapsible:!0,children:["MySQL-Linux离线安装","MySQL-Linux-yum及docker安装"]},{text:"My SQL安装文档 Windows",prefix:"MySQL安装文档-Windows/",collapsible:!0,children:["MySQL安装"]},{text:"My SQL小白",prefix:"MySQL小白/",collapsible:!0,children:["mysql是什么_架构是怎么样的"]},{text:"My SQL故障修复",prefix:"MySQL故障修复/",collapsible:!0,children:["caching_sha2_password无法加载","mysql-uroot-p报错","Navicat连接mysql报错"]},{text:"基础",prefix:"基础/",collapsible:!0,children:["笔记-基础篇","DCL语句演示","MySQL数据类型","事务操作演示","函数","函数演示","多表查询案例演示","多表查询演示","数据库控制语言DCL","约束及多表关系演示"]},{text:"工具",prefix:"工具/",collapsible:!0,children:["闪回-flashback"]},{text:"运维",prefix:"运维/",collapsible:!0,children:["MyCat配置信息含义","运维篇"]},{text:"进阶",prefix:"进阶/",collapsible:!0,children:["/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","1.什么情况下会出现读取记录的事务id比创建readview的事务id大","笔记-进阶篇"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["CTE全面解析d","/Database/MySQL/%E9%9A%8F%E7%AC%94/FROM%20A_%20B%20%E4%B8%8E%20JOIN%20%E7%9A%84%E5%8C%BA%E5%88%AB.html"]}]},{text:"Redis",prefix:"Redis/",collapsible:!0,icon:"fa-solid fa-database",children:[{text:"1.入门",prefix:"1.入门/",collapsible:!0,children:["Redis基础篇"]},{text:"2.实战",prefix:"2.实战/",collapsible:!0,children:["Redis实战篇","Redis实战篇-在线","pending-list"]},{text:"3.高级",prefix:"3.高级/",collapsible:!0,children:[{text:"01 分布式缓存",prefix:"01-分布式缓存/",collapsible:!0,children:["Redis高级-分布式缓存"]},{text:"02 多级缓存",prefix:"02-多级缓存/",collapsible:!0,children:["多级缓存"]},{text:"03 Redis最佳实践",prefix:"03-Redis最佳实践/",collapsible:!0,children:["Redis高级篇之最佳实践"]}]},{text:"4.原理",prefix:"4.原理/",collapsible:!0,children:["原理篇"]},"Redis 是什么？架构是怎么样的？","视频教程",{text:"课前资料",prefix:"课前资料/",collapsible:!0,children:["Redis集群","安装OpenResty","安装Canal","案例导入说明"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["什么是跳表"]}]}],"/Netty/":["01Netty-nio","02Netty-入门","03Netty-进阶","04Netty-优化与源码",{text:"API",prefix:"API/",collapsible:!0,children:["API","ExecutorService"]},"Channel","释放ByteBuf","关闭事件循环组","核心概念理解","1.黑马视频教程"],"/Nginx/":["","413 (Request Entity Too Large)"],"/Redis/":[],"/Docker/":[{text:"私有云",prefix:"私有云/",collapsible:!0,children:["前后端分离博客项目","玩客云","私有云部署软件"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["docker-compose安装软件","Dockerfile 构建 Spring Boot 镜像并运行服务","docker安装jenkins及配置","docker安装软件","查看镜像架构","pull","安装NocoDB","Docker容器与宿主机时间同步","查看数据卷目录","特权模式","镜像导入导出"]}],"/项目实战/":[{text:"个人博客",prefix:"个人博客/",collapsible:!0,children:["前端部署"]},{text:"谷粒商城",prefix:"谷粒商城/",collapsible:!0,icon:"fa-brands fa-shopify",children:["","跨域","关闭eslint检查",{text:"报错记录",prefix:"报错记录/",collapsible:!0,children:["服务列表为空","SpringBoot读取ValidationMessages.properties，中文乱码","人人后台注册至Nacos版本问题","人人前端启动失败","定时任务启动失败","测试方法启动空指针","找不到符号"]},{text:"板书",prefix:"板书/",collapsible:!0,children:["数据校验"]},"视频教程"]}],"/Linux/":["",{text:"0.笔记",prefix:"0.笔记/",collapsible:!0,children:["Linux课程笔记","Linux系统软件安装"]},{text:"1.安装与配置",prefix:"1.安装与配置/",collapsible:!0,children:["V2ray安装","主要架构"]},{text:"2.文件系统",prefix:"2.文件系统/",collapsible:!0,children:["软硬链接"]},{text:"3.用户与组管理",prefix:"3.用户与组管理/",collapsible:!0,children:["单用户模式重置密码"]},{text:"4.系统与进程管理",prefix:"4.系统与进程管理/",collapsible:!0,children:["daemon-reload","init命令详解","rc.local","查看系统配置","查询安装位置","Ubuntu命令行图形化界面切换"]},{text:"5.软件包管理",prefix:"5.软件包管理/",collapsible:!0,children:["修改yum源"]},{text:"6.网络配置与管理",prefix:"6.网络配置与管理/",collapsible:!0,children:["关闭端口占用进程"]},{text:"7.文件与目录管理",prefix:"7.文件与目录管理/",collapsible:!0,children:["dos2unix换行符清理"]},{text:"8. Shell与脚本编程",prefix:"8.Shell与脚本编程/",collapsible:!0,children:["Shell编程"]},{text:"9.磁盘管理与存储",prefix:"9.磁盘管理与存储/",collapsible:!0,children:["硬盘挂载"]},{text:"13.服务与自动化管理",prefix:"13.服务与自动化管理/",collapsible:!0,children:["Linux 服务器性能查看命令","systemctl"]},{text:"15.故障排除与修复",prefix:"15.故障排除与修复/",collapsible:!0,children:["reset-failed"]}],"/Interview/":[{text:"Java",prefix:"Java/",collapsible:!0,icon:"fa-brands fa-java",children:["",{text:"01 Java基础面试题",prefix:"01-Java基础面试题/",collapsible:!0,children:["1.Java基础面试题","1.Java基础面试题A"]},{text:"02 Java集合面试题",prefix:"02-Java集合面试题/",collapsible:!0,children:["2.Java集合面试题","2.Java集合框架篇A"]},{text:"03 Java并发编程面试题",prefix:"03-Java并发编程面试题/",collapsible:!0,children:["3.Java并发编程面试题","3.Java线程"]},{text:"04 Java虚拟机面试题",prefix:"04-Java虚拟机面试题/",collapsible:!0,children:["4.Java虚拟机面试题","4.JVM"]},{text:"05 Spring面试题",prefix:"05-Spring面试题/",collapsible:!0,children:["5.Spring面试题","5.SpringA","5.SpringB"]},{text:"06 My SQL面试题",prefix:"06-MySQL面试题/",collapsible:!0,children:["6.MySQL面试题A","6.MySQL面试题"]},{text:"07 Redis面试题",prefix:"07-Redis面试题/",collapsible:!0,children:["7.Redis面试题","7.Redis面试题A","7.Redis面试题B"]},{text:"08 数据结构面试题",prefix:"08-数据结构面试题/",collapsible:!0,children:["8.数据结构面试题"]},{text:"09 MQ面试题",prefix:"09-MQ面试题/",collapsible:!0,children:["RabbitMQ面试题A"]},{text:"10 分布式",prefix:"10-分布式/",collapsible:!0,children:["分布式"]},{text:"A基础",prefix:"A基础/",collapsible:!0,children:["1.序列化与反序列化","1.补充- FST框架使用","2.不可变类","3.Exception和Error的区别","3.扩展-异常处理注意点","4.Java的优势","5.什么是Java的多态","6.Java中的参数传递是按值还是按引用","7.Java 不支持多重继承","7.Java不支持多重继承","8.Java面向对象和面向过程编程的区别","9.Java方法重载和重写之间的区别","10.Java内部类及作用","11.Java8新特性","12.JDK和JRE区别","13.你使用过哪些JDK工具","/Interview/Java/A%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","15.Java中的hashCode和equals方法之间有什么关系","16.什么是Java中的动态代理","17.JDK动态代理和CGLIB动态代理有什么区别","18.接口和抽象类有什么区别"]},{text:"B中等",prefix:"B中等/",collapsible:!0,children:["1.Java中String、StringBuffer和StringBuilder的区别","2.Java中volatile关键字的作用"]},{text:"热点面试题",prefix:"热点面试题/",collapsible:!0,children:["热点面试题"]}]},{text:"My SQL",prefix:"MySQL/",collapsible:!0,children:["MySQL高频60","MySQL高频60-优化版","MySQL面渣84","MySQL黑马23"]},{text:"Sanfene",prefix:"sanfene/",collapsible:!0,children:["Java基础","Java线程","Java集合框架","jvm","linux","mybatis","mysql","netty","redis","rocketmq","spring","分布式","微服务","os","network","设计模式"]},{text:"Spring",prefix:"Spring/",collapsible:!0,children:["Spring 实例化 Bean 的四种方式","Spring面试题41","Spring面试题分析及总结"]},{text:"SQL刷题",prefix:"SQL刷题/",collapsible:!0,children:["626.换座位","175.组合两个表","176.第二高的薪水","177.第N高的薪水","178.分数排名","180.连续出现的数字","181.超过经理收入的员工","182.查找重复的电子邮箱","183.从不订购的客户","184.部门工资最高的员工","185.部门工资前三高的所有员工","196.删除重复的电子邮箱","197.上升的温度","262.行程和用户","511.游戏玩法分析 I","550.游戏玩法分析 IV","570.至少有5名直接下属的经理","577.员工奖金","584.寻找用户推荐人","585.2016年的投资","586.订单最多的客户","595.大的国家","596.超过 5 名学生的课","601.体育馆的人流量","602.好友申请 II ：谁有最多的好友","607.销售员","608.树节点","610.判断三角形","619.只出现一次的最大数字","620.有趣的电影"]},{text:"算法",prefix:"算法/",collapsible:!0,children:[{text:"力扣",prefix:"力扣/",collapsible:!0,children:[{text:"字符串",prefix:"字符串/",collapsible:!0,children:["784.字母大小写全排列","344.反转字符串","415.字符串相加","541.反转字符串 II"]}]}]},{text:"面试准备",prefix:"面试准备/",collapsible:!0,children:["京东面试题准备"]},{text:"面试答题卡",prefix:"面试答题卡/",collapsible:!0,icon:"fa-solid fa-file-pen",children:["",{text:"Git",prefix:"Git/",collapsible:!0,children:["Merge VS Rebase"]},{text:"Java",prefix:"Java/",collapsible:!0,children:["PriorityQueue","AQS（AbstractQueuedSynchronizer）详解","ConcurrentHashMap 的 put 操作中 CAS 和 synchronized 的使用","ConcurrentHashMap 详解","CopyOnWriteArrayList 详解","synchronized 详解","volatile 详解","什么是回调地狱","代理模式（Proxy Pattern）","内存屏障（Memory Barrier）详解","根据业务场景选择线程池参数","字符串拼接与性能优化","适配器模式（Adapter Pattern）","锁的状态详解（偏向锁 → 轻量级锁 → 重量级锁）","hashCode() 与 equals() 的关系","为什么 ArrayList 不是线程安全的","Java_多态_设计模式","String vs StringBuffer vs StringBuilder","依赖倒置原则（DIP）","最少知识原则（LoD）","开放封闭原则（OCP）","接口隔离原则（ISP）","LSP 设计原则反例","Java注解原理","Java 中的深拷贝实现方式","单一职责原则（SRP）","面向对象设计原则（SOLID 及相关）","CompletableFuture 使用详解"]},{text:"JVM",prefix:"JVM/",collapsible:!0,children:["JVM 类加载与类初始化详解","双亲委派模型","垃圾回收算法哪些阶段会stop the world","垃圾回收器 CMS 与 G1 的区别详解"]},{text:"Linux",prefix:"Linux/",collapsible:!0,children:["Linux 的软链接与硬链接"]},{text:"My SQL",prefix:"MySQL/",collapsible:!0,children:["锁详解"]},{text:"OS",prefix:"OS/",collapsible:!0,children:["用户态与内核态切换详解"]},{text:"Spring",prefix:"Spring/",collapsible:!0,children:["Spring 三级缓存解决循环依赖详解"]},{text:"数据结构",prefix:"数据结构/",collapsible:!0,children:["什么是跳表"]}]},{text:"面试记录",prefix:"面试记录/",collapsible:!0,children:["面试题记录","中电金信"]},{text:"黑马 Java2021",prefix:"黑马Java2021/",collapsible:!0,children:[{text:"01基础篇",prefix:"01基础篇/",collapsible:!0,children:["基础篇讲义"]},{text:"02并发篇",prefix:"02并发篇/",collapsible:!0,children:["并发篇讲义"]},{text:"03虚拟机",prefix:"03虚拟机/",collapsible:!0,children:["虚拟机篇讲义"]},{text:"04框架篇",prefix:"04框架篇/",collapsible:!0,children:["框架篇讲义"]}]},{text:"黑马 Java2023",prefix:"黑马Java2023/",collapsible:!0,children:[{text:"08并发编程",prefix:"08并发编程/",collapsible:!0,children:["",{text:"01基础知识",prefix:"01基础知识/",collapsible:!0,children:["1.线程和进程的区别","2.并行和并发有什么区别","3.创建线程的四种方式","4.runnable 和 callable 有什么区别","5.线程的 run()和 start()有什么区别","6.线程包括哪些状态，状态之间是如何变化的","7.新建 T1、T2、T3 三个线程，如何保证它们按顺序执行","8.notify()和 notifyAll()有什么区别","9.在 java 中 wait 和 sleep 方法的不同","10. 如何停止一个正在运行的线程"]},{text:"02并发安全",prefix:"02并发安全/",collapsible:!0,children:["1.讲一下synchronized关键字的底层原理","2.synchronized关键字的底层原理-进阶","3.你谈谈 JMM（Java 内存模型）","4.CAS是什么（含乐观悲观锁）","5.请谈谈你对 volatile 的理解","6.什么是AQS","7.什么是可重入锁","8.什么是自旋锁","9.ReentrantLock的实现原理","10.synchronized和Lock有什么区别","11.死锁产生的条件","12.如何进行死锁判断","12.聊一下ConcurrentHashMap ","13.导致并发程序出现问题的根本原因是什么"]}]}]}],"/SSM/":["",{text:"01 Spring笔记",prefix:"01-Spring笔记/",collapsible:!0,children:[{text:"AOP",prefix:"AOP/",collapsible:!0,children:["基于注解的 AOP 日志切面","性能监控切面","日志切面排除路径","入参处理切面"]},{text:"Spring Day01",prefix:"spring_day01/",collapsible:!0,children:["Spring_day01"]},{text:"Spring Day02",prefix:"spring_day02/",collapsible:!0,children:["Spring_day02"]},{text:"Spring Day03",prefix:"spring_day03/",collapsible:!0,children:["Spring_day03"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["Spring注解","Spring随笔"]}]},{text:"02 Spring MVC笔记",prefix:"02-SpringMVC笔记/",collapsible:!0,children:[{text:"Spring MVC Day01",prefix:"SpringMVC_day01/",collapsible:!0,children:["SpringMVC_day01"]},{text:"Spring MVC Day02",prefix:"SpringMVC_day02/",collapsible:!0,children:["SpringMVC_day02"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["SpringMVC注解","SpringMVC随笔"]}]},{text:"03 Maven高级笔记",prefix:"03-Maven高级笔记/",collapsible:!0,children:["Maven高级","POM文件帮助文档",{text:"随笔",prefix:"随笔/",collapsible:!0,children:["packaging类型","pom中的relativePath"]}]},{text:"04 Spring Boot笔记",prefix:"04-SpringBoot笔记/",collapsible:!0,children:["SpringBoot"]},{text:"05 Mybatisplus笔记",prefix:"05-Mybatisplus笔记/",collapsible:!0,children:["MyBatisPlus"]}]}},32878:(s,i,a)=>{a.d(i,{P:()=>n});const n={Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}}},s=>{s.O(0,[53586,12710],(()=>s(s.s=38731))),s.O()}]);