"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8408],{66262:(a,e)=>{e.A=(a,e)=>{const l=a.__vccOpts||a;for(const[a,n]of e)l[a]=n;return l}},92159:(a,e,l)=>{l.r(e),l.d(e,{comp:()=>t,data:()=>r});var n=l(20641);const i=l.p+"assets/img/1.ea43247d.png",h={},t=(0,l(66262).A)(h,[["render",function(a,e){return(0,n.uX)(),(0,n.CE)("div",null,e[0]||(e[0]=[(0,n.Fv)('<h1 id="_3-本地方法栈" tabindex="-1"><a class="header-anchor" href="#_3-本地方法栈"><span>3. 本地方法栈</span></a></h1><figure><img src="'+i+'" alt="本地方法栈" tabindex="0" loading="lazy"><figcaption>本地方法栈</figcaption></figure><h2 id="_3-1-作用" tabindex="-1"><a class="header-anchor" href="#_3-1-作用"><span>3.1 作用</span></a></h2><p>本地方法栈用于执行本地方法（由 C、C++ 等编写），通过 Java Native Interface（JNI）与 Java 程序交互，主要用于与底层系统进行交互。</p><h2 id="_3-2-与-java-虚拟机栈的区别" tabindex="-1"><a class="header-anchor" href="#_3-2-与-java-虚拟机栈的区别"><span>3.2 与 Java 虚拟机栈的区别</span></a></h2><ul><li>虚拟机栈用于执行 Java 方法，而本地方法栈用于执行本地方法。</li></ul><h2 id="_3-3-栈帧结构" tabindex="-1"><a class="header-anchor" href="#_3-3-栈帧结构"><span>3.3 栈帧结构</span></a></h2><ul><li>本地方法栈的栈帧结构与虚拟机栈类似，但栈帧中包含本地方法的特定信息，如参数和返回值。</li></ul><h2 id="_3-4-栈大小限制" tabindex="-1"><a class="header-anchor" href="#_3-4-栈大小限制"><span>3.4 栈大小限制</span></a></h2><ul><li>本地方法栈通常较小，因为本地方法的调用相对简单。</li></ul><h2 id="_3-5-安全性考虑" tabindex="-1"><a class="header-anchor" href="#_3-5-安全性考虑"><span>3.5 安全性考虑</span></a></h2><ul><li>本地方法栈的安全性需要开发人员注意，因本地方法由本地代码编写，JVM 无法直接控制。</li></ul>',12)]))}]]),r=JSON.parse('{"path":"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html","title":"3. 本地方法栈","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"3.1 作用","slug":"_3-1-作用","link":"#_3-1-作用","children":[]},{"level":2,"title":"3.2 与 Java 虚拟机栈的区别","slug":"_3-2-与-java-虚拟机栈的区别","link":"#_3-2-与-java-虚拟机栈的区别","children":[]},{"level":2,"title":"3.3 栈帧结构","slug":"_3-3-栈帧结构","link":"#_3-3-栈帧结构","children":[]},{"level":2,"title":"3.4 栈大小限制","slug":"_3-4-栈大小限制","link":"#_3-4-栈大小限制","children":[]},{"level":2,"title":"3.5 安全性考虑","slug":"_3-5-安全性考虑","link":"#_3-5-安全性考虑","children":[]}],"readingTime":{"minutes":0.69,"words":208},"filePathRelative":"JVM/2.内存结构/2.3本地方法栈.md","excerpt":"\\n<figure><figcaption>本地方法栈</figcaption></figure>\\n<h2>3.1 作用</h2>\\n<p>本地方法栈用于执行本地方法（由 C、C++ 等编写），通过 Java Native Interface（JNI）与 Java 程序交互，主要用于与底层系统进行交互。</p>\\n<h2>3.2 与 Java 虚拟机栈的区别</h2>\\n<ul>\\n<li>虚拟机栈用于执行 Java 方法，而本地方法栈用于执行本地方法。</li>\\n</ul>\\n<h2>3.3 栈帧结构</h2>\\n<ul>\\n<li>本地方法栈的栈帧结构与虚拟机栈类似，但栈帧中包含本地方法的特定信息，如参数和返回值。</li>\\n</ul>"}')}}]);