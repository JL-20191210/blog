"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[96177],{66262:(s,n)=>{n.A=(s,n)=>{const i=s.__vccOpts||s;for(const[s,a]of n)i[s]=a;return i}},54640:(s,n,i)=>{i.r(n),i.d(n,{comp:()=>l,data:()=>p});var a=i(20641);const e={},l=(0,i(66262).A)(e,[["render",function(s,n){return(0,a.uX)(),(0,a.CE)("div",null,n[0]||(n[0]=[(0,a.Fv)('<h1 id="_610-判断三角形" tabindex="-1"><a class="header-anchor" href="#_610-判断三角形"><span><a href="https://leetcode.cn/problems/triangle-judgement/" target="_blank" rel="noopener noreferrer">610. 判断三角形</a></span></a></h1><blockquote><p>表: <code>Triangle</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| Column Name | Type |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>| x           | int  |</span></span>\n<span class="line"><span>| y           | int  |</span></span>\n<span class="line"><span>| z           | int  |</span></span>\n<span class="line"><span>+-------------+------+</span></span>\n<span class="line"><span>在 SQL 中，(x, y, z)是该表的主键列。</span></span>\n<span class="line"><span>该表的每一行包含三个线段的长度。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对每三个线段报告它们是否可以形成一个三角形。</p><p>以 <strong>任意顺序</strong> 返回结果表。</p><p>查询结果格式如下所示。</p><p><strong>示例 1:</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>输入: </span></span>\n<span class="line"><span>Triangle 表:</span></span>\n<span class="line"><span>+----+----+----+</span></span>\n<span class="line"><span>| x  | y  | z  |</span></span>\n<span class="line"><span>+----+----+----+</span></span>\n<span class="line"><span>| 13 | 15 | 30 |</span></span>\n<span class="line"><span>| 10 | 20 | 15 |</span></span>\n<span class="line"><span>+----+----+----+</span></span>\n<span class="line"><span>输出: </span></span>\n<span class="line"><span>+----+----+----+----------+</span></span>\n<span class="line"><span>| x  | y  | z  | triangle |</span></span>\n<span class="line"><span>+----+----+----+----------+</span></span>\n<span class="line"><span>| 13 | 15 | 30 | No       |</span></span>\n<span class="line"><span>| 10 | 20 | 15 | Yes      |</span></span>\n<span class="line"><span>+----+----+----+----------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># Write your MySQL query </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">statement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> below</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x, y, z,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">       CASE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            WHEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x+y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">z </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x+z </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">y </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y+z</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Yes&#39;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            ELSE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;No&#39;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">       END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;triangle&#39;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Triangle;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3)]))}]]),p=JSON.parse('{"path":"/Interview/SQL%E5%88%B7%E9%A2%98/610.%E5%88%A4%E6%96%AD%E4%B8%89%E8%A7%92%E5%BD%A2.html","title":"610. 判断三角形","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":0.51,"words":152},"filePathRelative":"Interview/SQL刷题/610.判断三角形.md","excerpt":"\\n<blockquote>\\n<p>表: <code>Triangle</code></p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>+-------------+------+</span></span>\\n<span class=\\"line\\"><span>| Column Name | Type |</span></span>\\n<span class=\\"line\\"><span>+-------------+------+</span></span>\\n<span class=\\"line\\"><span>| x           | int  |</span></span>\\n<span class=\\"line\\"><span>| y           | int  |</span></span>\\n<span class=\\"line\\"><span>| z           | int  |</span></span>\\n<span class=\\"line\\"><span>+-------------+------+</span></span>\\n<span class=\\"line\\"><span>在 SQL 中，(x, y, z)是该表的主键列。</span></span>\\n<span class=\\"line\\"><span>该表的每一行包含三个线段的长度。</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>对每三个线段报告它们是否可以形成一个三角形。</p>\\n<p>以 <strong>任意顺序</strong> 返回结果表。</p>\\n<p>查询结果格式如下所示。</p>\\n<p><strong>示例 1:</strong></p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>输入: </span></span>\\n<span class=\\"line\\"><span>Triangle 表:</span></span>\\n<span class=\\"line\\"><span>+----+----+----+</span></span>\\n<span class=\\"line\\"><span>| x  | y  | z  |</span></span>\\n<span class=\\"line\\"><span>+----+----+----+</span></span>\\n<span class=\\"line\\"><span>| 13 | 15 | 30 |</span></span>\\n<span class=\\"line\\"><span>| 10 | 20 | 15 |</span></span>\\n<span class=\\"line\\"><span>+----+----+----+</span></span>\\n<span class=\\"line\\"><span>输出: </span></span>\\n<span class=\\"line\\"><span>+----+----+----+----------+</span></span>\\n<span class=\\"line\\"><span>| x  | y  | z  | triangle |</span></span>\\n<span class=\\"line\\"><span>+----+----+----+----------+</span></span>\\n<span class=\\"line\\"><span>| 13 | 15 | 30 | No       |</span></span>\\n<span class=\\"line\\"><span>| 10 | 20 | 15 | Yes      |</span></span>\\n<span class=\\"line\\"><span>+----+----+----+----------+</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></blockquote>"}')}}]);