"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8720],{66262:(a,i)=>{i.A=(a,i)=>{const l=a.__vccOpts||a;for(const[a,n]of i)l[a]=n;return l}},95663:(a,i,l)=>{l.r(i),l.d(i,{comp:()=>o,data:()=>r});var n=l(20641);const e=l.p+"assets/img/174101568298434.c961fe55.png",t={},o=(0,l(66262).A)(t,[["render",function(a,i){return(0,n.uX)(),(0,n.CE)("div",null,i[0]||(i[0]=[(0,n.Fv)('<ol><li><h3 id="你谈谈-jmm-java-内存模型" tabindex="-1"><a class="header-anchor" href="#你谈谈-jmm-java-内存模型"><span>你谈谈 JMM（Java 内存模型）</span></a></h3></li></ol><blockquote><p>难易程度：☆☆☆</p><p>出现频率：☆☆☆</p></blockquote><div class="hint-container important"><p class="hint-container-title">重要</p><p><strong>参考回答</strong></p><ul><li>JMM(Java Memory Model)Java内存模型，定义了共享内存中多线程程序读写操作的行为规范，通过这些规则来规范对内存的读写操作从而保证指令的正确性</li><li>JMM把内存分为两块，一块是私有线程的工作区域（工作内存），一块是所有线程的共享区域（主内存）</li><li>线程跟线程之间是相互隔离，线程跟线程交互需要通过主内存</li></ul></div><hr><p>JMM(Java Memory Model)Java内存模型,是java虚拟机规范中所定义的一种内存模型。</p><p>Java内存模型(Java Memory Model)描述了Java程序中各种变量(线程共享变量)的访问规则，以及在JVM中将变量存储到内存和从内存中读取变量这样的底层细节。</p><figure><img src="'+e+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>特点：</p><ol><li>所有的共享变量都存储于主内存(计算机的RAM)这里所说的变量指的是实例变量和类变量。不包含局部变量，因为局部变量是线程私有的，因此不存在竞争问题。</li><li>每一个线程还存在自己的工作内存，线程的工作内存，保留了被线程使用的变量的工作副本。</li><li>线程对变量的所有的操作(读，写)都必须在工作内存中完成，而不能直接读写主内存中的变量，不同线程之间也不能直接访问对方工作内存中的变量，线程间变量的值的传递需要通过主内存完成。</li></ol>',9)]))}]]),r=JSON.parse('{"path":"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/3.%E4%BD%A0%E8%B0%88%E8%B0%88%20JMM%EF%BC%88Java%20%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%89.html","title":"","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":1.41,"words":423},"filePathRelative":"Interview/黑马Java2023/08并发编程/02并发安全/3.你谈谈 JMM（Java 内存模型）.md","excerpt":"<ol>\\n<li>\\n<h3>你谈谈 JMM（Java 内存模型）</h3>\\n</li>\\n</ol>\\n<blockquote>\\n<p>难易程度：☆☆☆</p>\\n<p>出现频率：☆☆☆</p>\\n</blockquote>\\n<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<p><strong>参考回答</strong></p>\\n<ul>\\n<li>JMM(Java Memory Model)Java内存模型，定义了共享内存中多线程程序读写操作的行为规范，通过这些规则来规范对内存的读写操作从而保证指令的正确性</li>\\n<li>JMM把内存分为两块，一块是私有线程的工作区域（工作内存），一块是所有线程的共享区域（主内存）</li>\\n<li>线程跟线程之间是相互隔离，线程跟线程交互需要通过主内存</li>\\n</ul>\\n</div>"}')}}]);