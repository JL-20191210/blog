"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[28519],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},55496:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>l});var e=a(20641);const h={},t=(0,a(66262).A)(h,[["render",function(i,s){const a=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[s[2]||(s[2]=(0,e.Lk)("h1",{id:"🧨-4-1-jvm-常见-oom-错误类型与排查",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#🧨-4-1-jvm-常见-oom-错误类型与排查"},[(0,e.Lk)("span",null,"🧨 4.1 JVM 常见 OOM 错误类型与排查")])],-1)),s[3]||(s[3]=(0,e.Lk)("p",null,"OutOfMemoryError（OOM）是 JVM 中最致命的运行时错误之一，直接影响系统稳定性。不同类型的 OOM 指向 JVM 内部不同的内存区域。",-1)),s[4]||(s[4]=(0,e.Lk)("hr",null,null,-1)),(0,e.Q3)(" more "),s[5]||(s[5]=(0,e.Fv)('<h2 id="💥-oom-错误类型总览" tabindex="-1"><a class="header-anchor" href="#💥-oom-错误类型总览"><span>💥 OOM 错误类型总览</span></a></h2><table><thead><tr><th>错误类型</th><th>出现场景说明</th></tr></thead><tbody><tr><td>Java heap space</td><td>堆内存不足，常因对象过多/未及时回收</td></tr><tr><td>GC overhead limit exceeded</td><td>GC 时间占比过高（&gt;98%），几乎无可回收内存</td></tr><tr><td>Metaspace / PermGen space</td><td>类加载元数据空间不足（JDK 8 之前为 PermGen）</td></tr><tr><td>Direct buffer memory</td><td>直接内存溢出，如 NIO ByteBuffer 未释放</td></tr><tr><td>Requested array size exceeds VM limit</td><td>数组创建过大，如 <code>new int[Integer.MAX_VALUE]</code></td></tr><tr><td>Unable to create new native thread</td><td>本地线程数耗尽，无法分配新线程</td></tr></tbody></table><hr><h2 id="🧪-典型示例与重现" tabindex="-1"><a class="header-anchor" href="#🧪-典型示例与重现"><span>🧪 典型示例与重现</span></a></h2><h3 id="_1-java-heap-space" tabindex="-1"><a class="header-anchor" href="#_1-java-heap-space"><span>1. Java heap space</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">[]</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> list </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1024</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 每次申请1MB</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置：<code>-Xmx64m</code>，触发堆溢出</p><hr><h3 id="_2-gc-overhead-limit-exceeded" tabindex="-1"><a class="header-anchor" href="#_2-gc-overhead-limit-exceeded"><span>2. GC overhead limit exceeded</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> map </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">UUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">randomUUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;OOM&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>GC 超 98% 时间回收不到 2% 的堆，JVM 保护性抛出异常</p><hr><h3 id="_3-metaspace-jdk-8" tabindex="-1"><a class="header-anchor" href="#_3-metaspace-jdk-8"><span>3. Metaspace（JDK 8+）</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    ClassPool</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> pool </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ClassPool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    CtClass</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cc </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> pool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">makeClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">UUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">randomUUID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    cc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 动态生成类，导致元空间膨胀</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置：<code>-XX:MaxMetaspaceSize=64m</code></p><hr><h3 id="_4-direct-buffer-memory" tabindex="-1"><a class="header-anchor" href="#_4-direct-buffer-memory"><span>4. Direct buffer memory</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    ByteBuffer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> buffer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ByteBuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">allocateDirect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1024</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置：<code>-XX:MaxDirectMemorySize=64m</code></p><hr><h2 id="🔍-oom-问题排查方法" tabindex="-1"><a class="header-anchor" href="#🔍-oom-问题排查方法"><span>🔍 OOM 问题排查方法</span></a></h2><h3 id="✅-1-查看错误日志堆栈" tabindex="-1"><a class="header-anchor" href="#✅-1-查看错误日志堆栈"><span>✅ 1. 查看错误日志堆栈</span></a></h3><ul><li>明确是哪种 OOM 错误</li><li>查看异常类、代码位置、线程名</li></ul><h3 id="✅-2-使用堆转储文件分析" tabindex="-1"><a class="header-anchor" href="#✅-2-使用堆转储文件分析"><span>✅ 2. 使用堆转储文件分析</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-XX:+HeapDumpOnOutOfMemoryError</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-XX:HeapDumpPath</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=/path/to/dump.hprof</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用工具：<code>MAT</code>、<code>jvisualvm</code>、<code>GCEasy</code></p><h3 id="✅-3-分析-gc-日志" tabindex="-1"><a class="header-anchor" href="#✅-3-分析-gc-日志"><span>✅ 3. 分析 GC 日志</span></a></h3><p>结合 <code>-Xlog:gc*</code> 或 <code>-XX:+PrintGCDetails</code> 分析频繁 GC 情况</p><h3 id="✅-4-定位线程-类加载-直接内存问题" tabindex="-1"><a class="header-anchor" href="#✅-4-定位线程-类加载-直接内存问题"><span>✅ 4. 定位线程/类加载/直接内存问题</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -heap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -clstats</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jcmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">VM.native_memory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> summary</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">ulimit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 查看最大线程数限制</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🛡️-常见解决方案" tabindex="-1"><a class="header-anchor" href="#🛡️-常见解决方案"><span>🛡️ 常见解决方案</span></a></h2><table><thead><tr><th>类型</th><th>解决思路</th></tr></thead><tbody><tr><td>堆溢出</td><td>增加 <code>-Xmx</code>、优化缓存、排查内存泄漏</td></tr><tr><td>GC overhead</td><td>减少对象创建、调整 GC 策略/晋升规则</td></tr><tr><td>Metaspace</td><td>限制动态类生成（如 Spring CGLIB）</td></tr><tr><td>DirectMemory</td><td>限制 NIO 使用、添加主动释放逻辑</td></tr><tr><td>本地线程耗尽</td><td>降低线程池大小、提高 ulimit 配置</td></tr></tbody></table><hr><h2 id="📝-小结" tabindex="-1"><a class="header-anchor" href="#📝-小结"><span>📝 小结</span></a></h2><ul><li>OOM 错误来源多样，定位要结合日志、dump 文件、GC 行为分析</li><li>主动开启堆转储与 NMT 是生产系统的必备保障</li><li>代码中谨慎处理对象生命周期、动态类、线程与缓冲区</li></ul><hr>',37)),(0,e.Lk)("p",null,[s[1]||(s[1]=(0,e.eW)("👉 下一篇推荐：")),(0,e.bF)(a,{to:"/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.2%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%20Java%20%E5%A0%86%E8%BD%AC%E5%82%A8%E6%96%87%E4%BB%B6%EF%BC%88hprof%EF%BC%89.html"},{default:(0,e.k6)((()=>s[0]||(s[0]=[(0,e.eW)("4.2 如何分析 Java 堆转储文件（hprof）")]))),_:1})])])}]]),l=JSON.parse('{"path":"/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/4.%20JVM%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E4%B8%8E%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/4.1JVM%E5%B8%B8%E8%A7%81%20OOM%20%E9%94%99%E8%AF%AF%E7%B1%BB%E5%9E%8B%E4%B8%8E%E6%8E%92%E6%9F%A5.html","title":"4.1 JVM 常见 OOM 错误类型与排查","lang":"zh-CN","frontmatter":{"title":"4.1 JVM 常见 OOM 错误类型与排查","icon":"fa-solid fa-bug","date":"2025-07-10T00:00:00.000Z","author":"JeanHu","category":["JVM"],"tag":["JVM","OOM","排查","内存泄漏"],"summary":"本文梳理了 JVM 中常见的 OOM（OutOfMemoryError）错误类型，结合实际案例详解内存溢出的成因、诊断工具与排查思路，帮助开发者高效定位内存问题。","gitInclude":[]},"headers":[{"level":2,"title":"💥 OOM 错误类型总览","slug":"💥-oom-错误类型总览","link":"#💥-oom-错误类型总览","children":[]},{"level":2,"title":"🧪 典型示例与重现","slug":"🧪-典型示例与重现","link":"#🧪-典型示例与重现","children":[{"level":3,"title":"1. Java heap space","slug":"_1-java-heap-space","link":"#_1-java-heap-space","children":[]},{"level":3,"title":"2. GC overhead limit exceeded","slug":"_2-gc-overhead-limit-exceeded","link":"#_2-gc-overhead-limit-exceeded","children":[]},{"level":3,"title":"3. Metaspace（JDK 8+）","slug":"_3-metaspace-jdk-8","link":"#_3-metaspace-jdk-8","children":[]},{"level":3,"title":"4. Direct buffer memory","slug":"_4-direct-buffer-memory","link":"#_4-direct-buffer-memory","children":[]}]},{"level":2,"title":"🔍 OOM 问题排查方法","slug":"🔍-oom-问题排查方法","link":"#🔍-oom-问题排查方法","children":[{"level":3,"title":"✅ 1. 查看错误日志堆栈","slug":"✅-1-查看错误日志堆栈","link":"#✅-1-查看错误日志堆栈","children":[]},{"level":3,"title":"✅ 2. 使用堆转储文件分析","slug":"✅-2-使用堆转储文件分析","link":"#✅-2-使用堆转储文件分析","children":[]},{"level":3,"title":"✅ 3. 分析 GC 日志","slug":"✅-3-分析-gc-日志","link":"#✅-3-分析-gc-日志","children":[]},{"level":3,"title":"✅ 4. 定位线程/类加载/直接内存问题","slug":"✅-4-定位线程-类加载-直接内存问题","link":"#✅-4-定位线程-类加载-直接内存问题","children":[]}]},{"level":2,"title":"🛡️ 常见解决方案","slug":"🛡️-常见解决方案","link":"#🛡️-常见解决方案","children":[]},{"level":2,"title":"📝 小结","slug":"📝-小结","link":"#📝-小结","children":[]}],"readingTime":{"minutes":2.35,"words":704},"filePathRelative":"JVM/一命速通/4. JVM性能调优与监控工具/4.1JVM常见 OOM 错误类型与排查.md","localizedDate":"2025年7月10日","excerpt":"\\n<p>OutOfMemoryError（OOM）是 JVM 中最致命的运行时错误之一，直接影响系统稳定性。不同类型的 OOM 指向 JVM 内部不同的内存区域。</p>\\n<hr>\\n"}')}}]);