"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[93686],{66262:(e,o)=>{o.A=(e,o)=>{const t=e.__vccOpts||e;for(const[e,c]of o)t[e]=c;return t}},43019:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>r,data:()=>i});var c=t(20641);const n={},r=(0,t(66262).A)(n,[["render",function(e,o){return(0,c.uX)(),(0,c.CE)("div",null,[o[0]||(o[0]=(0,c.Fv)('<h1 id="_3-java-中-exception-和-error-有什么区别" tabindex="-1"><a class="header-anchor" href="#_3-java-中-exception-和-error-有什么区别"><span>3.Java 中 Exception 和 Error 有什么区别？</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>定义</strong></p></div><blockquote><p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p><ul><li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li><li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误。</li></ul></blockquote>',3)),(0,c.Q3)(" more "),o[1]||(o[1]=(0,c.Fv)('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>处理方式</p></div><blockquote><ul><li><strong>Exception</strong>：可以通过 <code>try-catch</code> 语句进行捕获和处理，程序可以恢复运行。</li><li><strong>Error</strong>：不建议捕获，通常意味着无法恢复的错误（如内存溢出、JVM崩溃等）。</li></ul></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>举例</p></div><blockquote><p>Exception：</p><ul><li><p>常见子类有：<code> IOException</code> 、<code> SQLException</code> 、 <code>NullPointerException</code> 、 <code>IndexOutOfBoundsException</code> 等。</p></li><li><p>Exception 分为 <code>Checked Exception</code>（编译期异常）和<code> Unchecked Exception</code>（运行时异常）。</p><ul><li><code>Checked Exception</code>：在编译时必须显式处理（如使用 try-catch 块或通过 throws 声明抛出）。如 IOException 。</li><li><code> Unchecked Exception</code>：运行时异常，继承自<code> RuntimeException</code> 。不需要显式捕获。 常见的如 <code>NullPointerException </code>、 <code>IllegalArgumentException</code> 等，</li></ul></li></ul><p>Error：</p><ul><li>例如内存耗尽（ <code>OutOfMemoryError</code> ）、栈溢出 （ <code>StackOverflowError</code> ）</li></ul></blockquote>',4))])}]]),i=JSON.parse('{"path":"/Interview/Java/01%E5%9F%BA%E7%A1%80/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"3.Java 中 Exception 和 Error 有什么区别？","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-java","date":"2025-01-08T00:00:00.000Z","category":["Java"],"tag":["必背"],"gitInclude":[]},"headers":[],"readingTime":{"minutes":0.89,"words":266},"filePathRelative":"Interview/Java/01基础/3.Exception和Error的区别.md","localizedDate":"2025年1月8日","excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p><strong>定义</strong></p>\\n</div>\\n<blockquote>\\n<p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p>\\n<ul>\\n<li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li>\\n<li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误。</li>\\n</ul>\\n</blockquote>\\n"}')}}]);