"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2299],{66262:(e,i)=>{i.A=(e,i)=>{const n=e.__vccOpts||e;for(const[e,s]of i)n[e]=s;return n}},60678:(e,i,n)=>{n.r(i),n.d(i,{comp:()=>r,data:()=>a});var s=n(20641);const l={},r=(0,n(66262).A)(l,[["render",function(e,i){return(0,s.uX)(),(0,s.CE)("div",null,i[0]||(i[0]=[(0,s.Fv)('<h1 id="特权模式运行容器" tabindex="-1"><a class="header-anchor" href="#特权模式运行容器"><span>特权模式运行容器</span></a></h1><p><code>docker run --privileged</code> 是 Docker 命令中的一个选项，用于以特权模式运行容器。下面是对该选项的总结：</p><h3 id="特权模式概述" tabindex="-1"><a class="header-anchor" href="#特权模式概述"><span>特权模式概述</span></a></h3><ul><li><strong>权限提升</strong>: 使用 <code>--privileged</code> 运行的容器将拥有更多的系统权限，几乎可以访问宿主机的所有设备和功能。这意味着容器可以执行一些通常被限制的操作，例如直接访问硬件设备、修改系统设置等。</li></ul><h3 id="主要功能" tabindex="-1"><a class="header-anchor" href="#主要功能"><span>主要功能</span></a></h3><ol><li><p><strong>访问宿主机设备</strong>: 特权容器可以访问和使用宿主机的所有设备，而不仅仅是 Docker 默认允许的设备。</p></li><li><p><strong>执行系统调用</strong>: 特权容器可以执行一些需要更高权限的系统调用，例如修改网络配置、挂载文件系统等。</p></li><li><p><strong>运行 Docker</strong>: 在特权模式下，容器内部可以运行 Docker 守护进程，从而使其能够创建和管理其他容器。</p></li></ol><h3 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h3><ul><li><strong>需要硬件访问的应用</strong>: 例如，某些需要直接访问 USB 设备或其他硬件的应用。</li><li><strong>系统管理工具</strong>: 运行一些需要对宿主机进行管理的工具或脚本。</li><li><strong>开发和测试</strong>: 在开发和测试阶段，可能需要临时提升权限以验证某些功能。</li></ul><h3 id="安全性考虑" tabindex="-1"><a class="header-anchor" href="#安全性考虑"><span>安全性考虑</span></a></h3><ul><li><strong>安全风险</strong>: 由于特权容器拥有几乎所有的宿主机访问权限，使用 <code>--privileged</code> 选项可能会带来安全风险。恶意代码可以利用这些权限进行攻击。</li><li><strong>最小化使用</strong>: 建议仅在确实需要的情况下使用特权模式，且应尽量限制此类容器的使用和访问。</li></ul><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --privileged</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上述命令将启动一个 Ubuntu 容器，并以特权模式运行。用户可以在这个容器中执行需要更高权限的操作。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>使用 <code>docker run --privileged</code> 选项可以让容器获得更高的权限，但同时也带来了安全风险。应谨慎使用，并确保在安全的环境中运行。</p>',15)]))}]]),a=JSON.parse('{"path":"/Docker/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html","title":"特权模式运行容器","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":3,"title":"特权模式概述","slug":"特权模式概述","link":"#特权模式概述","children":[]},{"level":3,"title":"主要功能","slug":"主要功能","link":"#主要功能","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"安全性考虑","slug":"安全性考虑","link":"#安全性考虑","children":[]},{"level":3,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":1.79,"words":536},"filePathRelative":"Docker/特权模式.md","excerpt":"\\n<p><code>docker run --privileged</code> 是 Docker 命令中的一个选项，用于以特权模式运行容器。下面是对该选项的总结：</p>\\n<h3>特权模式概述</h3>\\n<ul>\\n<li><strong>权限提升</strong>: 使用 <code>--privileged</code> 运行的容器将拥有更多的系统权限，几乎可以访问宿主机的所有设备和功能。这意味着容器可以执行一些通常被限制的操作，例如直接访问硬件设备、修改系统设置等。</li>\\n</ul>\\n<h3>主要功能</h3>\\n<ol>\\n<li>\\n<p><strong>访问宿主机设备</strong>: 特权容器可以访问和使用宿主机的所有设备，而不仅仅是 Docker 默认允许的设备。</p>\\n</li>\\n<li>\\n<p><strong>执行系统调用</strong>: 特权容器可以执行一些需要更高权限的系统调用，例如修改网络配置、挂载文件系统等。</p>\\n</li>\\n<li>\\n<p><strong>运行 Docker</strong>: 在特权模式下，容器内部可以运行 Docker 守护进程，从而使其能够创建和管理其他容器。</p>\\n</li>\\n</ol>"}')}}]);