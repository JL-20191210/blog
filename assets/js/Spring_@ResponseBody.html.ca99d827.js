"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[649],{6262:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,n]of i)a[s]=n;return a}},7173:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>e,data:()=>t});var n=a(641);const l={},e=(0,a(6262).A)(l,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,[i[0]||(i[0]=(0,n.Lk)("h1",{id:"responsebody",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#responsebody"},[(0,n.Lk)("span",null,"@ResponseBody")])],-1)),i[1]||(i[1]=(0,n.Lk)("blockquote",null,[(0,n.Lk)("p",null,"使用在使用在控制层（controller）的方法上。"),(0,n.Lk)("p",null,[(0,n.eW)("是组成"),(0,n.Lk)("code",null,"@RestController"),(0,n.eW)("的分子")])],-1)),(0,n.Q3)(" more "),i[2]||(i[2]=(0,n.Fv)('<h3 id="_1-实现" tabindex="-1"><a class="header-anchor" href="#_1-实现"><span>1. 实现</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.lang.annotation.Documented</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.lang.annotation.ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.lang.annotation.Retention</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.lang.annotation.RetentionPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.lang.annotation.Target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Target</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">METHOD</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Retention</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">RetentionPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">RUNTIME</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Documented</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;"> ResponseBody</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>作用范围：类，接口，枚举类。方法</li><li>生命周期：始终不会丢弃</li></ul><h3 id="_2-作用" tabindex="-1"><a class="header-anchor" href="#_2-作用"><span>2. <strong>作用</strong></span></a></h3><p>将方法返回值用特定格式写到response的body区域，将数据返回给客户端</p><ol><li>若没有写@ResponseBody，底层会将方法返回值封装为ModelAndView对象</li><li>若返回值为字符串，则直接写到客户端</li><li>若返回值为对象，则转为JSON串后写到客户端</li></ol>',6))])}]]),t=JSON.parse('{"path":"/Spring/@ResponseBody.html","title":"@ResponseBody","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-11-14T00:00:00.000Z","category":["Spring"],"tag":["注解"],"gitInclude":[]},"headers":[{"level":3,"title":"1. 实现","slug":"_1-实现","link":"#_1-实现","children":[]},{"level":3,"title":"2. 作用","slug":"_2-作用","link":"#_2-作用","children":[]}],"readingTime":{"minutes":0.56,"words":168},"filePathRelative":"Spring/@ResponseBody.md","localizedDate":"2024年11月14日","excerpt":"\\n<blockquote>\\n<p>使用在使用在控制层（controller）的方法上。</p>\\n<p>是组成<code>@RestController</code>的分子</p>\\n</blockquote>\\n"}')}}]);