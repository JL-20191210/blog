"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[637],{66262:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,l]of i)a[s]=l;return a}},81290:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>h,data:()=>t});var l=a(20641);const n={},h=(0,a(66262).A)(n,[["render",function(s,i){return(0,l.uX)(),(0,l.CE)("div",null,i[0]||(i[0]=[(0,l.Fv)('<h1 id="mybatis-批量插入数据的三种实现方式" tabindex="-1"><a class="header-anchor" href="#mybatis-批量插入数据的三种实现方式"><span>MyBatis 批量插入数据的三种实现方式</span></a></h1><p>在日常开发中，批量插入数据是一个常见的场景。如果处理不当，可能会导致性能低下甚至数据库压力过大。MyBatis 提供了多种方式来实现批量插入，下面我们总结三种常见方式，并对比它们的优缺点及适用场景。</p><hr><h2 id="_1-foreach-拼接多值-insert" tabindex="-1"><a class="header-anchor" href="#_1-foreach-拼接多值-insert"><span>1. Foreach 拼接多值 INSERT</span></a></h2><p>最常见的方式是利用 MyBatis 的动态 SQL，将多条数据拼接成一条 <code>INSERT</code> 语句：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">insert</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;insertBatch&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> parameterType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;list&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  INSERT INTO user (id, name, age)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  VALUES</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">foreach</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;list&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;item&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> separator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;,&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    (#{item.id}, #{item.name}, #{item.age})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用时传入 <code>List&lt;User&gt;</code>，MyBatis 会拼接成：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> user (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, age)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Tom&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Jerry&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">22</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Jack&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>优点</strong>：</p><ul><li>一次 SQL 插入多条数据，性能比单条循环插入高。</li><li>简单易用，代码可读性好。</li></ul><p><strong>缺点</strong>：</p><ul><li>当批量数据过大时，SQL 语句过长，可能超出数据库包大小限制。</li><li>不适合百万级大数据批量插入。</li></ul><p><strong>适用场景</strong>：</p><ul><li>中小规模批量插入（几百到几千条）。</li></ul><hr><h2 id="_2-executortype-batch-jdbc-批处理模式" tabindex="-1"><a class="header-anchor" href="#_2-executortype-batch-jdbc-批处理模式"><span>2. ExecutorType.BATCH（JDBC 批处理模式）</span></a></h2><p>MyBatis 提供 <code>ExecutorType.BATCH</code>，它基于 JDBC 批处理，将多条 <code>INSERT</code> 语句缓存后一次性发送给数据库：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SqlSession</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sqlSession </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> sqlSessionFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ExecutorType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BATCH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    UserMapper</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> mapper </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> sqlSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">UserMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> user </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> userList) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        mapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 普通的 insert 方法</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    sqlSession</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>优点</strong>：</p><ul><li>避免 SQL 拼接过长的问题。</li><li>大幅减少网络交互次数，性能更优。</li><li>更适合海量数据写入。</li></ul><p><strong>缺点</strong>：</p><ul><li>事务需要手动管理。</li><li>代码实现比 Foreach 略复杂。</li></ul><p><strong>适用场景</strong>：</p><ul><li>大规模批量插入（几万、几十万条）。</li></ul><hr><h2 id="_3-mybatis-plus-的-savebatch" tabindex="-1"><a class="header-anchor" href="#_3-mybatis-plus-的-savebatch"><span>3. MyBatis-Plus 的 saveBatch</span></a></h2><p>如果使用 <strong>MyBatis-Plus</strong>，它已经封装了批量插入方法：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">userService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">saveBatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(userList, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 每 1000 条提交一次事务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>优点</strong>：</p><ul><li>框架封装，开发效率高。</li><li>内部支持分批提交，避免 OOM 或 SQL 过长。</li><li>简单易用，代码量少。</li></ul><p><strong>缺点</strong>：</p><ul><li>依赖于 MyBatis-Plus，不是 MyBatis 原生特性。</li></ul><p><strong>适用场景</strong>：</p><ul><li>常规业务开发，批量插入数据量适中。</li></ul><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li><strong>少量数据（几百到几千条）</strong> → <code>foreach</code> 拼接多值 <code>INSERT</code></li><li><strong>大量数据（几万到几十万条）</strong> → <code>ExecutorType.BATCH</code>（JDBC 批处理）</li><li><strong>使用 MyBatis-Plus</strong> → 直接调用 <code>saveBatch</code>，简单高效</li></ul><p>在实际项目中，我们可以根据业务数据量、数据库特性以及团队技术栈，灵活选择不同的批量插入方式，以达到最佳的性能与可维护性。</p>',38)]))}]]),t=JSON.parse('{"path":"/Mybatis/Mybatis/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%96%B9%E5%BC%8F.html","title":"MyBatis 批量插入数据的三种实现方式","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"1. Foreach 拼接多值 INSERT","slug":"_1-foreach-拼接多值-insert","link":"#_1-foreach-拼接多值-insert","children":[]},{"level":2,"title":"2. ExecutorType.BATCH（JDBC 批处理模式）","slug":"_2-executortype-batch-jdbc-批处理模式","link":"#_2-executortype-batch-jdbc-批处理模式","children":[]},{"level":2,"title":"3. MyBatis-Plus 的 saveBatch","slug":"_3-mybatis-plus-的-savebatch","link":"#_3-mybatis-plus-的-savebatch","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":2.04,"words":613},"filePathRelative":"Mybatis/Mybatis/批量插入方式.md","excerpt":"\\n<p>在日常开发中，批量插入数据是一个常见的场景。如果处理不当，可能会导致性能低下甚至数据库压力过大。MyBatis 提供了多种方式来实现批量插入，下面我们总结三种常见方式，并对比它们的优缺点及适用场景。</p>\\n<hr>\\n<h2>1. Foreach 拼接多值 INSERT</h2>\\n<p>最常见的方式是利用 MyBatis 的动态 SQL，将多条数据拼接成一条 <code>INSERT</code> 语句：</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"xml\\" data-title=\\"xml\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">insert</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> id</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"insertBatch\\"</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> parameterType</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"list\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  INSERT INTO user (id, name, age)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  VALUES</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  &lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">foreach</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> collection</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"list\\"</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> item</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"item\\"</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> separator</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\",\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    (#{item.id}, #{item.name}, #{item.age})</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  &lt;/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">foreach</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&lt;/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">insert</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}')}}]);