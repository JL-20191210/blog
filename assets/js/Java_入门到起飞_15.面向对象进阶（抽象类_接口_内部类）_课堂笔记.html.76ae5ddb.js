"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6683],{66262:(l,i)=>{i.A=(l,i)=>{const a=l.__vccOpts||l;for(const[l,e]of i)a[l]=e;return a}},64823:(l,i,a)=>{a.r(i),a.d(i,{comp:()=>s,data:()=>t});var e=a(20641);const n={},s=(0,a(66262).A)(n,[["render",function(l,i){return(0,e.uX)(),(0,e.CE)("div",null,i[0]||(i[0]=[(0,e.Fv)('<h1 id="课堂笔记" tabindex="-1"><a class="header-anchor" href="#课堂笔记"><span>课堂笔记</span></a></h1><h2 id="_1-抽象类的作用是什么样的" tabindex="-1"><a class="header-anchor" href="#_1-抽象类的作用是什么样的"><span>1.抽象类的作用是什么样的？</span></a></h2><ul><li>抽取共性时，无法确定方法体，就把方法定义为抽象的。</li><li>强制让子类按照某种格式重写。</li><li>抽象方法所在的类，必须是抽象类。</li></ul><h2 id="_2-抽象类和抽象方法的格式" tabindex="-1"><a class="header-anchor" href="#_2-抽象类和抽象方法的格式"><span>2.抽象类和抽象方法的格式？</span></a></h2><ul><li><code>public abstract 返回值类型 方法名（参数列表);</code></li><li>``public abstract class 类名{}`</li></ul><h2 id="_3-继承抽象类有哪些要注意" tabindex="-1"><a class="header-anchor" href="#_3-继承抽象类有哪些要注意"><span>3.继承抽象类有哪些要注意？</span></a></h2><ul><li>要么重写抽象类中的所有抽象方法</li><li>要么是抽象类</li></ul><h2 id="_4-接口和类之间的关系" tabindex="-1"><a class="header-anchor" href="#_4-接口和类之间的关系"><span>4.接口和类之间的关系</span></a></h2><ul><li><p>类和类的关系 继承关系，只能单继承，不能多继承，但是可以多层继承</p></li><li><p>类和接口的关系 实现关系，可以单实现，也可以多实现，还可以在继承一个类的同时实玑多个接口</p></li><li><p>接口和接口的关系 继承关系，可以单继承，也可以多继承</p><blockquote><p>亲爹（继承）只有一个。义父（接口）可以有多个</p></blockquote></li></ul>',9)]))}]]),t=JSON.parse('{"path":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","title":"课堂笔记","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"1.抽象类的作用是什么样的？","slug":"_1-抽象类的作用是什么样的","link":"#_1-抽象类的作用是什么样的","children":[]},{"level":2,"title":"2.抽象类和抽象方法的格式？","slug":"_2-抽象类和抽象方法的格式","link":"#_2-抽象类和抽象方法的格式","children":[]},{"level":2,"title":"3.继承抽象类有哪些要注意？","slug":"_3-继承抽象类有哪些要注意","link":"#_3-继承抽象类有哪些要注意","children":[]},{"level":2,"title":"4.接口和类之间的关系","slug":"_4-接口和类之间的关系","link":"#_4-接口和类之间的关系","children":[]}],"readingTime":{"minutes":0.82,"words":247},"filePathRelative":"Java/入门到起飞/15.面向对象进阶（抽象类&接口&内部类）/课堂笔记.md","excerpt":"\\n<h2>1.抽象类的作用是什么样的？</h2>\\n<ul>\\n<li>抽取共性时，无法确定方法体，就把方法定义为抽象的。</li>\\n<li>强制让子类按照某种格式重写。</li>\\n<li>抽象方法所在的类，必须是抽象类。</li>\\n</ul>\\n<h2>2.抽象类和抽象方法的格式？</h2>\\n<ul>\\n<li><code>public abstract 返回值类型 方法名（参数列表);</code></li>\\n<li>``public abstract class 类名{}`</li>\\n</ul>\\n<h2>3.继承抽象类有哪些要注意？</h2>\\n<ul>\\n<li>要么重写抽象类中的所有抽象方法</li>\\n<li>要么是抽象类</li>\\n</ul>"}')}}]);