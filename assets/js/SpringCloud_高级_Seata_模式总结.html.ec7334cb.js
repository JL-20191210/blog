"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1906],{66262:(p,n)=>{n.A=(p,n)=>{const t=p.__vccOpts||p;for(const[p,e]of n)t[p]=e;return t}},19682:(p,n,t)=>{t.r(n),t.d(n,{comp:()=>r,data:()=>c});var e=t(20641);const a={},r=(0,t(66262).A)(a,[["render",function(p,n){return(0,e.uX)(),(0,e.CE)("div",null,n[0]||(n[0]=[(0,e.Fv)('<h1 id="模式总结" tabindex="-1"><a class="header-anchor" href="#模式总结"><span>模式总结</span></a></h1><p>XA DB锁</p><p>AT 全局锁 要用undo_log和lock_table两个表（用的多）</p><p>TCC：预授权。不用加锁。性能最好。不依赖于数据库事务，可以用于非事务型数据库。缺点：要写代码（有代码侵入）</p><p>TCC三阶段：try-&gt;confirm-&gt;cancel</p><p>幂等性：</p><p>空回滚：没冻结金额但是要回滚（try卡了结果先执行了cancel）</p><p>业务悬挂：已经空回滚了，卡住的try又执行了，结果没后续尬在那了(先执行了cancel结果try又运行了)</p><p>注解加在谁头上谁是try</p><p>TCC写代码思路</p><p>saga：没有隔离性（大多数用不到）</p><p>同步我大概知道什么时候执行，异步我不知道</p><p>ACID四个的意思</p>',13)]))}]]),c=JSON.parse('{"path":"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html","title":"模式总结","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"SpringCloud/高级/Seata/模式总结.md","excerpt":"\\n<p>XA DB锁</p>\\n<p>AT 全局锁 要用undo_log和lock_table两个表（用的多）</p>\\n<p>TCC：预授权。不用加锁。性能最好。不依赖于数据库事务，可以用于非事务型数据库。缺点：要写代码（有代码侵入）</p>\\n<p>TCC三阶段：try-&gt;confirm-&gt;cancel</p>\\n<p>幂等性：</p>\\n<p>空回滚：没冻结金额但是要回滚（try卡了结果先执行了cancel）</p>\\n<p>业务悬挂：已经空回滚了，卡住的try又执行了，结果没后续尬在那了(先执行了cancel结果try又运行了)</p>\\n<p>注解加在谁头上谁是try</p>\\n<p>TCC写代码思路</p>"}')}}]);