"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4822],{66262:(i,r)=>{r.A=(i,r)=>{const n=i.__vccOpts||i;for(const[i,t]of r)n[i]=t;return n}},87008:(i,r,n)=>{n.r(r),n.d(r,{comp:()=>l,data:()=>a});var t=n(20641);const e={},l=(0,n(66262).A)(e,[["render",function(i,r){return(0,t.uX)(),(0,t.CE)("div",null,r[0]||(r[0]=[(0,t.Fv)('<h1 id="_1-java中string、stringbuffer和stringbuilder的区别是什么" tabindex="-1"><a class="header-anchor" href="#_1-java中string、stringbuffer和stringbuilder的区别是什么"><span>1.Java中String、StringBuffer和StringBuilder的区别是什么？</span></a></h1><div class="hint-container note"><p class="hint-container-title">注</p><p>它们都是Java中处理字符串的类，区别主要体现在<strong>可变性</strong>、<strong>线程安全性</strong>和<strong>性能</strong>上：</p></div><h2 id="_1-string" tabindex="-1"><a class="header-anchor" href="#_1-string"><span>1)String</span></a></h2><ul><li>不可变:String是不可变类，字符串一旦创建，其内容无法更改。每次对String进行修改操作（如拼接、截取等），都会创建新的String对象。</li><li>适合场景：String适用于字符串内容不会频繁变化的场景，例如少量的字符串拼接操作或字符串常量。</li></ul><h2 id="_2-stringbuffer" tabindex="-1"><a class="header-anchor" href="#_2-stringbuffer"><span>2)StringBuffer</span></a></h2><ul><li>可变：StringBuffer是可变的，可以进行字符串的追加、删除、插入等操作。</li><li>线程安全：StringBuffer是线程安全的，内部使用了synchronized关键字来保证多线程环境下的安全性。</li><li>适合场景：StringBuffer适用于在多线程环境中需要频繁修改字符串的场景。</li></ul><h2 id="_3-stringbuilder" tabindex="-1"><a class="header-anchor" href="#_3-stringbuilder"><span>3)StringBuilder</span></a></h2><ul><li>可变：StringBuilder 也是可变的，提供了与StringBuffer类似的操作接口。</li><li>非线程安全：StringBuilder不保证线程安全，性能比StringBuffer更高。</li><li>适合场景：StringBuilder适用于单线程环境中需要大量修改字符串的场景，如高频拼接操作。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li>String:不可变，适合少量字符串操作。</li><li>StringBuffer:可变且线程安全，适合多线程环境中的频繁字符串修改.</li><li>StringBuilder:可变且非线程安全，适合单线程环境中的高性能字符串处理。</li></ul>',10)]))}]]),a=JSON.parse('{"path":"/Interview/Java/%E4%B8%AD%E7%AD%89/1.Java%E4%B8%ADString%E3%80%81StringBuffer%E5%92%8CStringBuilder%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"1.Java中String、StringBuffer和StringBuilder的区别是什么？","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"1)String","slug":"_1-string","link":"#_1-string","children":[]},{"level":2,"title":"2)StringBuffer","slug":"_2-stringbuffer","link":"#_2-stringbuffer","children":[]},{"level":2,"title":"3)StringBuilder","slug":"_3-stringbuilder","link":"#_3-stringbuilder","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":1.2,"words":361},"filePathRelative":"Interview/Java/中等/1.Java中String、StringBuffer和StringBuilder的区别.md","excerpt":"\\n<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">注</p>\\n<p>它们都是Java中处理字符串的类，区别主要体现在<strong>可变性</strong>、<strong>线程安全性</strong>和<strong>性能</strong>上：</p>\\n</div>\\n<h2>1)String</h2>\\n<ul>\\n<li>不可变:String是不可变类，字符串一旦创建，其内容无法更改。每次对String进行修改操作（如拼接、截取等），都会创建新的String对象。</li>\\n<li>适合场景：String适用于字符串内容不会频繁变化的场景，例如少量的字符串拼接操作或字符串常量。</li>\\n</ul>"}')}}]);