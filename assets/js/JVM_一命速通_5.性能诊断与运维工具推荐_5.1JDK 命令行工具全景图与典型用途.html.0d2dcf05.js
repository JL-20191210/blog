"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[54902],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},40491:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>h});var e=a(20641);const t={},l=(0,a(66262).A)(t,[["render",function(i,s){const a=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[s[2]||(s[2]=(0,e.Lk)("h1",{id:"🛠️-5-1-jdk-命令行工具全景图与典型用途",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#🛠️-5-1-jdk-命令行工具全景图与典型用途"},[(0,e.Lk)("span",null,"🛠️ 5.1 JDK 命令行工具全景图与典型用途")])],-1)),s[3]||(s[3]=(0,e.Lk)("p",null,"Java 开发和运维过程中，JDK 自带的命令行工具是定位性能瓶颈、诊断内存问题、排查线程死锁的利器。掌握这些工具能大幅提升排查效率和准确度。",-1)),s[4]||(s[4]=(0,e.Lk)("hr",null,null,-1)),(0,e.Q3)(" more "),s[5]||(s[5]=(0,e.Fv)('<h2 id="📌-主要工具一览" tabindex="-1"><a class="header-anchor" href="#📌-主要工具一览"><span>📌 主要工具一览</span></a></h2><table><thead><tr><th>工具名</th><th>功能简介</th><th>典型用途</th></tr></thead><tbody><tr><td><code>jps</code></td><td>Java 进程快照</td><td>查看当前 JVM 进程列表</td></tr><tr><td><code>jstack</code></td><td>打印线程栈快照</td><td>线程死锁检测、线程状态分析</td></tr><tr><td><code>jmap</code></td><td>堆内存快照、统计信息</td><td>堆转储、对象统计、内存泄漏诊断</td></tr><tr><td><code>jcmd</code></td><td>统一的命令执行接口</td><td>触发 GC、堆转储、线程诊断等高级操作</td></tr><tr><td><code>jstat</code></td><td>JVM 运行状态统计</td><td>GC 统计、编译统计、类加载统计</td></tr><tr><td><code>jinfo</code></td><td>JVM 配置信息查看</td><td>查看启动参数、系统属性</td></tr></tbody></table><hr><h2 id="🔍-典型使用示例" tabindex="-1"><a class="header-anchor" href="#🔍-典型使用示例"><span>🔍 典型使用示例</span></a></h2><h3 id="_1-查看所有-java-进程" tabindex="-1"><a class="header-anchor" href="#_1-查看所有-java-进程"><span>1. 查看所有 Java 进程</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-打印指定进程线程栈" tabindex="-1"><a class="header-anchor" href="#_2-打印指定进程线程栈"><span>2. 打印指定进程线程栈</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jstack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt; &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">threaddump.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-生成堆转储文件" tabindex="-1"><a class="header-anchor" href="#_3-生成堆转储文件"><span>3. 生成堆转储文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dump:format=b,file=heapdump.hprof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-触发垃圾回收" tabindex="-1"><a class="header-anchor" href="#_4-触发垃圾回收"><span>4. 触发垃圾回收</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jcmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">GC.run</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-监控-gc-活动" tabindex="-1"><a class="header-anchor" href="#_5-监控-gc-活动"><span>5. 监控 GC 活动</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -gc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_6-查看-jvm-参数" tabindex="-1"><a class="header-anchor" href="#_6-查看-jvm-参数"><span>6. 查看 JVM 参数</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jinfo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -flags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="⚙️-高级命令与组合" tabindex="-1"><a class="header-anchor" href="#⚙️-高级命令与组合"><span>⚙️ 高级命令与组合</span></a></h2><ul><li>利用 <code>jcmd</code> 执行多个诊断命令，支持脚本化运维。</li><li>结合 <code>grep</code>、<code>awk</code> 等 Linux 工具快速筛选关键日志。</li><li>在生产环境中推荐配合 JMX 和 Java Mission Control 远程调试。</li></ul><hr><h2 id="📝-小结" tabindex="-1"><a class="header-anchor" href="#📝-小结"><span>📝 小结</span></a></h2><ul><li>熟练掌握 JDK 命令行工具是 Java 性能诊断的基础。</li><li>日常运维中，<code>jstack</code> 和 <code>jmap</code> 是最常用工具。</li><li><code>jcmd</code> 统一接口极大简化诊断流程，推荐重点学习。</li><li>结合日志分析和堆转储，能有效定位大多数性能和内存问题。</li></ul><hr>',23)),(0,e.Lk)("p",null,[s[1]||(s[1]=(0,e.eW)("👉 下一篇推荐：")),(0,e.bF)(a,{to:"/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.2%E4%BD%BF%E7%94%A8%20Java%20Mission%20Control%EF%BC%88JMC%EF%BC%89%E8%BF%9B%E8%A1%8C%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.html"},{default:(0,e.k6)((()=>s[0]||(s[0]=[(0,e.eW)("5.2 使用 Java Mission Control（JMC）进行性能分析")]))),_:1})])])}]]),h=JSON.parse('{"path":"/JVM/%E4%B8%80%E5%91%BD%E9%80%9F%E9%80%9A/5.%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/5.1JDK%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E5%85%A8%E6%99%AF%E5%9B%BE%E4%B8%8E%E5%85%B8%E5%9E%8B%E7%94%A8%E9%80%94.html","title":"5.1 JDK 命令行工具全景图与典型用途","lang":"zh-CN","frontmatter":{"title":"5.1 JDK 命令行工具全景图与典型用途","icon":"fa-solid fa-terminal","date":"2025-07-10T00:00:00.000Z","author":"JeanHu","category":["JVM","工具"],"tag":["JDK","命令行工具","性能分析","诊断"],"summary":"本文全面梳理了常用 JDK 命令行工具的功能与典型使用场景，涵盖 jps、jstack、jmap、jstat、jcmd 等，助力开发者高效诊断和优化 Java 应用。","gitInclude":[]},"headers":[{"level":2,"title":"📌 主要工具一览","slug":"📌-主要工具一览","link":"#📌-主要工具一览","children":[]},{"level":2,"title":"🔍 典型使用示例","slug":"🔍-典型使用示例","link":"#🔍-典型使用示例","children":[{"level":3,"title":"1. 查看所有 Java 进程","slug":"_1-查看所有-java-进程","link":"#_1-查看所有-java-进程","children":[]},{"level":3,"title":"2. 打印指定进程线程栈","slug":"_2-打印指定进程线程栈","link":"#_2-打印指定进程线程栈","children":[]},{"level":3,"title":"3. 生成堆转储文件","slug":"_3-生成堆转储文件","link":"#_3-生成堆转储文件","children":[]},{"level":3,"title":"4. 触发垃圾回收","slug":"_4-触发垃圾回收","link":"#_4-触发垃圾回收","children":[]},{"level":3,"title":"5. 监控 GC 活动","slug":"_5-监控-gc-活动","link":"#_5-监控-gc-活动","children":[]},{"level":3,"title":"6. 查看 JVM 参数","slug":"_6-查看-jvm-参数","link":"#_6-查看-jvm-参数","children":[]}]},{"level":2,"title":"⚙️ 高级命令与组合","slug":"⚙️-高级命令与组合","link":"#⚙️-高级命令与组合","children":[]},{"level":2,"title":"📝 小结","slug":"📝-小结","link":"#📝-小结","children":[]}],"readingTime":{"minutes":1.85,"words":556},"filePathRelative":"JVM/一命速通/5.性能诊断与运维工具推荐/5.1JDK 命令行工具全景图与典型用途.md","localizedDate":"2025年7月10日","excerpt":"\\n<p>Java 开发和运维过程中，JDK 自带的命令行工具是定位性能瓶颈、诊断内存问题、排查线程死锁的利器。掌握这些工具能大幅提升排查效率和准确度。</p>\\n<hr>\\n"}')}}]);