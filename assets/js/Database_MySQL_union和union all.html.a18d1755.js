"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4940],{6262:(i,t)=>{t.A=(i,t)=>{const e=i.__vccOpts||i;for(const[i,s]of t)e[i]=s;return e}},4332:(i,t,e)=>{e.r(t),e.d(t,{comp:()=>l,data:()=>n});var s=e(641);const a={},l=(0,e(6262).A)(a,[["render",function(i,t){return(0,s.uX)(),(0,s.CE)("div",null,[t[0]||(t[0]=(0,s.Lk)("h1",{id:"union-和-union-all",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#union-和-union-all"},[(0,s.Lk)("span",null,[(0,s.Lk)("code",null,"UNION"),(0,s.eW)(" 和 "),(0,s.Lk)("code",null,"UNION ALL")])])],-1)),t[1]||(t[1]=(0,s.Lk)("blockquote",null,[(0,s.Lk)("p",null,[(0,s.Lk)("code",null,"UNION"),(0,s.eW)(" 和 "),(0,s.Lk)("code",null,"UNION ALL"),(0,s.eW)(" 都是用于合并两个或多个 "),(0,s.Lk)("code",null,"SELECT"),(0,s.eW)(" 语句的结果集，但它们之间有以下区别：")])],-1)),(0,s.Q3)(" more "),t[2]||(t[2]=(0,s.Fv)('<h2 id="_1-去重" tabindex="-1"><a class="header-anchor" href="#_1-去重"><span>1. <strong>去重</strong></span></a></h2><ul><li><strong><code>UNION</code></strong>：会对结果集进行去重，合并后的结果集中不会包含重复的行。这意味着它在合并结果集之后，会执行一个额外的排序操作来移除重复数据。</li><li><strong><code>UNION ALL</code></strong>：不会去重，直接合并所有结果集，包括重复的行。因此，它比 <code>UNION</code> 快，因为它不需要做去重操作。</li></ul><h2 id="_2-性能" tabindex="-1"><a class="header-anchor" href="#_2-性能"><span>2. <strong>性能</strong></span></a></h2><ul><li><strong><code>UNION</code></strong>：由于有去重操作，性能相对较低。数据库在合并结果集之后还需要排序并删除重复的记录，尤其在结果集较大时，性能开销明显。</li><li><strong><code>UNION ALL</code></strong>：没有去重操作，性能更好，尤其在合并大数据集时，<code>UNION ALL</code> 的速度明显快于 <code>UNION</code>。</li></ul><h2 id="_3-使用场景" tabindex="-1"><a class="header-anchor" href="#_3-使用场景"><span>3. <strong>使用场景</strong></span></a></h2><ul><li><strong><code>UNION</code></strong>：适用于你明确知道合并的结果集中可能存在重复值，并且希望去除这些重复行的场景。</li><li><strong><code>UNION ALL</code></strong>：适用于你确定数据集没有重复行，或者即使有重复行也不需要去重的场景。通常在追求更高的性能时，使用 <code>UNION ALL</code> 更为合适。</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>假设有两个表 <code>table1</code> 和 <code>table2</code>，分别包含以下数据：</p><p><strong><code>table1</code></strong>：</p><table><thead><tr><th>id</th><th>name</th></tr></thead><tbody><tr><td>1</td><td>Alice</td></tr><tr><td>2</td><td>Bob</td></tr></tbody></table><p><strong><code>table2</code></strong>：</p><table><thead><tr><th>id</th><th>name</th></tr></thead><tbody><tr><td>2</td><td>Bob</td></tr><tr><td>3</td><td>Carol</td></tr></tbody></table><h3 id="使用-union" tabindex="-1"><a class="header-anchor" href="#使用-union"><span>使用 <code>UNION</code>：</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UNION</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table2;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><table><thead><tr><th>id</th><th>name</th></tr></thead><tbody><tr><td>1</td><td>Alice</td></tr><tr><td>2</td><td>Bob</td></tr><tr><td>3</td><td>Carol</td></tr></tbody></table><p>（<strong>去重</strong>，只保留了一行 <code>id = 2, name = Bob</code>）</p><h3 id="使用-union-all" tabindex="-1"><a class="header-anchor" href="#使用-union-all"><span>使用 <code>UNION ALL</code>：</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UNION ALL</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table2;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><table><thead><tr><th>id</th><th>name</th></tr></thead><tbody><tr><td>1</td><td>Alice</td></tr><tr><td>2</td><td>Bob</td></tr><tr><td>2</td><td>Bob</td></tr><tr><td>3</td><td>Carol</td></tr></tbody></table><p>（<strong>不去重</strong>，两个 <code>Bob</code> 都保留）</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li><strong><code>UNION</code></strong> 去重，性能稍慢，适合需要唯一结果的情况。</li><li><strong><code>UNION ALL</code></strong> 不去重，性能较快，适合不需要唯一性的情况。</li></ul>',24))])}]]),n=JSON.parse('{"path":"/Database/MySQL/union%E5%92%8Cunion%20all.html","title":"UNION 和 UNION ALL","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-10-17T00:00:00.000Z","category":["MySQL"],"tag":["基础"],"gitInclude":[]},"headers":[{"level":2,"title":"1. 去重","slug":"_1-去重","link":"#_1-去重","children":[]},{"level":2,"title":"2. 性能","slug":"_2-性能","link":"#_2-性能","children":[]},{"level":2,"title":"3. 使用场景","slug":"_3-使用场景","link":"#_3-使用场景","children":[{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"使用 UNION：","slug":"使用-union","link":"#使用-union","children":[]},{"level":3,"title":"使用 UNION ALL：","slug":"使用-union-all","link":"#使用-union-all","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":1.6,"words":479},"filePathRelative":"Database/MySQL/union和union all.md","localizedDate":"2024年10月17日","excerpt":"\\n<blockquote>\\n<p><code>UNION</code> 和 <code>UNION ALL</code> 都是用于合并两个或多个 <code>SELECT</code> 语句的结果集，但它们之间有以下区别：</p>\\n</blockquote>\\n"}')}}]);