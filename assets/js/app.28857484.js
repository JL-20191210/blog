"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3524],{1709:(i,s,a)=>{a.d(s,{l:()=>n});const n={category:{"/":{path:"/category/",map:{docker:{path:"/category/docker/",indexes:[0]},MySQL:{path:"/category/mysql/",indexes:[1,2,3]},Netty:{path:"/category/netty/",indexes:[4,5,6,7]},Nginx:{path:"/category/nginx/",indexes:[8]},Redis:{path:"/category/redis/",indexes:[9]},Spring:{path:"/category/spring/",indexes:[10]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[11,12,13,14,15]},指南:{path:"/category/%E6%8C%87%E5%8D%97/",indexes:[16]},樱桃:{path:"/category/%E6%A8%B1%E6%A1%83/",indexes:[17]},火龙果:{path:"/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",indexes:[18]},水果:{path:"/category/%E6%B0%B4%E6%9E%9C/",indexes:[19,18,20,21,22,23]},草莓:{path:"/category/%E8%8D%89%E8%8E%93/",indexes:[19]},蔬菜:{path:"/category/%E8%94%AC%E8%8F%9C/",indexes:[24]},Java:{path:"/category/java/",indexes:[25,26,27,28,29,30,31,32]},苹果:{path:"/category/%E8%8B%B9%E6%9E%9C/",indexes:[22,23,33,34]},香蕉:{path:"/category/%E9%A6%99%E8%95%89/",indexes:[35,36,20,21]}}}},tag:{"/":{path:"/tag/",map:{经验:{path:"/tag/%E7%BB%8F%E9%AA%8C/",indexes:[0,1,2]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",indexes:[3]},教程:{path:"/tag/%E6%95%99%E7%A8%8B/",indexes:[4,5,6,7,9]},error:{path:"/tag/error/",indexes:[8]},总结:{path:"/tag/%E6%80%BB%E7%BB%93/",indexes:[10]},禁用:{path:"/tag/%E7%A6%81%E7%94%A8/",indexes:[13]},加密:{path:"/tag/%E5%8A%A0%E5%AF%86/",indexes:[14]},布局:{path:"/tag/%E5%B8%83%E5%B1%80/",indexes:[16]},Markdown:{path:"/tag/markdown/",indexes:[15]},页面配置:{path:"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[11]},使用指南:{path:"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[11]},红:{path:"/tag/%E7%BA%A2/",indexes:[24,19,18,17,22,23,33,34]},小:{path:"/tag/%E5%B0%8F/",indexes:[19,17]},圆:{path:"/tag/%E5%9C%86/",indexes:[24,17,22,23,33,34]},大:{path:"/tag/%E5%A4%A7/",indexes:[18,22,23,33,34]},Java8特性:{path:"/tag/java8%E7%89%B9%E6%80%A7/",indexes:[25,26,27,28,29,30,31,32]},黄:{path:"/tag/%E9%BB%84/",indexes:[35,36,20,21]},弯曲的:{path:"/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",indexes:[35,36,20,21]},长:{path:"/tag/%E9%95%BF/",indexes:[35,36,20,21]}}}}}},4776:(i,s,a)=>{a.d(s,{M:()=>n});const n=["/Docker/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html","/MySQL/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html","/MySQL/mysql%20-uroot%20-p%E6%8A%A5%E9%94%99.html","/MySQL/union%E5%92%8Cunion%20all.html","/Netty/NIO%20%E5%9F%BA%E7%A1%80.html","/Netty/Netty%20%E5%85%A5%E9%97%A8.html","/Netty/Netty%20%E8%BF%9B%E9%98%B6.html","/Netty/%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html","/Nginx/413%20(Request%20Entity%20Too%20Large).html","/Redis/%E5%9F%BA%E7%A1%80%E7%AF%87.html","/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html","/demo/page.html","/demo/","/demo/disable.html","/demo/encrypt.html","/demo/markdown.html","/demo/layout.html","/posts/cherry.html","/posts/dragonfruit.html","/posts/strawberry.html","/posts/banana/2.html","/posts/banana/1.html","/posts/apple/4.html","/posts/apple/3.html","/posts/tomato.html","/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html","/Java/String/isNotEmpty%E5%92%8CisNotBlank.html","/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html","/posts/apple/2.html","/posts/apple/1.html","/posts/banana/4.html","/posts/banana/3.html","/intro.html","/Java/","/Python/","/Python/%E5%9F%BA%E7%A1%80/video.html","/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"]},3781:(i,s,a)=>{a.d(s,{U:()=>n});const n={article:{"/":{path:"/article/",indexes:[24,11,0,1,2,3,4,5,6,7,8,9,10,25,26,27,28,29,30,31,32,19,18,17,35,36,20,21,22,23,33,34,37,38,39,12,13,14,16,15,40,41]}},star:{"/":{path:"/star/",indexes:[20,24,33,11]}},timeline:{"/":{path:"/timeline/",indexes:[0,1,2,3,4,5,6,7,8,9,10,25,26,27,28,29,30,31,32,24,19,18,17,35,36,20,21,22,23,33,34,11]}}}},7877:(i,s,a)=>{a.d(s,{B:()=>X});var n={};a.r(n);var e={};a.r(e);var t={};a.r(t),a.d(t,{default:()=>C});var l={};a.r(l);var h={};a.r(h),a.d(h,{default:()=>L});var p={};a.r(p),a.d(p,{default:()=>P});var r={};a.r(r),a.d(r,{default:()=>T});var k=a(2402),d=a(3073),o=a(596),B=a(8171),g=a(850),c=a(9403),A=a(3965),y=a(4404),E=a(8464),m=a(7239),v=a(1151),u=a(8831),F=a(7835),b=a(7469);const C={enhance:({app:i})=>{(0,k.L4)("Badge")||i.component("Badge",o.A),(0,k.L4)("BiliBili")||i.component("BiliBili",B.A),(0,k.L4)("CodePen")||i.component("CodePen",g.A),(0,k.L4)("FontIcon")||i.component("FontIcon",c.A),(0,k.L4)("PDF")||i.component("PDF",A.A),(0,k.L4)("Share")||i.component("Share",y.A),(0,k.L4)("SiteInfo")||i.component("SiteInfo",E.A),(0,k.L4)("StackBlitz")||i.component("StackBlitz",m.A),(0,k.L4)("VPBanner")||i.component("VPBanner",v.A),(0,k.L4)("VPCard")||i.component("VPCard",u.A),(0,k.L4)("VidStack")||i.component("VidStack",F.A),(0,k.L4)("XiGua")||i.component("XiGua",b.A)},setup:()=>{(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]};var f=a(6358),x=a(3827),D=a(355),w=a(1599),J=a(8913),q=a(457),S=a(3349),N=a(1781),I=a(9212);const L={enhance:({app:i})=>{i.component("CodeTabs",N.S),i.component("Tabs",I.t)}};var M=a(8031),O=a(3027);const P={enhance:({app:i})=>{i.component("CodeDemo",M.A),i.component("MdDemo",O.A)}};var j=a(5753),z=a(5054),H=a(783),V=a(8465),G=a(641),Q=a(7107),R=a(9920);(0,V.M_)((i=>{const s=i.t,a=!1!==i.I,n=i.i;return a?{title:s,content:n?()=>[(0,G.h)(H.GB,{icon:n}),s]:null,order:i.O,index:i.I}:null}));const T={enhance:({app:i,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...i)=>(await H.lE.wait(),a(...i)),(0,H.fk)(i),i.component("HopeIcon",H.GB),i.component("BloggerInfo",Q.tI),i.component("SocialMedias",Q.rS),i.component("GlobalEncrypt",R.J),i.component("LocalEncrypt",R.n)},setup:()=>{(0,H.PV)(),(0,H.i$)(),(0,Q.su)()},layouts:{Layout:H.PE,NotFound:H.Mk,BlogCategory:Q.Pn,BlogHome:Q.qX,BlogType:Q.z7,Timeline:Q.Kf}},X=[n,e,t,f,x,D,w,J,q,S,l,h,p,j,z,r].map((i=>i.default)).filter(Boolean)},8164:(i,s,a)=>{a.d(s,{J:()=>e,c:()=>n});const n=JSON.parse("{}"),e=Object.fromEntries([["/",{loader:()=>a.e(4470).then(a.bind(a,9908)),meta:{t:"主页",i:"home"}}],["/intro.html",{loader:()=>a.e(3912).then(a.bind(a,3155)),meta:{v:"/assets/images/cover3.jpg",e:"\n<p>将你的个人介绍和档案放置在此处。</p>\n",r:{minutes:.08,words:23},t:"介绍页",i:"circle-info",y:"a"}}],["/Docker/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html",{loader:()=>a.e(7485).then(a.bind(a,782)),meta:{d:17291232e5,l:"2024年10月17日",c:["docker"],g:["经验"],e:'\n<h2>问题</h2>\n<p>如果在启动Docker容器的过程中没有单独配置localtime，会造成Docker容器时间与主机时间不一致的情况，UTC和CST相差8小时，即容器时间与<a href="https://zhida.zhihu.com/search?q=%E5%8C%97%E4%BA%AC%E6%97%B6%E9%97%B4&amp;zhida_source=entity&amp;is_preview=1" target="_blank" rel="noopener noreferrer">北京时间</a>相差8个小时</p>\n<h2>解决方案</h2>\n<h3>1. 同步时间（常用）</h3>',r:{minutes:.97,words:292},t:"Docker容器与宿主机时间同步",i:"pen-to-square",y:"a"}}],["/Java/",{loader:()=>a.e(2947).then(a.bind(a,6411)),meta:{e:"\n",r:{minutes:.01,words:3},t:"Java总结",y:"a"}}],["/MySQL/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html",{loader:()=>a.e(1956).then(a.bind(a,1724)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["经验"],e:'\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">2003-Can’t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ‘XXX.XX.XX.XX’（10060）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.66,words:199},t:"Navicat连接mysql报错",i:"pen-to-square",y:"a"}}],["/MySQL/mysql%20-uroot%20-p%E6%8A%A5%E9%94%99.html",{loader:()=>a.e(5092).then(a.bind(a,6162)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["经验"],e:'\n<blockquote>\n<p>使用xshell登录MySQL时,<code>mysql -uroot -p</code>报错Can\'t connect to local MySQL server through socket \'/tmp/mysql.sock\'</p>\n</blockquote>\n<p><strong>修改my.conf配置文件（MySQL8.0）</strong></p>\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/mysql/mysql.conf.d</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mysqld.cnf</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.35,words:106},t:"mysql -uroot -p报错",i:"pen-to-square",y:"a"}}],["/MySQL/union%E5%92%8Cunion%20all.html",{loader:()=>a.e(9324).then(a.bind(a,6357)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["基础"],e:"\n<blockquote>\n<p><code>UNION</code> 和 <code>UNION ALL</code> 都是用于合并两个或多个 <code>SELECT</code> 语句的结果集，但它们之间有以下区别：</p>\n</blockquote>\n<h2>1. <strong>去重</strong></h2>\n<ul>\n<li><strong><code>UNION</code></strong>：会对结果集进行去重，合并后的结果集中不会包含重复的行。这意味着它在合并结果集之后，会执行一个额外的排序操作来移除重复数据。</li>\n<li><strong><code>UNION ALL</code></strong>：不会去重，直接合并所有结果集，包括重复的行。因此，它比 <code>UNION</code> 快，因为它不需要做去重操作。</li>\n</ul>",r:{minutes:1.59,words:478},t:"UNION 和 UNION ALL",i:"pen-to-square",y:"a"}}],["/Netty/NIO%20%E5%9F%BA%E7%A1%80.html",{loader:()=>a.e(7433).then(a.bind(a,1439)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:'\n<blockquote>\n<p>non-blocking io 非阻塞 IO</p>\n</blockquote>\n<h2>1. 三大组件</h2>\n<h3>1.1 Channel &amp; Buffer</h3>\n<p>channel 有一点类似于 stream，它就是读写数据的<strong>双向通道</strong>，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 channel，而之前的 stream 要么是输入，要么是输出，channel 比 stream 更为底层</p>\n<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">graph LR</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">channel --&gt; buffer</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">buffer --&gt; channel</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:32.18,words:9655},t:"NIO 基础",i:"pen-to-square",y:"a"}}],["/Netty/Netty%20%E5%85%A5%E9%97%A8.html",{loader:()=>a.e(7328).then(a.bind(a,3256)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:'\n<h2>1. 概述</h2>\n<h3>1.1 Netty 是什么？</h3>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Netty is an asynchronous event-driven network application framework</span></span>\n<span class="line"><span>for rapid development of maintainable high performance protocol servers &amp; clients.</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:30.62,words:9186},t:"Netty 入门",i:"pen-to-square",y:"a"}}],["/Netty/Netty%20%E8%BF%9B%E9%98%B6.html",{loader:()=>a.e(7664).then(a.bind(a,6340)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:'\n<h2>1. 粘包与半包</h2>\n<h3>1.1 粘包现象</h3>\n<p>服务端代码</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boss</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> worker</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ServerBootstrap</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ServerBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NioServerSocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(boss, worker);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">childHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ChannelInitializer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LoggingHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">LogLevel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DEBUG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ChannelInboundHandlerAdapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"connected {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"disconnect {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            });</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ChannelFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} binding..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} bound..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">closeFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"server error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            boss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"stoped"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:29.49,words:8848},t:"Netty 进阶",i:"pen-to-square",y:"a"}}],["/Netty/%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html",{loader:()=>a.e(2594).then(a.bind(a,6103)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:'\n<h2>1. 优化</h2>\n<h3>1.1 扩展序列化算法</h3>\n<p>序列化，反序列化主要用在消息正文的转换上</p>\n<ul>\n<li>序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要变成 byte[]）</li>\n<li>反序列化时，需要将传入的正文数据还原成 Java 对象，便于处理</li>\n</ul>\n<p>目前的代码仅支持 Java 自带的序列化，反序列化机制，核心代码如下</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 反序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] body </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[bodyLength]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">byteByf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(body);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ObjectInputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(body))</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> message </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (Message) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSequenceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(sequenceId);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ByteArrayOutputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> out </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(out)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] bytes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toByteArray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:21.44,words:6432},t:"优化与源码",i:"pen-to-square",y:"a"}}],["/Nginx/413%20(Request%20Entity%20Too%20Large).html",{loader:()=>a.e(8493).then(a.bind(a,6183)),meta:{d:17291232e5,l:"2024年10月17日",c:["Nginx"],g:["error"],e:'\n<blockquote>\n<p>上传文件时报错：请求实体过大</p>\n<p>修改Nginx服务器的请求实体大小限制</p>\n</blockquote>\n<h3>修改配置文件</h3>\n<blockquote>\n<p>vim /etc/nginx/conf.d/default.conf</p>\n</blockquote>\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">       80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  [::]:80;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  localhost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    #charset koi8-r;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    #access_log  /var/log/nginx/host.access.log  main;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 支持上传10M以内的实体</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    client_max_body_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 10M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    .....</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    .....</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.3,words:91},t:"413 (Request Entity Too Large)",i:"pen-to-square",y:"a"}}],["/Python/",{loader:()=>a.e(8585).then(a.bind(a,9587)),meta:{e:"\n",r:{minutes:.01,words:3},t:"Python总结",y:"a"}}],["/Redis/%E5%9F%BA%E7%A1%80%E7%AF%87.html",{loader:()=>a.e(1553).then(a.bind(a,2974)),meta:{d:17291232e5,l:"2024年10月17日",c:["Redis"],g:["教程"],e:'\n<h2>开篇导读</h2>\n<p><strong>理想课程</strong></p>\n<p>小伙伴们理想的课程一定是能够通过讲解的方式，得到如下这些启发，我们的课程会从基础到精通，从redis小白，到redis大牛，还在等什么，这套课程一定就是你最适合你的课程~</p>\n<figure><img src="http://81.70.62.114:19000/typora/202408301103873.png" alt="1652882458107" tabindex="0" loading="lazy"><figcaption>1652882458107</figcaption></figure>',r:{minutes:26.9,words:8069},t:"基础篇Redis",i:"pen-to-square",y:"a"}}],["/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html",{loader:()=>a.e(1622).then(a.bind(a,283)),meta:{d:17291232e5,l:"2024年10月17日",c:["Spring"],g:["总结"],e:"\n<h2>spring框架概述（Spring5.x）</h2>\n<ol>\n<li>spring是轻量级的开源的JavaEE框架</li>\n<li>spring可以解决企业应用开发的复杂性</li>\n<li>spring两大核心\n<ul>\n<li>IOC：控制反转。原先创建对象需程序员手写，现在交给spring来创建对象以及对象依赖的对象</li>\n<li>AOP：面向切面。不修改源代码进行功能增强。可以在调用方法前打印出进入方法的参数，以及退出方法时方法的返回结果，但并不是直接修改方法体。</li>\n</ul>\n</li>\n<li>spring特点\n<ul>\n<li>方便解耦，简化开发。</li>\n<li>AOP编程支持</li>\n<li>方便程序测试</li>\n<li>方便和其他框架进行整合</li>\n<li>方便进行事务操作</li>\n<li>降低API开发难度</li>\n</ul>\n</li>\n</ol>",r:{minutes:1.58,words:474},t:"Spring5.x概述",i:"pen-to-square",y:"a"}}],["/demo/",{loader:()=>a.e(3320).then(a.bind(a,5351)),meta:{c:["使用指南"],r:{minutes:.07,words:22},t:"主要功能与配置演示",i:"laptop-code",y:"a"}}],["/demo/disable.html",{loader:()=>a.e(2756).then(a.bind(a,4139)),meta:{c:["使用指南"],g:["禁用"],e:"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n",r:{minutes:.43,words:128},t:"布局与功能禁用",i:"gears",O:4,y:"a"}}],["/demo/encrypt.html",{loader:()=>a.e(2581).then(a.bind(a,1314)),meta:{c:["使用指南"],g:["加密"],n:!0,r:{minutes:.51,words:154},t:"密码加密的文章",i:"lock",y:"a"}}],["/demo/layout.html",{loader:()=>a.e(6216).then(a.bind(a,4087)),meta:{c:["指南"],g:["布局"],e:'<p>布局包括:</p>\n<ul>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/navbar.html" target="_blank" rel="noopener noreferrer">导航栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html" target="_blank" rel="noopener noreferrer">侧边栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/footer.html" target="_blank" rel="noopener noreferrer">页脚</a></li>\n</ul>',r:{minutes:.53,words:159},t:"布局",i:"object-group",O:2,y:"a"}}],["/demo/markdown.html",{loader:()=>a.e(8711).then(a.bind(a,6908)),meta:{c:["使用指南"],g:["Markdown"],e:"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n",r:{minutes:3.47,words:1041},t:"Markdown 展示",i:"fab fa-markdown",O:2,y:"a"}}],["/demo/page.html",{loader:()=>a.e(645).then(a.bind(a,5397)),meta:{a:"Ms.Hope",d:15778368e5,l:"2020年1月1日",c:["使用指南"],g:["页面配置","使用指南"],u:!0,v:"",e:"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n",r:{minutes:1.76,words:528},t:"页面配置",i:"file",O:3,y:"a"}}],["/posts/cherry.html",{loader:()=>a.e(2345).then(a.bind(a,7080)),meta:{d:16416864e5,l:"2022年1月9日",c:["樱桃"],g:["红","小","圆"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.11,words:33},t:"樱桃",i:"pen-to-square",y:"a"}}],["/posts/dragonfruit.html",{loader:()=>a.e(5853).then(a.bind(a,452)),meta:{d:16417728e5,l:"2022年1月10日",c:["火龙果","水果"],g:["红","大"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.12,words:36},t:"火龙果",i:"pen-to-square",y:"a"}}],["/posts/strawberry.html",{loader:()=>a.e(8461).then(a.bind(a,8165)),meta:{d:16418592e5,l:"2022年1月11日",c:["水果","草莓"],g:["红","小"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.11,words:34},t:"草莓",i:"pen-to-square",y:"a"}}],["/posts/tomato.html",{loader:()=>a.e(6218).then(a.bind(a,9239)),meta:{d:16419456e5,l:"2022年1月12日",c:["蔬菜"],g:["红","圆"],u:!0,v:"/assets/images/cover2.jpg",e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.13,words:38},t:"番茄",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html",{loader:()=>a.e(4724).then(a.bind(a,1667)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"<blockquote>\n<p>摘要\nlist中存储实例对象，将list中实例对象的两个属性提取出来组成一个新的map</p>\n</blockquote>\n",r:{minutes:7.03,words:2110},t:"Java Stream API",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html",{loader:()=>a.e(8554).then(a.bind(a,1559)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>OS：有一个抽象方法，方法体是传入的，参数也是传入的。类Vue插槽</p>\n",r:{minutes:5.14,words:1542},t:"函数式接口",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html",{loader:()=>a.e(6009).then(a.bind(a,4033)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>Java 8 是 Java 语言历史上一个具有里程碑意义的版本，它引入了一系列的新特性，使得 Java 语言更加现代化、简洁和强大。本文将深入探讨 Java 8 中的关键新特性，帮助你全面理解这些特性及其在实际开发中的应用。</p>\n",r:{minutes:3.72,words:1117},t:"深入理解 Java 8 新特性：从核心到实践",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html",{loader:()=>a.e(8924).then(a.bind(a,3130)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：月饼装箱还是装盒，装什么口味的，装了几个，能不能装在一起</p>\n</blockquote>\n",r:{minutes:3.51,words:1054},t:"深入理解 Java Collector",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html",{loader:()=>a.e(822).then(a.bind(a,3190)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>前言</h2>\n<blockquote>\n<p><code>Optional</code> 是 Java 8 引入的一个容器类，专门用于处理可能为 <code>null</code> 的值。它提供了一种优雅的方式来避免 <code>NullPointerException</code>（空指针异常）并简化对值的检查和处理。<code>Optional</code> 的使用鼓励开发者显式地处理可能为空的场景，从而使代码更加健壮和可读。</p>\n</blockquote>\n",r:{minutes:3.22,words:966},t:"optional类",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html",{loader:()=>a.e(3282).then(a.bind(a,5660)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：默认方法就是给原来抽象的方法写一个默认实现，类似默认值。静态方法不依赖接口实例及其参数，之际使用<code>接口名.方法名</code>的方式使用，适用于写工具方法</p>\n</blockquote>\n",r:{minutes:2.9,words:869},t:"深入理解 Java 中的默认方法和静态方法",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html",{loader:()=>a.e(7931).then(a.bind(a,5004)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：面粉放到传送带上，做成月饼，分出五仁和枣泥，打包变成月饼礼盒</p>\n</blockquote>\n",r:{minutes:3.42,words:1027},t:"深入理解 Stream API",i:"pen-to-square",y:"a"}}],["/Java/String/isNotEmpty%E5%92%8CisNotBlank.html",{loader:()=>a.e(5282).then(a.bind(a,2508)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<h2>主要区别</h2>\n<blockquote>\n<ul>\n<li><code>isNotEmpty</code> 非空：只检查字符串是否有长度（即不为零长度）。</li>\n<li><code>isNotBlank</code> 非空白：不仅检查长度，还检查字符串是否仅由空白字符（如空格、制表符、换行符）组成。</li>\n</ul>\n</blockquote>\n",r:{minutes:.25,words:76},t:"isNotEmpty和isNotBlank",i:"pen-to-square",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/video.html",{loader:()=>a.e(7963).then(a.bind(a,7206)),meta:{e:"\n",r:{minutes:.04,words:13},t:"YouTube 视频示例",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>a.e(879).then(a.bind(a,2694)),meta:{e:"\n<table>\n<thead>\n<tr>\n<th>数据结构</th>\n<th>是否有序</th>\n<th>是否可变类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>列表[]</td>\n<td>有</td>\n<td>可变类型</td>\n</tr>\n<tr>\n<td>元组()</td>\n<td>有</td>\n<td>不可变类型</td>\n</tr>\n<tr>\n<td>字典{}</td>\n<td>无</td>\n<td>key不可变val可变</td>\n</tr>\n<tr>\n<td>集合{}</td>\n<td>无</td>\n<td>可变类型不重复</td>\n</tr>\n</tbody>\n</table>",r:{minutes:3.66,words:1099},t:"核心数据类型",y:"a"}}],["/posts/apple/1.html",{loader:()=>a.e(7186).then(a.bind(a,5063)),meta:{d:16409952e5,l:"2022年1月1日",c:["苹果"],g:["红","大","圆"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.11,words:34},t:"苹果 1",i:"pen-to-square",y:"a"}}],["/posts/apple/2.html",{loader:()=>a.e(2475).then(a.bind(a,5456)),meta:{d:16410816e5,l:"2022年1月2日",c:["苹果"],g:["红","大","圆"],e:"\n<p>一个被星标了的苹果文章。</p>\n",r:{minutes:.16,words:48},t:"苹果 2",i:"pen-to-square",y:"a"}}],["/posts/apple/3.html",{loader:()=>a.e(660).then(a.bind(a,9891)),meta:{d:1641168e6,l:"2022年1月3日",c:["苹果","水果"],g:["红","大","圆"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.12,words:36},t:"苹果 3",i:"pen-to-square",y:"a"}}],["/posts/apple/4.html",{loader:()=>a.e(8365).then(a.bind(a,7907)),meta:{d:16412544e5,l:"2022年1月4日",c:["苹果","水果"],g:["红","大","圆"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.12,words:36},t:"苹果 4",i:"pen-to-square",y:"a"}}],["/posts/banana/1.html",{loader:()=>a.e(2325).then(a.bind(a,2032)),meta:{d:16413408e5,l:"2022年1月5日",c:["香蕉","水果"],g:["黄","弯曲的","长"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.13,words:38},t:"香蕉 1",i:"pen-to-square",y:"a"}}],["/posts/banana/2.html",{loader:()=>a.e(8336).then(a.bind(a,241)),meta:{d:16414272e5,l:"2022年1月6日",c:["香蕉","水果"],g:["黄","弯曲的","长"],e:"\n<p>一个被数字 <code>10</code> 星标了的香蕉文章。</p>\n",r:{minutes:.18,words:55},t:"香蕉 2",i:"pen-to-square",y:"a"}}],["/posts/banana/3.html",{loader:()=>a.e(3911).then(a.bind(a,3156)),meta:{d:16415136e5,l:"2022年1月7日",c:["香蕉"],g:["黄","弯曲的","长"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.12,words:36},t:"香蕉 3",i:"pen-to-square",y:"a"}}],["/posts/banana/4.html",{loader:()=>a.e(8986).then(a.bind(a,5296)),meta:{d:16416e8,l:"2022年1月8日",c:["香蕉"],g:["黄","弯曲的","长"],e:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",r:{minutes:.12,words:36},t:"香蕉 4",i:"pen-to-square",y:"a"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,1489)),meta:{t:""}}],["/Docker/",{loader:()=>a.e(5579).then(a.bind(a,4320)),meta:{t:"Docker"}}],["/MySQL/",{loader:()=>a.e(3211).then(a.bind(a,3907)),meta:{t:"My SQL"}}],["/Netty/",{loader:()=>a.e(8169).then(a.bind(a,8170)),meta:{t:"Netty"}}],["/Nginx/",{loader:()=>a.e(1009).then(a.bind(a,4710)),meta:{t:"Nginx"}}],["/Redis/",{loader:()=>a.e(2450).then(a.bind(a,4185)),meta:{t:"Redis"}}],["/Spring/",{loader:()=>a.e(4330).then(a.bind(a,4102)),meta:{t:"Spring"}}],["/posts/",{loader:()=>a.e(8666).then(a.bind(a,8063)),meta:{t:"Posts"}}],["/Java/Java8%E7%89%B9%E6%80%A7/",{loader:()=>a.e(1852).then(a.bind(a,6902)),meta:{t:"Java8特性"}}],["/Java/String/",{loader:()=>a.e(385).then(a.bind(a,677)),meta:{t:"String"}}],["/Python/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(3204).then(a.bind(a,4335)),meta:{t:"基础"}}],["/posts/apple/",{loader:()=>a.e(2653).then(a.bind(a,7025)),meta:{t:"Apple"}}],["/posts/banana/",{loader:()=>a.e(8242).then(a.bind(a,6014)),meta:{t:"Banana"}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,3233)),meta:{t:"分类",I:!1}}],["/category/docker/",{loader:()=>a.e(1360).then(a.bind(a,2570)),meta:{t:"docker 分类",I:!1}}],["/category/mysql/",{loader:()=>a.e(1006).then(a.bind(a,7667)),meta:{t:"MySQL 分类",I:!1}}],["/category/netty/",{loader:()=>a.e(2776).then(a.bind(a,7690)),meta:{t:"Netty 分类",I:!1}}],["/category/nginx/",{loader:()=>a.e(5552).then(a.bind(a,1320)),meta:{t:"Nginx 分类",I:!1}}],["/category/redis/",{loader:()=>a.e(7).then(a.bind(a,1902)),meta:{t:"Redis 分类",I:!1}}],["/category/spring/",{loader:()=>a.e(9097).then(a.bind(a,7494)),meta:{t:"Spring 分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(4021).then(a.bind(a,7062)),meta:{t:"使用指南 分类",I:!1}}],["/category/%E6%8C%87%E5%8D%97/",{loader:()=>a.e(8622).then(a.bind(a,1659)),meta:{t:"指南 分类",I:!1}}],["/category/%E6%A8%B1%E6%A1%83/",{loader:()=>a.e(9080).then(a.bind(a,8961)),meta:{t:"樱桃 分类",I:!1}}],["/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",{loader:()=>a.e(8280).then(a.bind(a,3609)),meta:{t:"火龙果 分类",I:!1}}],["/category/%E6%B0%B4%E6%9E%9C/",{loader:()=>a.e(8484).then(a.bind(a,4200)),meta:{t:"水果 分类",I:!1}}],["/category/%E8%8D%89%E8%8E%93/",{loader:()=>a.e(6112).then(a.bind(a,6806)),meta:{t:"草莓 分类",I:!1}}],["/category/%E8%94%AC%E8%8F%9C/",{loader:()=>a.e(3612).then(a.bind(a,5575)),meta:{t:"蔬菜 分类",I:!1}}],["/category/java/",{loader:()=>a.e(8236).then(a.bind(a,1730)),meta:{t:"Java 分类",I:!1}}],["/category/%E8%8B%B9%E6%9E%9C/",{loader:()=>a.e(9793).then(a.bind(a,5568)),meta:{t:"苹果 分类",I:!1}}],["/category/%E9%A6%99%E8%95%89/",{loader:()=>a.e(334).then(a.bind(a,6658)),meta:{t:"香蕉 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,951)),meta:{t:"标签",I:!1}}],["/tag/%E7%BB%8F%E9%AA%8C/",{loader:()=>a.e(5785).then(a.bind(a,6439)),meta:{t:"标签: 经验",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>a.e(6080).then(a.bind(a,3306)),meta:{t:"标签: 基础",I:!1}}],["/tag/%E6%95%99%E7%A8%8B/",{loader:()=>a.e(5154).then(a.bind(a,1628)),meta:{t:"标签: 教程",I:!1}}],["/tag/error/",{loader:()=>a.e(6116).then(a.bind(a,7865)),meta:{t:"标签: error",I:!1}}],["/tag/%E6%80%BB%E7%BB%93/",{loader:()=>a.e(5436).then(a.bind(a,2361)),meta:{t:"标签: 总结",I:!1}}],["/tag/%E7%A6%81%E7%94%A8/",{loader:()=>a.e(1331).then(a.bind(a,9753)),meta:{t:"标签: 禁用",I:!1}}],["/tag/%E5%8A%A0%E5%AF%86/",{loader:()=>a.e(8496).then(a.bind(a,5835)),meta:{t:"标签: 加密",I:!1}}],["/tag/%E5%B8%83%E5%B1%80/",{loader:()=>a.e(609).then(a.bind(a,7812)),meta:{t:"标签: 布局",I:!1}}],["/tag/markdown/",{loader:()=>a.e(312).then(a.bind(a,8216)),meta:{t:"标签: Markdown",I:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(602).then(a.bind(a,9462)),meta:{t:"标签: 页面配置",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(1431).then(a.bind(a,8210)),meta:{t:"标签: 使用指南",I:!1}}],["/tag/%E7%BA%A2/",{loader:()=>a.e(4068).then(a.bind(a,1731)),meta:{t:"标签: 红",I:!1}}],["/tag/%E5%B0%8F/",{loader:()=>a.e(3215).then(a.bind(a,1612)),meta:{t:"标签: 小",I:!1}}],["/tag/%E5%9C%86/",{loader:()=>a.e(9048).then(a.bind(a,927)),meta:{t:"标签: 圆",I:!1}}],["/tag/%E5%A4%A7/",{loader:()=>a.e(3047).then(a.bind(a,6481)),meta:{t:"标签: 大",I:!1}}],["/tag/java8%E7%89%B9%E6%80%A7/",{loader:()=>a.e(4406).then(a.bind(a,8669)),meta:{t:"标签: Java8特性",I:!1}}],["/tag/%E9%BB%84/",{loader:()=>a.e(942).then(a.bind(a,7584)),meta:{t:"标签: 黄",I:!1}}],["/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",{loader:()=>a.e(7817).then(a.bind(a,4230)),meta:{t:"标签: 弯曲的",I:!1}}],["/tag/%E9%95%BF/",{loader:()=>a.e(5519).then(a.bind(a,2394)),meta:{t:"标签: 长",I:!1}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,2772)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(7199).then(a.bind(a,353)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,4695)),meta:{t:"时间轴",I:!1}}]])},8761:(i,s,a)=>{a.d(s,{U:()=>n});const n=JSON.parse('{"base":"/blog/","lang":"zh-CN","title":"小满","description":"小满的知识库","head":[],"locales":{}}')},6653:(i,s,a)=>{a.d(s,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$z0ZcerMor4r2HpCAvsybnuhTC5X.WjbGu65GFZdv/UGe7ZCkFXrPq"]}},"author":{"name":"来杯冰柠檬","url":""},"logo":"/assets/images/avatar.png","repo":"JL-20191210/blog","docsDir":"src","footer":"哟吼~","displayFooter":true,"fullscreen":true,"blog":{"description":"一个全栈攻城狮","intro":"/intro.html","medias":{"Gitee":"https://example.com","GitHub":"https://example.com","Zhihu":"https://example.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"后端","icon":"code","prefix":"/Java/","link":"Java","children":[{"text":"Java","link":"/Java/README.md","icon":"fa-brands fa-java","activeMatch":"^/Java/$"},{"text":"Python","link":"/Python/README.md","icon":"fa-brands fa-python","activeMatch":"^/Python/$"}]},{"text":"Vue","icon":"fa-brands fa-vuejs","prefix":"/posts/","children":[]},{"text":"Spring","icon":"fa-solid fa-leaf","prefix":"/posts/","children":[]},{"text":"数据库","icon":"code","prefix":"/Java/","link":"Java","children":[{"text":"Java","link":"/Java/README.md","icon":"fa-brands fa-java","activeMatch":"^/Java/$"},{"text":"Python","link":"/Python/README.md","icon":"fa-brands fa-python","activeMatch":"^/Python/$"}]},{"text":"Docker","icon":"fa-brands fa-docker","prefix":"/posts/","children":[]},{"text":"Linux","icon":"fa-brands fa-linux","prefix":"/posts/","children":[]},{"text":"博文","icon":"pen-to-square","prefix":"/posts/","children":[{"text":"苹果","icon":"pen-to-square","prefix":"apple/","children":[{"text":"苹果1","icon":"pen-to-square","link":"1"},{"text":"苹果2","icon":"pen-to-square","link":"2"},"3","4"]},{"text":"香蕉","icon":"pen-to-square","prefix":"banana/","children":[{"text":"香蕉 1","icon":"pen-to-square","link":"1"},{"text":"香蕉 2","icon":"pen-to-square","link":"2"},"3","4"]},{"text":"樱桃","icon":"pen-to-square","link":"cherry"},{"text":"火龙果","icon":"pen-to-square","link":"dragonfruit"},"tomato","strawberry"]},"/demo/",{"text":"V2 文档","icon":"book","link":"https://theme-hope.vuejs.press/zh/"}],"sidebar":{"/":["","intro"],"/Java/":"structure","/Python/":"structure","/Vue/":"structure","/Spring/":"structure","/MySQL/":"structure","/Netty/":"structure","/Nginx/":"structure","/Redis/":"structure","/Docker/":"structure"}}}}')},4923:(i,s,a)=>{},8123:(i,s,a)=>{a.d(s,{v:()=>n});const n={"/Java/":["",{text:"Java8特性",prefix:"Java8特性/",collapsible:!0,children:["Java Stream API","深入理解 Java Optional 类","函数式接口","深入理解 Java 8 新特性：从核心到实践","深入理解 Java Collector","深入理解 Java 中的默认方法和静态方法","深入理解 Stream API"]},{text:"String",prefix:"String/",collapsible:!0,children:["isNotEmpty和isNotBlank"]}],"/Python/":["",{text:"基础",prefix:"基础/",collapsible:!0,children:["video","核心数据类型"]}],"/Vue/":[],"/Spring/":["Spring5.x概述"],"/MySQL/":["mysql -uroot -p报错","Navicat连接mysql报错","union和union all"],"/Netty/":["Netty 入门","Netty 进阶","NIO 基础","优化与源码"],"/Nginx/":["413 (Request Entity Too Large)"],"/Redis/":["基础篇"],"/Docker/":["Docker容器与宿主机时间同步"]}},2878:(i,s,a)=>{a.d(s,{P:()=>n});const n={Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}}},i=>{i.O(0,[1602,8907],(()=>i(i.s=8731))),i.O()}]);