"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3728],{66262:(l,a)=>{a.A=(l,a)=>{const n=l.__vccOpts||l;for(const[l,e]of a)n[l]=e;return n}},75718:(l,a,n)=>{n.r(a),n.d(a,{comp:()=>r,data:()=>i});var e=n(20641);const t={},r=(0,n(66262).A)(t,[["render",function(l,a){return(0,e.uX)(),(0,e.CE)("div",null,a[0]||(a[0]=[(0,e.Fv)('<h1 id="_4-runnable-和-callable-有什么区别" tabindex="-1"><a class="header-anchor" href="#_4-runnable-和-callable-有什么区别"><span>4.runnable 和 callable 有什么区别?</span></a></h1><blockquote><p>难易程度：☆☆</p><p>出现频率：☆☆☆</p></blockquote><p><strong>参考回答</strong></p><div class="hint-container important"><p class="hint-container-title">重要</p><ol><li>Runnable 接口run方法没有返回值；Callable接口call方法有返回值，是个泛型，和Future、FutureTask配合可以用来获取异步执行的结果</li><li>Callalbe接口支持返回执行结果，需要调用FutureTask.get()得到，此方法会阻塞主进程的继续往下执行，如果不调用不会阻塞。</li><li>Callable接口的call()方法允许抛出异常；而Runnable接口的run()方法的异常只能在内部消化，不能继续上抛</li></ol></div>',4)]))}]]),i=JSON.parse('{"path":"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.runnable%20%E5%92%8C%20callable%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","title":"4.runnable 和 callable 有什么区别?","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"Interview/黑马Java2023/08并发编程/01基础知识/4.runnable 和 callable 有什么区别.md","excerpt":"\\n<blockquote>\\n<p>难易程度：☆☆</p>\\n<p>出现频率：☆☆☆</p>\\n</blockquote>\\n<p><strong>参考回答</strong></p>\\n<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<ol>\\n<li>Runnable 接口run方法没有返回值；Callable接口call方法有返回值，是个泛型，和Future、FutureTask配合可以用来获取异步执行的结果</li>\\n<li>Callalbe接口支持返回执行结果，需要调用FutureTask.get()得到，此方法会阻塞主进程的继续往下执行，如果不调用不会阻塞。</li>\\n<li>Callable接口的call()方法允许抛出异常；而Runnable接口的run()方法的异常只能在内部消化，不能继续上抛</li>\\n</ol>\\n</div>"}')}}]);