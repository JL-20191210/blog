"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[15308],{66262:(i,s)=>{s.A=(i,s)=>{const l=i.__vccOpts||i;for(const[i,a]of s)l[i]=a;return l}},4456:(i,s,l)=>{l.r(s),l.d(s,{comp:()=>t,data:()=>e});var a=l(20641);const n={},t=(0,l(66262).A)(n,[["render",function(i,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h1 id="🐬mysql-面试答题卡-锁机制详解" tabindex="-1"><a class="header-anchor" href="#🐬mysql-面试答题卡-锁机制详解"><span>🐬MySQL 面试答题卡：锁机制详解</span></a></h1><hr><h2 id="🧠-原则简介" tabindex="-1"><a class="header-anchor" href="#🧠-原则简介"><span>🧠 原则简介</span></a></h2><p><strong>MySQL 锁机制：</strong></p><blockquote><p>MySQL 为了保证数据一致性与并发控制，引入了多种锁机制，主要分为：<strong>全局锁、表级锁、行级锁、记录锁、间隙锁、临键锁、意向锁、元数据锁、乐观锁、悲观锁</strong>等。不同锁的粒度与性能差异显著，适用场景各不相同。</p></blockquote><hr><h2 id="🔍-mysql-锁类型详解与示例" tabindex="-1"><a class="header-anchor" href="#🔍-mysql-锁类型详解与示例"><span>🔍 MySQL 锁类型详解与示例</span></a></h2><hr><h3 id="_1️⃣-全局锁-global-lock" tabindex="-1"><a class="header-anchor" href="#_1️⃣-全局锁-global-lock"><span>1️⃣ 全局锁（Global Lock）</span></a></h3><ul><li><strong>作用</strong>：锁定整个数据库实例，所有表都不能进行写操作。</li><li><strong>特点</strong>：粒度最大，阻塞性最强，常用于全库逻辑备份。</li><li><strong>加锁方式</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 加全局锁（只读模式）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">FLUSH TABLES </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WITH</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> READ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> LOCK;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 解锁</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UNLOCK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> TABLES;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>全库备份</li><li>防止写入导致数据不一致</li></ul></li></ul><hr><h3 id="_2️⃣-表级锁-table-lock" tabindex="-1"><a class="header-anchor" href="#_2️⃣-表级锁-table-lock"><span>2️⃣ 表级锁（Table Lock）</span></a></h3><ul><li><strong>作用</strong>：锁定整张表，适合读多写少的场景。</li><li><strong>特点</strong>：开销小，加锁快，但并发性低。</li><li><strong>加锁方式</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 给表加读锁（其他会话可以读，不能写）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">LOCK TABLES my_table </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">READ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 给表加写锁（其他会话不能读也不能写）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">LOCK TABLES my_table WRITE;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 解锁</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UNLOCK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> TABLES;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>MyISAM 存储引擎（默认用表锁）</li><li>批量数据导入导出</li></ul></li></ul><hr><h3 id="_3️⃣-行级锁-row-lock" tabindex="-1"><a class="header-anchor" href="#_3️⃣-行级锁-row-lock"><span>3️⃣ 行级锁（Row Lock）</span></a></h3><ul><li><strong>作用</strong>：锁定数据表中某一行记录，最小粒度的锁。</li><li><strong>特点</strong>：并发性能高，但加锁开销大。</li><li><strong>加锁方式</strong>（InnoDB 存储引擎自动触发）：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- X锁 会对满足条件的行加行锁（悲观锁）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- S锁 共享锁（读锁）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> LOCK </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SHARE MODE;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>高频并发更新</li><li>精确锁定目标行</li></ul></li></ul><hr><h3 id="_4️⃣-记录锁-record-lock" tabindex="-1"><a class="header-anchor" href="#_4️⃣-记录锁-record-lock"><span>4️⃣ 记录锁（Record Lock）</span></a></h3><ul><li><strong>作用</strong>：锁定某行记录的索引项。</li><li><strong>特点</strong>：仅锁定命中的行，避免影响其他数据。</li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- id 是主键或唯一索引，命中唯一记录</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>注意</strong>：必须走索引，否则会退化为 <strong>表锁</strong>。</li></ul><hr><h3 id="_5️⃣-间隙锁-gap-lock" tabindex="-1"><a class="header-anchor" href="#_5️⃣-间隙锁-gap-lock"><span>5️⃣ 间隙锁（Gap Lock）</span></a></h3><ul><li><strong>作用</strong>：锁定两个索引值之间的“间隙”，防止幻读。</li><li><strong>特点</strong>：不锁记录本身，只锁区间。</li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 锁定 age 在 (20,30) 之间的间隙，不允许插入这个区间的新数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>：可重复读（REPEATABLE READ）隔离级别下防止幻读。</li></ul><blockquote><p>幻读：刚刚还没有，突然跳出来了</p></blockquote><hr><h3 id="_6️⃣-临键锁-next-key-lock" tabindex="-1"><a class="header-anchor" href="#_6️⃣-临键锁-next-key-lock"><span>6️⃣ 临键锁（Next-Key Lock）</span></a></h3><ul><li><strong>作用</strong>：记录锁 + 间隙锁的组合，锁定区间并包含记录本身。</li><li><strong>特点</strong>：InnoDB 在可重复读隔离级别下的默认锁方式。</li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 锁定 age=25 的记录，以及 (20,30) 区间的间隙</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 25</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>防止幻读</li><li>确保区间数据稳定</li></ul></li></ul><hr><h3 id="_7️⃣-意向锁-intention-lock" tabindex="-1"><a class="header-anchor" href="#_7️⃣-意向锁-intention-lock"><span>7️⃣ 意向锁（Intention Lock）</span></a></h3><ul><li><strong>作用</strong>：表级锁，标记事务打算对某些行加行锁，便于多事务协调。</li><li><strong>类型</strong>： <ul><li><strong>IS（Intention Shared）</strong>：打算加共享锁</li><li><strong>IX（Intention Exclusive）</strong>：打算加排它锁</li></ul></li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 自动加锁，不需要手动写 SQL</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 自动加 IX 锁</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>：避免行锁与表锁冲突，提升加锁效率。</li></ul><hr><h3 id="_8️⃣-元数据锁-metadata-lock-mdl" tabindex="-1"><a class="header-anchor" href="#_8️⃣-元数据锁-metadata-lock-mdl"><span>8️⃣ 元数据锁（Metadata Lock, MDL）</span></a></h3><ul><li><strong>作用</strong>：保证表结构读写一致性。</li><li><strong>特点</strong>：自动触发，不可手动加锁。</li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 会话1：执行 DML（会持有 MDL 读锁）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 会话2：尝试修改表结构，会被阻塞</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ALTER</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ADD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COLUMN email </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>防止 DDL 与 DML 并发导致数据不一致</li></ul></li></ul><hr><h3 id="_9️⃣-乐观锁-optimistic-lock" tabindex="-1"><a class="header-anchor" href="#_9️⃣-乐观锁-optimistic-lock"><span>9️⃣ 乐观锁（Optimistic Lock）</span></a></h3><ul><li><strong>作用</strong>：通过版本号或时间戳控制并发更新，不阻塞其他事务。</li><li><strong>特点</strong>：适合冲突概率低的场景。</li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 数据表增加版本字段 version</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Tom&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>高并发读多写少</li><li>不需要数据库级别锁</li></ul></li></ul><hr><h3 id="🔟-悲观锁-pessimistic-lock" tabindex="-1"><a class="header-anchor" href="#🔟-悲观锁-pessimistic-lock"><span>🔟 悲观锁（Pessimistic Lock）</span></a></h3><ul><li><strong>作用</strong>：认为并发冲突很可能发生，先加锁再操作。</li><li><strong>特点</strong>：阻塞其他事务对数据的修改。</li><li><strong>示例</strong>：</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 悲观锁</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>适用场景</strong>： <ul><li>冲突概率高</li><li>数据一致性要求严格</li></ul></li></ul><hr><h2 id="🗣-面试总结句式" tabindex="-1"><a class="header-anchor" href="#🗣-面试总结句式"><span>🗣 面试总结句式</span></a></h2><blockquote><p>MySQL 锁根据粒度分为全局锁、表级锁、行级锁等；根据功能又有记录锁、间隙锁、临键锁、意向锁、元数据锁；根据策略有乐观锁和悲观锁。不同锁机制在性能与数据安全性之间需要权衡，面试时可以结合业务场景给出合适的选择方案。</p></blockquote>',61)]))}]]),e=JSON.parse('{"path":"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/MySQL/%E9%94%81%E8%AF%A6%E8%A7%A3.html","title":"🐬MySQL 面试答题卡：锁机制详解","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"🧠 原则简介","slug":"🧠-原则简介","link":"#🧠-原则简介","children":[]},{"level":2,"title":"🔍 MySQL 锁类型详解与示例","slug":"🔍-mysql-锁类型详解与示例","link":"#🔍-mysql-锁类型详解与示例","children":[{"level":3,"title":"1️⃣ 全局锁（Global Lock）","slug":"_1️⃣-全局锁-global-lock","link":"#_1️⃣-全局锁-global-lock","children":[]},{"level":3,"title":"2️⃣ 表级锁（Table Lock）","slug":"_2️⃣-表级锁-table-lock","link":"#_2️⃣-表级锁-table-lock","children":[]},{"level":3,"title":"3️⃣ 行级锁（Row Lock）","slug":"_3️⃣-行级锁-row-lock","link":"#_3️⃣-行级锁-row-lock","children":[]},{"level":3,"title":"4️⃣ 记录锁（Record Lock）","slug":"_4️⃣-记录锁-record-lock","link":"#_4️⃣-记录锁-record-lock","children":[]},{"level":3,"title":"5️⃣ 间隙锁（Gap Lock）","slug":"_5️⃣-间隙锁-gap-lock","link":"#_5️⃣-间隙锁-gap-lock","children":[]},{"level":3,"title":"6️⃣ 临键锁（Next-Key Lock）","slug":"_6️⃣-临键锁-next-key-lock","link":"#_6️⃣-临键锁-next-key-lock","children":[]},{"level":3,"title":"7️⃣ 意向锁（Intention Lock）","slug":"_7️⃣-意向锁-intention-lock","link":"#_7️⃣-意向锁-intention-lock","children":[]},{"level":3,"title":"8️⃣ 元数据锁（Metadata Lock, MDL）","slug":"_8️⃣-元数据锁-metadata-lock-mdl","link":"#_8️⃣-元数据锁-metadata-lock-mdl","children":[]},{"level":3,"title":"9️⃣ 乐观锁（Optimistic Lock）","slug":"_9️⃣-乐观锁-optimistic-lock","link":"#_9️⃣-乐观锁-optimistic-lock","children":[]},{"level":3,"title":"🔟 悲观锁（Pessimistic Lock）","slug":"🔟-悲观锁-pessimistic-lock","link":"#🔟-悲观锁-pessimistic-lock","children":[]}]},{"level":2,"title":"🗣 面试总结句式","slug":"🗣-面试总结句式","link":"#🗣-面试总结句式","children":[]}],"readingTime":{"minutes":3.76,"words":1129},"filePathRelative":"Interview/面试答题卡/MySQL/锁详解.md","excerpt":"\\n<hr>\\n<h2>🧠 原则简介</h2>\\n<p><strong>MySQL 锁机制：</strong></p>\\n<blockquote>\\n<p>MySQL 为了保证数据一致性与并发控制，引入了多种锁机制，主要分为：<strong>全局锁、表级锁、行级锁、记录锁、间隙锁、临键锁、意向锁、元数据锁、乐观锁、悲观锁</strong>等。不同锁的粒度与性能差异显著，适用场景各不相同。</p>\\n</blockquote>\\n<hr>\\n<h2>🔍 MySQL 锁类型详解与示例</h2>\\n<hr>\\n<h3>1️⃣ 全局锁（Global Lock）</h3>\\n<ul>\\n<li><strong>作用</strong>：锁定整个数据库实例，所有表都不能进行写操作。</li>\\n<li><strong>特点</strong>：粒度最大，阻塞性最强，常用于全库逻辑备份。</li>\\n<li><strong>加锁方式</strong>：</li>\\n</ul>"}')}}]);