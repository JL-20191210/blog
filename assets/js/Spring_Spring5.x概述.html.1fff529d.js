"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1622],{6262:(i,l)=>{l.A=(i,l)=>{const n=i.__vccOpts||i;for(const[i,r]of l)n[i]=r;return n}},283:(i,l,n)=>{n.r(l),n.d(l,{comp:()=>p,data:()=>e});var r=n(641);const s={},p=(0,n(6262).A)(s,[["render",function(i,l){return(0,r.uX)(),(0,r.CE)("div",null,l[0]||(l[0]=[(0,r.Fv)('<h1 id="spring5-x概述" tabindex="-1"><a class="header-anchor" href="#spring5-x概述"><span>Spring5.x概述</span></a></h1><h2 id="spring框架概述-spring5-x" tabindex="-1"><a class="header-anchor" href="#spring框架概述-spring5-x"><span>spring框架概述（Spring5.x）</span></a></h2><ol><li>spring是轻量级的开源的JavaEE框架</li><li>spring可以解决企业应用开发的复杂性</li><li>spring两大核心 <ul><li>IOC：控制反转。原先创建对象需程序员手写，现在交给spring来创建对象以及对象依赖的对象</li><li>AOP：面向切面。不修改源代码进行功能增强。可以在调用方法前打印出进入方法的参数，以及退出方法时方法的返回结果，但并不是直接修改方法体。</li></ul></li><li>spring特点 <ul><li>方便解耦，简化开发。</li><li>AOP编程支持</li><li>方便程序测试</li><li>方便和其他框架进行整合</li><li>方便进行事务操作</li><li>降低API开发难度</li></ul></li></ol><h2 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题"><span>面试题</span></a></h2><h3 id="spring方便解耦-简化开发体现在哪些方面" tabindex="-1"><a class="header-anchor" href="#spring方便解耦-简化开发体现在哪些方面"><span>spring方便解耦，简化开发体现在哪些方面？</span></a></h3><ol><li>依赖注入（DI）是解耦的核心之一，它将类A对象的依赖关系交给spring容器来管理，使得类A对象不需要自己来创建依赖对象类B的实例，而是由容器注入。通过DI，类A不需要关心类B的具体实现</li><li>面向接口编程。依赖接口而不是接口的实现类，依赖方不需要关心接口的具体实现</li><li>面向切面编程。不用在业务代码中添加日志，权限，事务等额外代码，将这些代码抽出来独立于业务代码，避免重复代码。开发人员可以专注于业务代码</li><li>模块化。spring本身是模块化的，可以根据项目需要只集成需要的模块</li><li>配置方式解耦。将业务代码分离出来，与对象创建，依赖注入，属性注入等隔离</li><li>总之，spring使开发人员专注于业务代码</li></ol>',6)]))}]]),e=JSON.parse('{"path":"/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html","title":"Spring5.x概述","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-10-17T00:00:00.000Z","category":["Spring"],"tag":["总结"],"gitInclude":[]},"headers":[{"level":2,"title":"spring框架概述（Spring5.x）","slug":"spring框架概述-spring5-x","link":"#spring框架概述-spring5-x","children":[]},{"level":2,"title":"面试题","slug":"面试题","link":"#面试题","children":[{"level":3,"title":"spring方便解耦，简化开发体现在哪些方面？","slug":"spring方便解耦-简化开发体现在哪些方面","link":"#spring方便解耦-简化开发体现在哪些方面","children":[]}]}],"readingTime":{"minutes":1.58,"words":474},"filePathRelative":"Spring/Spring5.x概述.md","localizedDate":"2024年10月17日","excerpt":"\\n<h2>spring框架概述（Spring5.x）</h2>\\n<ol>\\n<li>spring是轻量级的开源的JavaEE框架</li>\\n<li>spring可以解决企业应用开发的复杂性</li>\\n<li>spring两大核心\\n<ul>\\n<li>IOC：控制反转。原先创建对象需程序员手写，现在交给spring来创建对象以及对象依赖的对象</li>\\n<li>AOP：面向切面。不修改源代码进行功能增强。可以在调用方法前打印出进入方法的参数，以及退出方法时方法的返回结果，但并不是直接修改方法体。</li>\\n</ul>\\n</li>\\n<li>spring特点\\n<ul>\\n<li>方便解耦，简化开发。</li>\\n<li>AOP编程支持</li>\\n<li>方便程序测试</li>\\n<li>方便和其他框架进行整合</li>\\n<li>方便进行事务操作</li>\\n<li>降低API开发难度</li>\\n</ul>\\n</li>\\n</ol>"}')}}]);