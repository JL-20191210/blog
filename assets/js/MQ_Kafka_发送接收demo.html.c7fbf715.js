"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[90872],{66262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}},11264:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>n});var e=a(20641);const l={},t=(0,a(66262).A)(l,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="kafka-发送和接收消息" tabindex="-1"><a class="header-anchor" href="#kafka-发送和接收消息"><span>Kafka 发送和接收消息</span></a></h1><p>要在两台服务器之间通过 Kafka 发送和接收消息，你需要确保以下条件满足：</p><ol><li><strong>Kafka 集群已正确配置并运行</strong>：Kafka 集群需要在两台服务器上正确配置，并且能够互相通信。</li><li><strong>网络配置</strong>：确保两台服务器之间的网络是通的，Kafka broker 的端口（默认 <code>9092</code>）和 Zookeeper 的端口（默认 <code>2181</code>）可以互相访问。</li><li><strong>Kafka Topic 已创建</strong>：确保 Kafka topic 已经创建。</li></ol><p>以下是完整的步骤和命令：</p><hr><h3 id="假设" tabindex="-1"><a class="header-anchor" href="#假设"><span>假设</span></a></h3><ul><li><strong>服务器 A</strong>（IP: <code>192.168.1.100</code>）：用于运行 Kafka 生产者，发送消息。</li><li><strong>服务器 B</strong>（IP: <code>192.168.1.101</code>）：用于运行 Kafka 消费者，接收消息。</li><li>Kafka 安装在两台服务器的 <code>/path/to/kafka</code> 目录下。</li><li>Kafka broker 地址为 <code>192.168.1.100:9092</code>（服务器 A 的 IP 和端口）。</li><li>Topic 名称为 <code>test-topic</code>。</li></ul><hr><h3 id="步骤-1-在服务器-a-上启动-kafka-生产者" tabindex="-1"><a class="header-anchor" href="#步骤-1-在服务器-a-上启动-kafka-生产者"><span>步骤 1：在服务器 A 上启动 Kafka 生产者</span></a></h3><p>在服务器 A 上运行以下命令，启动 Kafka 生产者并发送消息：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/path/to/kafka/bin/kafka-console-producer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --broker-list</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.1.100:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test-topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输入一些消息，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; Hello from Server A!</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> message.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; Another message from Server A.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按 <code>Ctrl+C</code> 退出生产者。</p><hr><h3 id="步骤-2-在服务器-b-上启动-kafka-消费者" tabindex="-1"><a class="header-anchor" href="#步骤-2-在服务器-b-上启动-kafka-消费者"><span>步骤 2：在服务器 B 上启动 Kafka 消费者</span></a></h3><p>在服务器 B 上运行以下命令，启动 Kafka 消费者并接收消息：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/path/to/kafka/bin/kafka-console-consumer.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.1.100:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test-topic</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --from-beginning</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--bootstrap-server 192.168.1.100:9092</code>：指定 Kafka broker 的地址（服务器 A 的 IP 和端口）。</li><li><code>--topic test-topic</code>：指定要消费的 topic。</li><li><code>--from-beginning</code>：从最早的消息开始消费。</li></ul><p>如果一切正常，你应该会看到从服务器 A 发送的消息：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> A!</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> message.</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Another</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> message</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> A.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ol><li><p><strong>Kafka 配置</strong>：</p><ul><li>确保 Kafka 的 <code>server.properties</code> 文件中 <code>advertised.listeners</code> 配置正确，指向服务器 A 的 IP 地址（<code>192.168.1.100:9092</code>），以便服务器 B 可以连接到 Kafka。</li><li>如果 Kafka 和 Zookeeper 分布在多台服务器上，确保 Zookeeper 的配置也正确。</li></ul></li><li><p><strong>防火墙</strong>：</p><ul><li>确保两台服务器的防火墙允许 Kafka broker 端口（默认 <code>9092</code>）和 Zookeeper 端口（默认 <code>2181</code>）的通信。</li></ul></li><li><p><strong>Topic 创建</strong>：</p><ul><li><p>如果 topic 不存在，可以在服务器 A 或服务器 B 上运行以下命令创建 topic：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/path/to/kafka/bin/kafka-topics.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --bootstrap-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.1.100:9092</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --replication-factor</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --partitions</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --topic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test-topic</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li></ol><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>通过以上步骤，你可以在两台服务器之间实现 Kafka 消息的发送和接收。确保 Kafka 配置正确，并且网络通信畅通。如果有任何问题，可以检查 Kafka 日志（位于 <code>/path/to/kafka/logs</code>）以排查错误。</p>',27)]))}]]),n=JSON.parse('{"path":"/MQ/Kafka/%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6demo.html","title":"Kafka 发送和接收消息","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-chart-network","date":"2024-11-05T00:00:00.000Z","category":["中间件"],"tag":["命令"],"gitInclude":[]},"headers":[{"level":3,"title":"假设","slug":"假设","link":"#假设","children":[]},{"level":3,"title":"步骤 1：在服务器 A 上启动 Kafka 生产者","slug":"步骤-1-在服务器-a-上启动-kafka-生产者","link":"#步骤-1-在服务器-a-上启动-kafka-生产者","children":[]},{"level":3,"title":"步骤 2：在服务器 B 上启动 Kafka 消费者","slug":"步骤-2-在服务器-b-上启动-kafka-消费者","link":"#步骤-2-在服务器-b-上启动-kafka-消费者","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":2.2,"words":659},"filePathRelative":"MQ/Kafka/发送接收demo.md","localizedDate":"2024年11月5日","excerpt":"\\n<p>要在两台服务器之间通过 Kafka 发送和接收消息，你需要确保以下条件满足：</p>\\n<ol>\\n<li><strong>Kafka 集群已正确配置并运行</strong>：Kafka 集群需要在两台服务器上正确配置，并且能够互相通信。</li>\\n<li><strong>网络配置</strong>：确保两台服务器之间的网络是通的，Kafka broker 的端口（默认 <code>9092</code>）和 Zookeeper 的端口（默认 <code>2181</code>）可以互相访问。</li>\\n<li><strong>Kafka Topic 已创建</strong>：确保 Kafka topic 已经创建。</li>\\n</ol>"}')}}]);