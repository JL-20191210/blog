"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[61263],{66262:(n,e)=>{e.A=(n,e)=>{const o=n.__vccOpts||n;for(const[n,t]of e)o[n]=t;return o}},89719:(n,e,o)=>{o.r(e),o.d(e,{comp:()=>c,data:()=>l});var t=o(20641);const i={},c=(0,o(66262).A)(i,[["render",function(n,e){return(0,t.uX)(),(0,t.CE)("div",null,e[0]||(e[0]=[(0,t.Lk)("p",null,"@Aspect @Component public class MyAspect {",-1),(0,t.Lk)("pre",null,[(0,t.Lk)("code",null,'// 定义切点，拦截所有的请求，但排除特定路径\n@Pointcut("execution(* com.example.controller.*.*(..)) && !execution(* com.example.controller.ExcludedController.*(..))")\npublic void pointcut() {\n    // 切点定义\n}\n\n// 在切点上增加通知\n@Before("pointcut()")\npublic void before(JoinPoint joinPoint) {\n    // 你的逻辑代码\n    System.out.println("Before method execution: " + joinPoint.getSignature().getName());\n}\n')],-1),(0,t.Lk)("p",null,"}",-1)]))}]]),l=JSON.parse('{"path":"/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84.html","title":"","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":0.23,"words":69},"filePathRelative":"SSM/01-Spring笔记/AOP/日志切面排除路径.md","excerpt":"<p>@Aspect\\n@Component\\npublic class MyAspect {</p>\\n<pre><code>// 定义切点，拦截所有的请求，但排除特定路径\\n@Pointcut(\\"execution(* com.example.controller.*.*(..)) &amp;&amp; !execution(* com.example.controller.ExcludedController.*(..))\\")\\npublic void pointcut() {\\n    // 切点定义\\n}\\n\\n// 在切点上增加通知\\n@Before(\\"pointcut()\\")\\npublic void before(JoinPoint joinPoint) {\\n    // 你的逻辑代码\\n    System.out.println(\\"Before method execution: \\" + joinPoint.getSignature().getName());\\n}\\n</code></pre>"}')}}]);