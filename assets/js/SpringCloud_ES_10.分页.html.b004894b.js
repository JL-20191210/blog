"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[24680],{66262:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,n]of i)a[s]=n;return a}},78020:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>l,data:()=>h});var n=a(20641);const e={},l=(0,a(66262).A)(e,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,[i[0]||(i[0]=(0,n.Lk)("h1",{id:"_10-分页",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#_10-分页"},[(0,n.Lk)("span",null,"10.分页")])],-1)),i[1]||(i[1]=(0,n.Lk)("p",null,"Elasticsearch的分页操作原理涉及如何高效地处理和返回大量数据的不同策略，避免性能瓶颈。以下是几种常见的分页方式及其优缺点：",-1)),(0,n.Q3)(" more "),i[2]||(i[2]=(0,n.Fv)('<h3 id="_1-基本分页-from-和-size" tabindex="-1"><a class="header-anchor" href="#_1-基本分页-from-和-size"><span>1. <strong>基本分页（<code>from</code> 和 <code>size</code>）</strong></span></a></h3><h4 id="操作原理" tabindex="-1"><a class="header-anchor" href="#操作原理"><span>操作原理：</span></a></h4><ul><li><code>from</code>用于指定查询结果的起始位置，<code>size</code>控制每页返回的记录数。比如，查询第N页时，<code>from</code>为<code>(N-1) * size</code>，<code>size</code>为每页数据的条数。</li><li>例如，每页10条数据，查询第2页时，<code>from</code>设置为10，<code>size</code>为10，表示从第11条到第20条数据。</li></ul><h4 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点"><span>优缺点：</span></a></h4><ul><li><strong>优点</strong>：实现简单，适用于较小的数据集或浅层分页查询。</li><li><strong>缺点</strong>：当数据量很大时，性能会下降。每次查询都需要跳过前<code>from</code>条记录，尤其在查询深层页数时，Elasticsearch需要扫描大量数据，导致性能瓶颈。</li></ul><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;from&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;query&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;match_all&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2-深度分页-基于from-和-size" tabindex="-1"><a class="header-anchor" href="#_2-深度分页-基于from-和-size"><span>2. <strong>深度分页（基于<code>from</code> 和 <code>size</code>）</strong></span></a></h3><h4 id="操作原理-1" tabindex="-1"><a class="header-anchor" href="#操作原理-1"><span>操作原理：</span></a></h4><ul><li>深度分页依赖于递增的<code>from</code>和<code>size</code>值来获取数据。随着页码递增，<code>from</code>值逐渐增大，适合处理中等规模的数据集。</li></ul><h4 id="优缺点-1" tabindex="-1"><a class="header-anchor" href="#优缺点-1"><span>优缺点：</span></a></h4><ul><li><strong>优点</strong>：简单易用，适合较小的查询场景。</li><li><strong>缺点</strong>：深度分页的问题在于，随着页码的增大，<code>from</code>值会变得很大，导致性能严重下降。每次查询都需要跳过大量无关的数据，这会造成查询变慢，特别是在数据量非常大的情况下。</li></ul><h4 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;from&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;query&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;match_all&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-基于search-after的分页" tabindex="-1"><a class="header-anchor" href="#_3-基于search-after的分页"><span>3. <strong>基于<code>search_after</code>的分页</strong></span></a></h3><h4 id="操作原理-2" tabindex="-1"><a class="header-anchor" href="#操作原理-2"><span>操作原理：</span></a></h4><ul><li><code>search_after</code>通过指定一个唯一的标识符（如<code>_id</code>）来继续分页，而不需要从头开始查询。通过记录上一页的最后一条数据，查询可以直接从该位置开始，而不需要跳过前面的记录。</li><li>查询通常会基于某些排序字段（如<code>_id</code>、时间戳等）进行排序，以此来指示下一页的起始位置。</li></ul><h4 id="优缺点-2" tabindex="-1"><a class="header-anchor" href="#优缺点-2"><span>优缺点：</span></a></h4><ul><li><strong>优点</strong>：避免了传统分页中的性能问题，特别适合大规模数据集或深度分页查询。因为它跳过了不必要的记录，从而避免了<code>from</code>的性能瓶颈。</li><li><strong>缺点</strong>：需要明确的排序字段，并且可能会面临数据更新时的不一致性问题。适用于对数据一致性要求较高的场景。</li></ul><h4 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;query&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;match_all&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;sort&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;asc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;search_after&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;some_unique_value&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-滚动查询-scroll" tabindex="-1"><a class="header-anchor" href="#_4-滚动查询-scroll"><span>4. <strong>滚动查询（Scroll）</strong></span></a></h3><h4 id="操作原理-3" tabindex="-1"><a class="header-anchor" href="#操作原理-3"><span>操作原理：</span></a></h4><ul><li>滚动查询通过<code>scroll</code>参数获取一个查询快照，允许持续查询下一批数据。每次查询返回一个<code>scroll_id</code>，后续查询可以使用这个<code>scroll_id</code>继续获取数据，而不需要重新执行整个查询。</li><li>适用于需要长时间查询或批量导出数据的场景。</li></ul><h4 id="优缺点-3" tabindex="-1"><a class="header-anchor" href="#优缺点-3"><span>优缺点：</span></a></h4><ul><li><strong>优点</strong>：适用于批量数据提取，避免了深度分页的问题，并且能提供一致的查询结果，适合大规模数据集。</li><li><strong>缺点</strong>：由于滚动会话需要占用资源，长时间的滚动查询可能会消耗大量集群资源，因此需要合理设置超时时间。此外，滚动查询不适合实时查询场景。</li></ul><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;query&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;match_all&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;scroll&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1m&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_5-禁用总数计算-track-total-hits" tabindex="-1"><a class="header-anchor" href="#_5-禁用总数计算-track-total-hits"><span>5. <strong>禁用总数计算（<code>track_total_hits</code>）</strong></span></a></h3><h4 id="操作原理-4" tabindex="-1"><a class="header-anchor" href="#操作原理-4"><span>操作原理：</span></a></h4><ul><li><code>track_total_hits</code>允许禁用总记录数的计算，这可以提高分页查询的性能，特别是在不需要知道总数时。</li><li>设置<code>track_total_hits: false</code>时，Elasticsearch不会计算查询结果的总数，而是专注于返回数据本身。</li></ul><h4 id="优缺点-4" tabindex="-1"><a class="header-anchor" href="#优缺点-4"><span>优缺点：</span></a></h4><ul><li><strong>优点</strong>：提升查询性能，尤其是在处理大量数据时，避免了计算总数的开销。适用于不需要总数的场景。</li><li><strong>缺点</strong>：无法获得查询结果的总数，限制了某些应用场景的使用，例如需要显示总页数或总记录数的情形。</li></ul><h4 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;from&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;query&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;match_all&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;track_total_hits&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">false</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ul><li><strong>基本分页</strong>（<code>from</code> 和 <code>size</code>）适用于浅层分页，简单但在数据量大的时候效率低。</li><li><strong>深度分页</strong>基于<code>from</code>和<code>size</code>的递增，适用于中等数据量，但会遇到性能瓶颈。</li><li><strong>基于<code>search_after</code>的分页</strong>适用于大规模数据和深度分页，避免了传统分页的性能问题，效率较高。</li><li><strong>滚动查询</strong>适用于批量数据导出或大规模查询，避免深度分页的开销，但需要保持滚动会话。</li><li><strong>禁用总数计算</strong>通过关闭总数计算来提高性能，适合对结果总数不敏感的场景。</li></ul>',41))])}]]),h=JSON.parse('{"path":"/SpringCloud/ES/10.%E5%88%86%E9%A1%B5.html","title":"10.分页","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-searchengin","date":"2025-01-21T00:00:00.000Z","category":["ES"],"tag":["重点"],"gitInclude":[]},"headers":[{"level":3,"title":"1. 基本分页（from 和 size）","slug":"_1-基本分页-from-和-size","link":"#_1-基本分页-from-和-size","children":[]},{"level":3,"title":"2. 深度分页（基于from 和 size）","slug":"_2-深度分页-基于from-和-size","link":"#_2-深度分页-基于from-和-size","children":[]},{"level":3,"title":"3. 基于search_after的分页","slug":"_3-基于search-after的分页","link":"#_3-基于search-after的分页","children":[]},{"level":3,"title":"4. 滚动查询（Scroll）","slug":"_4-滚动查询-scroll","link":"#_4-滚动查询-scroll","children":[]},{"level":3,"title":"5. 禁用总数计算（track_total_hits）","slug":"_5-禁用总数计算-track-total-hits","link":"#_5-禁用总数计算-track-total-hits","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":3.92,"words":1176},"filePathRelative":"SpringCloud/ES/10.分页.md","localizedDate":"2025年1月21日","excerpt":"\\n<p>Elasticsearch的分页操作原理涉及如何高效地处理和返回大量数据的不同策略，避免性能瓶颈。以下是几种常见的分页方式及其优缺点：</p>\\n"}')}}]);