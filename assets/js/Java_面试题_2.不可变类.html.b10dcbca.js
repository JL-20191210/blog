"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5678],{6262:(o,t)=>{t.A=(o,t)=>{const l=o.__vccOpts||o;for(const[o,n]of t)l[o]=n;return l}},9375:(o,t,l)=>{l.r(t),l.d(t,{comp:()=>r,data:()=>s});var n=l(641);const e={},r=(0,l(6262).A)(e,[["render",function(o,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Fv)('<h1 id="_2-什么是-java-中的不可变类" tabindex="-1"><a class="header-anchor" href="#_2-什么是-java-中的不可变类"><span>2.什么是 Java 中的不可变类</span></a></h1><blockquote><p>[!tip]</p><p><strong>不可变类的定义</strong></p></blockquote><blockquote><p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p></blockquote><blockquote><p>[!tip]</p><p><strong>特征</strong></p></blockquote><blockquote><ol><li>类由final修饰，无法被子类继承</li><li>没有setter方法，无法修改字段。提供只读的getter方法</li><li>通过构造函数进行初始化</li><li>对象一旦创建，属性值就不能改变</li><li>深拷贝：如果类的字段是引用类型（如数组、集合、其他对象等），应确保字段的值在构造时被复制，而不是直接引用。否则，外部可能通过原始引用来修改对象的内容。</li></ol></blockquote><blockquote><p>[!tip]</p><p><strong>举个例子</strong></p></blockquote><blockquote><p><code>String Integer LocalDate UUID Optional </code></p></blockquote><blockquote><p>[!tip]</p><p>不可变类的优缺点</p></blockquote><blockquote><p><strong>优点：</strong></p><ol><li><strong>线程安全</strong>：对象状态不可改变，多个线程可以安全共享。</li><li><strong>安全性</strong>：外部无法修改对象的状态，确保数据一致性。</li><li><strong>缓存与共享</strong>：可缓存，避免重复创建，提升性能。</li><li><strong>简化调试</strong>：状态不可变，避免副作用，易于调试。</li><li><strong>设计简洁</strong>：强制性设计完整对象，避免不一致状态。</li></ol><p><strong>缺点：</strong></p><ol><li><strong>性能开销</strong>：频繁修改需要创建新对象，增加内存和垃圾回收负担。</li><li><strong>代码复杂性</strong>：需要小心实现，特别是包含引用类型字段时。</li><li><strong>不适用频繁修改</strong>：状态频繁变化的对象不适合使用不可变类。</li><li><strong>内存占用</strong>：频繁创建新对象可能导致较高的内存使用。</li></ol></blockquote>',9)]))}]]),s=JSON.parse('{"path":"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html","title":"2.什么是 Java 中的不可变类","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":1.42,"words":425},"filePathRelative":"Java/面试题/2.不可变类.md","excerpt":"\\n<blockquote>\\n<p>[!tip]</p>\\n<p><strong>不可变类的定义</strong></p>\\n</blockquote>\\n<blockquote>\\n<p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p>\\n</blockquote>\\n<blockquote>\\n<p>[!tip]</p>\\n<p><strong>特征</strong></p>\\n</blockquote>\\n<blockquote>\\n<ol>\\n<li>类由final修饰，无法被子类继承</li>\\n<li>没有setter方法，无法修改字段。提供只读的getter方法</li>\\n<li>通过构造函数进行初始化</li>\\n<li>对象一旦创建，属性值就不能改变</li>\\n<li>深拷贝：如果类的字段是引用类型（如数组、集合、其他对象等），应确保字段的值在构造时被复制，而不是直接引用。否则，外部可能通过原始引用来修改对象的内容。</li>\\n</ol>\\n</blockquote>"}')}}]);