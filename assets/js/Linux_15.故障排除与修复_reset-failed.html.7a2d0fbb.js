"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[95099],{66262:(e,t)=>{t.A=(e,t)=>{const s=e.__vccOpts||e;for(const[e,l]of t)s[e]=l;return s}},42821:(e,t,s)=>{s.r(t),s.d(t,{comp:()=>r,data:()=>a});var l=s(20641);const d={},r=(0,s(66262).A)(d,[["render",function(e,t){return(0,l.uX)(),(0,l.CE)("div",null,t[0]||(t[0]=[(0,l.Lk)("h1",{id:"reset-failed",tabindex:"-1"},[(0,l.Lk)("a",{class:"header-anchor",href:"#reset-failed"},[(0,l.Lk)("span",null,"reset-failed")])],-1),(0,l.Lk)("p",null,[(0,l.Lk)("code",null,"systemctl reset-failed"),(0,l.eW)(" 命令用于重置 Systemd 记录的所有失败的服务状态信息。当一个服务启动失败后，Systemd 会记录该服务的失败状态，这些状态信息可以帮助系统管理员诊断问题。但有时候，当问题已经解决或者不再需要这些失败状态信息时，可以使用 "),(0,l.Lk)("code",null,"systemctl reset-failed"),(0,l.eW)(" 命令将这些失败状态信息清除，以便重新开始服务的状态跟踪。")],-1),(0,l.Lk)("p",null,"重置失败状态信息后，Systemd 将不再记录之前失败的服务状态，这样在下一次服务启动时，Systemd 将重新开始跟踪服务的状态。这个命令通常用于清除旧的失败状态信息，以便更清晰地查看当前系统状态。",-1),(0,l.Lk)("p",null,"请注意，这个命令只会清除失败状态信息，不会影响正在运行的服务或已成功启动的服务。",-1)]))}]]),a=JSON.parse('{"path":"/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/reset-failed.html","title":"reset-failed","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[],"readingTime":{"minutes":0.81,"words":243},"filePathRelative":"Linux/15.故障排除与修复/reset-failed.md","excerpt":"\\n<p><code>systemctl reset-failed</code> 命令用于重置 Systemd 记录的所有失败的服务状态信息。当一个服务启动失败后，Systemd 会记录该服务的失败状态，这些状态信息可以帮助系统管理员诊断问题。但有时候，当问题已经解决或者不再需要这些失败状态信息时，可以使用 <code>systemctl reset-failed</code> 命令将这些失败状态信息清除，以便重新开始服务的状态跟踪。</p>\\n<p>重置失败状态信息后，Systemd 将不再记录之前失败的服务状态，这样在下一次服务启动时，Systemd 将重新开始跟踪服务的状态。这个命令通常用于清除旧的失败状态信息，以便更清晰地查看当前系统状态。</p>"}')}}]);