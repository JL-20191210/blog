"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[85815],{66262:(e,i)=>{i.A=(e,i)=>{const s=e.__vccOpts||e;for(const[e,a]of i)s[e]=a;return s}},60166:(e,i,s)=>{s.r(i),s.d(i,{comp:()=>n,data:()=>h});var a=s(20641);const t=s.p+"assets/img/fenzhi.d5abb047.jpeg",l=s.p+"assets/img/merge-2051602.bf4e57df.jpeg",d=s.p+"assets/img/rebase.f41cf70a.jpeg",r={},n=(0,s(66262).A)(r,[["render",function(e,i){return(0,a.uX)(),(0,a.CE)("div",null,i[0]||(i[0]=[(0,a.Fv)('<h1 id="☕-git-面试答题卡-merge-和-rebase-全面详解" tabindex="-1"><a class="header-anchor" href="#☕-git-面试答题卡-merge-和-rebase-全面详解"><span>☕ Git 面试答题卡：<code>merge</code> 和 <code>rebase</code> 全面详解</span></a></h1><hr><h2 id="✅-一句话概括" tabindex="-1"><a class="header-anchor" href="#✅-一句话概括"><span>✅ 一句话概括</span></a></h2><blockquote><p><code>merge</code> 用于合并分支，保留分支历史；<code>rebase</code> 将当前分支的提交变基到目标分支之上，历史更线性，但可能重写提交历史。</p></blockquote><hr><h2 id="🧱-基本概念" tabindex="-1"><a class="header-anchor" href="#🧱-基本概念"><span>🧱 基本概念</span></a></h2><table><thead><tr><th>命令</th><th>定义说明</th></tr></thead><tbody><tr><td><code>git merge</code></td><td>合并两个分支，生成一个新的合并提交，保留所有历史</td></tr><tr><td><code>git rebase</code></td><td>将当前分支的提交“搬到”目标分支之后，使提交历史更整洁</td></tr></tbody></table><hr><h2 id="🗄-图示比较-merge-vs-rebase" tabindex="-1"><a class="header-anchor" href="#🗄-图示比较-merge-vs-rebase"><span>🗄 图示比较：merge vs rebase</span></a></h2><h3 id="📌-原始提交历史结构" tabindex="-1"><a class="header-anchor" href="#📌-原始提交历史结构"><span>📌 原始提交历史结构</span></a></h3><figure><img src="'+t+'" alt="fenzhi" tabindex="0" loading="lazy"><figcaption>fenzhi</figcaption></figure><h3 id="✅-使用-git-merge-develop" tabindex="-1"><a class="header-anchor" href="#✅-使用-git-merge-develop"><span>✅ 使用 <code>git merge develop</code></span></a></h3><figure><img src="'+l+'" alt="merge" tabindex="0" loading="lazy"><figcaption>merge</figcaption></figure><ul><li>保留了分支结构</li><li><code>M</code> 是合并提交 (merge commit)</li></ul><hr><h3 id="✅-使用-git-rebase-develop" tabindex="-1"><a class="header-anchor" href="#✅-使用-git-rebase-develop"><span>✅ 使用 <code>git rebase develop</code></span></a></h3><figure><img src="'+d+'" alt="rebase" tabindex="0" loading="lazy"><figcaption>rebase</figcaption></figure><ul><li>把 feature 分支 rebase（变基）到 develop 分支的意思是：让你现在的 feature 分支基于最新的 develop 分支重新开发（创建副本并且移动到末尾）</li><li>B、C 被复制为新的 B&#39;、C&#39;，历史变得线性</li><li>更整洁，但提交被 <strong>重写</strong></li></ul><hr><h2 id="⚙️-常用命令" tabindex="-1"><a class="header-anchor" href="#⚙️-常用命令"><span>⚙️ 常用命令</span></a></h2><h3 id="🔹-合并分支-推荐用于公共分支" tabindex="-1"><a class="header-anchor" href="#🔹-合并分支-推荐用于公共分支"><span>🔹 合并分支（推荐用于公共分支）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> topic</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> develop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔹-变基分支-推荐用于本地开发整理" tabindex="-1"><a class="header-anchor" href="#🔹-变基分支-推荐用于本地开发整理"><span>🔹 变基分支（推荐用于本地开发整理）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> topic</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rebase</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> develop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🧠-主要区别总结" tabindex="-1"><a class="header-anchor" href="#🧠-主要区别总结"><span>🧠 主要区别总结</span></a></h2><table><thead><tr><th>对比项</th><th><code>merge</code></th><th><code>rebase</code></th></tr></thead><tbody><tr><td>历史结构</td><td>保留分支结构</td><td>改写为线性结构</td></tr><tr><td>是否重写提交</td><td>❌ 否</td><td>✅ 是 (新的提交 ID)</td></tr><tr><td>是否生成新提交</td><td>✅ 是 (合并提交)</td><td>❌ 否 (直接改原提交)</td></tr><tr><td>推荐使用场景</td><td>合并多人分支、发布前集成</td><td>本地提交整理、开发中清理无效提交</td></tr><tr><td>使用难度</td><td>简单，冲突较少</td><td>较复杂，冲突多需 <code>rebase --continue</code></td></tr><tr><td>适合共享分支</td><td>✅ 是</td><td>❌ 否，慎用于已 push 的分支</td></tr></tbody></table><hr><h2 id="🚫-注意事项-rebase-会改变历史" tabindex="-1"><a class="header-anchor" href="#🚫-注意事项-rebase-会改变历史"><span>🚫 注意事项：<code>rebase</code> 会改变历史！</span></a></h2><ul><li>会更改提交 SHA 值</li><li><strong>不要 rebase 已 push 的公共分支</strong>，可能造成同步出错</li><li>遇到冲突需手动解冲并执行 <code>git rebase --continue</code></li></ul><hr><h2 id="🌟-使用推荐" tabindex="-1"><a class="header-anchor" href="#🌟-使用推荐"><span>🌟 使用推荐</span></a></h2><table><thead><tr><th>目的</th><th>推荐使用方式</th></tr></thead><tbody><tr><td>多人协作，合并开发分支</td><td><code>merge</code> ✅</td></tr><tr><td>本地开发中整理提交</td><td><code>rebase</code> ✅</td></tr><tr><td>避免提交历史混乱</td><td><code>merge</code> ✅</td></tr><tr><td>提交经纪，线性且便于 review</td><td><code>rebase</code> ✅</td></tr></tbody></table><hr><h2 id="🛠-推荐配合命令" tabindex="-1"><a class="header-anchor" href="#🛠-推荐配合命令"><span>🛠 推荐配合命令</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-ff</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               # 保留合并提交</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rebase</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HEAD~5</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 交互式 rebase，合并/删除提交</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --graph</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --oneline</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --all</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看提交历史结构图</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="✏️-面试答题模板-建议背识" tabindex="-1"><a class="header-anchor" href="#✏️-面试答题模板-建议背识"><span>✏️ 面试答题模板（建议背识）</span></a></h2><blockquote><p><code>merge</code> 和 <code>rebase</code> 都可用于合并分支。<code>merge</code> 保留所有历史，生成合并提交，适合团队协作；而 <code>rebase</code> 会将提交挪到目标分支后，形成更线性的提交历史，但会修改原始提交，适合单人开发阶段整理历史。推荐：本地开发用 rebase，协作提交用 merge。</p></blockquote><hr><h2 id="📚-抽象阅读" tabindex="-1"><a class="header-anchor" href="#📚-抽象阅读"><span>📚 抽象阅读</span></a></h2><ul><li><code>git rebase -i</code> 交互式操作（squash 合并多个 commit）</li><li><code>git cherry-pick</code> 与 <code>rebase</code> 对比</li><li><code>git reflog</code>：历史恢复神器</li><li>Git flow 工作流中的 merge/rebase 策略s</li></ul>',42)]))}]]),h=JSON.parse('{"path":"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Git/Merge%20VS%20Rebase.html","title":"Git 面试答题卡：merge 和 rebase 全面详解","lang":"zh-CN","frontmatter":{"title":"Git 面试答题卡：merge 和 rebase 全面详解","icon":"fa-brands fa-git-alt","date":"2025-07-09T00:00:00.000Z","author":"JeanHu","category":["Git"],"tag":["Git","merge","rebase","版本控制"],"summary":"本文详细对比了 Git 中 merge 和 rebase 的概念、图示、使用场景、命令和注意事项，适用于面试准备与实战复习。","gitInclude":[]},"headers":[{"level":2,"title":"✅ 一句话概括","slug":"✅-一句话概括","link":"#✅-一句话概括","children":[]},{"level":2,"title":"🧱 基本概念","slug":"🧱-基本概念","link":"#🧱-基本概念","children":[]},{"level":2,"title":"🗄 图示比较：merge vs rebase","slug":"🗄-图示比较-merge-vs-rebase","link":"#🗄-图示比较-merge-vs-rebase","children":[{"level":3,"title":"📌 原始提交历史结构","slug":"📌-原始提交历史结构","link":"#📌-原始提交历史结构","children":[]},{"level":3,"title":"✅ 使用 git merge develop","slug":"✅-使用-git-merge-develop","link":"#✅-使用-git-merge-develop","children":[]},{"level":3,"title":"✅ 使用 git rebase develop","slug":"✅-使用-git-rebase-develop","link":"#✅-使用-git-rebase-develop","children":[]}]},{"level":2,"title":"⚙️ 常用命令","slug":"⚙️-常用命令","link":"#⚙️-常用命令","children":[{"level":3,"title":"🔹 合并分支（推荐用于公共分支）","slug":"🔹-合并分支-推荐用于公共分支","link":"#🔹-合并分支-推荐用于公共分支","children":[]},{"level":3,"title":"🔹 变基分支（推荐用于本地开发整理）","slug":"🔹-变基分支-推荐用于本地开发整理","link":"#🔹-变基分支-推荐用于本地开发整理","children":[]}]},{"level":2,"title":"🧠 主要区别总结","slug":"🧠-主要区别总结","link":"#🧠-主要区别总结","children":[]},{"level":2,"title":"🚫 注意事项：rebase 会改变历史！","slug":"🚫-注意事项-rebase-会改变历史","link":"#🚫-注意事项-rebase-会改变历史","children":[]},{"level":2,"title":"🌟 使用推荐","slug":"🌟-使用推荐","link":"#🌟-使用推荐","children":[]},{"level":2,"title":"🛠 推荐配合命令","slug":"🛠-推荐配合命令","link":"#🛠-推荐配合命令","children":[]},{"level":2,"title":"✏️ 面试答题模板（建议背识）","slug":"✏️-面试答题模板-建议背识","link":"#✏️-面试答题模板-建议背识","children":[]},{"level":2,"title":"📚 抽象阅读","slug":"📚-抽象阅读","link":"#📚-抽象阅读","children":[]}],"readingTime":{"minutes":2.6,"words":780},"filePathRelative":"Interview/面试答题卡/Git/Merge VS Rebase.md","localizedDate":"2025年7月9日","excerpt":"\\n<hr>\\n<h2>✅ 一句话概括</h2>\\n<blockquote>\\n<p><code>merge</code> 用于合并分支，保留分支历史；<code>rebase</code> 将当前分支的提交变基到目标分支之上，历史更线性，但可能重写提交历史。</p>\\n</blockquote>\\n<hr>\\n<h2>🧱 基本概念</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>命令</th>\\n<th>定义说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>git merge</code></td>\\n<td>合并两个分支，生成一个新的合并提交，保留所有历史</td>\\n</tr>\\n<tr>\\n<td><code>git rebase</code></td>\\n<td>将当前分支的提交“搬到”目标分支之后，使提交历史更整洁</td>\\n</tr>\\n</tbody>\\n</table>"}')}}]);