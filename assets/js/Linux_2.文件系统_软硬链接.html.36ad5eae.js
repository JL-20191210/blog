"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[64397],{66262:(i,t)=>{t.A=(i,t)=>{const n=i.__vccOpts||i;for(const[i,s]of t)n[i]=s;return n}},97843:(i,t,n)=>{n.r(t),n.d(t,{comp:()=>l,data:()=>e});var s=n(20641);const a={},l=(0,n(66262).A)(a,[["render",function(i,t){return(0,s.uX)(),(0,s.CE)("div",null,[t[0]||(t[0]=(0,s.Lk)("h1",{id:"软硬链接",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#软硬链接"},[(0,s.Lk)("span",null,"软硬链接")])],-1)),t[1]||(t[1]=(0,s.Lk)("p",null,"在Linux中，软链接（Symbolic Link）和硬链接（Hard Link）是两种不同的文件链接方式。它们都允许你创建指向文件或目录的引用，但它们在工作原理和用途上有一些显著的区别。以下是对两者的总结：",-1)),(0,s.Q3)(" more "),t[2]||(t[2]=(0,s.Fv)('<h3 id="_1-软链接-symbolic-link" tabindex="-1"><a class="header-anchor" href="#_1-软链接-symbolic-link"><span>1. <strong>软链接（Symbolic Link）</strong></span></a></h3><p>软链接类似于Windows中的快捷方式。它是一个独立的文件，存储目标文件或目录的路径，而不是指向文件的物理数据块。</p><h4 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点：</span></a></h4><ul><li><strong>指向路径</strong>：软链接包含一个目标文件或目录的路径，它是一个文本文件。</li><li><strong>可以跨文件系统</strong>：软链接可以指向不同文件系统中的文件或目录。</li><li><strong>可以指向目录</strong>：软链接不仅可以指向文件，也可以指向目录。</li><li><strong>如果目标不存在，链接“失效”</strong>：软链接指向的目标文件或目录如果被删除或移动，软链接就会变成“悬挂”链接，无法访问目标。</li><li><strong>权限</strong>：软链接有自己的权限，但它不会影响目标文件的权限。</li><li><strong>使用命令</strong>：<code>ln -s</code> 创建软链接。</li></ul><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例：</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to/target_file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点：</span></a></h4><ul><li>软链接可以跨文件系统。</li><li>软链接是独立文件，不影响原始文件。</li><li>可以指向目录。</li></ul><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点：</span></a></h4><ul><li>如果目标文件被删除或移动，软链接就会失效。</li></ul><hr><h3 id="_2-硬链接-hard-link" tabindex="-1"><a class="header-anchor" href="#_2-硬链接-hard-link"><span>2. <strong>硬链接（Hard Link）</strong></span></a></h3><p>硬链接是对同一文件内容的引用，它不依赖文件的路径，而是直接指向文件的物理数据块（即 inode）。多个硬链接指向同一文件时，它们实际上是同一个文件。</p><h4 id="特点-1" tabindex="-1"><a class="header-anchor" href="#特点-1"><span>特点：</span></a></h4><ul><li><strong>指向数据块（inode）</strong>：硬链接指向文件的 inode，而不是路径或文件名。</li><li><strong>无法跨文件系统</strong>：硬链接只能在同一个文件系统内创建，不能跨文件系统。</li><li><strong>不能指向目录</strong>：通常硬链接不能指向目录（除非是超级用户），只可以指向文件。</li><li><strong>文件删除时仍可访问</strong>：即使原始文件被删除，只要还有硬链接存在，文件内容仍然可以访问。</li><li><strong>共享相同的 inode 和权限</strong>：所有硬链接共享相同的 inode 和文件权限。</li><li><strong>使用命令</strong>：<code>ln</code> 创建硬链接。</li></ul><h4 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例：</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to/original_file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link_name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="优点-1" tabindex="-1"><a class="header-anchor" href="#优点-1"><span>优点：</span></a></h4><ul><li>硬链接不会因目标文件的删除或移动而失效，因为它们是直接指向同一数据块。</li><li>适合文件备份和恢复。</li></ul><h4 id="缺点-1" tabindex="-1"><a class="header-anchor" href="#缺点-1"><span>缺点：</span></a></h4><ul><li>不能跨文件系统创建硬链接。</li><li>硬链接无法指向目录。</li><li>在有多个硬链接指向同一文件时，无法轻松知道哪个链接是“原始”文件。</li></ul><hr><h3 id="软链接与硬链接的比较" tabindex="-1"><a class="header-anchor" href="#软链接与硬链接的比较"><span><strong>软链接与硬链接的比较</strong></span></a></h3><table><thead><tr><th>特性</th><th>软链接 (Symbolic Link)</th><th>硬链接 (Hard Link)</th></tr></thead><tbody><tr><td><strong>指向内容</strong></td><td>指向目标文件或目录的路径</td><td>指向目标文件的 inode（数据块）</td></tr><tr><td><strong>文件系统限制</strong></td><td>可以跨文件系统</td><td>只能在同一文件系统内创建</td></tr><tr><td><strong>是否可以指向目录</strong></td><td>可以</td><td>通常不可以</td></tr><tr><td><strong>目标文件删除后的行为</strong></td><td>软链接失效（悬挂链接）</td><td>硬链接继续有效，文件不会删除</td></tr><tr><td><strong>是否共享 inode</strong></td><td>不共享 inode，独立的文件</td><td>共享 inode，多个链接指向同一数据</td></tr><tr><td><strong>删除时影响</strong></td><td>删除软链接不会影响目标文件</td><td>删除任何硬链接，只要还有硬链接，文件内容不受影响</td></tr><tr><td><strong>文件权限</strong></td><td>有自己的权限</td><td>共享原文件的权限</td></tr><tr><td><strong>创建命令</strong></td><td><code>ln -s</code></td><td><code>ln</code></td></tr></tbody></table><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结</strong></span></a></h3><ul><li><strong>软链接</strong>是一个指向文件路径的引用，适合于跨文件系统、指向目录，且可以灵活地创建和删除，但目标文件被删除后软链接会失效。</li><li><strong>硬链接</strong>是多个引用共享同一数据块，它不依赖文件路径，适合文件备份，但不能跨文件系统且无法指向目录。硬链接被删除时，文件内容只会在所有链接都被删除时才真正删除。</li></ul><p>根据实际需求选择软链接或硬链接可以优化文件管理、提高灵活性和系统性能。</p>',28))])}]]),e=JSON.parse('{"path":"/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5.html","title":"软硬链接","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-linux","date":"2025-02-11T00:00:00.000Z","category":["Linux"],"tag":["基础"],"gitInclude":[]},"headers":[{"level":3,"title":"1. 软链接（Symbolic Link）","slug":"_1-软链接-symbolic-link","link":"#_1-软链接-symbolic-link","children":[]},{"level":3,"title":"2. 硬链接（Hard Link）","slug":"_2-硬链接-hard-link","link":"#_2-硬链接-hard-link","children":[]},{"level":3,"title":"软链接与硬链接的比较","slug":"软链接与硬链接的比较","link":"#软链接与硬链接的比较","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":3.59,"words":1078},"filePathRelative":"Linux/2.文件系统/软硬链接.md","localizedDate":"2025年2月11日","excerpt":"\\n<p>在Linux中，软链接（Symbolic Link）和硬链接（Hard Link）是两种不同的文件链接方式。它们都允许你创建指向文件或目录的引用，但它们在工作原理和用途上有一些显著的区别。以下是对两者的总结：</p>\\n"}')}}]);