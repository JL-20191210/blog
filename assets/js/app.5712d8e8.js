"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[33524],{61709:(i,s,l)=>{l.d(s,{l:()=>e});const e={category:{"/":{path:"/category/",map:{markdown:{path:"/category/markdown/",indexes:[0,1]},Java:{path:"/category/java/",indexes:[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]},MySQL:{path:"/category/mysql/",indexes:[0,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82]},ES:{path:"/category/es/",indexes:[0,83,84,85,86,87,88,89,90,91,92,93,94]},Spring:{path:"/category/spring/",indexes:[0,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113]},JVM:{path:"/category/jvm/",indexes:[0,114,115,116,117,118,119,120,121]},Linux:{path:"/category/linux/",indexes:[0,122,123,124,125,126,127,77,79,128,129]},Netty:{path:"/category/netty/",indexes:[0,130,131,132,133,134,135,136,137,138]},docker:{path:"/category/docker/",indexes:[0,139,140,141,142,143]},Mybatis:{path:"/category/mybatis/",indexes:[0,144,145,146,147,148,149,150]},实战:{path:"/category/%E5%AE%9E%E6%88%98/",indexes:[0,151,152,153,154,155,156,157]},Nacos:{path:"/category/nacos/",indexes:[0,158,159,160,161,162,163]},装机:{path:"/category/%E8%A3%85%E6%9C%BA/",indexes:[0,164,165,166,167,168]},数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[0,61,62,63,65,71,72,169]},Python:{path:"/category/python/",indexes:[0,170,171,172]},项目:{path:"/category/%E9%A1%B9%E7%9B%AE/",indexes:[0,173,174,175]},Git:{path:"/category/git/",indexes:[0,176,177,178]},"Mybatis-Plus":{path:"/category/mybatis-plus/",indexes:[0]},SpringCloud高级篇:{path:"/category/springcloud%E9%AB%98%E7%BA%A7%E7%AF%87/",indexes:[0,179,180,181,182,183,184,185,186]},vue:{path:"/category/vue/",indexes:[0,187,188]},Redis:{path:"/category/redis/",indexes:[0,189,190,191]},Java高级:{path:"/category/java%E9%AB%98%E7%BA%A7/",indexes:[0,192,193]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0,194]},中间件:{path:"/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",indexes:[0,195]},Nginx:{path:"/category/nginx/",indexes:[0,196]},网络:{path:"/category/%E7%BD%91%E7%BB%9C/",indexes:[0,197]},Java基础:{path:"/category/java%E5%9F%BA%E7%A1%80/",indexes:[0,198]},SpringCloud实用篇:{path:"/category/springcloud%E5%AE%9E%E7%94%A8%E7%AF%87/",indexes:[0,199]},DevOps:{path:"/category/devops/",indexes:[0,200,201,202]},Maven:{path:"/category/maven/",indexes:[0,203]},面试题:{path:"/category/%E9%9D%A2%E8%AF%95%E9%A2%98/",indexes:[102,204,205,206,207,208]},网络编程:{path:"/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",indexes:[138]},redis:{path:"/category/redis/",indexes:[209]},面渣逆袭:{path:"/category/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",indexes:[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226]},MyBatis:{path:"/category/mybatis/",indexes:[96]},SpringCloud:{path:"/category/springcloud/",indexes:[227]},MyCat:{path:"/category/mycat/",indexes:[66,67,68,69,70]},Windows:{path:"/category/windows/",indexes:[59,60]},"MyBatis-Plus":{path:"/category/mybatis-plus/",indexes:[228,229,230]}}}},tag:{"/":{path:"/tag/",map:{使用:{path:"/tag/%E4%BD%BF%E7%94%A8/",indexes:[0,1]},必背:{path:"/tag/%E5%BF%85%E8%83%8C/",indexes:[0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43]},总结:{path:"/tag/%E6%80%BB%E7%BB%93/",indexes:[0,176,4,177,178,114,115,116,117,118,119,120,121,124,126,127,108,187,158,159,160,128,129,161,162,113]},Java8特性:{path:"/tag/java8%E7%89%B9%E6%80%A7/",indexes:[0,44,45,50,51,52,53,54,55,56,57,58]},注解:{path:"/tag/%E6%B3%A8%E8%A7%A3/",indexes:[0,230,103,104,105,106,107,109,110,111,112]},重点:{path:"/tag/%E9%87%8D%E7%82%B9/",indexes:[0,83,84,85,87,88,89,91,92,93]},教程:{path:"/tag/%E6%95%99%E7%A8%8B/",indexes:[0,130,131,132,169,173,137,174,175]},讲义:{path:"/tag/%E8%AE%B2%E4%B9%89/",indexes:[0,203,95,96,97,98,99,100,101,62,199,181,185,186,189,190,86,90,94,46,191]},bug:{path:"/tag/bug/",indexes:[0,151,152,153,154,155,156,157]},查询:{path:"/tag/%E6%9F%A5%E8%AF%A2/",indexes:[0,144,145,146,147,148,149]},阅读完毕:{path:"/tag/%E9%98%85%E8%AF%BB%E5%AE%8C%E6%AF%95/",indexes:[0,203,95,96,97,98,99,100,101,62,72,192,181,185,186,189,190,130,131,191]},基础:{path:"/tag/%E5%9F%BA%E7%A1%80/",indexes:[0,122,123,170,171,80]},装机:{path:"/tag/%E8%A3%85%E6%9C%BA/",indexes:[0,164,165,166,167,168]},镜像:{path:"/tag/%E9%95%9C%E5%83%8F/",indexes:[0,140,141,142]},了解:{path:"/tag/%E4%BA%86%E8%A7%A3/",indexes:[0,64,48,49]},笔记:{path:"/tag/%E7%AC%94%E8%AE%B0/",indexes:[0,63,71,72]},踩坑:{path:"/tag/%E8%B8%A9%E5%9D%91/",indexes:[0,76,81,82]},经验:{path:"/tag/%E7%BB%8F%E9%AA%8C/",indexes:[0,188]},网络编程:{path:"/tag/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",indexes:[0,135,136]},事务:{path:"/tag/%E4%BA%8B%E5%8A%A1/",indexes:[0,64,227,75]},安全:{path:"/tag/%E5%AE%89%E5%85%A8/",indexes:[0,73,74]},面试题:{path:"/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/",indexes:[0,102,204,205,4,198,207,208]},反射:{path:"/tag/%E5%8F%8D%E5%B0%84/",indexes:[0,2,3]},SE基础:{path:"/tag/se%E5%9F%BA%E7%A1%80/",indexes:[0,5,6]},Seata:{path:"/tag/seata/",indexes:[0,179,180,181,182,184,186]},容器:{path:"/tag/%E5%AE%B9%E5%99%A8/",indexes:[0,143]},命令:{path:"/tag/%E5%91%BD%E4%BB%A4/",indexes:[0,195]},基础知识:{path:"/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",indexes:[0,125]},入门:{path:"/tag/%E5%85%A5%E9%97%A8/",indexes:[0,133]},error:{path:"/tag/error/",indexes:[0,196]},git:{path:"/tag/git/",indexes:[0,197]},网络:{path:"/tag/%E7%BD%91%E7%BB%9C/",indexes:[0,197]},安装:{path:"/tag/%E5%AE%89%E8%A3%85/",indexes:[0,0,60,78,79]},私有云:{path:"/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",indexes:[0,139]},坑王:{path:"/tag/%E5%9D%91%E7%8E%8B/",indexes:[0,47]},简单:{path:"/tag/%E7%AE%80%E5%8D%95/",indexes:[0,198]},插件:{path:"/tag/%E6%8F%92%E4%BB%B6/",indexes:[0,150]},API:{path:"/tag/api/",indexes:[0,134]},爬虫:{path:"/tag/%E7%88%AC%E8%99%AB/",indexes:[0,172]},RabbitMQ:{path:"/tag/rabbitmq/",indexes:[0,199]},多线程:{path:"/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",indexes:[0,192]},反射动态代理:{path:"/tag/%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",indexes:[0,193]},高级特性:{path:"/tag/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/",indexes:[0,4]},接口文档:{path:"/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",indexes:[0,228]},接口示例:{path:"/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",indexes:[0,229]},配置文件:{path:"/tag/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",indexes:[0,61,68,69,70,184]},Sentinel:{path:"/tag/sentinel/",indexes:[0,185]},分布式事务:{path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",indexes:[0,179,180,181,182,184,186]},微服务:{path:"/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",indexes:[0,179,180,181,182,184]},分库分表:{path:"/tag/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",indexes:[0,66,67]},卸载:{path:"/tag/%E5%8D%B8%E8%BD%BD/",indexes:[0,59,77]},CICD:{path:"/tag/cicd/",indexes:[0,200,201,202]},Jenkins:{path:"/tag/jenkins/",indexes:[0,201,202]},目录:{path:"/tag/%E7%9B%AE%E5%BD%95/",indexes:[65]},高质量:{path:"/tag/%E9%AB%98%E8%B4%A8%E9%87%8F/",indexes:[102,204,205]},低质量:{path:"/tag/%E4%BD%8E%E8%B4%A8%E9%87%8F/",indexes:[207,208]},面渣逆袭:{path:"/tag/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",indexes:[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226]},SQL优化:{path:"/tag/sql%E4%BC%98%E5%8C%96/",indexes:[80]},yum安装:{path:"/tag/yum%E5%AE%89%E8%A3%85/",indexes:[78]},docker安装:{path:"/tag/docker%E5%AE%89%E8%A3%85/",indexes:[78]},课堂随笔:{path:"/tag/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/",indexes:[183]}}}}}},94776:(i,s,l)=>{l.d(s,{M:()=>e});const e=["/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE.html","/emoji.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html","/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html","/Netty/1.%E9%BB%91%E9%A9%AC%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/SSM/","/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html","/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html","/Java/String/isNotEmpty%E5%92%8CisNotBlank.html","/Java/","/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html","/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html","/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows%E7%89%88.html","/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/MySQL%E5%AE%89%E8%A3%85.html","/Database/MySQL/%E8%BF%90%E7%BB%B4/MyCat%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E5%90%AB%E4%B9%89.html","/Database/MySQL/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E7%AF%87.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%87%BA%E7%8E%B0%E8%AF%BB%E5%8F%96%E8%AE%B0%E5%BD%95%E7%9A%84%E4%BA%8B%E5%8A%A1id%E6%AF%94%E5%88%9B%E5%BB%BAreadview%E7%9A%84%E4%BA%8B%E5%8A%A1id%E5%A4%A7.html","/Database/MySQL/","/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat-web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html","/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html","/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/rule.html","/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/schema.html","/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/server.html","/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/%E7%AC%94%E8%AE%B0-%E8%BF%9B%E9%98%B6%E7%AF%87.html","/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html","/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html","/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html","/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html","/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/MySQL%E5%8D%B8%E8%BD%BD-Linux.html","/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html","/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html","/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/union%E5%92%8CunionAll.html","/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html","/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/mysql-uroot-p%E6%8A%A5%E9%94%99.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/10.%E5%88%86%E9%A1%B5.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/8.%E5%B8%B8%E8%A7%81%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/9.copy_to%E7%9A%84%E7%94%A8%E6%B3%95.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E02.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/1.%E4%BB%80%E4%B9%88%E6%98%AFES.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/2.%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/3.%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/4.%E5%AE%89%E8%A3%85elasticsearch.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/5.%E5%88%86%E8%AF%8D%E5%99%A8.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/6.mapping%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/7.%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%BA%93.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E01.html","/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/SpringBoot.html","/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/MyBatisPlus.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/Spring_day01.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/Spring_day02.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/Spring_day03.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/SpringMVC_day01.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/SpringMVC_day02.html","/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%9841.html","/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html","/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html","/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html","/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html","/SpringMVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html","/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html","/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html","/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html","/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html","/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html","/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html","/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html","/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html","/JVM/GC%E7%B1%BB%E5%9E%8B.html","/JVM/OOM.html","/JVM/","/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html","/JVM/jstack%E7%94%A8%E6%B3%95.html","/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E8%AF%A2%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE.html","/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html","/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html","/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html","/Netty/02Netty-%E5%85%A5%E9%97%A8.html","/Netty/03Netty-%E8%BF%9B%E9%98%B6.html","/Netty/04Netty-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html","/Netty/Channel.html","/Netty/API/ExecutorService.html","/Netty/%E5%85%B3%E9%97%AD%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BB%84.html","/Netty/%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3.html","/Netty/01Netty-nio.html","/Netty/","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html","/Docker/%E9%9A%8F%E7%AC%94/pull.html","/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html","/Docker/%E9%9A%8F%E7%AC%94/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html","/Docker/%E9%9A%8F%E7%AC%94/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html","/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html","/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html","/Mybatis/Mybatis%20Plus/this.page().html","/Mybatis/Mybatis%20Plus/where%201_1.html","/Mybatis/Mybatis%20Plus/wrapper.and().html","/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html","/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html","/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/","/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%BC%80%E5%85%B3%E5%B1%8F%E5%B9%95.html","/%E8%A3%85%E6%9C%BA/AMD%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html","/%E8%A3%85%E6%9C%BA/Intel%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html","/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA%E8%BF%9B%E9%98%B6.html","/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html","/Database/Redis/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html","/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html","/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html","/VCS/Git/%E5%88%A0%E9%99%A4%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E6%8E%A8%E9%80%81.html","/VCS/Git/%E5%BF%BD%E7%95%A5idea%E6%96%87%E4%BB%B6%E5%A4%B9.html","/VCS/Git/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E8%87%B3%E8%BF%9C%E7%A8%8B%E5%BA%93.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata1.4.2%E5%8D%87%E7%BA%A72.0.0%E6%B3%A8%E6%84%8F%E7%82%B9.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E5%9B%9B%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html","/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html","/Vue/","/Vue/vue%E6%A8%A1%E6%9D%BF.html","/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87-%E5%9C%A8%E7%BA%BF.html","/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87.html","/Database/Redis/1.%E5%85%A5%E9%97%A8/Redis%E5%9F%BA%E7%A1%80%E7%AF%87.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Docker/","/MQ/Kafka/%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6demo.html","/Nginx/413%20(Request%20Entity%20Too%20Large).html","/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html","/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/RabbitMQ.html","/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E4%B8%8A%E4%BC%A0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8.html","/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2.html","/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%EF%BC%9A%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%20Docker%20%E9%95%9C%E5%83%8F%E3%80%81%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/Maven%E9%AB%98%E7%BA%A7.html","/Interview/MySQL/MySQL%E9%BB%91%E9%A9%AC23.html","/Interview/MySQL/MySQL%E9%9D%A2%E6%B8%A384.html","/Interview/","/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160-%E4%BC%98%E5%8C%96%E7%89%88.html","/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160.html","/Database/Redis/","/Interview/sanfene/mysql.html","/Interview/sanfene/jvm.html","/Interview/sanfene/linux.html","/Interview/sanfene/network.html","/Interview/sanfene/javase.html","/Interview/sanfene/mybatis.html","/Interview/sanfene/shejimoshi.html","/Interview/sanfene/spring.html","/Interview/sanfene/redis.html","/Interview/sanfene/os.html","/Interview/sanfene/collection.html","/Interview/sanfene/javathread.html","/Interview/sanfene/fenbushi.html","/Interview/sanfene/netty.html","/Interview/sanfene/nixi.html","/Interview/sanfene/rocketmq.html","/Interview/sanfene/weifuwu.html","/SpringCloud/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1ACID%E5%8E%9F%E5%88%99.html","/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html","/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html","/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html","/Spring/","/SpringMVC/%E6%A0%A1%E9%AA%8C/","/intro.html","/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html","/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html","/JVM/%E9%BB%91%E9%A9%ACJVM.html","/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html","/Linux/","/Netty/%E9%87%8A%E6%94%BEByteBuf.html","/Nginx/","/Python/","/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html","/%E7%BD%91%E7%BB%9C/L2TPIPsec.html","/%E7%BD%91%E7%BB%9C/L2TP%E5%92%8CIPsec%E5%8D%8F%E8%AE%AE%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7.html","/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%90%88%E7%9B%96%E4%B8%8D%E4%BC%91%E7%9C%A0.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html","/Bug/Java/InaccessibleObjectException.html","/Database/Redis/Redis%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F.html","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html","/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html","/Docker/%E9%9A%8F%E7%AC%94/Dockerfile%20%E6%9E%84%E5%BB%BA%20Spring%20Boot%20%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%9C%8D%E5%8A%A1.html","/Docker/%E9%9A%8F%E7%AC%94/docker-compose%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html","/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85jenkins%E5%8F%8A%E9%85%8D%E7%BD%AE.html","/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html","/Docker/%E9%9A%8F%E7%AC%94/%E5%AE%89%E8%A3%85NocoDB.html","/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%8D%B7%E7%9B%AE%E5%BD%95.html","/Docker/%E9%9A%8F%E7%AC%94/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html","/Interview/Java/","/Interview/Spring/Spring%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Bean%20%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html","/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90%E5%8F%8A%E6%80%BB%E7%BB%93.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html","/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html","/Java/String/Java%E4%B8%AD%E9%87%8D%E5%86%99toString.html","/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/BeanUtil.html","/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/Java%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8C%85.html","/Java/%E5%BC%82%E5%B8%B8/try-with-resources%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%E8%B5%84%E6%BA%90.html","/Java/%E9%9A%8F%E7%AC%94/Java%20%E4%B8%AD%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F.html","/Java/%E9%9A%8F%E7%AC%94/Java%20%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6.html","/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.html","/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0.html","/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/V2ray%E5%AE%89%E8%A3%85.html","/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/systemctl.html","/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/reset-failed.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/daemon-reload.html","/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/rc.local.html","/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/%E4%BF%AE%E6%94%B9yum%E6%BA%90.html","/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%BF%9B%E7%A8%8B.html","/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/dos2unix%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%B8%85%E7%90%86.html","/MQ/RabbitMQ/%E4%BB%80%E4%B9%88%E6%98%AFRabbitMQ.html","/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html","/Mybatis/Mybatis%20Plus/Mybatis%20Plus%E7%AC%94%E8%AE%B0.html","/Netty/API/API.html","/Python/%E5%9F%BA%E7%A1%80/video.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/POM%E6%96%87%E4%BB%B6%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html","/Spring/Junit/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3.html","/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html","/SpringCloud/%E9%AB%98%E7%BA%A7/","/SpringMVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html","/SpringMVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html","/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html","/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html","/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/socket%E6%98%AF%E4%BB%80%E4%B9%88.html","/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html","/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/mysql%E6%98%AF%E4%BB%80%E4%B9%88_%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/DCL%E8%AF%AD%E5%8F%A5%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80DCL.html","/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%BA%A6%E6%9D%9F%E5%8F%8A%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%BC%94%E7%A4%BA.html","/Database/MySQL/%E5%B7%A5%E5%85%B7/%E9%97%AA%E5%9B%9E-flashback.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","/Database/Redis/2.%E5%AE%9E%E6%88%98/pending-list.html","/Database/Redis/4.%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%90%86%E7%AF%87.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/18.%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/Java/02%E4%B8%AD%E7%AD%89/1.Java%E4%B8%ADString%E3%80%81StringBuffer%E5%92%8CStringBuilder%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/Java/02%E4%B8%AD%E7%AD%89/2.Java%E4%B8%ADvolatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8.html","/Interview/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87.html","/Interview/MQ/RabbitMQ/RabbitMQ%E9%9D%A2%E8%AF%95%E9%A2%98.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%20%E4%B8%AD%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java_%E5%A4%9A%E6%80%81_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/LSP%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E5%8F%8D%E4%BE%8B.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99%EF%BC%88DIP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99%EF%BC%88SRP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%88OCP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99%EF%BC%88ISP%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%9C%80%E5%B0%91%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%99%EF%BC%88LoD%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%EF%BC%88SOLID%20%E5%8F%8A%E7%9B%B8%E5%85%B3%EF%BC%89.html","/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/Linux%20%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%9F%BA%E7%A1%80%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/%E5%B9%B6%E5%8F%91%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/%E6%A1%86%E6%9E%B6%E7%AF%87%E8%AE%B2%E4%B9%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/%E9%9B%86%E5%90%8801.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%80%BB%E7%BB%93.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%85%A5%E5%8F%82%E5%A4%84%E7%90%86%E5%88%87%E9%9D%A2.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%88%87%E9%9D%A2.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E6%B3%A8%E8%A7%A3.html","/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E9%9A%8F%E7%AC%94.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E6%B3%A8%E8%A7%A3.html","/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E9%9A%8F%E7%AC%94.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/packaging%E7%B1%BB%E5%9E%8B.html","/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/pom%E4%B8%AD%E7%9A%84relativePath.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Centos7%E5%AE%89%E8%A3%85Docker.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Docker%E5%AE%9E%E7%94%A8%E7%AF%87.html","/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/1.MAC%E5%AE%89%E8%A3%85JMeter.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/2.Jmeter%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html","/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html","/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E4%B8%80%E4%B8%AA%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84%E7%BA%BF%E7%A8%8B.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.runnable%20%E5%92%8C%20callable%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E7%BA%BF%E7%A8%8B%E7%9A%84%20run()%E5%92%8C%20start()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E7%BA%BF%E7%A8%8B%E5%8C%85%E6%8B%AC%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81%EF%BC%8C%E7%8A%B6%E6%80%81%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E5%8F%98%E5%8C%96%E7%9A%84.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E6%96%B0%E5%BB%BA%20T1%E3%80%81T2%E3%80%81T3%20%E4%B8%89%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%AE%83%E4%BB%AC%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.notify()%E5%92%8C%20notifyAll()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E5%9C%A8%20java%20%E4%B8%AD%20wait%20%E5%92%8C%20sleep%20%E6%96%B9%E6%B3%95%E7%9A%84%E4%B8%8D%E5%90%8C.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/1.%E8%AE%B2%E4%B8%80%E4%B8%8Bsynchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/10.synchronized%E5%92%8CLock%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/11.%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E7%9A%84%E6%9D%A1%E4%BB%B6.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%AD%BB%E9%94%81%E5%88%A4%E6%96%AD.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E8%81%8A%E4%B8%80%E4%B8%8BConcurrentHashMap%20.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/13.%E5%AF%BC%E8%87%B4%E5%B9%B6%E5%8F%91%E7%A8%8B%E5%BA%8F%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/2.synchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-%E8%BF%9B%E9%98%B6.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/3.%E4%BD%A0%E8%B0%88%E8%B0%88%20JMM%EF%BC%88Java%20%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/4.CAS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%88%E5%90%AB%E4%B9%90%E8%A7%82%E6%82%B2%E8%A7%82%E9%94%81%EF%BC%89.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/5.%E8%AF%B7%E8%B0%88%E8%B0%88%E4%BD%A0%E5%AF%B9%20volatile%20%E7%9A%84%E7%90%86%E8%A7%A3.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/6.%E4%BB%80%E4%B9%88%E6%98%AFAQS.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/7.%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/8.%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E6%97%8B%E9%94%81.html","/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/9.ReentrantLock%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%88%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%EF%BC%89.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/1.Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/2.happens-before%E5%8E%9F%E5%88%99.html","/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/windows%E7%89%88sentinel%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86Unable%20to%20make%20protected%20final%20java.lang.Class%20java.lang.ClassLoader.define.html"]},53781:(i,s,l)=>{l.d(s,{U:()=>e});const e={article:{"/":{path:"/article/",indexes:[0,1,203,95,96,97,98,99,100,101,231,232,200,201,202,102,204,59,60,61,62,63,64,65,66,67,68,69,70,71,72,205,210,192,227,199,179,180,181,182,183,184,185,186,176,189,190,130,131,132,133,134,135,136,122,123,193,2,3,4,5,6,164,169,83,84,85,86,87,88,89,90,91,92,93,173,94,165,166,167,168,211,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,198,33,34,35,36,37,38,39,40,41,42,43,177,178,228,229,230,170,171,172,103,73,74,75,76,151,114,115,116,117,118,119,120,121,44,45,46,212,213,214,144,145,146,147,148,149,124,139,140,141,142,125,126,127,104,150,105,106,107,77,78,79,152,108,109,110,111,112,215,216,217,47,48,195,49,187,188,153,154,155,156,218,158,159,160,157,128,129,161,162,163,137,196,113,143,219,50,51,52,53,54,174,175,80,81,82,191,55,197,56,57,58,220,221,233,234,235,236,194,206,237,238,239,138,240,241,242,243,244,245,246,247,248,209,249,250,251,252,253,254,255,256,257,258,259,207,208,260,261,222,223,224,225,226,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394]}},star:{"/":{path:"/star/",indexes:[0,124,126,1]}},timeline:{"/":{path:"/timeline/",indexes:[203,95,96,97,98,99,100,101,231,232,200,201,202,102,204,0,59,60,61,62,63,64,65,66,67,68,69,70,71,72,205,210,192,227,199,179,180,181,182,183,184,185,186,176,189,190,130,131,132,133,134,135,136,122,123,193,2,3,4,5,6,164,169,83,84,85,86,87,88,89,90,91,92,93,173,94,165,166,167,168,211,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,198,33,34,35,36,37,38,39,40,41,42,43,177,178,228,229,230,170,171,172,103,73,74,75,76,151,114,115,116,117,118,119,120,121,44,45,46,212,213,214,144,145,146,147,148,149,124,139,140,141,142,125,126,127,104,150,105,106,107,77,78,79,152,108,109,110,111,112,215,216,217,47,48,195,49,187,188,153,154,155,156,218,158,159,160,157,1,128,129,161,162,163,137,196,113,143,219,50,51,52,53,54,174,175,80,81,82,191,55,197,56,57,58,220,221]}}}},17877:(i,s,l)=>{l.d(s,{B:()=>G});var e={};l.r(e);var a={};l.r(a);var n={};l.r(n),l.d(n,{default:()=>C});var t={};l.r(t);var h={};l.r(h),l.d(h,{default:()=>I});var k={};l.r(k),l.d(k,{default:()=>R});var p={};l.r(p),l.d(p,{default:()=>U});var r=l(60854),d=l(97786),A=l(47208),B=l(76367),g=l(48262),c=l(97247),E=l(7721),o=l(47128),y=l(71932),v=l(94075),u=l(86819),F=l(89299),m=l(91118),b=l(88073);const C={enhance:({app:i})=>{(0,r.L4)("Badge")||i.component("Badge",A.A),(0,r.L4)("BiliBili")||i.component("BiliBili",B.A),(0,r.L4)("CodePen")||i.component("CodePen",g.A),(0,r.L4)("FontIcon")||i.component("FontIcon",c.A),(0,r.L4)("PDF")||i.component("PDF",E.A),(0,r.L4)("Share")||i.component("Share",o.A),(0,r.L4)("SiteInfo")||i.component("SiteInfo",y.A),(0,r.L4)("StackBlitz")||i.component("StackBlitz",v.A),(0,r.L4)("VPBanner")||i.component("VPBanner",u.A),(0,r.L4)("VPCard")||i.component("VPCard",F.A),(0,r.L4)("VidStack")||i.component("VidStack",m.A),(0,r.L4)("XiGua")||i.component("XiGua",b.A)},setup:()=>{(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]};var _=l(26358),D=l(23827),f=l(74919),S=l(80142),x=l(38913),L=l(22184),M=l(33349),J=l(11781),w=l(19212);const I={enhance:({app:i})=>{i.component("CodeTabs",J.S),i.component("Tabs",w.t)}};var j=l(34081),q=l(83027);const R={enhance:({app:i})=>{i.component("CodeDemo",j.A),i.component("MdDemo",q.A)}};var Q=l(17040),P=l(22614),T=l(12159),O=l(80783),N=l(38465),V=l(20641),H=l(77107),z=l(79920);(0,N.M_)((i=>{const s=i.t,l=!1!==i.I,e=i.i;return l?{title:s,content:e?()=>[(0,V.h)(O.GB,{icon:e}),s]:null,order:i.O,index:i.I}:null}));const U={enhance:({app:i,router:s})=>{const{scrollBehavior:l}=s.options;s.options.scrollBehavior=async(...i)=>(await O.lE.wait(),l(...i)),(0,O.fk)(i),i.component("HopeIcon",O.GB),i.component("BloggerInfo",H.tI),i.component("SocialMedias",H.rS),i.component("GlobalEncrypt",z.J),i.component("LocalEncrypt",z.n)},setup:()=>{(0,O.PV)(),(0,O.i$)(),(0,H.su)()},layouts:{Layout:O.PE,NotFound:O.Mk,BlogCategory:H.Pn,BlogHome:H.qX,BlogType:H.z7,Timeline:H.Kf}},G=[e,a,n,_,D,f,S,x,L,M,t,h,k,Q,P,T,p].map((i=>i.default)).filter(Boolean)},68164:(i,s,l)=>{l.d(s,{J:()=>a,c:()=>e});const e=JSON.parse('{"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode,equals%20%E6%96%B9%E6%B3%95%E5%92%8C==%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html":"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Mybatis/Mybatis%20Plus/where%201=1.html":"/Mybatis/Mybatis%20Plus/where%201_1.html","/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B+tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html":"/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","/Interview/Java/01%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode,equals%20%E6%96%B9%E6%B3%95%E5%92%8C==%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html":"/Interview/Java/01%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB&%E6%8E%A5%E5%8F%A3&%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB&%E6%8E%A5%E5%8F%A3&%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B&Set&%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81&%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84&%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html":"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC,TM,RM.html":"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html"}'),a=Object.fromEntries([["/",{loader:()=>l.e(24470).then(l.bind(l,39908)),meta:{t:"主页",i:"home"}}],["/emoji.html",{loader:()=>l.e(42116).then(l.bind(l,8275)),meta:{d:17299872e5,l:"2024年10月27日",c:["markdown"],g:["使用"],u:!0,e:"\n<p>markdown语法中的小表情</p>\n",r:{minutes:3,words:899},t:"表情",i:"fa-solid fa-icons",y:"a"}}],["/intro.html",{loader:()=>l.e(63912).then(l.bind(l,33155)),meta:{v:"/assets/images/cover3.jpg",e:"\n<p>将你的个人介绍和档案放置在此处。</p>\n",r:{minutes:.12,words:36},t:"介绍页",i:"circle-info",y:"a"}}],["/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html",{loader:()=>l.e(80369).then(l.bind(l,57946)),meta:{e:"\n",r:{minutes:.77,words:232},t:"学习记录",y:"a"}}],["/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",{loader:()=>l.e(61680).then(l.bind(l,75961)),meta:{e:'\n<p>Java最高效学习路线图（依次向下顺序学习即可）</p>\n<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">graph TD;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    A[Java基础] --&gt; B[Javaweb+AI]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    B --&gt; C[苍穹外卖]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    C --&gt; D[AI+若依框架]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    D --&gt; E[微服务全套]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    E --&gt; F[学成在线项目]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    F --&gt; G[黑马头条项目]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    G --&gt; H[23年Java大厂面试]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    H --&gt; I[MySQL]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    I --&gt; J[JVM]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    J --&gt; K[数据结构与算法上部]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    K --&gt; L[数据结构与算法下部]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    L --&gt; M[SSM]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    M --&gt; N[springboot]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    N --&gt; O[Spring高级]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    O --&gt; P[springcloud]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    P --&gt; Q[Docker]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Q --&gt; R[Git]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    R --&gt; S[Maven]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    S --&gt; T[Dubbo]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    T --&gt; U[Zookeeper]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    U --&gt; V[Redis]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    V --&gt; W[MongoDB]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    W --&gt; X[RabbitMQ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    X --&gt; Y[RocketMQ]</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    %% Links</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    A:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    B:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    C:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    D:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    E:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    F:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    G:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    H:::link1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    I:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    J:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    K:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    L:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    M:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    N:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    O:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    P:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Q:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    R:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    S:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    T:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    U:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    V:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    W:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    X:::link2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    Y:::link2</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    classDef link1 fill:#ffcc00,stroke:#333,stroke-width:2px;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    classDef link2 fill:#66ccff,stroke:#333,stroke-width:2px;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.44,words:432},t:"学习路线",y:"a"}}],["/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE.html",{loader:()=>l.e(6517).then(l.bind(l,59742)),meta:{d:17426016e5,l:"2025年3月22日",c:["Java","MySQL","ES","Spring","JVM","Linux","Netty","docker","Mybatis","实战","Nacos","装机","数据库","Python","项目","Git","Mybatis-Plus","SpringCloud高级篇","vue","Redis","Java高级","markdown","使用指南","中间件","Nginx","网络","Java基础","SpringCloud实用篇","DevOps","Maven"],g:["必背","总结","Java8特性","注解","重点","教程","讲义","bug","查询","阅读完毕","基础","装机","镜像","了解","笔记","踩坑","经验","网络编程","事务","安全","面试题","反射","SE基础","Seata","使用","容器","命令","基础知识","入门","error","git","网络","安装","私有云","坑王","简单","插件","API","爬虫","RabbitMQ","多线程","反射动态代理","高级特性","接口文档","接口示例","配置文件","Sentinel","分布式事务","微服务","分库分表","安装","卸载","CICD","Jenkins"],u:!0,r:{minutes:.65,words:196},t:"",i:"fa-solid fa-book-tanakh",y:"a"}}],["/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html",{loader:()=>l.e(50707).then(l.bind(l,49100)),meta:{e:'\n<blockquote>\n<p>Maven项目中reload项目或者依赖时，使用Java8的项目版本会重置为Java11</p>\n</blockquote>\n<h2>解决方案</h2>\n<h3>修改Maven配置文件</h3>\n<p>在setting.xml添加配置指定编译时使用的Java版本</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jdk-1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.compilerVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven.compiler.compilerVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.58,words:173},t:"Maven刷新时语言级别重置",y:"a"}}],["/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E4%B8%8A%E4%BC%A0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8.html",{loader:()=>l.e(39420).then(l.bind(l,55206)),meta:{d:17438976e5,l:"2025年4月6日",c:["DevOps"],g:["CICD"],e:"<p>title: Jenkins配置后端\ndate: 2025-04-06\ncategory:</p>\n<ul>\n<li>DevOps\ntag:</li>\n<li>CICD</li>\n</ul>\n<hr>\n<hr>\n<h1>Jenkins 配置前端工程，自动拉取代码、打包与上传云服务器</h1>\n<p>本小节中，将演示如何在 <code>Jenkins</code> 中配置一键部署 <code>weblog</code> <strong>前端工程</strong>，流程中包括拉取最新的 <code>master</code> 分支代码、执行 <code>npm run build</code> 打包，并最终连接云服务器，上传 <code>/dist</code> 文件夹下所有文件至 <code>Nginx</code> 静态文件目录下。</p>\n",r:{minutes:4.73,words:1420},t:"Jenkins配置后端",y:"a"}}],["/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2.html",{loader:()=>l.e(6667).then(l.bind(l,49025)),meta:{d:17438976e5,l:"2025年4月6日",c:["DevOps"],g:["CICD","Jenkins"],e:"\n<p>本小节中，将演示如何在 <code>Jenkins</code> 中配置一键部署 <code>weblog</code> 后端工程，流程中包括拉取最新的 <code>master</code> 分支代码、执行 <code>maven</code> 打包，并最终连接云服务器，上传 <code>jar</code> 包并重启 <code>Spring Boot</code> 服务。</p>\n",r:{minutes:6.27,words:1882},t:"Jenkins配置后端",y:"a"}}],["/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%EF%BC%9A%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%20Docker%20%E9%95%9C%E5%83%8F%E3%80%81%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1.html",{loader:()=>l.e(78713).then(l.bind(l,8198)),meta:{d:17438976e5,l:"2025年4月6日",c:["DevOps"],g:["CICD","Jenkins"],e:"\n<p>重新配置一下该构建任务，在上传完 <code>jar</code> 包后，将 <code>Dockerfile</code> 文件也上传到云服务器中，并构建镜像， 最终启动新的容器。</p>\n",r:{minutes:1.53,words:459},t:"Jenkins配置后端",y:"a"}}],["/Docker/",{loader:()=>l.e(5579).then(l.bind(l,13605)),meta:{c:["使用指南"],r:{minutes:.05,words:14},t:"Docker",i:"laptop-code",y:"a"}}],["/Interview/",{loader:()=>l.e(70242).then(l.bind(l,20128)),meta:{c:["面试题"],r:{minutes:.05,words:15},t:"Interview",i:"fa-solid fa-book",y:"a"}}],["/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html",{loader:()=>l.e(62939).then(l.bind(l,90802)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<h2>1. 关系</h2>\n<figure><figcaption>层级结构</figcaption></figure>\n",r:{minutes:.29,words:87},t:"1. 学习JVM有什么用？",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html",{loader:()=>l.e(34463).then(l.bind(l,52820)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>在 JVM (Java 虚拟机) 的内存模型中，堆内存（Heap）被划分为几个代（Generation），用来优化内存分配和垃圾回收（Garbage Collection）。主要分为以下几个代：</p>\n</blockquote>\n",r:{minutes:1.9,words:571},t:"2.1内存模型",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html",{loader:()=>l.e(1162).then(l.bind(l,52342)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:'\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html" target="_blank">2.1 程序计数器</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html" target="_blank">2.2 虚拟机栈</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html" target="_blank">2.3 本地方法栈</a></p>',r:{minutes:.38,words:115},t:"2.JVM 内存结构",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/GC%E7%B1%BB%E5%9E%8B.html",{loader:()=>l.e(73952).then(l.bind(l,33178)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>在Java虚拟机（JVM）中，垃圾回收（GC）器负责自动管理内存，通过回收不再使用的对象来释放内存空间。JVM 提供了多种垃圾回收器，每种回收器适用于不同的应用场景，它们各自有不同的优点和缺点。以下是JVM中常见的垃圾回收器：</p>\n</blockquote>\n",r:{minutes:5.3,words:1591},t:"GC类型",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/OOM.html",{loader:()=>l.e(16391).then(l.bind(l,41215)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>OOM 是 Out of Memory（内存溢出）的缩写，表示程序在运行过程中请求内存时超出了可用内存的限制，从而导致程序崩溃或无法继续执行。OOM 是一种常见的错误，尤其在涉及大规模数据处理或长时间运行的应用中较为频繁。</p>\n</blockquote>\n",r:{minutes:4.37,words:1310},t:"内存溢出",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/",{loader:()=>l.e(83106).then(l.bind(l,27630)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:'\n<p><a href="/blog/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html" target="_blank">1. 学习JVM有什么用？</a></p>\n<p><a href="/blog/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html" target="_blank">2.内存结构</a></p>\n',r:{minutes:.16,words:49},t:"JVM总结",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html",{loader:()=>l.e(95183).then(l.bind(l,81646)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p>CPU负载过高是一个常见的系统性能瓶颈问题，它可能会导致服务器响应变慢，甚至出现卡顿现象。了解如何诊断和优化系统负载，对于保证服务器的健康运行至关重要。本文将通俗易懂地为你介绍如何分析和解决CPU Load过高的问题。</p>\n</blockquote>\n",r:{minutes:4.33,words:1298},t:"CPU Load过高问题的排查与优化",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/jstack%E7%94%A8%E6%B3%95.html",{loader:()=>l.e(33273).then(l.bind(l,74430)),meta:{d:17343936e5,l:"2024年12月17日",c:["JVM"],g:["总结"],e:"\n<blockquote>\n<p><code>jstack</code> 是 Java Development Kit (JDK) 中的一个工具，用于打印 Java 进程的线程堆栈信息。它对于调试和分析 Java 应用程序的性能问题、死锁和线程状态非常有用。以下是 <code>jstack</code> 的用法总结：</p>\n</blockquote>\n",r:{minutes:4.94,words:1481},t:"jstack用法总结",i:"fa-solid fa-microchip",y:"a"}}],["/JVM/%E9%BB%91%E9%A9%ACJVM.html",{loader:()=>l.e(20038).then(l.bind(l,97011)),meta:{e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.1,words:31},t:"黑马JVM",y:"a"}}],["/Java/",{loader:()=>l.e(82947).then(l.bind(l,48328)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>徽章</h2>\n",r:{minutes:.53,words:159},t:"Java总结",i:"fa-brands fa-java",y:"a"}}],["/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html",{loader:()=>l.e(54738).then(l.bind(l,79147)),meta:{e:"\n<p><strong>在Java中，空值（empty value）和null值是两个不同的概念。</strong></p>\n<ol>\n<li>\n<p><strong>空值（Empty Value）</strong>：</p>\n<ul>\n<li>空值通常指的是对象中没有实际的数值或内容，例如空字符串、空集合、空数组等。这些空值在Java中是有实际的存在的，只是它们没有包含任何有效的数据。</li>\n</ul>\n</li>\n<li>\n<p><strong>Null值</strong>：</p>\n<ul>\n<li>Null值表示变量没有引用任何对象，即它不指向任何内存地址。在Java中，null是一个特殊的关键字，用来表示一个变量未初始化或不指向任何对象。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.97,words:290},t:"空值（empty value）和null值",y:"a"}}],["/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html",{loader:()=>l.e(6214).then(l.bind(l,84285)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["Java8特性"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:46},t:"雷丰阳Java",i:"pen-to-square",y:"a"}}],["/Linux/",{loader:()=>l.e(89979).then(l.bind(l,66950)),meta:{e:"\n<p>Linux教材的章节目录通常会根据教材的目标、深度和读者的不同有所变化。以下是一个典型的 Linux教材 的章节目录示例，涵盖了从基础到高级的内容：</p>\n",r:{minutes:3.42,words:1027},t:"Linux",y:"a"}}],["/Netty/01Netty-nio.html",{loader:()=>l.e(21739).then(l.bind(l,68560)),meta:{d:17291232e5,l:"2024年10月17日",c:["Netty"],g:["教程"],e:'\n<p>non-blocking io 非阻塞 IO</p>\n<h2>1. 三大组件</h2>\n<h3>1.1 Channel &amp; Buffer</h3>\n<p>channel 有一点类似于 stream，它就是读写数据的<strong>双向通道</strong>，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 channel，而之前的 stream 要么是输入，要么是输出，channel 比 stream 更为底层</p>\n<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">graph LR</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">channel --&gt; buffer</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">buffer --&gt; channel</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:31.98,words:9593},t:"一. NIO 基础",i:"pen-to-square",O:1,y:"a"}}],["/Netty/02Netty-%E5%85%A5%E9%97%A8.html",{loader:()=>l.e(67797).then(l.bind(l,91832)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["教程","阅读完毕"],e:'\n<h2>1. 概述</h2>\n<h3>1.1 Netty 是什么？</h3>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Netty is an asynchronous event-driven network application framework</span></span>\n<span class="line"><span>for rapid development of maintainable high performance protocol servers &amp; clients.</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:30.86,words:9259},t:"二. Netty 入门",i:"pen-to-square",O:2,y:"a"}}],["/Netty/03Netty-%E8%BF%9B%E9%98%B6.html",{loader:()=>l.e(39602).then(l.bind(l,42874)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["教程","阅读完毕"],e:'\n<h2>1. 粘包与半包</h2>\n<h3>1.1 粘包现象</h3>\n<p>服务端代码</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> log </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boss</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        NioEventLoopGroup</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> worker</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> NioEventLoopGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ServerBootstrap</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ServerBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NioServerSocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(boss, worker);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">childHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ChannelInitializer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initChannel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">SocketChannel</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> LoggingHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">LogLevel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DEBUG</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    ch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pipeline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ChannelInboundHandlerAdapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"connected {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ChannelHandlerContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"disconnect {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                            super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channelInactive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ctx);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            });</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            ChannelFuture</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> serverBootstrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8080</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} binding..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} bound..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            channelFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">closeFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"server error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, e);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            boss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">shutdownGracefully</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"stoped"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> HelloWorldServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:29.49,words:8848},t:"三. Netty 进阶",i:"pen-to-square",O:3,y:"a"}}],["/Netty/04Netty-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html",{loader:()=>l.e(65195).then(l.bind(l,60052)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["教程"],e:'\n<h2>1. 优化</h2>\n<h3>1.1 扩展序列化算法</h3>\n<p>序列化，反序列化主要用在消息正文的转换上</p>\n<ul>\n<li>序列化时，需要将 Java 对象变为要传输的数据（可以是 byte[]，或 json 等，最终都需要变成 byte[]）</li>\n<li>反序列化时，需要将传入的正文数据还原成 Java 对象，便于处理</li>\n</ul>\n<p>目前的代码仅支持 Java 自带的序列化，反序列化机制，核心代码如下</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 反序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] body </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[bodyLength]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">byteByf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(body);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ObjectInputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(body))</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Message</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> message </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (Message) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">readObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSequenceId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(sequenceId);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 序列化</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ByteArrayOutputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> out </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ByteArrayOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ObjectOutputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(out)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(message);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] bytes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toByteArray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:21.45,words:6434},t:"四. 优化与源码",i:"pen-to-square",O:4,y:"a"}}],["/Netty/1.%E9%BB%91%E9%A9%AC%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>l.e(13294).then(l.bind(l,45192)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["Java8特性"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:45},t:"黑马Netty",i:"pen-to-square",y:"a"}}],["/Netty/Channel.html",{loader:()=>l.e(23566).then(l.bind(l,41384)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["入门"],e:"\n<h2>1.连接问题</h2>\n<p>服务端代码</p>\n",r:{minutes:2.27,words:680},t:"Channel",i:"pen-to-square",y:"a"}}],["/Netty/",{loader:()=>l.e(68169).then(l.bind(l,38652)),meta:{c:["Netty","网络编程"],r:{minutes:.06,words:17},t:"Netty",i:"fa-solid fa-n",y:"a"}}],["/Netty/%E5%85%B3%E9%97%AD%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BB%84.html",{loader:()=>l.e(98075).then(l.bind(l,90480)),meta:{d:1739232e6,l:"2025年2月11日",c:["Netty"],g:["网络编程"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>shutdownGracefully</code> 是 Netty 中 <code>EventLoopGroup</code> 的一个方法，用于优雅地关闭事件循环组（<code>EventLoopGroup</code>）。<code>EventLoopGroup</code> 是一个包含多个 <code>EventLoop</code> 的集合，负责处理事件循环的执行。调用 <code>shutdownGracefully</code> 方法会使得这个事件循环组在完成当前正在执行的任务后，平滑地关闭，不会丢失任何未处理的请求。</p>\n</div>\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 Netty 中，<code>EventLoopGroup</code> 会处理所有的 I/O 操作，如网络事件的读取和写入，通常在应用程序关闭时，我们希望优雅地关闭这些事件循环，确保所有的 I/O 操作和任务都已经完成或被清理干净。</p>\n</div>\n',r:{minutes:1.83,words:549},t:"关闭事件循环组",i:"pen-to-square",y:"a"}}],["/Netty/%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3.html",{loader:()=>l.e(80994).then(l.bind(l,44974)),meta:{d:1739232e6,l:"2025年2月11日",c:["Netty"],g:["网络编程"],e:"\n<h3>1. <strong>树立正确的观念：</strong></h3>\n<ul>\n<li>在开始使用 Netty 之前，首先要有一个整体的框架观念，理解每个概念如何配合工作，才能更好地掌握 Netty。</li>\n</ul>\n",r:{minutes:3.21,words:964},t:"核心概念理解",i:"pen-to-square",y:"a"}}],["/Netty/%E9%87%8A%E6%94%BEByteBuf.html",{loader:()=>l.e(80006).then(l.bind(l,44876)),meta:{e:'\n<h3>什么时候需要手动释放 <code>ByteBuf</code>？</h3>\n<ul>\n<li>\n<p><strong>你显式创建了 <code>ByteBuf</code>：</strong>\n如果你在代码中自己通过 <code>ctx.alloc().buffer()</code> 或其他方式创建了一个 <code>ByteBuf</code>，那么在使用完之后，你需要手动释放它。可以调用 <code>buffer.release()</code> 来减少引用计数，以便 Netty 可以回收内存。</p>\n<p>示例：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ByteBuf</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> buffer </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">alloc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 填充数据</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">writeAndFlush</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(buffer);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 发送完数据后手动释放</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>你在自定义的 Handler 中直接操作了 <code>ByteBuf</code>：</strong>\n如果你在自定义的 <code>ChannelHandler</code> 代码中创建并管理了 <code>ByteBuf</code>，并且这个对象不是由 Netty 管理的，那么同样需要在使用完后手动释放它。</p>\n</li>\n</ul>',r:{minutes:1.53,words:458},t:"Netty ByteBuf 内存管理：手动释放与自动释放",y:"a"}}],["/Nginx/413%20(Request%20Entity%20Too%20Large).html",{loader:()=>l.e(38493).then(l.bind(l,45160)),meta:{d:17291232e5,l:"2024年10月17日",c:["Nginx"],g:["error"],e:"\n<blockquote>\n<p>上传文件时报错：请求实体过大</p>\n<p>修改Nginx服务器的请求实体大小限制</p>\n</blockquote>\n",r:{minutes:.31,words:92},t:"413 (Request Entity Too Large)",i:"pen-to-square",y:"a"}}],["/Nginx/",{loader:()=>l.e(61009).then(l.bind(l,705)),meta:{e:"\n",r:{minutes:0,words:1},t:"Nginx",y:"a"}}],["/Python/",{loader:()=>l.e(18585).then(l.bind(l,9587)),meta:{e:"\n",r:{minutes:.01,words:3},t:"Python总结",y:"a"}}],["/SSM/",{loader:()=>l.e(94428).then(l.bind(l,56048)),meta:{d:1733184e6,l:"2024年12月3日",c:["Java"],g:["讲义"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.15,words:45},t:"黑马SSM",i:"fa-solid fa-leaf",y:"a"}}],["/Spring/",{loader:()=>l.e(74330).then(l.bind(l,36478)),meta:{d:17440704e5,l:"2025年4月8日",e:"\n",r:{minutes:.03,words:10},t:"Spring",i:"fa-solid fa-leaf",y:"a"}}],["/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html",{loader:()=>l.e(21622).then(l.bind(l,62220)),meta:{d:17291232e5,l:"2024年10月17日",c:["Spring"],g:["总结"],e:"\n<h2>spring框架概述（Spring5.x）</h2>\n",r:{minutes:1.58,words:475},t:"Spring5.x概述",i:"pen-to-square",y:"a"}}],["/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html",{loader:()=>l.e(82256).then(l.bind(l,34295)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["总结"],e:'\n<blockquote>\n<p>springboot会自动注入数据源，如果没有配，就会抛出该异常</p>\n</blockquote>\n<p><strong>不需要数据库支持，可以让他不注入数据源</strong></p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> DataSourceAutoConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, args);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.25,words:76},t:"Spring Boot无数据源启动",i:"pen-to-square",y:"a"}}],["/Vue/",{loader:()=>l.e(36789).then(l.bind(l,2632)),meta:{d:17304192e5,l:"2024年11月1日",c:["vue"],g:["总结"],e:"\n<blockquote>\n<p>Vue.js 是一个用于构建用户界面的渐进式 JavaScript 框架。它采用了组件化的开发方式，允许开发者通过组合可复用的组件来构建复杂的应用。Vue 的核心库专注于视图层，易于上手，同时也提供了强大的工具和生态系统，例如 Vue Router 和 Vuex，适用于大型应用。它支持响应式数据绑定，使得数据变化自动更新视图，从而提高开发效率。</p>\n</blockquote>\n",r:{minutes:.49,words:147},t:"Vue",i:"fa-brands fa-vuejs",y:"a"}}],["/Vue/vue%E6%A8%A1%E6%9D%BF.html",{loader:()=>l.e(26533).then(l.bind(l,72484)),meta:{d:17304192e5,l:"2024年11月1日",c:["vue"],g:["经验"],e:"\n<blockquote>\n<p>配置首选项全局代码片段，新建vue文件时自动生成模板</p>\n</blockquote>\n",r:{minutes:2.75,words:826},t:"vue模板",i:"fa-brands fa-vuejs",y:"a"}}],["/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html",{loader:()=>l.e(48073).then(l.bind(l,35948)),meta:{e:'\n<blockquote>\n\x3c!--排序加上.number表示要接受一个数字--\x3e\n<p><code>&lt;el-input v-model.number="dataForm.sort" placeholder="排序"&gt;&lt;/el-input&gt;</code></p>\n</blockquote>\n<p><strong>完整示例</strong></p>\n<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-dialog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"!dataForm.brandId ? \'新增\' : \'修改\'"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :close-on-click-modal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"false"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :visible.sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"visible"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :rules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataRule"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @keyup.enter.native</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataFormSubmit()"</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">      label-width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"110px"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌名"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.name"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌名"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      &lt;!--用新的组件替换原来的输入框--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"品牌logo地址"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">singleUpload</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.logo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">singleUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"介绍"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"descript"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.descript"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"介绍"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"显示状态"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"showStatus"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-switch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.showStatus"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> active-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"#13ce66"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> inactive-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"#ff4949"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> :active-value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1"</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">          :inactive-value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"检索首字母"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"firstLetter"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.firstLetter"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"检索首字母"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> prop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"sort"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> v-model.number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataForm.sort"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form-item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> slot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"footer"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dialog-footer"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"visible = false"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;取消&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"primary"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> @click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dataFormSubmit()"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;确定&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el-dialog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">      ...</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      dataRule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'品牌名不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        logo</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'品牌logo地址不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        descript</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'介绍不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        showStatus</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">required</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'显示状态[0-不显示；1-显示]不能为空\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'blur\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //首字母校验规则</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        firstLetter</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            validator</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"首字母必须填写"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">^</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">[a-zA-Z]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">$</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"首字母必须在a-z或者A-Z之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "blur"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //排序字段校验规则</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        sort</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            validator</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">              if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序字段必须填写"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">isInteger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"排序字段必须是一个大于等于0的整数"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            },</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            trigger</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "blur"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          },</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ],</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.43,words:430},t:"表单验证",y:"a"}}],["/%E7%BD%91%E7%BB%9C/L2TPIPsec.html",{loader:()=>l.e(82338).then(l.bind(l,34763)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>L2TP（Layer 2 Tunneling Protocol）与IPsec（Internet Protocol Security）常常被结合使用，形成L2TP/IPsec，提供安全的虚拟私人网络（VPN）服务。它的工作原理和主要特点可以总结如下：</p>\n</div>\n<h3>1. <strong>L2TP（Layer 2 Tunneling Protocol）</strong>：</h3>\n<ul>\n<li><strong>协议功能</strong>：L2TP 是一种隧道协议，主要用于将数据包封装在一个虚拟隧道中，使数据可以通过不安全的网络（如互联网）安全传输。</li>\n<li><strong>工作原理</strong>：L2TP本身并不加密数据，它只是负责建立和管理隧道（即数据通道）。它依赖于其他协议（如IPsec）来加密数据并保证安全。</li>\n<li><strong>用途</strong>：主要用于点对点连接和远程访问VPN，它能支持不同的网络协议（如IP、IPX等）。</li>\n</ul>',r:{minutes:2.62,words:787},t:"L2TP/IPsec协议",y:"a"}}],["/%E7%BD%91%E7%BB%9C/L2TP%E5%92%8CIPsec%E5%8D%8F%E8%AE%AE%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7.html",{loader:()=>l.e(74635).then(l.bind(l,85079)),meta:{e:"\n<h3>1. <strong>操作系统内置支持</strong></h3>\n<ul>\n<li><strong>Windows</strong>：\n<ul>\n<li>Windows操作系统（如Windows 10、Windows 11）内置了对L2TP/IPsec的支持。用户可以通过“网络和共享中心”配置VPN连接，选择L2TP/IPsec作为VPN协议。</li>\n</ul>\n</li>\n<li><strong>macOS</strong>：\n<ul>\n<li>macOS同样支持L2TP/IPsec协议。在“系统偏好设置”中的“网络”设置中，用户可以选择L2TP与IPsec配合使用，并配置VPN连接。</li>\n</ul>\n</li>\n<li><strong>Linux</strong>：\n<ul>\n<li>Linux支持L2TP/IPsec协议，可以通过强大的命令行工具如<code>strongSwan</code>、<code>xl2tpd</code>来配置L2TP/IPsec VPN。</li>\n<li><code>strongSwan</code> 是一个开源的IPsec实现，广泛用于Linux系统中的加密协议。</li>\n<li><code>xl2tpd</code> 是一个L2TP实现，通常与IPsec结合使用。</li>\n</ul>\n</li>\n<li><strong>Android</strong>：\n<ul>\n<li>Android设备内置对L2TP/IPsec的支持。用户可以在“设置”中的“VPN”部分配置L2TP/IPsec VPN连接。</li>\n</ul>\n</li>\n<li><strong>iOS</strong>：\n<ul>\n<li>iOS设备（如iPhone和iPad）同样支持L2TP/IPsec协议。用户可以在“设置”中找到“VPN”选项，配置L2TP/IPsec VPN。</li>\n</ul>\n</li>\n</ul>",r:{minutes:3,words:899},t:"L2TP和IPsec协议的常见软件和工具",y:"a"}}],["/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html",{loader:()=>l.e(83767).then(l.bind(l,25361)),meta:{d:17290368e5,l:"2024年10月16日",c:["网络"],g:["git","网络"],e:'\n<blockquote>\n<p>可解决github提交代码时连接失败的问题</p>\n</blockquote>\n<h2>Windows</h2>\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#cmd窗口下执行</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ipconfig</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /flushdns</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.2,words:60},t:"刷新dns缓存",i:"pen-to-square",y:"a"}}],["/%E8%A3%85%E6%9C%BA/AMD%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html",{loader:()=>l.e(21e3).then(l.bind(l,69793)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:"\n",r:{minutes:39.22,words:11766},t:"AMD桌面处理器规格",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/Intel%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html",{loader:()=>l.e(81310).then(l.bind(l,42463)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:"\n",r:{minutes:74.21,words:22262},t:"Intel桌面处理器规格",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA%E8%BF%9B%E9%98%B6.html",{loader:()=>l.e(41722).then(l.bind(l,30494)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:"\n<h2>CPU/主板</h2>\n<p><strong>CPU</strong></p>\n<table>\n<thead>\n<tr>\n<th>处理器型号</th>\n<th>核心代号</th>\n<th>制造工艺(nm)</th>\n<th>大小核/线程</th>\n<th>大核频率（GHz）</th>\n<th>小核频率（GHz）</th>\n<th>二/三级缓存（MB）</th>\n<th>核显</th>\n<th>基准功耗/加速功耗（W）</th>\n<th>插槽</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>酷睿i9-13900KS</td>\n<td>Raptor Lake</td>\n<td>Intel 7</td>\n<td>8+16/32</td>\n<td>3.2-6.0</td>\n<td>2.2-4.3</td>\n<td>32/36</td>\n<td>UHD 770</td>\n<td>150/253</td>\n<td>LGA1700</td>\n</tr>\n</tbody>\n</table>",r:{minutes:4.01,words:1202},t:"电脑装机进阶",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html",{loader:()=>l.e(45927).then(l.bind(l,1974)),meta:{d:17365536e5,l:"2025年1月11日",c:["装机"],g:["装机"],e:'\n<table>\n<thead>\n<tr>\n<th>配件</th>\n<th style="text-align:center">型号/规格</th>\n<th style="text-align:center">价格</th>\n<th style="text-align:center">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>处理器</td>\n<td style="text-align:center">Intel Core i5-13400F</td>\n<td style="text-align:center"></td>\n<td style="text-align:center">无核显</td>\n</tr>\n<tr>\n<td>主板</td>\n<td style="text-align:center">七彩虹 战斧 BATTLE-AX B760M-GHA WIFI V20</td>\n<td style="text-align:center">2296</td>\n<td style="text-align:center">板u套</td>\n</tr>\n<tr>\n<td>内存</td>\n<td style="text-align:center">金百达（KINGBANK）32GB(16G×2)套装 DDR4 3600  银爵 C18</td>\n<td style="text-align:center">336</td>\n<td style="text-align:center">高频率内存</td>\n</tr>\n<tr>\n<td>显卡</td>\n<td style="text-align:center">七彩虹（Colorful）iGame GeForce RTX 4060 Ti Ultra W DUO OC 8G DLSS 3</td>\n<td style="text-align:center">4379</td>\n<td style="text-align:center"></td>\n</tr>\n<tr>\n<td>存储</td>\n<td style="text-align:center">凯侠SD10 1TB(5000速+无缓存)</td>\n<td style="text-align:center">388</td>\n<td style="text-align:center">快速SSD</td>\n</tr>\n<tr>\n<td>电源</td>\n<td style="text-align:center">航嘉 WD650 EVO 650W</td>\n<td style="text-align:center">242</td>\n<td style="text-align:center">全模组电源</td>\n</tr>\n<tr>\n<td>散热器</td>\n<td style="text-align:center">乔思伯CR-1000</td>\n<td style="text-align:center">88</td>\n<td style="text-align:center">风冷散热系统</td>\n</tr>\n<tr>\n<td>机箱/风扇</td>\n<td style="text-align:center">航嘉s920暴风雪，棱镜风扇*6</td>\n<td style="text-align:center">200</td>\n<td style="text-align:center">ATX机箱</td>\n</tr>\n<tr>\n<td>显示器</td>\n<td style="text-align:center">AOC 27英寸 2K HDR400 IPS 原生180Hz 1ms 10Bit</td>\n<td style="text-align:center">1023</td>\n<td style="text-align:center">旋转升降</td>\n</tr>\n</tbody>\n</table>',r:{minutes:.61,words:182},t:"4060Ti配置",i:"fa-brands fa-java",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%90%88%E7%9B%96%E4%B8%8D%E4%BC%91%E7%9C%A0.html",{loader:()=>l.e(77115).then(l.bind(l,22961)),meta:{e:"\n<p>修改配置文件 <code>vi /etc/systemd/logind.conf</code></p>\n<ul>\n<li>\n<p>将<code>HandleLidSwitch</code>的值从<strong>suspend</strong>改为<strong>ignore</strong></p>\n</li>\n<li>\n<p>将<code>HandleLidSwitch</code>、<code>LidSwitchIgnoreInhibited</code>前面的注释符号#删除。</p>\n</li>\n</ul>\n<p>保存完毕后输入（reboot）</p>\n",r:{minutes:.15,words:45},t:"飞牛OS合盖不休眠",y:"a"}}],["/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%BC%80%E5%85%B3%E5%B1%8F%E5%B9%95.html",{loader:()=>l.e(91182).then(l.bind(l,96196)),meta:{d:17374176e5,l:"2025年1月21日",c:["装机"],g:["装机"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>关闭屏幕命令:</p>\n<p>setterm --blank force --term linux &lt;/dev/tty1</p>\n<p>打开屏幕命令:</p>\n<p>setterm --blank poke --term linux &lt; /dev/tty1</p>\n<p>以上命令要在root账户下使用。而且关闭屏幕后按键盘上任何按键都不会亮屏，只能在ssh下用打开 屏幕命令亮屏。</p>\n</div>\n',r:{minutes:.31,words:92},t:"飞牛开关屏幕",i:"fa-brands fa-java",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html",{loader:()=>l.e(40649).then(l.bind(l,60782)),meta:{e:'<h2>代理模式（Proxy Pattern）</h2>\n<h3>1. <strong>定义</strong></h3>\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>代理模式是一种<code>结构型</code>设计模式，通过为目标对象提供代理对象来间接控制对目标对象的访问。代理对象在客户端与真实对象之间充当中介，能够在不修改目标对象的情况下增加额外的操作，常用于资源管理、权限控制、延迟加载等场景。</p>\n</div>\n<h3>2. <strong>特点</strong></h3>\n<ul>\n<li><strong>解耦</strong>：代理模式将客户端与真实对象的交互通过代理对象进行，客户端无需直接依赖真实对象。</li>\n<li><strong>扩展性</strong>：代理模式能够在不修改目标对象的前提下，添加新的功能，例如权限控制、日志记录等。</li>\n<li><strong>控制访问</strong>：代理对象能够对目标对象的访问进行控制，实现过滤、延迟加载、缓存等功能。</li>\n</ul>',r:{minutes:3.84,words:1152},t:"",y:"a"}}],["/Bug/Java/InaccessibleObjectException.html",{loader:()=>l.e(62871).then(l.bind(l,26565)),meta:{e:"\n<p>在 Java 9 及更高版本中，Java 引入了模块化系统（Jigsaw），这让 Java 程序能够更好地管理模块间的访问权限。然而，这也带来了一些问题，特别是在使用反射时，某些类、字段或方法会因为模块化系统的限制而变得不可访问。今天我们就来讨论一个常见的 Java 异常 —— <code>java.lang.reflect.InaccessibleObjectException</code>，以及如何通过 IntelliJ IDEA 配置解决这个问题。</p>\n",r:{minutes:3.06,words:917},t:"解决 Java 反射问题：InaccessibleObjectException 和 --add-opens 配置",y:"a"}}],["/Database/MySQL/",{loader:()=>l.e(57787).then(l.bind(l,19291)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","数据库"],g:["目录"],e:'\n<h2>安装</h2>\n<p><a href="/blog/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html" target="_blank">1.MySQL在线安装</a></p>\n<p><a href="/blog/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html" target="_blank">2.MySQL离线安装</a></p>',r:{minutes:1.7,words:511},t:"MySQL",i:"fa-solid fa-database",y:"a"}}],["/Database/Redis/",{loader:()=>l.e(79714).then(l.bind(l,9912)),meta:{c:["redis"],r:{minutes:.04,words:13},t:"Redis",i:"fa-solid fa-database",y:"a"}}],["/Database/Redis/Redis%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F.html",{loader:()=>l.e(41080).then(l.bind(l,66720)),meta:{e:'\n<p>你是一个程序员，你维护了一个 商品服务，它背后直连 mysql 数据库。<br>\n假设商品服务需要对外提供 每秒 1w 次查询，但背后的 mysql 却只能提供每秒 5k 次查询，那 mysql 根本顶不住！分分钟会被压垮。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504012302762.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>\n<p>这类大流量查询场景非常常见，比如双十一秒杀和春节抢车票。<br>\n那么问题就来了，有没有办法在 mysql 不被压垮的同时，让商品服务支持每秒 1w 次查询 ？<br>\n当然有，<strong>没有什么是加一层中间层不能解决的，如果有，那就再加一层</strong>。<br>\n这次我们要加的中间层是<strong>Redis</strong>。</p>',r:{minutes:8.3,words:2489},t:"Redis 是什么？架构是怎么样的？",y:"a"}}],["/Database/Redis/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>l.e(97233).then(l.bind(l,19104)),meta:{d:17374176e5,l:"2025年1月21日",c:["数据库"],g:["教程"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n<h4>SpringCloud+RabbitMQ+Docker+Redis+搜索+分布式，系统详解springcloud微服务技术栈课程|黑马程序员Java微服务</h4>\n',r:{minutes:.45,words:134},t:"视频教程",i:"fa-solid fa-play",O:0,y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html",{loader:()=>l.e(24561).then(l.bind(l,79117)),meta:{e:"\n<blockquote>\n<p>docker安装后端项目weblog</p>\n</blockquote>\n<h3>1. 目录结构</h3>\n<p>project-root/\n│\n├── code/\n│   ├── Dockerfile\n│   ├── weblog-web-0.0.1-SNAPSHOT.jar\n│   └── application.yml\n│\n└── docker-compose.yml</p>\n<h3>2.docker方式启动</h3>\n<p>💁‍♂️操作在code目录下完成</p>\n<p>1️⃣<strong>编写Dockerfile文件</strong></p>\n<p><code>vim Dockerfile</code></p>",r:{minutes:.63,words:190},t:"博客项目",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html",{loader:()=>l.e(48655).then(l.bind(l,92311)),meta:{e:'\n<h3>蓝灯常亮</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "nono"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">blue</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "default-on"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">green</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "none"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/sys/class/leds/onecloud</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">red</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">alive/trigger</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:4.35,words:1306},t:"玩客云",y:"a"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html",{loader:()=>l.e(68907).then(l.bind(l,42517)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["私有云"],e:"\n<blockquote>\n<p><strong>ChatGPT Next Web</strong> 是一个基于 OpenAI 的 ChatGPT 模型构建的网页应用，旨在提供用户友好的界面，方便用户与 AI 进行对话和互动，支持多种自定义设置和功能，提升用户体验。</p>\n</blockquote>\n",r:{minutes:1.23,words:368},t:"私有云部署软件",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/Dockerfile%20%E6%9E%84%E5%BB%BA%20Spring%20Boot%20%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%9C%8D%E5%8A%A1.html",{loader:()=>l.e(71907).then(l.bind(l,75776)),meta:{e:'\n<p>通过 <code>Dockfile</code> 文件，将 <code>Spring Boot</code> 服务打包成一个 <code>Docker</code> 镜像，后续将通过镜像来运行后端服务。</p>\n<blockquote>\n<p>Docker 容器在启动时，可以通过指定 <code>--restart</code> 参数来配置 Docker 容器在退出时的重新启动策略。有了它，至少能保证服务被干挂了，能够快速的被拉起，不至于让用户长时间无法访问网站。</p>\n</blockquote>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061728061.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',r:{minutes:4.31,words:1294},t:"Dockerfile 构建 Spring Boot 镜像并运行服务",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html",{loader:()=>l.e(35837).then(l.bind(l,823)),meta:{d:17291232e5,l:"2024年10月17日",c:["docker"],g:["容器"],e:'\n<h2>问题</h2>\n<p>如果在启动Docker容器的过程中没有单独配置localtime，会造成Docker容器时间与主机时间不一致的情况，UTC和CST相差8小时，即容器时间与<a href="https://zhida.zhihu.com/search?q=%E5%8C%97%E4%BA%AC%E6%97%B6%E9%97%B4&amp;zhida_source=entity&amp;is_preview=1" target="_blank" rel="noopener noreferrer">北京时间</a>相差8个小时</p>\n<h2>解决方案</h2>\n\x3c!--more--\x3e',r:{minutes:1.01,words:303},t:"容器与宿主机时间同步",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/docker-compose%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html",{loader:()=>l.e(67553).then(l.bind(l,29632)),meta:{e:"\n<h2>docker-compose安装redis</h2>\n",r:{minutes:1.62,words:485},t:"docker-compose安装软件",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85jenkins%E5%8F%8A%E9%85%8D%E7%BD%AE.html",{loader:()=>l.e(43130).then(l.bind(l,26198)),meta:{e:'\n<h2>1. 什么是 jenkins?</h2>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061717007.jpeg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<blockquote>\n<p>Jenkins 是<strong>一个开源的持续集成（Continuous Integration）工具，它的主要作用是帮助开发团队自动化构建、测试和部署软件项目</strong>。通俗来说，Jenkins 可以在每次代码变更时，帮助我们自动进行一系列的操作，例如编译代码、运行测试、生成文档，甚至是将应用程序部署到服务器上。</p>\n</blockquote>',r:{minutes:4.2,words:1260},t:"docker安装jenkins及配置",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html",{loader:()=>l.e(73300).then(l.bind(l,61127)),meta:{e:"\n<h2>docker安装Nginx</h2>\n",r:{minutes:1.1,words:329},t:"docker安装软件",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/pull.html",{loader:()=>l.e(70972).then(l.bind(l,32405)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>下面是关于使用 <code>docker pull</code> 命令的总结：</p>\n<h3><code>docker pull</code> 命令概述</h3>\n<p><code>docker pull</code> 命令用于从 Docker 镜像仓库下载镜像到本地。它是 Docker 的基本命令之一，允许用户获取所需的镜像以便在本地运行容器。</p>\n",r:{minutes:1.13,words:338},t:"pull",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E5%AE%89%E8%A3%85NocoDB.html",{loader:()=>l.e(90586).then(l.bind(l,1929)),meta:{e:"\n<blockquote>\n<p>NocoDB是一个网页端的数据库管理</p>\n</blockquote>\n<h3>步骤1：安装Docker</h3>\n<p>首先，你需要在本地环境中安装Docker。Docker是一个用于部署应用程序的开源平台，它可以帮助你轻松地创建、部署和运行容器化的应用程序。\n你可以从Docker官方网站下载并安装适合你操作系统的Docker版本。安装完成后，你可以通过在终端中运行以下命令来验证Docker是否已成功安装：\n<code>docker --version</code></p>\n<h3>步骤2：拉取Nocodb镜像</h3>\n<p>接下来，你需要从Docker Hub拉取Nocodb镜像。Docker Hub是Docker提供的一个用于共享和管理Docker镜像的公共注册表。\n在终端中运行以下命令来拉取Nocodb镜像：\n<code>docker pull nocodb/nocodb</code></p>",r:{minutes:1.38,words:414},t:"安装NocoDB",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%8D%B7%E7%9B%AE%E5%BD%95.html",{loader:()=>l.e(83397).then(l.bind(l,23105)),meta:{e:"\n<blockquote>\n<p>docker volume inspect es-plugins</p>\n</blockquote>\n",r:{minutes:.04,words:12},t:"查看数据卷目录",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html",{loader:()=>l.e(41032).then(l.bind(l,36084)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>在 Docker 中，查看镜像架构可以帮助确认镜像是否适合当前设备的 CPU 架构（如 <code>amd64</code> 或 <code>arm64</code>）。以下是总结的几种方法：</p>\n<hr>\n",r:{minutes:1.68,words:504},t:"Nginx",i:"laptop-code",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html",{loader:()=>l.e(88043).then(l.bind(l,38163)),meta:{e:"\n<p><code>docker run --privileged</code> 是 Docker 命令中的一个选项，用于以特权模式运行容器。下面是对该选项的总结：</p>\n<h3>特权模式概述</h3>\n<ul>\n<li><strong>权限提升</strong>: 使用 <code>--privileged</code> 运行的容器将拥有更多的系统权限，几乎可以访问宿主机的所有设备和功能。这意味着容器可以执行一些通常被限制的操作，例如直接访问硬件设备、修改系统设置等。</li>\n</ul>\n<h3>主要功能</h3>\n<ol>\n<li>\n<p><strong>访问宿主机设备</strong>: 特权容器可以访问和使用宿主机的所有设备，而不仅仅是 Docker 默认允许的设备。</p>\n</li>\n<li>\n<p><strong>执行系统调用</strong>: 特权容器可以执行一些需要更高权限的系统调用，例如修改网络配置、挂载文件系统等。</p>\n</li>\n<li>\n<p><strong>运行 Docker</strong>: 在特权模式下，容器内部可以运行 Docker 守护进程，从而使其能够创建和管理其他容器。</p>\n</li>\n</ol>",r:{minutes:1.79,words:536},t:"特权模式运行容器",y:"a"}}],["/Docker/%E9%9A%8F%E7%AC%94/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html",{loader:()=>l.e(44835).then(l.bind(l,5864)),meta:{d:173232e7,l:"2024年11月23日",c:["docker"],g:["镜像"],e:"\n<p>Docker镜像的导入与导出是镜像管理的常见操作，适用于跨系统传输镜像或备份镜像。以下是总结：</p>\n<hr>\n",r:{minutes:1.63,words:489},t:"镜像导入导出",i:"laptop-code",y:"a"}}],["/Interview/Java/",{loader:()=>l.e(24871).then(l.bind(l,36506)),meta:{r:{minutes:.03,words:9},t:"Java",i:"fa-brands fa-java",y:"a"}}],["/Interview/MySQL/MySQL%E9%9D%A2%E6%B8%A384.html",{loader:()=>l.e(55902).then(l.bind(l,15911)),meta:{d:17406144e5,l:"2025年2月27日",c:["面试题"],g:["面试题","高质量"],e:'<h2>🆗MySQL 基础</h2>\n<p>⭐转自<a href="https://javabetter.cn/blog.html" target="_blank" rel="noopener noreferrer">博客 | 二哥的Java进阶之路</a> 感谢二哥救我🐶命</p>\n<hr>\n<h3>🌟0.什么是 MySQL？</h3>\n<p>MySQL 是一个开源的关系型数据库，现在隶属于 Oracle 公司。是我们国内使用频率最高的一种数据库，我在本地安装的是最新的 8.3 版本。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202503311126086.png" alt="MySQL 8.3 最新版本" tabindex="0" loading="lazy"><figcaption>MySQL 8.3 最新版本</figcaption></figure>',r:{minutes:182.42,words:54727},t:"MySQL面试题，84道MySQL八股文",y:"a"}}],["/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160-%E4%BC%98%E5%8C%96%E7%89%88.html",{loader:()=>l.e(80399).then(l.bind(l,80048)),meta:{c:["面试题"],g:["面试题","低质量"],e:"\n<h2>📚基础</h2>\n<h3>📖1.关系型和非关系型数据库的区别</h3>\n<p><strong>关系型数据库的优点是：</strong></p>\n<ol>\n<li>容易理解和使用，用表格形式组织数据，结构清晰，便与操作</li>\n<li>保障数据一致性，遵循ACID原则（原子性，一致性，隔离性，持久性），保证事务处理的可靠性与一致性</li>\n<li>数据更新开销低，插入更新删除操作高效</li>\n<li>查询能力强大，可以使用带有where，join的语句。适合多表联查</li>\n</ol>\n<p><strong>非关系型数据库(NoSQL)的优点：</strong></p>\n<ol>\n<li>读写性能高效，因为不经过SQL解析，读写速度快，高并发场景下表现优秀</li>\n<li>存储结构灵活，包括键值对，文档或列式存储等多种存储结构，适合JSON，二进制等多样化数据存储</li>\n<li>支持多种数据类型，能处理结构化，半结构化和非结构化数据，比如图片，视频，日志，文档等</li>\n<li>水平扩展型强，非关系型数据库支持横向扩展，能够处理大规模数据，如Redis（内存数据库）、MongoDB（文档数据库）、HBase（列式数据库），适用于大数据、高可用的场景，如日志系统、地理位置存储等。</li>\n</ol>",r:{minutes:30.85,words:9254},t:"60道 MySQL 精选面试题(优化版)",y:"a"}}],["/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160.html",{loader:()=>l.e(6972).then(l.bind(l,55908)),meta:{c:["面试题"],g:["面试题","低质量"],e:"<h2>基础</h2>\n<h3>1、关系型和非关系型数据库的区别？</h3>\n<p>关系型数据库的优点</p>\n<ul>\n<li>容易理解，因为它采用了关系模型来组织数据。</li>\n<li>可以保持数据的一致性。</li>\n<li>数据更新的开销比较小。</li>\n<li>支持复杂查询（带 where 子句的查询）</li>\n</ul>\n<p>非关系型数据库（NOSQL）的优点</p>\n<ul>\n<li>无需经过 SQL 层的解析，读写效率高。</li>\n<li>基于键值对，读写性能很高，易于扩展</li>\n<li>可以支持多种类型数据的存储，如图片，文档等等。</li>\n<li>扩展（可分为内存性数据库以及文档型数据库，比如 Redis，MongoDB，HBase 等，适合场景：数据量大高可用的日志系统/地理位置存储系统）。</li>\n</ul>",r:{minutes:36.57,words:10970},t:"60 道 MySQL 精选面试题👍",y:"a"}}],["/Interview/MySQL/MySQL%E9%BB%91%E9%A9%AC23.html",{loader:()=>l.e(70507).then(l.bind(l,63235)),meta:{d:17433792e5,l:"2025年3月31日",c:["面试题"],g:["面试题","高质量"],e:"\n<h2>📖 1. MySQL中，如何定位慢查询？</h2>\n<p><strong>候选人</strong>：</p>\n<p>嗯，我们当时在做压力测试时发现有些接口响应时间非常慢，超过了2秒。因为我们的系统部署了运维监控系统Skywalking，在它的报表展示中可以看到哪个接口慢，并且能分析出接口中哪部分耗时较多，包括具体的SQL执行时间，这样就能定位到出现问题的SQL。</p>\n<p>如果没有这种监控系统，MySQL本身也提供了慢查询日志功能。可以在MySQL的系统配置文件中开启慢查询日志，并设置SQL执行时间超过多少就记录到日志文件，比如我们之前项目设置的是2秒，超过这个时间的SQL就会记录在日志文件中，我们就可以在那里找到执行慢的SQL。</p>",r:{minutes:8.82,words:2645},t:"MySQL黑马面试题",y:"a"}}],["/Interview/Spring/Spring%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Bean%20%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html",{loader:()=>l.e(2454).then(l.bind(l,46682)),meta:{e:"\n<p>Spring 提供了四种主要的方式来实例化 Bean，这些方式允许开发者根据不同的需求灵活地创建和配置 Spring 容器中的 Bean。每种方式适用于不同的场景，下面是这四种方式的详细介绍：</p>\n<h3>1. <strong>通过构造函数实例化 Bean</strong></h3>\n<p>这是最常见的实例化 Bean 的方式，Spring 容器会通过调用 Bean 的构造函数来创建实例。</p>\n<ul>\n<li><strong>使用场景</strong>：当 Bean 需要通过构造函数传递依赖时，通常使用此方式。</li>\n<li><strong>实现方式</strong>：在 Spring 配置中，可以使用 <code>&lt;bean&gt;</code> 标签的 <code>constructor-arg</code> 子元素来指定构造函数参数。</li>\n</ul>",r:{minutes:3.26,words:978},t:"Spring 实例化 Bean 的四种方式",y:"a"}}],["/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%9841.html",{loader:()=>l.e(38581).then(l.bind(l,21391)),meta:{d:17438976e5,l:"2025年4月6日",c:["面试题","Spring"],g:["面试题","高质量"],e:'<h2>基础</h2>\n<h3>1.Spring 是什么？特性？有哪些模块？</h3>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504061755544.png" alt="Spring Logo" tabindex="0" loading="lazy"><figcaption>Spring Logo</figcaption></figure>\n<p>一句话概括：<strong>Spring 是一个轻量级、非入侵式的控制反转 (IoC) 和面向切面 (AOP) 的框架。</strong></p>\n',r:{minutes:91.69,words:27507},t:"Spring面试题，41道Spring八股文",y:"a"}}],["/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90%E5%8F%8A%E6%80%BB%E7%BB%93.html",{loader:()=>l.e(49330).then(l.bind(l,20387)),meta:{e:"\n<h2>Spring IoC</h2>\n<h3>什么是Spring IoC?</h3>\n<blockquote>\n<ul>\n<li>\n<p><strong>IoC（Inversion of Control:控制反转）</strong> 是一种设计思想，而不是一个具体的技术实现</p>\n</li>\n<li>\n<p>IoC 的思想就是将原本在程序中手动创建对象的控制权，交由 Spring 框架来负责</p>\n</li>\n<li>\n<p>它是通过依赖注入实现的。</p>\n</li>\n<li>\n<p>IoC容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件或注解即可，完全不用考虑对象是如何被创建出来的。</p>\n</li>\n<li>\n<p>IoC 容器实际上就是个 Map（key，value），Map 中存放的是各种对象。</p>\n</li>\n</ul>\n</blockquote>",r:{minutes:14.8,words:4439},t:"Spring面试题及总结",y:"a"}}],["/Interview/sanfene/collection.html",{loader:()=>l.e(69327).then(l.bind(l,96713)),meta:{a:"三分恶",d:1728864e6,l:"2024年10月14日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/collection-mianzhanixi-collection.jpg" alt="面渣逆袭集合框架篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭集合框架篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>7200 字 38 张手绘图，详解 29 道 Java 集合框架面试高频题（让天下没有难背的八股），面渣背会这些 Java 容器八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/ptbM0EqlnCWeWm9VdSCDLg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/SHkQ7LEOT0itt4bXMoDBPw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:57.43,words:17228},t:"Java面试题之Java集合框架篇（Java容器篇），29道Java集合框架八股文（7千字38张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java集合框架",y:"a"}}],["/Interview/sanfene/fenbushi.html",{loader:()=>l.e(91341).then(l.bind(l,18241)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>8800 字 25 张手绘图，详解 12 道分布式面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/nLwHEmVGtl-2FDugMqYs3A" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/d84tWIjbcGKhwUptzkO2hQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:32.48,words:9743},t:"分布式面试题，12道分布式八股文（8千字25张手绘图），面渣逆袭必看👍",s:"面渣逆袭-分布式",y:"a"}}],["/Interview/sanfene/javase.html",{loader:()=>l.e(17191).then(l.bind(l,97405)),meta:{a:"三分恶&沉默王二",d:1732752e6,l:"2024年11月28日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/javase-mianzhanixi-javase.jpg" alt="面渣逆袭Java 基础篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭Java 基础篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>1.3 万字 44 张手绘图，详解 56 道 Java 基础面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/t7EYyF0VGEg1rAZut9dwSw" target="_blank" rel="noopener noreferrer">转载链接</a>，原作者：星球嘉宾三分恶，戳<a href="https://mp.weixin.qq.com/s/M-6RSRcRd3X93cR7VXpanw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:96.2,words:28860},t:"Java面试题之Java基础篇，56道Java基础八股文（1.3万字44张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java SE",y:"a"}}],["/Interview/sanfene/javathread.html",{loader:()=>l.e(36971).then(l.bind(l,28404)),meta:{a:"三分恶",d:17283456e5,l:"2024年10月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/javathread-mianzhanixi-thread.jpg" alt="面渣逆袭并发编程篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭并发编程篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>4 万字 92 张手绘图，详解 71 道 Java 多线程面试高频题（让天下没有难背的八股），面渣背会这些并发编程八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/bImCIoYsH_JEzTkBx2lj4A" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/1jhBZrAb7bnvkgN1TgAUpw" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:144.86,words:43459},t:"Java并发编程面试题，71道Java多线程八股文（4万字92张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Java并发编程",y:"a"}}],["/Interview/sanfene/jvm.html",{loader:()=>l.e(40040).then(l.bind(l,28474)),meta:{a:"三分恶",d:17364672e5,l:"2025年1月10日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/jvm-mianzhanixi-jvm.jpg" alt="面渣逆袭JVM篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭JVM篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>2.3 万字 113 张手绘图，详解 54 道 Java 虚拟机面试高频题（让天下没有难背的八股），面渣背会这些 JVM 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/bHhqhl8mH3OAPt3EkaVc8Q" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/XYsEJyIo46jXhHE1sOR_0Q" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:95.33,words:28599},t:"JVM面试题，54道Java虚拟机八股文（2.3万字113张手绘图），面渣逆袭必看👍",s:"面渣逆袭-JVM",y:"a"}}],["/Interview/sanfene/linux.html",{loader:()=>l.e(89537).then(l.bind(l,96277)),meta:{a:"沉默王二",d:17330112e5,l:"2024年12月1日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<h2>1. Linux 常用命令</h2>\n<p>推荐阅读：<a href="https://javabetter.cn/pdf/linux.html" target="_blank" rel="noopener noreferrer">常用高频 Linux 速查备忘手册</a></p>\n<p>我自己常用的 Linux 命令有：</p>\n<ul>\n<li>top 用来查看系统资源</li>\n<li><code>ps -ef | grep java</code> 查看 Java 进程</li>\n<li><code>netstat</code> 查看网络连接</li>\n<li>ping 测试网络连通性</li>\n<li>find 查找文件</li>\n<li>chmod 修改文件权限</li>\n<li>kill 终止进程</li>\n<li>df 查看磁盘空间</li>\n<li>mkdir 创建目录、rm 删除文件、cp 复制文件、mv 移动文件</li>\n<li>zip 压缩文件、unzip 解压文件等等这些。</li>\n</ul>',r:{minutes:13.09,words:3926},t:"Linux面试题，1道Linux八股文（1万字2张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Linux",y:"a"}}],["/Interview/sanfene/mybatis.html",{loader:()=>l.e(79066).then(l.bind(l,38654)),meta:{a:"三分恶",d:1731024e6,l:"2024年11月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>6400 字 30 张手绘图，详解 23 道 MyBatis 面试高频题（让天下没有难背的八股），面渣背会这些 MyBatis 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/en2RgcVx52Ql3tYGLfv3Kw" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/O_5Id2o9IP4loPazJuiHng" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:34.85,words:10455},t:"MyBatis面试题，23道MyBatis八股文（6千字30张手绘图），面渣逆袭必看👍",s:"面渣逆袭-MyBatis",y:"a"}}],["/Interview/sanfene/mysql.html",{loader:()=>l.e(22393).then(l.bind(l,99450)),meta:{a:"三分恶",d:17406144e5,l:"2025年2月27日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/javathread-mianzhanixi-thread.jpg" alt="面渣逆袭并发编程篇封面图" tabindex="0" loading="lazy"><figcaption>面渣逆袭并发编程篇封面图</figcaption></figure>\n<h2>前言</h2>\n<p>4.4 万字 101 张手绘图，详解 84 道 MySQL 面试高频题（让天下没有难背的八股），面渣背会这些 MySQL 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/JFjFs_7xduCmHOegbJ-Gbg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/zSTyZ-8CFalwAYSB0PN6wA" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:188.18,words:56455},t:"MySQL面试题，84道MySQL八股文（4.4万字101张手绘图），面渣逆袭必看👍",s:"面渣逆袭-MySQL",y:"a"}}],["/Interview/sanfene/netty.html",{loader:()=>l.e(29339).then(l.bind(l,51238)),meta:{a:"沉默王二",c:["面渣逆袭"],g:["面渣逆袭"],e:'<h3>01、说说 Netty 的原理和流程</h3>\n<p>Netty 是一个基于Java NIO的高性能异步事件驱动的网络应用框架，极大简化了网络编程的复杂性。</p>\n<p>常用于构建 RPC 框架，以提升分布式服务之间的通信效率。像 Dubbo 的网络层就可以基于 Netty 来实现。</p>\n<figure><img src="https://cdn.tobebetterjavaer.com/stutymore/netty-20240419084532.png" alt="Netty 官方架构图" tabindex="0" loading="lazy"><figcaption>Netty 官方架构图</figcaption></figure>',r:{minutes:4.13,words:1240},t:"Netty面试题，62道Netty八股文（1万字1张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Netty",y:"a"}}],["/Interview/sanfene/network.html",{loader:()=>l.e(83897).then(l.bind(l,63765)),meta:{a:"三分恶",d:17330112e5,l:"2024年12月1日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>2.2 万字 80 张手绘图，详解 63 道计算机网络面试高频题（让天下没有难背的八股），面渣背会这些计算机网络八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/FvxyiMyq0422yifcyoG8vg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/yAlErlC09GnjaVvwUo3Acg" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:107.6,words:32281},t:"计算机网络面试题，63道计算机网络八股文（2.2万字80张手绘图），面渣逆袭必看👍",s:"面渣逆袭-计算机网络",y:"a"}}],["/Interview/sanfene/nixi.html",{loader:()=>l.e(60973).then(l.bind(l,22459)),meta:{c:["面渣逆袭"],g:["面渣逆袭"],e:"<p>大家好，我是二哥呀，今天给大家隆重推荐一下星球嘉宾三分恶的面渣逆袭，一份高质量的面试题八股文，涵盖了<code>Java基础</code>、<code>Java集合</code>、<code>Java并发</code>、<code>JVM</code>、<code>Spring</code>、<code>MyBatis</code>、<code>计算机网络</code>、<code>操作系统</code>、<code>MySQL</code>、<code>Redis</code>、<code>RocketMQ</code>、<code>分布式</code>、微服务、设计模式、Linux 等 16 个大的主题，共有 30 多万字，400+张手绘图，可以说是诚意满满。</p>",r:{minutes:6.75,words:2025},t:"面渣逆袭必看，面试题八股文Java基础、Java 集合框架、Java 并发编程、JVM、Spring、Redis、MyBatis、MySQL、操作系统、计算机网络、RocketMQ、分布式、微服务、设计模式、Linux👍",s:"面渣逆袭",y:"a"}}],["/Interview/sanfene/os.html",{loader:()=>l.e(11581).then(l.bind(l,76652)),meta:{a:"三分恶",d:17291232e5,l:"2024年10月17日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1 万字 51 张手绘图，详解 34 道操作系统面试高频题（让天下没有难背的八股），面渣背会这些 OS 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/CYsn0M5ddDuG--mALmhsuw" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/KMGyn-FLkvzsMH06LV4OfQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:45.21,words:13562},t:"操作系统面试题，34道操作系统八股文（1万字51张手绘图），面渣逆袭必看👍",s:"面渣逆袭-操作系统",y:"a"}}],["/Interview/sanfene/redis.html",{loader:()=>l.e(81028).then(l.bind(l,15160)),meta:{a:"三分恶",d:17303328e5,l:"2024年10月31日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1.9 万字 97 张手绘图，详解 57 道 Redis 面试高频题（让天下没有难背的八股），面渣背会这些 Redis 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/19u34NXALB1nOlBCE6Eg-Q" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/iJtNJYgirRugNBnzxkbB4Q" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:127.88,words:38365},t:"Redis面试题，57道Redis八股文（1.9万字97张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Redis",y:"a"}}],["/Interview/sanfene/rocketmq.html",{loader:()=>l.e(78941).then(l.bind(l,43819)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1.1 万字 45 张手绘图，详解 23 道 RocketMQ 面试高频题（让天下没有难背的八股），面渣背会这些 RocketMQ 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/N6wq52pBGh8xkS-5uRcO2g" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/IvBt3tB_IWZgPjKv5WGS4A" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:44.22,words:13265},t:"消息队列面试题之RocketMQ篇，23道RocketMQ八股文（1.1万字45张手绘图），面渣逆袭必看👍",s:"面渣逆袭-RocketMQ",y:"a"}}],["/Interview/sanfene/shejimoshi.html",{loader:()=>l.e(27212).then(l.bind(l,36620)),meta:{a:"沉默王二",d:1731024e6,l:"2024年11月8日",c:["面渣逆袭"],g:["面渣逆袭"],e:"<p>设计模式是软件工程中常用的解决特定问题的模版或者蓝图，可以帮助我们开发者以一种更加清晰、高效和可重用的方式来编写代码。通常分为三类：</p>\n<ol>\n<li><strong>创建型模式</strong>：涉及对象实例化，用于创建对象的模式，可以增加程序的灵活性和可重用性。常见的创建型模式有工厂方法、抽象工厂、单例、建造者、原型等。</li>\n<li><strong>结构型模式</strong>：涉及类和对象的组合，用于设计类和对象的结构，以便更好地实现程序的功能。常见的结构型模式有适配器、桥接、组合、装饰、外观、享元、代理等。</li>\n<li><strong>行为型模式</strong>：关注对象之间的通信，包括责任链、命令、解释器、迭代器、中介者、备忘录、观察者、状态、策略、模板方法、访问者等。</li>\n</ol>",r:{minutes:16.1,words:4829},t:"设计模式面试题，5道设计模式八股文（3000字10张手绘图），面渣逆袭必看👍",s:"面渣逆袭-设计模式",y:"a"}}],["/Interview/sanfene/spring.html",{loader:()=>l.e(95246).then(l.bind(l,99207)),meta:{a:"三分恶",d:17307648e5,l:"2024年11月5日",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1.3 万字 63 张手绘图，详解 41 道 Spring 面试高频题（让天下没有难背的八股），面渣背会这些 Spring 八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/EQge6DmgIqYITM3mAxkatg" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/Y17S85ntHm_MLTZMJdtjQQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:92.55,words:27764},t:"Spring面试题，41道Spring八股文（1.3万字63张手绘图），面渣逆袭必看👍",s:"面渣逆袭-Spring",y:"a"}}],["/Interview/sanfene/weifuwu.html",{loader:()=>l.e(92069).then(l.bind(l,32622)),meta:{a:"三分恶",c:["面渣逆袭"],g:["面渣逆袭"],e:'<p>1.4 万字 33 张手绘图，详解 33 道微服务（Dubbo、Spring Cloud）面试高频题（让天下没有难背的八股），面渣背会这些八股文，这次吊打面试官，我觉得稳了（手动 dog）。整理：沉默王二，戳<a href="https://mp.weixin.qq.com/s/IgY6cU_5Xic-2KAAhxK9MA" target="_blank" rel="noopener noreferrer">转载链接</a>，作者：三分恶，戳<a href="https://mp.weixin.qq.com/s/S8_I9mDNh7XnnQaXJFr2CQ" target="_blank" rel="noopener noreferrer">原文链接</a>。</p>',r:{minutes:53.97,words:16192},t:"微服务面试题（Dubbo、Spring Cloud），33道微服务八股文（1.4万字33张手绘图），面渣逆袭必看👍",s:"面渣逆袭-微服务",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/",{loader:()=>l.e(42301).then(l.bind(l,3452)),meta:{r:{minutes:.05,words:14},t:"面试答题卡",i:"fa-solid fa-file-pen",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html",{loader:()=>l.e(90577).then(l.bind(l,57630)),meta:{e:"\n<h2>1.1 定义</h2>\n<p><strong>程序计数器（Program Counter Register）</strong>：用于记录下一条 JVM 指令的执行地址行号。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>线程私有</li>\n<li>不会导致内存溢出</li>\n</ul>\n",r:{minutes:.91,words:272},t:"1. 程序计数器",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html",{loader:()=>l.e(80702).then(l.bind(l,95098)),meta:{e:"\n<h2>2.1 定义</h2>\n<p>虚拟机栈为每个线程分配的内存区域，由多个栈帧组成。每个栈帧对应一次方法调用时所需的内存。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>栈大小可调整，超出限制会抛出 <code>StackOverflowError</code>。</li>\n<li>栈空间可以动态扩展，但无法收缩。</li>\n</ul>\n<h2>2.2 内存结构</h2>\n<ul>\n<li>虚拟机栈包含多个栈帧，每个栈帧保存当前方法的局部变量表、操作数栈、动态链接、方法出口等信息。</li>\n</ul>\n<h2>2.3 线程切换</h2>\n<ul>\n<li>每个线程有独立的虚拟机栈，确保数据隔离，线程切换时能够正确恢复执行位置。</li>\n</ul>",r:{minutes:1.34,words:403},t:"2. 虚拟机栈",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html",{loader:()=>l.e(58408).then(l.bind(l,92159)),meta:{e:"\n<figure><figcaption>本地方法栈</figcaption></figure>\n<h2>3.1 作用</h2>\n<p>本地方法栈用于执行本地方法（由 C、C++ 等编写），通过 Java Native Interface（JNI）与 Java 程序交互，主要用于与底层系统进行交互。</p>\n<h2>3.2 与 Java 虚拟机栈的区别</h2>\n<ul>\n<li>虚拟机栈用于执行 Java 方法，而本地方法栈用于执行本地方法。</li>\n</ul>\n<h2>3.3 栈帧结构</h2>\n<ul>\n<li>本地方法栈的栈帧结构与虚拟机栈类似，但栈帧中包含本地方法的特定信息，如参数和返回值。</li>\n</ul>",r:{minutes:.69,words:208},t:"3. 本地方法栈",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html",{loader:()=>l.e(66791).then(l.bind(l,57632)),meta:{e:"\n<h2>4.1 定义</h2>\n<p>堆（Heap）是 JVM 中用于存储对象实例的内存区域。所有通过 <code>new</code> 关键字创建的对象都会分配到堆内存中。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>线程共享：所有线程都可以访问堆内存中的对象。</li>\n<li>垃圾回收：堆内存支持垃圾回收，自动回收不再使用的对象。</li>\n</ul>\n<h2>4.2 堆内存溢出</h2>\n<p><strong>堆内存溢出</strong>（Heap OutOfMemoryError）通常发生在堆内存中对象过多，超出了容量限制。可以通过指定堆内存大小（如 <code>-Xmx8m</code>）来避免溢出。</p>",r:{minutes:.68,words:204},t:"4. 堆",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html",{loader:()=>l.e(50460).then(l.bind(l,85912)),meta:{e:"\n<figure><figcaption>方法区</figcaption></figure>\n<h2>5.1 定义</h2>\n<p>方法区用于存储类结构信息、运行时常量池、静态变量以及即时编译器编译后的代码等。</p>\n<h2>5.2 特点</h2>\n<ul>\n<li>方法区是线程共享的，存储类的信息、方法、字段、运行时常量池等数据。</li>\n<li>数据在类加载时存入方法区，是静态数据区域。</li>\n</ul>\n<h2>5.3 内存溢出</h2>\n<p>方法区内存溢出（OutOfMemoryError）通常发生在加载大量类时，导致空间不足。</p>\n<ul>\n<li>在 JDK 1.8 之前，方法区被称为<strong>永久代</strong>，可以通过 <code>-XX:MaxPermSize</code> 参数调整大小。</li>\n<li>在 JDK 1.8 之后，方法区被改为<strong>元空间</strong>，通过 <code>-XX:MaxMetaspaceSize</code> 参数调整大小。</li>\n</ul>",r:{minutes:5.44,words:1633},t:"5 方法区",y:"a"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html",{loader:()=>l.e(92133).then(l.bind(l,94696)),meta:{e:"\n<h2>6.1 什么是直接内存？</h2>\n<h3>6.1.1 直接内存的定义</h3>\n<blockquote>\n<p>直接内存（Direct Memory）是一种特殊的内存区域，常见于 Java NIO（New Input/Output）操作中，用作数据缓冲区。</p>\n</blockquote>\n<figure><figcaption>不使用直接内存</figcaption></figure>\n<figure><figcaption>使用直接内存</figcaption></figure>\n<h3>6.1.2 直接内存的特点</h3>\n<ul>\n<li>\n<p>性能优势：直接内存不需要在 Java 堆和操作系统内存之间频繁复制数据，读写性能高。</p>\n</li>\n<li>\n<p>管理方式：直接内存由操作系统分配和回收，不受 JVM 垃圾回收（GC）管理。</p>\n</li>\n<li>\n<p>使用代价：分配和回收的成本较高，需要谨慎管理，否则容易导致内存泄漏。</p>\n</li>\n</ul>",r:{minutes:3.05,words:916},t:"6.直接内存",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html",{loader:()=>l.e(14724).then(l.bind(l,81667)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"<blockquote>\n<p>摘要\nlist中存储实例对象，将list中实例对象的两个属性提取出来组成一个新的map</p>\n</blockquote>\n",r:{minutes:7.03,words:2110},t:"Java Stream API",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html",{loader:()=>l.e(18554).then(l.bind(l,51559)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>OS：有一个抽象方法，方法体是传入的，参数也是传入的。类Vue插槽</p>\n",r:{minutes:5.14,words:1542},t:"函数式接口",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html",{loader:()=>l.e(66009).then(l.bind(l,64033)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<p>Java 8 是 Java 语言历史上一个具有里程碑意义的版本，它引入了一系列的新特性，使得 Java 语言更加现代化、简洁和强大。本文将深入探讨 Java 8 中的关键新特性，帮助你全面理解这些特性及其在实际开发中的应用。</p>\n",r:{minutes:3.72,words:1117},t:"深入理解 Java 8 新特性：从核心到实践",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html",{loader:()=>l.e(98924).then(l.bind(l,53130)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：月饼装箱还是装盒，装什么口味的，装了几个，能不能装在一起</p>\n</blockquote>\n",r:{minutes:3.51,words:1054},t:"深入理解 Java Collector",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html",{loader:()=>l.e(30822).then(l.bind(l,3190)),meta:{d:17290368e5,l:"2024年10月16日",c:["Java"],g:["Java8特性"],e:"\n<h2>前言</h2>\n<blockquote>\n<p><code>Optional</code> 是 Java 8 引入的一个容器类，专门用于处理可能为 <code>null</code> 的值。它提供了一种优雅的方式来避免 <code>NullPointerException</code>（空指针异常）并简化对值的检查和处理。<code>Optional</code> 的使用鼓励开发者显式地处理可能为空的场景，从而使代码更加健壮和可读。</p>\n</blockquote>\n",r:{minutes:3.22,words:966},t:"optional类",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html",{loader:()=>l.e(43282).then(l.bind(l,85660)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：默认方法就是给原来抽象的方法写一个默认实现，类似默认值。静态方法不依赖接口实例及其参数，之际使用<code>接口名.方法名</code>的方式使用，适用于写工具方法</p>\n</blockquote>\n",r:{minutes:2.9,words:869},t:"深入理解 Java 中的默认方法和静态方法",i:"pen-to-square",y:"a"}}],["/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html",{loader:()=>l.e(77931).then(l.bind(l,95004)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<blockquote>\n<p>OS：面粉放到传送带上，做成月饼，分出五仁和枣泥，打包变成月饼礼盒</p>\n</blockquote>\n",r:{minutes:3.42,words:1027},t:"深入理解 Stream API",i:"pen-to-square",y:"a"}}],["/Java/String/Java%E4%B8%AD%E9%87%8D%E5%86%99toString.html",{loader:()=>l.e(97372).then(l.bind(l,78821)),meta:{e:'\n<p>在 Java 中，<code>toString()</code> 方法是 <code>Object</code> 类中的一个方法，所有的 Java 类都继承自 <code>Object</code> 类，因此每个类都可以使用 <code>toString()</code> 方法。默认情况下，<code>Object</code> 类的 <code>toString()</code> 方法返回的是类的名称和该对象的哈希码，例如：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> toString</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getClass</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "@"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toHexString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.27,words:682},t:"Java中重写 toString",y:"a"}}],["/Java/String/isNotEmpty%E5%92%8CisNotBlank.html",{loader:()=>l.e(5282).then(l.bind(l,92508)),meta:{d:17291232e5,l:"2024年10月17日",c:["Java"],g:["Java8特性"],e:"\n<h2>主要区别</h2>\n<blockquote>\n<ul>\n<li><code>isNotEmpty</code> 非空：只检查字符串是否有长度（即不为零长度）。</li>\n<li><code>isNotBlank</code> 非空白：不仅检查长度，还检查字符串是否仅由空白字符（如空格、制表符、换行符）组成。</li>\n</ul>\n</blockquote>\n",r:{minutes:.25,words:76},t:"isNotEmpty和isNotBlank",i:"pen-to-square",y:"a"}}],["/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html",{loader:()=>l.e(31772).then(l.bind(l,35894)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["坑王"],e:"\n<h2>概述</h2>\n<blockquote>\n<p>等号比较的是变量(栈)内存中存放的对象的(堆)内存地址，用来判断两个对象的地址是否相同，即是否是指相同一个对象。</p>\n<p>equals用来比较的是两个对象的内容是否相等</p>\n</blockquote>\n<h2>基本数据类型和引用数据类型</h2>\n<blockquote>\n<p>基本类型：long,int,byte,float,double\n对象类型：Long,Integer,Byte,Float,Double其它一切java提供的，或者你自己创建的类</p>\n<p>Long,Integer,Byte,Float,Double成为包装类</p>\n</blockquote>",r:{minutes:.68,words:205},t:"equals与等号",i:"fa-brands fa-bug",y:"a"}}],["/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/BeanUtil.html",{loader:()=>l.e(44379).then(l.bind(l,52958)),meta:{e:'\n<h2>将 <code>Java </code>对象转换为 <code>Map</code></h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userMap </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> BeanUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">beanToMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userDTO, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(),</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        CopyOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setIgnoreNullValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setFieldValueEditor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((fieldName, fieldValue) </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> fieldValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.32,words:95},t:"BeanUtil",y:"a"}}],["/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/Java%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8C%85.html",{loader:()=>l.e(17046).then(l.bind(l,54906)),meta:{e:'\n<h2>Hutool</h2>\n<p><a href="https://www.hutool.cn/docs/#/" target="_blank" rel="noopener noreferrer">Hutool官方文档</a></p>\n',r:{minutes:.05,words:15},t:"Java常用工具包",y:"a"}}],["/Java/%E5%BC%82%E5%B8%B8/try-with-resources%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%E8%B5%84%E6%BA%90.html",{loader:()=>l.e(54726).then(l.bind(l,76566)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p><code>try-with-resources</code> 是 Java 7 引入的一种用于自动关闭资源（如文件、网络连接、数据库连接等）的机制。它通过 <code>AutoCloseable</code> 或 <code>Closeable</code> 接口实现资源的自动释放，从而避免了因为忘记关闭资源而导致的内存泄漏或资源浪费问题。</p>\n</div>\n<h3>1. 使用 <code>try-with-resources</code></h3>',r:{minutes:1.89,words:567},t:"try-with-resources",y:"a"}}],["/Java/%E9%9A%8F%E7%AC%94/Java%20%E4%B8%AD%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F.html",{loader:()=>l.e(64687).then(l.bind(l,38029)),meta:{e:"\n<h2>🧠 一、什么是引用类型？</h2>\n<p>在 Java 中，除了 8 种基本类型，其他都是 <strong>引用类型</strong>，包括：</p>\n<ul>\n<li>类（<code>new</code> 出来的对象）</li>\n<li>接口</li>\n<li>数组</li>\n<li>枚举</li>\n<li>字符串（虽然是特殊的，但也是引用类型）</li>\n</ul>\n<hr>\n<h2>🧩 二、Java 内存结构简要回顾</h2>\n<p>Java 的内存结构大致如下（基于 HotSpot JVM）：</p>\n<table>\n<thead>\n<tr>\n<th>区域</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>栈（Stack）</strong></td>\n<td>存放方法调用帧、局部变量表（包括引用变量）</td>\n</tr>\n<tr>\n<td><strong>堆（Heap）</strong></td>\n<td>存放所有对象实例和数组，垃圾回收主要作用于此</td>\n</tr>\n<tr>\n<td><strong>方法区（MetaSpace）</strong></td>\n<td>类信息、常量池、静态变量等</td>\n</tr>\n<tr>\n<td><strong>程序计数器</strong></td>\n<td>每个线程的执行字节码的指令地址</td>\n</tr>\n<tr>\n<td><strong>本地方法栈</strong></td>\n<td>用于调用本地方法（JNI）</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.61,words:484},t:"Java 中引用类型在内存中的存储方式",y:"a"}}],["/Java/%E9%9A%8F%E7%AC%94/Java%20%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6.html",{loader:()=>l.e(79832).then(l.bind(l,55183)),meta:{e:'\n<hr>\n<h2>🌀 一、Java 是值传递还是引用传递？</h2>\n<p>这个问题常让人困惑——<strong>Java 永远是值传递（pass by value）！</strong></p>\n<h3>👇 区分关键：</h3>\n<ul>\n<li>对于 <strong>基本类型</strong>，传的是值的副本（直接数据）。</li>\n<li>对于 <strong>引用类型</strong>，传的是对象引用的副本（对象地址的拷贝）。</li>\n</ul>\n<h3>✍️ 示例说明：</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> change</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Person</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> p) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "张三"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     // 改变的是堆中对象的字段 ✅</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 改变的是引用本身 ❌（只在方法内有效）</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "李四"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Person</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> person </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "原名"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">change</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(person)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 输出：张三</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.36,words:709},t:"Java 的引用传递机制，以及四种引用类型对 GC 的影响",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",{loader:()=>l.e(56171).then(l.bind(l,57710)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>序列化是将对象转换为字节流的过程，使对象能够通过网络传输，进行持久化存储或者缓存。Java提供了<code>java.io.serializable</code>接口来支持序列化，只要类实现了该接口，类的实例化对象就能进行序列化。</p>\n<p>反序列化是将字节流重新转化为对象的过程，即从存储中读取数据并重新创建对象。</p>\n<p>每一个实现序列化接口的类都要定义一个<code>serialVersionUID</code>，用于反序列化时验证版本一致性。版本不匹配会导致反序列化失败。若不指定<code>serialVersionUID</code>，Java会根据类的定义自动hash生成一个。不需要进行序列化的成员属性变量可使用<code>transient</code>关键字修饰。</p>\n<p>Java中对应序列化，反序列化机制在java.io包中在顶级父类下封装了ObjectOutputStream类，作用是将Java对象的原始数据类型以流的方式写出到文件,实现对象的持久存储；ObjectInputStream类，作用是把文件中保存的对象,以流的方式读取出来使用。</p>\n<p>Java中默认序列化框架<code>JDK Serializable</code>比较慢，对于大规模分布式系统，选择更加高效的序列化框架（FST， Kryo，Protocol buffer，Thrift，Hessian）</p>\n<p>在身份验证，文件读写，数据传输等功能处，在未对反序列化接口做访问控制，未对序列化数据做加密和签名，加密密钥使用硬编码（如Shiro 1.2.4），使用不安全的反序列化框架库（如Fastjson 1.2.24）或函数的情况下，由于序列化数据可被用户控制，攻击者可以精心构造恶意的序列化数据（执行特定代码或命令的数据）传递给应用程序，在应用程序反序列化对象时执行攻击者构造的恶意代码，达到攻击者的目的。</p>\n</div>',r:{minutes:1.85,words:555},t:"1.序列化与反序列化",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",{loader:()=>l.e(87073).then(l.bind(l,25579)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["了解"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">相关信息</p>\n<p><code>序列化面试题补充，了解即可</code>在实际项目中使用 <strong>FST (Fast Serialization)</strong> 进行序列化和反序列化时，主要的目的是提升性能，尤其是在处理大量数据或者频繁进行对象存取的场景中。以下是一些常见的使用场景和最佳实践。</p>\n</div>\n',r:{minutes:3.98,words:1194},t:"1.补充-FST框架使用实例",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html",{loader:()=>l.e(46338).then(l.bind(l,29624)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3><strong>口述稿</strong></h3>\n",r:{minutes:4.72,words:1417},t:"10.Java内部类及作用",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",{loader:()=>l.e(22819).then(l.bind(l,56306)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<h3>口述稿</h3>\n<p><strong>面试官提问：请简要讲一下 Java 8 的新特性。</strong></p>\n<p>Java 8 引入了很多重要的新特性，增强了语言的功能和性能，以下是几个核心特性：</p>\n",r:{minutes:3.49,words:1047},t:"11.Java8新特性",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(43065).then(l.bind(l,30239)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<p><strong>面试官：请简要说明一下 JDK 和 JRE 之间的区别。</strong></p>\n<p><strong>回答：</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>"好的，JDK（Java Development Kit）和 JRE（Java Runtime Environment）是 Java 开发和运行中两个非常重要的组件。它们之间有一些关键的区别，下面我来详细说明。</p>\n<p>首先，<strong>JDK</strong> 是 Java 开发工具包，它是为开发者设计的。JDK 不仅包含了 JRE，而且还提供了开发 Java 程序所需的各种工具，比如 <strong>Java 编译器（javac）</strong>、<strong>调试工具（jdb）</strong>、以及 <strong>文档生成工具（javadoc）</strong> 等。因此，<strong>JDK 是一个完整的开发环境</strong>，如果我们需要编写、编译、调试、执行 Java 程序，都需要用到 JDK。</p>\n<p>而 <strong>JRE</strong> 是 Java 运行环境，主要用于 <strong>运行 Java 程序</strong>。它包含了 Java 虚拟机（JVM）和 Java 类库等基础运行时环境，但是不包括开发工具。因此，JRE 主要是为用户提供一个能够运行 Java 应用的环境，但它 <strong>不包含编译 Java 程序的功能</strong>。</p>\n<p>简单来说，<strong>JDK 包含了 JRE</strong>，所以如果你是开发人员，通常需要安装 JDK，因为它不仅可以用来运行 Java 程序，还可以进行开发和编译。而 <strong>JRE 主要是为了运行 Java 程序而设计</strong>，如果你只是需要运行一个 Java 应用，那么安装 JRE 就足够了。</p>\n<p>所以总结一下：<strong>JDK 是用于开发 Java 应用程序的工具包，包含了 JRE 和开发工具</strong>；而 <strong>JRE 是用于运行 Java 程序的环境</strong>，不包含开发工具。"</p>\n</div>',r:{minutes:3.37,words:1011},t:"12.JDK和JRE之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html",{loader:()=>l.e(69027).then(l.bind(l,22059)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<p><strong>Java开发工具</strong></p>\n<ul>\n<li><strong>javac</strong>：Java 编译器，负责将 Java 源代码编译成字节码 （.class 文件）。</li>\n<li><strong>java</strong>：运行 Java 应用程序的命令，使用 JVM 来解释并执行编译后的字节码文件。</li>\n<li><strong>javadoc</strong>：生成 API 文档的工具，能够根据源代码中的注释生成 HTML 格式的文档。</li>\n<li><strong>jar</strong>：用于创建和管理 JAR 文件的工具，可以将多个 .class 文件打包为单一文件，便于分发和管理。</li>\n<li><strong>jdb</strong>：Java 调试工具，用于在命令行中调试 Java 应用程序，支持断点设置、变量查看等功能。</li>\n</ul>",r:{minutes:1.59,words:476},t:"13.使用过哪些JDK开发工具",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html",{loader:()=>l.e(58307).then(l.bind(l,48676)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>hashCode</code>、<code>equals</code> 和 <code>==</code> 是 Java 中三个非常重要的概念，它们在对象比较和哈希结构中扮演着不同的角色。下面我来详细说明它们之间的区别。</p>\n<p>首先，<code>==</code> 是 Java 中用于比较对象引用是否相等的操作符。它检查的是两个对象在<code>内存中的地址</code>是否相同，也就是说，<code>==</code> 判断的是两个对象是否指向同一个内存位置。如果两个对象的引用指向的是同一个对象，那么 <code>==</code> 返回 <code>true</code>；如果指向不同的对象，返回 <code>false</code>。</p>\n<p>而 <code>equals</code> 是 <code>Object</code> 类中定义的方法，它用来比较两个对象的内容是否相等。默认情况下，<code>equals</code> 方法会比较对象的内存地址（类似于 <code>==</code> 的行为），但通常我们会在自定义类中重写 <code>equals</code> 方法，以实现对对象内容的比较。比如在 <code>String</code> 类中，<code>equals</code> 方法比较的是字符串的值，而不是它们在内存中的地址。因此，<code>equals</code> 是一种更为常见的内容比较方式，尤其是在集合操作中。</p>\n<p>接下来是 <code>hashCode</code>，它是每个对象的哈希值，用于哈希存储结构中的对象查找和存储优化。<code>hashCode</code> 返回一个整数值，表示对象的哈希地址，它用于加速对象在哈希集合（如 <code>HashMap</code>、<code>HashSet</code>）中的查找。当我们将对象插入这些集合时，<code>hashCode</code> 被用来快速确定对象的存储位置。如果两个对象的 <code>hashCode</code> 不同，它们一定不相等（<code>equals</code> 返回 <code>false</code>）。但需要注意的是，<code>hashCode</code> 相同的对象不一定通过 <code>equals</code> 比较为相等。</p>\n<p>总结一下它们之间的关系：</p>\n<ul>\n<li><code>==</code> 比较的是对象的引用，判断它们是否指向同一个内存地址。</li>\n<li><code>equals</code> 比较的是对象的内容，判断它们的内容是否相等（需要根据具体实现来决定）。</li>\n<li><code>hashCode</code> 是用于哈希结构中对象查找和存储的优化工具，通常需要与 <code>equals</code> 配合使用，以保证哈希结构的正确性。</li>\n</ul>\n<p>简单来说，<code>==</code> 是比较对象的引用，<code>equals</code> 是比较对象的内容，而 <code>hashCode</code> 是为了提高哈希结构效率所使用的哈希值。</p>\n</div>',r:{minutes:4.28,words:1285},t:"14.Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html",{loader:()=>l.e(84390).then(l.bind(l,68395)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<code>hashCode()</code> 和 <code>equals()</code> 方法是紧密相关的，尤其是在哈希数据结构中。根据 Java 的规范，如果两个对象通过 <code>equals()</code> 比较是相等的，它们的 <code>hashCode()</code> 必须相等。反之，<code>hashCode()</code> 相等并不意味着 <code>equals()</code> 必定相等，但通常建议避免不同对象具有相同的 <code>hashCode()</code>，以减少哈希冲突。在实现这两个方法时，通常根据对象的核心属性来重写 <code>equals()</code> 和 <code>hashCode()</code>，这样才能确保在像 <code>HashMap</code> 或 <code>HashSet</code> 这样的哈希数据结构中正常工作。</p>\n</div>',r:{minutes:3.03,words:910},t:"15.hashCode() 和equals() 之间的关系",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",{loader:()=>l.e(61812).then(l.bind(l,487)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>Java 动态代理是一种在程序运行时生成代理类并将其应用到目标对象的机制。动态代理允许我们在不修改目标类的情况下，通过代理类在方法调用前后增加额外的逻辑。它广泛应用于日志记录、权限控制、事务管理等场景。</p>\n</div>\n<h3>工作原理：</h3>\n<p>Java 动态代理主要依赖于 <code>java.lang.reflect.Proxy</code> 类和 <code>InvocationHandler</code> 接口。</p>',r:{minutes:2.98,words:894},t:"16.什么是Java中的动态代理？",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(59027).then(l.bind(l,50286)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li><strong>Java动态代理</strong>适用于实现了接口的类，内存消耗低，但性能稍逊。</li>\n<li><strong>CGLIB动态代理</strong>适用于没有接口的类，性能更好，但不能代理 <code>final</code> 类和方法，且内存消耗较大。</li>\n</ul>\n</div>\n<blockquote>\n<p>Java中的动态代理和CGLIB动态代理是两种常用的代理机制，它们都可以在运行时动态地创建代理对象，通常用于面向切面编程（AOP）和设计模式（如装饰器模式）。下面是对这两种代理机制的总结：</p>\n</blockquote>',r:{minutes:3.22,words:965},t:"17.JDK动态代理和CGLIB动态代理有什么区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",{loader:()=>l.e(45678).then(l.bind(l,35407)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>不可变类的定义</strong></p>\n</div>\n<blockquote>\n<p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p>\n</blockquote>\n',r:{minutes:1.47,words:440},t:"2.什么是 Java 中的不可变类",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(48264).then(l.bind(l,10326)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>定义</strong></p>\n</div>\n<blockquote>\n<p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p>\n<ul>\n<li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li>\n<li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误。</li>\n</ul>\n</blockquote>\n',r:{minutes:.89,words:266},t:"3.Java 中 Exception 和 Error 有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html",{loader:()=>l.e(25349).then(l.bind(l,47409)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p>在 Java 中，异常处理是确保程序健壮性和稳定性的一个关键部分。然而，不恰当的异常处理可能会导致程序出现不易察觉的错误或性能问题。因此，编写异常处理代码时需要特别注意一些细节。以下是 <strong>Java 异常处理中需要注意的地方</strong>：</p>\n</div>\n',r:{minutes:4.93,words:1478},t:"3.扩展-异常处理注意点",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html",{loader:()=>l.e(29244).then(l.bind(l,50723)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java基础"],g:["面试题","简单"],e:"\n<h3>1. <strong>平台无关性（跨平台性）</strong></h3>\n<ul>\n<li><strong>“一次编写，到处运行（Write Once, Run Anywhere）”</strong>：Java 代码编译成字节码（.class 文件），通过 Java 虚拟机（JVM）在不同平台上运行，无需修改源代码。这使得 Java 成为开发跨平台应用的理想选择，支持多种操作系统，如 Windows、Linux、macOS。</li>\n</ul>\n",r:{minutes:3.96,words:1189},t:"4.Java的优势",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html",{loader:()=>l.e(78662).then(l.bind(l,32222)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>多态</strong>（Polymorphism）是面向对象编程（OOP）中的一个重要概念，它指的是“同一方法或操作作用于不同对象时，可以有不同的表现形式”。在 Java 中，多态使得同一个方法调用可以根据实际对象的类型执行不同的操作，从而提高代码的灵活性和可扩展性。</p>\n</div>\n',r:{minutes:3.3,words:989},t:"5.什么是Java的多态",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html",{loader:()=>l.e(94791).then(l.bind(l,34105)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<strong>参数传递是按值传递</strong>（pass-by-value）。</p>\n<ul>\n<li><strong>基本类型参数</strong>：按值传递，即传递的是变量的副本，修改副本不会影响原始变量。</li>\n<li><strong>引用类型参数</strong>：按值传递，即传递的是引用（内存地址）的副本，修改对象的内容会影响原始对象，但修改引用本身（让引用指向新对象）不会影响原始引用。</li>\n</ul>\n</div>\n<h3>1. <strong>基本类型参数：</strong></h3>\n<p>对于基本数据类型（如 <code>int</code>、<code>float</code>、<code>boolean</code> 等），传递的是<strong>值</strong>。也就是说，当你将一个基本数据类型的变量作为参数传递给方法时，传递的是该变量的副本，方法内部对参数的修改不会影响原始变量。</p>\n',r:{minutes:2.46,words:737},t:"6.Java中的参数传递是按值还是按引用",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>l.e(24930).then(l.bind(l,1427)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<p>是的，Java <strong>不支持多重继承</strong>。这意味着一个类不能同时继承自两个或多个类。Java 之所以不支持多重继承，主要是为了避免一些潜在的复杂性和问题，尤其是<strong>菱形继承问题</strong>。</p>\n",r:{minutes:2.82,words:846},t:"7.Java 不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>l.e(10084).then(l.bind(l,56292)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>1. <strong>避免菱形继承问题</strong></h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>多重继承可能会导致“菱形继承”问题。假设有一个类 <code>A</code>，然后类 <code>B</code> 和类 <code>C</code> 都继承自 <code>A</code>，接着类 <code>D</code> 同时继承自 <code>B</code> 和 <code>C</code>。如果 <code>B</code> 和 <code>C</code> 都重写了 <code>A</code> 的某个方法，类 <code>D</code> 在调用这个方法时就无法明确到底调用 <code>B</code> 还是 <code>C</code> 中的实现，导致继承关系的模糊性和不确定性。这种问题被称为“菱形继承”。</p>\n</div>\n',r:{minutes:2.29,words:687},t:"7.为什么Java不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(89157).then(l.bind(l,88202)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>0. A</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>面向过程编程和面向对象编程是两种不同的编程范式，它们的主要区别在于关注的重点和代码的组织方式。</p>\n<ol>\n<li><strong>面向过程编程</strong>，顾名思义，它注重的是“做什么”和“怎么做”。在面向过程的程序中，我们通常通过一系列函数或过程来实现特定的功能。数据和操作数据的逻辑通常是分开的，程序逻辑是按顺序执行的。适用于那些任务明确、功能简单的小型程序。</li>\n<li><strong>面向对象编程</strong>，则关注的是“对象”和“行为”。在这种范式中，程序通过类和对象来组织。对象是数据和操作数据的代码的封装体，每个对象既包含数据，也包含对数据的操作方法。面向对象的三大特性——封装、继承和多态，帮助我们将复杂的系统组织得更加清晰、模块化，同时也增强了代码的重用性和可维护性。</li>\n</ol>\n<p>具体来讲，面向过程的程序结构主要由函数组成，函数直接操作全局数据，程序随着功能的增多，代码的可维护性和扩展性会变得较差。而面向对象则通过类和对象来组织代码，类定义了对象的属性和行为，对象之间通过方法进行交互。面向对象的方式使得程序更容易扩展和维护，尤其在处理复杂系统时优势更为明显。</p>\n<p>举个简单的例子，如果我们有一个银行账户的管理程序，<strong>面向过程</strong>的实现可能是通过函数来存取余额，而数据和方法是分开的；而在<strong>面向对象</strong>中，我们会创建一个<code>BankAccount</code>类，这个类封装了余额和存取款的方法，使得代码更加清晰，也更容易扩展，比如未来需要增加更多的功能（例如转账、利息计算等）。</p>\n<p>总结来说，面向过程适合功能简单、需求明确的项目，而面向对象则更适用于需要长期维护和扩展的大型项目。面向对象通过封装、继承和多态，使得系统更加模块化、灵活，并且具有更强的可扩展性和可维护性。</p>\n</div>\n',r:{minutes:5.3,words:1591},t:"8.面向过程和面向对象的区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(82844).then(l.bind(l,10018)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3>0. A</h3>\n",r:{minutes:5.77,words:1730},t:"9.Java方法重载和重写之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.html",{loader:()=>l.e(44673).then(l.bind(l,51897)),meta:{e:"\n<h1>前言</h1>\n<h2>为什么学习各类软件在Linux上的部署</h2>\n<p>在前面，我们学习了许多的Linux命令和高级技巧，这些知识点比较零散，同学们跟随着课程的内容进行练习虽然可以基础掌握这些命令和技巧的使用，但是并没有一些具体的实操能够串联起来这些知识点。</p>\n<p>所以，现在我们设计了各类软件在Linux上部署安装的实战章节，可以让同学们：</p>\n<ul>\n<li>对前面学习的各类操作命令进行复习和练习，从而深度掌握它们</li>\n<li>本章节中演示部署的软件，包含了IT行业各类岗位中所必须使用的，如：Java后台、大数据开发、运维开发、测试、AI等。无论学习Linux后从事什么岗位，这些内容都会给你带来帮助</li>\n</ul>",r:{minutes:57.96,words:17389},t:"实战章节：在Linux上部署各类软件",y:"a"}}],["/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0.html",{loader:()=>l.e(24651).then(l.bind(l,38446)),meta:{e:"\n<h2>Linux的目录结构</h2>\n<figure><figcaption>image-20221027214128453</figcaption></figure>\n<ul>\n<li><code>/</code>，根目录是最顶级的目录了</li>\n<li>Linux只有一个顶级目录：<code>/</code></li>\n<li>路径描述的层次关系同样适用<code>/</code>来表示</li>\n<li>/home/itheima/a.txt，表示根目录下的home文件夹内有itheima文件夹，内有a.txt</li>\n</ul>\n<h2>ls命令</h2>\n<p>功能：列出文件夹信息</p>",r:{minutes:9.74,words:2922},t:"Linux基础命令",y:"a"}}],["/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/V2ray%E5%AE%89%E8%A3%85.html",{loader:()=>l.e(56956).then(l.bind(l,4289)),meta:{e:'<h2>安装 V2Ray</h2>\n<p>在开始安装之前，安装一些必要的软件：</p>\n<ul>\n<li>Ubuntu/Debian 系统: <code>apt-get update -y &amp;&amp; apt-get install curl -y</code></li>\n<li>CentOS 系统: <code>yum update -y &amp;&amp; yum install curl -y</code></li>\n</ul>\n<p>为了简化安装，我们使用一键安装脚本，使用现成的一键安装脚本，使用 root 用户输入下面命令安装：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bash &lt;(curl -s -L https://git.io/v2ray.sh)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.16,words:349},t:"",y:"a"}}],["/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html",{loader:()=>l.e(2522).then(l.bind(l,5141)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["基础知识"],e:"\n<p>Linux 操作系统因其开源特性和灵活性，支持多种硬件架构，适用于从个人电脑到大型服务器、嵌入式设备等各种场景。以下是一些主要的 Linux 架构及其对应的代码标识：</p>\n",r:{minutes:1.69,words:506},t:"Linux 支持的主要架构",i:"fa-brands fa-linux",y:"a"}}],["/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/systemctl.html",{loader:()=>l.e(17635).then(l.bind(l,58208)),meta:{e:'\n<p>Systemd 是许多现代 Linux 发行版中默认的初始化系统和服务管理器。通过 systemctl 命令，系统管理员可以方便地管理和监控系统中的各种服务。本文将介绍 systemctl 命令的常见用法，帮助读者更好地掌握 Systemd 服务管理。</p>\n<h3>1. 启动和停止服务</h3>\n<p>启动一个服务：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> servicename</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.28,words:383},t:"systemctl 命令的常见用法",y:"a"}}],["/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/reset-failed.html",{loader:()=>l.e(95099).then(l.bind(l,42821)),meta:{e:"\n<p><code>systemctl reset-failed</code> 命令用于重置 Systemd 记录的所有失败的服务状态信息。当一个服务启动失败后，Systemd 会记录该服务的失败状态，这些状态信息可以帮助系统管理员诊断问题。但有时候，当问题已经解决或者不再需要这些失败状态信息时，可以使用 <code>systemctl reset-failed</code> 命令将这些失败状态信息清除，以便重新开始服务的状态跟踪。</p>\n<p>重置失败状态信息后，Systemd 将不再记录之前失败的服务状态，这样在下一次服务启动时，Systemd 将重新开始跟踪服务的状态。这个命令通常用于清除旧的失败状态信息，以便更清晰地查看当前系统状态。</p>",r:{minutes:.81,words:243},t:"reset-failed",y:"a"}}],["/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5.html",{loader:()=>l.e(64397).then(l.bind(l,97843)),meta:{d:1739232e6,l:"2025年2月11日",c:["Linux"],g:["基础"],e:"\n<p>在Linux中，软链接（Symbolic Link）和硬链接（Hard Link）是两种不同的文件链接方式。它们都允许你创建指向文件或目录的引用，但它们在工作原理和用途上有一些显著的区别。以下是对两者的总结：</p>\n",r:{minutes:3.59,words:1078},t:"软硬链接",i:"fa-brands fa-linux",y:"a"}}],["/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html",{loader:()=>l.e(67917).then(l.bind(l,78380)),meta:{d:17324064e5,l:"2024年11月24日",c:["Linux"],g:["总结"],e:"\n<p>启动Linux Centos7系统，当出现如下画面时，直接按“e”键继续。</p>\n<h3></h3>\n<h3>2、看到如下界面后，往下拉</h3>\n<p>⚠️注意⬇️拉一下，否则看不到那行</p>\n<h3></h3>\n<h3>3、在如下截图的位置，添加“rw single init=/bin/bash”，添加后按“Ctrl + x”引导系统。</h3>\n<h3></h3>\n<h3>4、输入“passwd”重置root密码</h3>\n<h3></h3>\n<h3>5、运行命令“exec /sbin/init”来正常启动系统，需要输入修改后的root密码。</h3>\n<h3></h3>\n<h3>6、进入系统后，输入命令“reboot”重启系统。</h3>",r:{minutes:.63,words:189},t:"单用户模式重置root密码",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html",{loader:()=>l.e(43712).then(l.bind(l,5274)),meta:{d:17299872e5,l:"2024年10月27日",c:["Linux"],g:["总结"],e:'\n<blockquote>\n<p>设置默认开机模式</p>\n</blockquote>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-user.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "默认进入命令行界面"</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> graphical.target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   "默认进入图形化界面"</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.45,words:134},t:"界面切换",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/daemon-reload.html",{loader:()=>l.e(98681).then(l.bind(l,89866)),meta:{e:"\n<p><code>systemctl daemon-reload</code> 是一个 Systemd 工具命令，用于重新加载 Systemd 的配置文件，以便使最新的更改生效。当你手动编辑了 Systemd 单元文件（如服务单元文件）并想要立即应用这些更改时，你可以运行 <code>systemctl daemon-reload</code> 命令。</p>\n<p>具体来说，<code>systemctl daemon-reload</code> 的作用包括：</p>\n<ol>\n<li>\n<p><strong>重新加载配置文件</strong>：当你编辑了 Systemd 单元文件（如 <code>.service</code> 文件）时，使用 <code>systemctl daemon-reload</code> 可以重新加载 Systemd 的配置，使更改生效。</p>\n</li>\n<li>\n<p><strong>更新 Systemd 管理的单元</strong>：Systemd 会监视系统中的单元文件，包括服务、套接字、挂载点等。<code>daemon-reload</code> 命令会更新 Systemd 对这些单元的管理状态。</p>\n</li>\n<li>\n<p><strong>确保新配置生效</strong>：在修改 Systemd 配置后，如果没有运行 <code>systemctl daemon-reload</code>，Systemd 可能仍然使用旧的配置信息。通过运行此命令，可以确保 Systemd 使用最新的配置。</p>\n</li>\n</ol>",r:{minutes:.92,words:275},t:"daemon-reload",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html",{loader:()=>l.e(55871).then(l.bind(l,82637)),meta:{d:17299872e5,l:"2024年10月27日",c:["Linux"],g:["总结"],e:"\n<h2>概述</h2>\n<blockquote>\n<p>把控制命令发送给 init 守护程序。</p>\n<p>init 进程号始终为 1，发送 TERM 信号给 init 会终止所有用户进程、守护进程等。</p>\n<hr>\n<p>init 可用于<code>安全</code>关闭 重启 停止计算机，init 是所有进程的祖先，是 Linux 系统不可或缺的程序。</p>\n<p>强制直接关闭 Linux 系统计算机电源可能导致进程数据丢失，使系统处于不稳定状态 (甚至损坏硬件设备)。</p>\n<hr>\n<p><code>shutdown</code>命令需有 root 权限，shutdown 是把信号发送给<code>init</code>命令，要求 init 改变 runlevel，以此进行相关操作。</p>\n<p>关机或重启计算机实际上是 <code>runlevel</code> 的调整，因此，也可使用 <code>init</code> 命令 (需 root 权限) 直接调整 <code>runlevel </code>进行相关操作。</p>\n</blockquote>",r:{minutes:2.15,words:644},t:"init命令详解",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/rc.local.html",{loader:()=>l.e(9905).then(l.bind(l,39337)),meta:{e:"\n<p><code>rc.local</code> 是一个在 Unix/Linux 系统中用来执行系统启动时自定义命令或脚本的文件。在系统启动过程中，操作系统会执行一系列的启动脚本来初始化系统环境，其中就包括执行 <code>rc.local</code> 文件中的命令或脚本。</p>\n<p>具体来说，<code>rc.local</code> 文件通常位于 <code>/etc/rc.local</code> 或 <code>/etc/rc.d/rc.local</code> 这样的路径下。在系统启动时，操作系统会在启动过程的某个阶段执行这个文件中包含的命令或脚本，用户可以在其中添加自定义的启动任务。</p>",r:{minutes:1.24,words:372},t:"rc.local",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html",{loader:()=>l.e(18014).then(l.bind(l,55587)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["总结"],e:"\n<p>在 Linux 系统上查看设备信息通常可以通过多种工具和命令实现。以下是对常用方法的总结：</p>\n<hr>\n",r:{minutes:1.83,words:550},t:"查看系统配置",i:"fa-brands fa-linux",y:"a"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E8%AF%A2%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE.html",{loader:()=>l.e(47573).then(l.bind(l,64519)),meta:{d:1739232e6,l:"2025年2月11日",c:["Linux"],g:["基础"],e:"\n<h3>1. <strong>使用 <code>which</code> 命令（适用于可执行文件）</strong></h3>\n<p>如果你知道进程所对应的可执行文件名称，可以使用 <code>which</code> 命令来查找它的路径。</p>\n",r:{minutes:2.29,words:687},t:"查询安装位置",i:"fa-brands fa-linux",y:"a"}}],["/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/%E4%BF%AE%E6%94%B9yum%E6%BA%90.html",{loader:()=>l.e(55086).then(l.bind(l,77757)),meta:{e:'\n<p>1.首先备份系统自带yum源配置文件/etc/yum.repos.d/CentOS-Base.repo</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/yum.repos.d/CentOS-Base.repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/yum.repos.d/CentOS-Base.repo.backup</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.02,words:606},t:"更换yum国内源",y:"a"}}],["/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%BF%9B%E7%A8%8B.html",{loader:()=>l.e(33479).then(l.bind(l,27893)),meta:{e:'\n<h3>1. 查找使用 8080 端口的进程</h3>\n<p>首先，你需要找出哪个进程正在使用 8080 端口。在不同操作系统上，命令略有不同。</p>\n<h4>在 Linux/macOS 上：</h4>\n<p>打开终端，输入以下命令：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lsof</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> :8080</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.92,words:275},t:"关闭端口占用进程",y:"a"}}],["/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/dos2unix%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%B8%85%E7%90%86.html",{loader:()=>l.e(11837).then(l.bind(l,60300)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>dos2unix</code> 是一个用于转换文本文件格式的工具，它的主要功能是将 Windows 风格的换行符（<code>\\r\\n</code>）转换为 UNIX/Linux 风格的换行符（<code>\\n</code>）。通过使用 <code>dos2unix</code>，可以避免由于换行符问题导致的脚本执行错误或不兼容问题。</p>\n</div>\n<h3>主要特点：</h3>\n<ul>\n<li><strong>转换换行符格式</strong>：Windows 系统使用 <code>\\r\\n</code> 作为行结束符，而 UNIX/Linux 系统只使用 <code>\\n</code>。<code>dos2unix</code> 可以帮助你将 Windows 格式的换行符转换为 UNIX 格式。</li>\n<li><strong>解决跨平台问题</strong>：如果在 Windows 上创建或编辑的文件被传输到 Linux 系统，可能会出现执行错误或显示异常的情况。<code>dos2unix</code> 可以确保文件格式适应不同的操作系统。</li>\n<li><strong>简洁易用</strong>：只需运行一个简单的命令，就能转换文件格式。</li>\n</ul>\n',r:{minutes:1.01,words:303},t:"dos2unix换行符清理",y:"a"}}],["/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html",{loader:()=>l.e(31872).then(l.bind(l,57582)),meta:{d:173232e7,l:"2024年11月23日",c:["Linux"],g:["总结"],e:"\n<p>在 Linux 系统中，挂载硬盘是指将一个存储设备（如硬盘分区或 U 盘）与文件系统中的某个目录关联起来，使其可以被访问。以下是挂载硬盘的一般步骤：</p>\n",r:{minutes:1.7,words:510},t:"硬盘挂载",i:"fa-brands fa-linux",y:"a"}}],["/MQ/Kafka/%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6demo.html",{loader:()=>l.e(90872).then(l.bind(l,11264)),meta:{d:17307648e5,l:"2024年11月5日",c:["中间件"],g:["命令"],e:"\n<p>要在两台服务器之间通过 Kafka 发送和接收消息，你需要确保以下条件满足：</p>\n<ol>\n<li><strong>Kafka 集群已正确配置并运行</strong>：Kafka 集群需要在两台服务器上正确配置，并且能够互相通信。</li>\n<li><strong>网络配置</strong>：确保两台服务器之间的网络是通的，Kafka broker 的端口（默认 <code>9092</code>）和 Zookeeper 的端口（默认 <code>2181</code>）可以互相访问。</li>\n<li><strong>Kafka Topic 已创建</strong>：确保 Kafka topic 已经创建。</li>\n</ol>",r:{minutes:2.2,words:659},t:"Kafka 发送和接收消息",i:"fa-brands fa-chart-network",y:"a"}}],["/MQ/RabbitMQ/%E4%BB%80%E4%B9%88%E6%98%AFRabbitMQ.html",{loader:()=>l.e(92567).then(l.bind(l,82425)),meta:{e:'\n<p>你是一个程序员，假设你维护了两个服务 A 和 B。</p>\n<p>A 服务负责转发用户请求到 B 服务，B 服务是个算法服务，GPU 资源有限，当请求量大到 B 服务处理不过来的时候，希望能优先处理会员用户的请求。</p>\n<p>那么问题就来了，如果普通用户和会员用户同时发起请求，怎样才能做到<strong>会员优先</strong>呢？</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504012255156.jpeg" alt="怎么做到会员优先" tabindex="0" loading="lazy"><figcaption>怎么做到会员优先</figcaption></figure>',r:{minutes:9.11,words:2732},t:"RabbitMQ 是什么？架构是怎么样的？",y:"a"}}],["/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html",{loader:()=>l.e(41420).then(l.bind(l,75528)),meta:{e:'\n<p><a href="https://baomidou.com/guides/logic-delete/" target="_blank" rel="noopener noreferrer">逻辑删除支持 | MyBatis-Plus</a></p>\n<h2>原理</h2>\n<blockquote>\n<p>数据表中设计一个字段表示记录为“已删除”而非物理删除</p>\n</blockquote>\n',r:{minutes:.78,words:234},t:"逻辑删除",y:"a"}}],["/Mybatis/Mybatis%20Plus/Mybatis%20Plus%E7%AC%94%E8%AE%B0.html",{loader:()=>l.e(91399).then(l.bind(l,35114)),meta:{e:"\n<p>通过今天的学习，我们要达成下面的目标：</p>\n<ul>\n<li>能利用MybatisPlus实现基本的CRUD</li>\n<li>会使用条件构建造器构建查询和更新语句</li>\n<li>会使用MybatisPlus中的常用注解</li>\n<li>会使用MybatisPlus处理枚举、JSON类型字段</li>\n<li>会使用MybatisPlus实现分页</li>\n</ul>\n<h1><strong>1.快速入门</strong></h1>\n<p>为了方便测试，我们先创建一个新的项目，并准备一些基础数据。</p>\n<h2><strong>1.1.环境准备</strong></h2>\n",r:{minutes:38.14,words:11441},t:"MybatisPlus笔记",y:"a"}}],["/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html",{loader:()=>l.e(90782).then(l.bind(l,93967)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<blockquote>\n<p>在使用 MyBatis-Plus 进行数据库操作时，查询条件的构造是一个常见的任务。MyBatis-Plus 提供了两种主要的查询条件构造器：<code>QueryWrapper</code> 和 <code>LambdaQueryWrapper</code>。</p>\n</blockquote>\n",r:{minutes:1.15,words:344},t:"QueryWrapper vs LambdaQueryWrapper",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html",{loader:()=>l.e(88994).then(l.bind(l,98850)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:'\n<p><code>queryWrapper.apply("1=1");</code> 这行代码是在使用 <code>LambdaQueryWrapper</code> 进行查询时，通过 <code>apply</code> 方法添加一个自定义的 SQL 片段，即将 <code>where 1=1</code> 作为一个条件加入到查询中。以下是关于这行代码的总结：</p>\n<ol>\n<li>\n<p><strong>代码解释</strong>：</p>\n<ul>\n<li><code>queryWrapper</code> 是一个 <code>LambdaQueryWrapper</code> 对象，用于构建查询条件。</li>\n<li><code>apply</code> 方法用于添加自定义的 SQL 片段到查询条件中。</li>\n<li><code>"1=1"</code> 是一个 SQL 条件，表示始终为真，因为任何数等于自身。</li>\n</ul>\n</li>\n<li>\n<p><strong>逻辑</strong>：</p>\n<ul>\n<li><code>apply("1=1")</code> 将 <code>where 1=1</code> 添加到查询条件中，这个条件始终为真，因为任何数等于自身。</li>\n<li>在实际查询中，这个条件可以作为一个基础条件，确保查询条件的合法性。</li>\n</ul>\n</li>\n<li>\n<p><strong>用法总结</strong>：</p>\n<ul>\n<li>通过 <code>apply("1=1")</code> 方法，可以在查询条件中添加一个始终为真的条件，提供一些灵活性和基础条件。</li>\n<li>这种方式可以用于构建复杂的查询条件，同时保持查询的灵活性和可读性。</li>\n</ul>\n</li>\n</ol>',r:{minutes:.93,words:279},t:'queryWrapper.apply("1=1")',i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/this.page().html",{loader:()=>l.e(99352).then(l.bind(l,7866)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<h1>分页</h1>\n<p>在 <strong>MyBatis-Plus</strong> 中，<code>this.page()</code> 是 <code>BaseMapper</code> 或 <code>Service</code> 接口提供的分页查询方法，用于简化分页操作。其主要作用是查询指定页的数据，并返回分页结果。</p>\n<hr>\n",r:{minutes:2,words:601},t:"this.page()",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/where%201_1.html",{loader:()=>l.e(20546).then(l.bind(l,94395)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p><code>where 1=1</code> 是一个常见的 SQL 片段，在查询语句中的作用是添加一个始终为真的条件。以下是关于 <code>where 1=1</code> 的作用的总结：</p>\n<ol>\n<li>\n<p><strong>始终为真</strong>：</p>\n<ul>\n<li><code>1=1</code> 这个条件始终为真，因为任何数等于自身。因此，<code>where 1=1</code> 不会对查询结果产生影响，它实际上是一个无条件的条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>用途</strong>：</p>\n<ul>\n<li>在动态构建 SQL 查询语句时，<code>where 1=1</code> 可以作为一个基础条件，确保查询条件的合法性。</li>\n<li>可以作为一个占位符，方便在后续动态添加其他条件而无需判断是否已经存在其他条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>简化条件拼接</strong>：</p>\n<ul>\n<li>使用 <code>where 1=1</code> 可以简化动态拼接查询条件的逻辑，因为无论是否有其他条件，它都会起作用，不会影响查询结果。</li>\n</ul>\n</li>\n<li>\n<p><strong>避免错误</strong>：</p>\n<ul>\n<li>在动态拼接复杂的查询条件时，<code>where 1=1</code> 可以避免由于条件缺失而导致的语法错误或逻辑错误。</li>\n</ul>\n</li>\n</ol>",r:{minutes:1.16,words:349},t:"where 1=1",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/wrapper.and().html",{loader:()=>l.e(6497).then(l.bind(l,38816)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p>在 <strong>MyBatis-Plus</strong> 中，<code>wrapper.and</code> 是用来添加分组条件的，它的主要作用是将多个条件逻辑分组，以便生成带括号的 SQL 语句。</p>\n",r:{minutes:1.62,words:486},t:"wrapper.and()",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html",{loader:()=>l.e(33833).then(l.bind(l,83233)),meta:{d:17325792e5,l:"2024年11月26日",c:["Mybatis"],g:["查询"],e:"\n<p><code>wrapper.eq(categoryId！=null，AttrGroupEntity::getCatelogId, categoryId);</code></p>\n<p>这段代码是使用 <code>LambdaQueryWrapper</code> 的 <code>eq</code> 方法来构建一个查询条件，主要用于在查询时根据 <code>categoryId</code> 的值来设置条件。以下是对这段代码的总结：</p>\n<ol>\n<li>\n<p><strong>代码解释</strong>：</p>\n<ul>\n<li><code>wrapper</code> 是一个 <code>LambdaQueryWrapper</code> 对象，用于构建查询条件。</li>\n<li><code>eq</code> 方法用于设置等于条件。</li>\n<li><code>AttrGroupEntity::getCatelogId</code> 是一个方法引用，表示要查询的字段为 <code>catelogId</code>。</li>\n<li><code>categoryId != null</code> 是一个条件判断，用于确定 <code>categoryId</code> 是否为 <code>null</code>。</li>\n<li><code>categoryId</code> 是一个变量，用于存储某个值。</li>\n</ul>\n</li>\n<li>\n<p><strong>逻辑</strong>：</p>\n<ul>\n<li>如果 <code>categoryId</code> 不为 <code>null</code>，则会设置查询条件为 <code>catelogId = categoryId</code>。</li>\n<li>如果 <code>categoryId</code> 为 <code>null</code>，则不会添加该查询条件。</li>\n</ul>\n</li>\n<li>\n<p><strong>用法总结</strong>：</p>\n<ul>\n<li>这种写法利用了条件判断来动态设置查询条件，根据 <code>categoryId</code> 的值决定是否添加特定的查询条件，实现了灵活性和可重用性。</li>\n<li>通过这种方式，可以根据不同的情况动态构建查询条件，避免了重复的代码和提高了代码的可读性。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.96,words:287},t:"动态构建查询条件",i:"mybatis plus",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html",{loader:()=>l.e(37281).then(l.bind(l,75366)),meta:{d:17318016e5,l:"2024年11月17日",c:["Mybatis"],g:["插件"],e:"\n<blockquote>\n<p><code>Mybatis Plus 3.4</code>版本之后的新分页插件</p>\n</blockquote>\n<h3>Step1 引入依赖</h3>\n",r:{minutes:.65,words:194},t:"新分页插件",i:"mybatis plus",y:"a"}}],["/Netty/API/API.html",{loader:()=>l.e(15490).then(l.bind(l,76919)),meta:{e:'\n<hr>\n<h3><code>scheduleAtFixedRate</code></h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ScheduledFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> scheduleAtFixedRate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> var6)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:2.16,words:647},t:"API",y:"a"}}],["/Netty/API/ExecutorService.html",{loader:()=>l.e(32650).then(l.bind(l,95628)),meta:{d:17393184e5,l:"2025年2月12日",c:["Netty"],g:["API"],e:"\n<p><code>ExecutorService</code> 是 Java 中的一个接口，它继承自 <code>Executor</code> 接口，用于提供更为高级的任务执行功能。它定义了线程池的基本操作，能够提交和管理任务，并且提供了一些额外的方法来控制和管理线程池的生命周期。下面是对 <code>ExecutorService</code> 的总结和接口文档的概述：</p>\n",r:{minutes:3.03,words:910},t:"ExecutorService",i:"pen-to-square",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html",{loader:()=>l.e(59777).then(l.bind(l,22464)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["基础"],e:'\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'__main__\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"测试..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>\n<p>判断py文件是否是直接运行，是则输出。若是由其他模块调用则不输出。</p>\n</blockquote>\n',r:{minutes:.18,words:55},t:"Python序章",i:"fa-brands fa-python",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/video.html",{loader:()=>l.e(67963).then(l.bind(l,76477)),meta:{e:"\n",r:{minutes:.11,words:34},t:"YouTube 视频示例",y:"a"}}],["/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>l.e(40879).then(l.bind(l,79564)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["基础"],e:"\n<table>\n<thead>\n<tr>\n<th>数据结构</th>\n<th>是否有序</th>\n<th>是否可变类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>列表[]</td>\n<td>有</td>\n<td>可变类型</td>\n</tr>\n<tr>\n<td>元组()</td>\n<td>有</td>\n<td>不可变类型</td>\n</tr>\n<tr>\n<td>字典{}</td>\n<td>无</td>\n<td>key不可变val可变</td>\n</tr>\n<tr>\n<td>集合{}</td>\n<td>无</td>\n<td>可变类型不重复</td>\n</tr>\n</tbody>\n</table>\n",r:{minutes:3.71,words:1114},t:"核心数据类型",i:"fa-brands fa-python",y:"a"}}],["/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html",{loader:()=>l.e(14661).then(l.bind(l,75322)),meta:{d:17360352e5,l:"2025年1月5日",c:["Python"],g:["爬虫"],e:"\n",r:{minutes:3.25,words:974},t:"爬取豆瓣电影250",i:"fa-brands fa-python",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/Maven%E9%AB%98%E7%BA%A7.html",{loader:()=>l.e(58901).then(l.bind(l,91678)),meta:{d:17456256e5,l:"2025年4月26日",c:["Maven"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>理解并实现分模块开发</li>\n<li>能够使用聚合工程快速构建项目</li>\n<li>能够使用继承简化项目配置</li>\n<li>能够根据需求配置生成、开发、测试环境，并在各个环境间切换运行</li>\n<li>了解Maven的私服</li>\n</ul>\n</blockquote>\n",r:{minutes:40.87,words:12262},t:"Maven高级",i:"fa-solid fa-boxes-stacked",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/POM%E6%96%87%E4%BB%B6%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html",{loader:()=>l.e(74873).then(l.bind(l,26764)),meta:{e:'\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">project</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://maven.apache.org/POM/4.0.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">xmlns:xsi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://www.w3.org/2001/XMLSchema-instance"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         坐标包括group ID，artifact ID和 version。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被继承的父项目的构件标识符 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被继承的父项目的全球唯一标识符 --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被继承的父项目的版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             然后在本地仓库，最后在远程仓库寻找父项目的pom。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 4.0.0 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         如com.mycompany.app生成的相对路径为：/com/mycompany/app --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         和groupID；在某个特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         为项目产生的构件包括：JARs，源码，二进制发布和WARs等。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;xxx&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; jar &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 1.0-SNAPSHOT &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的名称, Maven产生的文档用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; xxx-maven &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目主页的URL, Maven产生的文档用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://maven.apache.org &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的详细描述, Maven 产生的文档用。 当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         就可以包含HTML标签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         索引页文件，而不是调整这里的文档。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; A maven project to study maven. &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 描述了这个项目构建环境中的前提条件。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prerequisites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构建该项目或使用该插件所需要的Maven的最低版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">maven</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prerequisites</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">issueManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 问题管理系统（例如jira）的名字， --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; jira &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该项目使用的问题管理系统的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://jira.baidu.com/banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">issueManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目持续集成信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ciManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 持续集成系统的名字，例如continuum --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifiers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 配置一种方式，当构建中断时，以该方式通知用户/开发者 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 传送通知的途径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 发生错误时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建失败时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnFailure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnFailure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建成功时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnSuccess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 发生警告时是否通知 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnWarning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sendOnWarning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 不赞成使用。通知发送到哪里 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 扩展配置项 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">notifiers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ciManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目创建年份，4位数字。当产生版权信息时需要使用这个值。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inceptionYear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目相关邮件列表信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingLists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 邮件的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Demo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">unsubscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">unsubscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 你可以浏览邮件信息的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">archive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http:/hi.baidu.com/banseon/demo/dev/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">archive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mailingLists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目开发者列表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 某个项目开发者的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- SCM里项目开发者的唯一标识符 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; HELLO WORLD &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者的全名 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者的email --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon@126.com &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者的主页的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者在项目中扮演的角色，角色元素描述了各种角色 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Project Manager &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Architect &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者所属组织 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; demo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者所属组织的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://hi.baidu.com/xxx &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者属性，如即时消息如何处理等 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; No &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目开发者所在时区， -11到12范围内的整数。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; -5 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目的其他贡献者列表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 项目的其他贡献者。参见developers/developer元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者的全名 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者的email --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者的主页的URL --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者所属组织 --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者所属组织的URL --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organizationUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者在项目中扮演的角色，角色元素描述了各种角色 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Project Manager &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Architect &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">role</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">roles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者所在时区， -11到12范围内的整数。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目贡献者属性，如即时消息如何处理等 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; No &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;  </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">contributors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         如果列出多个license，用户可以选择它们中的一个而不是接受所有license。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">licenses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">license</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- license用于法律上的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Apache 2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 官方的license正文页面的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://www.baidu.com/banseon/LICENSE-2.0.txt &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 项目分发的主要方式： </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    repo，可以从Maven库下载 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    manual， 用户必须手动下载和安装依赖 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distribution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; repo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distribution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 关于license的补充信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">comments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; A business-friendly OSS license &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">comments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">license</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">licenses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 给开发者使用的，类似connection元素。即该连接不仅仅只读 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developerConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">developerConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 当前代码的标签，在开发阶段默认为HEAD --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://svn.baidu.com/banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 描述项目所属组织的各种属性。Maven产生的文档用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 组织的全名 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; demo &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 组织主页的URL --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://www.baidu.com/banseon &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">organization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 构建项目需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             于pom.xml的相对路径。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scriptSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scriptSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             该路径是相对于pom.xml的相对路径。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testSourceDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被编译过的应用程序class文件存放的目录。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 被编译过的测试class文件存放的目录。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testOutputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testOutputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 使用来自该项目的一系列构建扩展 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 描述使用到的构建扩展。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extension</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建扩展的groupId --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建扩展的artifactId --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 构建扩展的版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extension</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 当项目没有规定目标（Maven2 叫做阶段）时的默认值 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaultGoal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaultGoal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             最终的打包文件里。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 这个元素描述了项目相关或测试相关的所有资源路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     里列出。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述存放资源的目录，该路径相对POM路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 包含的模式列表，例如**/*.xml. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 排除的模式列表，例如**/*.xml --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述了测试相关的资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     里列出。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 描述存放测试相关的资源的目录，该路径相对POM路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 包含的模式列表，例如**/*.xml. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 排除的模式列表，例如**/*.xml --&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构建产生的所有文件存放的目录 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 产生的构件的文件名，默认值是${artifactId}-${version}。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 当filtering开关打开时，使用到的过滤器属性文件列表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             地配置都会覆盖这里的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 使用的插件列表 。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 插件在仓库里的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 插件在仓库里的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 被使用的插件的版本（或版本范围） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                         元素才被设置成enabled。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- execution元素包含了插件执行需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 配置的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 配置是否被传播到子POM --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 项目引入插件所需要的额外依赖 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 任何配置是否被传播到子项目 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 该项目使用的插件列表 。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 插件在仓库里的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 插件在仓库里的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 被使用的插件的版本（或版本范围） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     元素才被设置成enabled。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- execution元素包含了插件执行需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 配置的执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 配置是否被传播到子POM --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 项目引入插件所需要的额外依赖 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 任何配置是否被传播到子项目 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 作为DOM对象的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 在列的项目构建profile，如果被激活，会修改构建处理 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 根据环境参数或命令行参数激活某个构建处理 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它能够</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 素并不是激活profile的唯一方式。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- profile默认是否激活的标志 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activeByDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     不是以1.4开头的JDK。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jdk版本，如:1.7&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统的名字 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Windows XP &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统所属家族(如 \'windows\') --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">family</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Windows &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">family</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统体系结构 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; x86 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的操作系统版本 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 5.1.2600 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">os</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 如果Maven检测到某一个属性（其值可以在POM中通过${名称}引用），其拥有对应的名称和值，Profile</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     就会被激活。如果值字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     配属性值字段 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的属性的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; mavenVersion &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 激活profile的属性的值 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 2.0.3 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 如果指定的文件存在，则激活profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; /usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 如果指定的文件不存在，则激活profile。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">missing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; /usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">missing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构建项目所需要的信息。参见build元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">defaultGoal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">targetPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filtering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">testResources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">directory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">finalName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 参见build/pluginManagement/plugins/plugin元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                                &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 参见build/pluginManagement/plugins/plugin元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">extensions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">phase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                            &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 相对路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!--子项目相对路径--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 发现依赖和扩展的远程仓库列表。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 参见repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 仓库中下载。要获取更多信息，请看项目依赖机制。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 不赞成使用. 现在Maven忽略该元素. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 到所有报表的链接。参见reporting元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见dependencyManagement元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见distributionManagement元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见properties元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">profiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!--子项目相对路径--&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 发现依赖和扩展的远程仓库列表。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 包含需要连接到远程仓库的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 如何处理远程仓库里发布版本的下载 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">updatePolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">checksumPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-repository-proxy &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 远程仓库名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-repository-proxy &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 远程仓库URL，按protocol://hostname/path形式 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; http://192.168.1.169:9999/repository/ &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 的布局；然而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; default &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pluginRepositories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         要获取更多信息，请看项目依赖机制。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; org.apache.maven &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; maven-artifact &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; 3.8.1 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 名或分类器。类型经常和使用的打包方式对应，尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 如果设置extensions为 true，就可以在plugin里定义新的类型。所以前面的类型的例子不完整。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; jar &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 如果你想要构建两个单独的构件成JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 成两个单独的JAR构件。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">classifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">classifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - compile ：默认范围，用于编译 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - runtime: 在执行时需要使用 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - test: 用于test任务时使用 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - system: 需要外在提供相应的元素。通过systemPath来取得 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - systemPath: 仅用于范围为system。提供相应的路径 </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                - optional: 当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; test &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">systemPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">systemPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 依赖。此元素主要用于解决版本冲突问题 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; spring-core &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; org.springframework &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 可选依赖阻断依赖的传递性。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">optional</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; true &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">optional</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 不赞成使用. 现在Maven忽略该元素. --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">excludeDefaults</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 所有产生的报表存放到哪里。默认值是${project.build.directory}/site。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 使用的报表插件和他们的配置。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- plugin元素包含描述报表插件需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 报表插件在仓库里的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 报表插件在仓库里的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 被使用的报表插件的版本（或版本范围） --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 任何配置是否被传播到子项目 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 报表插件的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                &lt;!-- 一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                     表集，对应另一个执行目标 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    &lt;!-- 表示报表的一个集合，以及产生该集合的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 报表集合的唯一标识符，POM继承时用到 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 产生报表集合时，被使用的报表的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 配置是否被继承到子POMs --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;true/false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">inherited</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                        &lt;!-- 这个集合里使用到哪些报表 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reportSets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reporting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        （必须描述group ID和artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            group ID和artifact ID匹配到这里的依赖，并使用这里的依赖信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 参见dependencies/dependency元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencyManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         把构件部署到远程仓库。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 部署项目产生的构件到远程仓库需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                 repositories/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">uniqueVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-maven2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon maven2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; file://${basedir}/target/deploy &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             distributionManagement/repository元素 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshotRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">uniqueVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-maven2 &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; Banseon-maven2 Snapshot Repository &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; scp://svn.baidu.com/banseon:/usr/local/maven-snapshot &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">snapshotRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 部署项目的网站需要的信息 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">site</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; banseon-site &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 部署位置的名称 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; business api website &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 部署位置的URL，按protocol://hostname/path形式 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">site</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             那些不在仓库里的构件（由于license限制）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">downloadUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构件新的group ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构件新的artifact ID --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 构件新的版本号 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            &lt;!-- 显示给用户的，关于移动的额外信息，例如原因。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        &lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             有：none（默认），converted（仓库管理员从Maven 1 POM转换过来），partner（直接从伙伴Maven </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">             2仓库同步过来），deployed（从Maven 2实例部署），verified（被核实时正确的和最终的）。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">distributionManagement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    &lt;!-- 以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">         activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。 --&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;value&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:31.12,words:9335},t:"附件1：POM文件总体配置说明",y:"a"}}],["/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/SpringBoot.html",{loader:()=>l.e(96756).then(l.bind(l,21485)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标：</strong></p>\n<blockquote>\n<ul>\n<li>掌握基于SpringBoot框架的程序开发步骤</li>\n<li>熟练使用SpringBoot配置信息修改服务器配置</li>\n<li>基于SpringBoot的完成SSM整合项目开发</li>\n</ul>\n</blockquote>\n",r:{minutes:30.65,words:9194},t:"SpringBoot",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/MyBatisPlus.html",{loader:()=>l.e(74027).then(l.bind(l,79901)),meta:{d:17455392e5,l:"2025年4月25日",c:["MyBatis","Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<p>基于MyBatisPlus完成标准Dao的增删改查功能</p>\n<p>掌握MyBatisPlus中的分页及条件查询构建</p>\n<p>掌握主键ID的生成策略</p>\n<p>了解MyBatisPlus的代码生成器</p>\n</blockquote>\n<h2>1，MyBatisPlus入门案例与简介</h2>\n<p>这一节我们来学习下MyBatisPlus的入门案例与简介，这个和其他课程都不太一样，其他的课程都是先介绍概念，然后再写入门案例。而对于MyBatisPlus的学习，我们将顺序做了调整，主要的原因MyBatisPlus主要是对MyBatis的简化，所有我们先体会下它简化在哪，然后再学习它是什么，以及它帮我们都做哪些事。</p>",r:{minutes:50.6,words:15179},t:"MyBatisPlus",i:"fa-solid fa-leaf",y:"a"}}],["/Spring/Junit/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3.html",{loader:()=>l.e(56845).then(l.bind(l,70559)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 <strong>JUnit 5</strong> 中，生命周期注解用于控制测试方法执行前后或在所有测试执行前后的行为。它们帮助开发者进行初始化、清理和资源管理。下面是 JUnit 5 中常用的生命周期注解的总结：</p>\n</div>\n<h3>1. <strong><code>@BeforeEach</code></strong></h3>\n<ul>\n<li><strong>作用</strong>：在每个测试方法执行之前运行。</li>\n<li><strong>用途</strong>：用于每个测试方法之前需要执行的初始化操作，如设置测试数据、创建对象等。</li>\n<li><strong>执行时机</strong>：在每个测试方法执行之前。</li>\n</ul>',r:{minutes:2.4,words:719},t:"生命周期注解",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html",{loader:()=>l.e(69146).then(l.bind(l,72096)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<h2>1. 概述</h2>\n<blockquote>\n<p><code>@ControllerAdvice</code>，是Spring3.2提供的新注解，它是一个Controller增强器，可对controller进行增强处理。</p>\n<p><code>@ControllerAdvice</code>注解将作用在所有<code>Controller层</code>的方法上</p>\n</blockquote>\n",r:{minutes:3.08,words:923},t:"@ControllerAdvice",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html",{loader:()=>l.e(90913).then(l.bind(l,34878)),meta:{d:1731888e6,l:"2024年11月18日",c:["Spring"],g:["注解"],e:"\n<p><code>@EnableTransactionManagement</code> 是 Spring 提供的注解，用于开启基于注解的事务管理功能。本文档将详细介绍其使用方法、最佳实践以及推荐的配置位置。</p>\n<hr>\n",r:{minutes:3.02,words:905},t:"@EnableTransactionManagement 使用指南",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html",{loader:()=>l.e(69982).then(l.bind(l,49099)),meta:{d:1735776e6,l:"2025年1月2日",c:["Spring"],g:["注解"],e:'<blockquote>\n<p><code>@FeignClient("coupon")</code> 注解用于声明一个 Feign 客户端，表示当前接口是一个远程服务的调用接口，通过 Feign 来实现 HTTP 请求的自动代理。<code>@FeignClient</code> 中的 <code>"coupon"</code> 表示目标服务的名称，Feign 会通过服务发现机制（如 Nacos、Eureka 等）找到该服务，并发起 HTTP 请求。</p>\n</blockquote>\n',r:{minutes:2.44,words:733},t:"",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html",{loader:()=>l.e(79716).then(l.bind(l,10999)),meta:{d:17318016e5,l:"2024年11月17日",c:["Spring"],g:["注解"],e:"\n<h2>前言</h2>\n<blockquote>\n<p>在开发中，后端通常使用专用模型对象（<code>FindStudentInfoReq.java</code>）来接收web请求参数。该对象仅声明输入所需的值，可以防止恶意客户端提供额外的值。</p>\n<p>另一种方法是构造函数绑定</p>\n<p><code>@InitBinder</code> 在 Spring 开发中是一个有用但<strong>相对较少使用</strong>的功能。这主要是因为现代 Web 开发中，很多绑定和数据处理的需求已经被更高级和专用的机制（如 <code>@RequestBody</code>、校验框架、全局拦截器等）所替代。</p>\n</blockquote>",r:{minutes:4,words:1201},t:"@InitBinder",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html",{loader:()=>l.e(44371).then(l.bind(l,91792)),meta:{e:'\n<blockquote>\n<p><code>@JsonFormat</code> 是 <strong>Jackson</strong> 序列化库中的一个注解，用于指定对象字段在序列化和反序列化时的格式，特别适用于日期、时间、枚举等类型的数据。通过这个注解，开发者可以灵活地控制这些数据的输出和输入格式。</p>\n</blockquote>\n<h3>主要功能：</h3>\n<ol>\n<li><strong>日期和时间格式化</strong>：指定日期、时间字段的格式，例如 <code>"yyyy-MM-dd HH:mm:ss"</code>。</li>\n<li><strong>时区控制</strong>：可以指定字段的时区，例如 <code>"GMT+8"</code>。</li>\n<li><strong>枚举类型格式化</strong>：用于指定枚举类型在序列化和反序列化时的显示方式，如使用字符串或数字表示。</li>\n</ol>',r:{minutes:1.06,words:317},t:"@JsonFormat",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html",{loader:()=>l.e(39186).then(l.bind(l,35738)),meta:{d:17318016e5,l:"2024年11月17日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p><code>@JsonInclude(JsonInclude.Include.NON_EMPTY)</code></p>\n<p>在实体类的字段上添加注解：<strong>当值为空时，返回的数据不返回当前字段</strong></p>\n</blockquote>\n",r:{minutes:.15,words:46},t:"@JsonInclude",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html",{loader:()=>l.e(98645).then(l.bind(l,83593)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p>使用在使用在控制层（controller）的方法上。</p>\n<p>是组成<code>@RestController</code>的分子</p>\n</blockquote>\n",r:{minutes:.56,words:169},t:"@ResponseBody",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html",{loader:()=>l.e(48586).then(l.bind(l,2478)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:"\n<blockquote>\n<p>元注解：定义注解的注解</p>\n<p>Java从1.5开始提供注解的使用，同时提供了四个元注解<code>Target、Retention、Documented、Inherited</code>。Java8新增了一个<code>Repeatable</code>，共5个元注解。</p>\n<p>点进<code>@SpringBootApplication</code>注解后发现，这个注解使用了上述四个元注解。</p>\n</blockquote>\n",r:{minutes:3.08,words:924},t:"元注解",i:"fa-solid fa-hashtag",y:"a"}}],["/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html",{loader:()=>l.e(75610).then(l.bind(l,28898)),meta:{d:17315424e5,l:"2024年11月14日",c:["Spring"],g:["注解"],e:'\n<blockquote>\n<p><code>@RequestMapping</code>、<code>@PostMapping</code>和<code>@GetMapping</code>是三个非常常用的注解，用于处理<a href="https://so.csdn.net/so/search?q=HTTP%E8%AF%B7%E6%B1%82&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">HTTP请求</a>映射。</p>\n</blockquote>\n<h2><strong>@RequestMapping注解</strong></h2>',r:{minutes:1.13,words:339},t:"注解@RequestMapping、@PostMapping、@GetMapping",i:"fa-solid fa-hashtag",y:"a"}}],["/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html",{loader:()=>l.e(98877).then(l.bind(l,69343)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:"\n<h2>原生SDK使用</h2>\n<p><strong>product模块导入依赖</strong></p>\n",r:{minutes:1.53,words:460},t:"阿里云oss使用记录",i:"fa-solid fa-cloud",O:2,y:"a"}}],["/SpringCloud/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1ACID%E5%8E%9F%E5%88%99.html",{loader:()=>l.e(94545).then(l.bind(l,84480)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud"],g:["事务"],e:"\n<p>ACID原则是数据库管理系统中用于保证事务处理正确性的四个基本原则，ACID是以下四个英文单词的首字母缩写：</p>\n<ol>\n<li>\n<p><strong>原子性 (Atomicity)</strong>：</p>\n<ul>\n<li>事务中的操作要么全部执行，要么全部不执行。即使发生了故障，事务中的操作也不会部分完成。保证事务要么完全成功，要么完全失败。</li>\n</ul>\n</li>\n<li>\n<p><strong>一致性 (Consistency)</strong>：</p>\n<ul>\n<li>事务执行前后，数据库必须从一个一致的状态转换到另一个一致的状态。即事务执行不应破坏数据库的完整性约束和规则。</li>\n</ul>\n</li>\n<li>\n<p><strong>隔离性 (Isolation)</strong>：</p>\n<ul>\n<li>并发执行的事务应该互不干扰。即一个事务的执行不应受到其他事务的干扰，事务间的操作应该是独立的，直到它们各自完成。</li>\n</ul>\n</li>\n<li>\n<p><strong>持久性 (Durability)</strong>：</p>\n<ul>\n<li>一旦事务提交，其结果应该永久保存到数据库中，即使系统崩溃，已提交的事务也不能丢失。</li>\n</ul>\n</li>\n</ol>",r:{minutes:.94,words:281},t:"事务ACID原则",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/",{loader:()=>l.e(67681).then(l.bind(l,92166)),meta:{e:'\n<h2>Sentinel教程</h2>\n<p><a href="/blog/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html" target="_blank">Sentinel讲义</a></p>\n<p><a href="/blog/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html" target="_blank">Sentinel规则持久化</a></p>',r:{minutes:.29,words:88},t:"SpringCloud高级篇",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html",{loader:()=>l.e(342).then(l.bind(l,73096)),meta:{e:'\n<h2>概述</h2>\n<blockquote>\n<p>Hibernate Validator 是 Java 中一个广泛使用的校验框架，它实现了 Bean Validation 规范（JSR 380）。Hibernate Validator 提供了丰富的内置注解用于校验常见的数据类型和格式。</p>\n</blockquote>\n<h2>常用注解</h2>\n<ol>\n<li>\n<p><strong>@NotNull</strong>：字段不能为 null，但可以是空字符串、空集合等。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotNull</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能为空"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@NotEmpty</strong>：字段不能为 null 或空，适用于字符串、集合、数组等。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotEmpty</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能为空或空"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@NotBlank</strong>：字段不能为空或只包含空白字符，适用于字符串。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotBlank</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "字段不能是空白字符"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Size</strong>：限制字符串、集合、数组等的长度或大小范围。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Size</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长度必须在2到10之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nickname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Min</strong> / <strong>@Max</strong>：限定数值的最小值和最大值。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Min</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "年龄不能小于18"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Max</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "年龄不能超过60"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@DecimalMin</strong> / <strong>@DecimalMax</strong>：限定小数的最小值和最大值。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">DecimalMin</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值不能小于1.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">DecimalMax</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "10.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值不能超过10.0"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Pattern</strong>：使用正则表达式匹配字符串格式。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pattern</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">regexp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "^[A-Za-z0-9]+$"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "只能包含字母和数字"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> code</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Email</strong>：验证是否为合法的电子邮件地址。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Email</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "邮箱格式不正确"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Past</strong> / <strong>@Future</strong> / <strong>@PastOrPresent</strong> / <strong>@FutureOrPresent</strong>：限制日期必须在过去、将来或包含当前日期。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Past</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "生日必须是过去的日期"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LocalDate</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> birthDate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@AssertTrue</strong> / <strong>@AssertFalse</strong>：字段必须为 <code>true</code> 或 <code>false</code>。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">AssertTrue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "必须接受条款"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> acceptedTerms</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Digits</strong>：限制数值的整数位和小数位数。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Digits</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">integer</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> fraction</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "数值格式不正确，最多3位整数和2位小数"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> discount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Positive</strong> / <strong>@PositiveOrZero</strong> / <strong>@Negative</strong> / <strong>@NegativeOrZero</strong>：限制数值必须为正、负或包含零。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Positive</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "金额必须为正数"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> amount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Length</strong>：定义字符串的长度范围（需要 <code>hibernate-validator</code> 提供的扩展）。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "长度必须在5到20之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>@Range</strong>：指定数值的范围（需要 <code>hibernate-validator</code> 提供的扩展）。</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Range</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">min</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "范围必须在1到100之间"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> percentage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:1.98,words:595},t:"Hibernate Validator",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html",{loader:()=>l.e(29409).then(l.bind(l,48910)),meta:{e:"\n<blockquote>\n<p><strong>JSR303： Java数据校验规范提案。</strong></p>\n<p><em>jsr</em>，是Java Specification Requests的缩写，意思是Java规范提案，是指向JCP(Java Community Process)提出新增一个标准化技术规范的正式请求。</p>\n<p>303号规定了数据校验的标准。</p>\n</blockquote>\n<h2>1.引入依赖</h2>\n<blockquote>\n<p>springboot2.3.0以上需要手动<strong>引入依赖</strong></p>\n</blockquote>",r:{minutes:2.29,words:688},t:"JSR303数字校验",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/",{loader:()=>l.e(94690).then(l.bind(l,70143)),meta:{d:17440704e5,l:"2025年4月8日",e:"\n",r:{minutes:.03,words:10},t:"SpringMVC",i:"fa-solid fa-leaf",y:"a"}}],["/SpringMVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html",{loader:()=>l.e(73084).then(l.bind(l,58664)),meta:{d:17317152e5,l:"2024年11月16日",c:["Spring"],g:["注解"],e:"\n<p>自定义校验注解在 Java 的 Spring 框架中使用得较为广泛，尤其是结合 <strong>Hibernate Validator</strong>（JSR 380 实现）来实现复杂的字段校验逻辑。以下是自定义校验注解的总结和实现步骤：</p>\n<hr>\n<h3><strong>1. 自定义校验注解的核心概念</strong></h3>\n<p>自定义校验注解允许开发者定义特定的校验规则，用于校验对象字段或方法参数。这种方法通常用于解决内置校验注解（如 <code>@NotNull</code>, <code>@Size</code>, <code>@Pattern</code>）无法满足的场景。</p>",r:{minutes:3.14,words:941},t:"自定义校验注解",i:"pen-to-square",y:"a"}}],["/VCS/Git/%E5%88%A0%E9%99%A4%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E6%8E%A8%E9%80%81.html",{loader:()=>l.e(37959).then(l.bind(l,17957)),meta:{d:17402688e5,l:"2025年2月23日",c:["Git"],g:["总结"],e:'\n<h3>1. <strong>撤销本地提交并保留更改</strong>（如果你希望保留修改内容在工作目录中）</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --soft</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> HEAD~1</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.03,words:309},t:"删除最近一次提推送",i:"fa-brands fa-git-alt",y:"a"}}],["/VCS/Git/%E5%BF%BD%E7%95%A5idea%E6%96%87%E4%BB%B6%E5%A4%B9.html",{loader:()=>l.e(98817).then(l.bind(l,77158)),meta:{d:1736208e6,l:"2025年1月7日",c:["Git"],g:["总结"],e:"\n<blockquote>\n<p>举例：要在 Git 中忽略 <code>.idea</code> 文件夹（通常是 JetBrains 系列 IDE 生成的配置文件夹），需要使用 <code>.gitignore</code> 文件来指定 Git 不跟踪该文件夹中的文件。</p>\n</blockquote>\n",r:{minutes:1.36,words:409},t:"忽略.idea文件夹",i:"fa-brands fa-git-alt",y:"a"}}],["/VCS/Git/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E8%87%B3%E8%BF%9C%E7%A8%8B%E5%BA%93.html",{loader:()=>l.e(41917).then(l.bind(l,83562)),meta:{d:1736208e6,l:"2025年1月7日",c:["Git"],g:["总结"],e:"\n<p>要将本地项目推送到 Git 创建的远程库，你可以按照以下步骤操作：</p>\n",r:{minutes:2.37,words:711},t:"本地项目推送至远程库",i:"fa-brands fa-git-alt",y:"a"}}],["/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>l.e(584).then(l.bind(l,37837)),meta:{e:'\n<table>\n<thead>\n<tr>\n<th style="text-align:left">镜像</th>\n<th style="text-align:left">命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">淘宝镜像源</td>\n<td style="text-align:left">npm config set registry https://registry.npmmirror.com</td>\n</tr>\n<tr>\n<td style="text-align:left">阿里云镜像源</td>\n<td style="text-align:left">npm config set registry https://npm.aliyun.com</td>\n</tr>\n<tr>\n<td style="text-align:left">腾讯云镜像源</td>\n<td style="text-align:left">npm config set registry http://mirrors.cloud.tencent.com/npm/</td>\n</tr>\n<tr>\n<td style="text-align:left">华为云镜像源</td>\n<td style="text-align:left">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</td>\n</tr>\n<tr>\n<td style="text-align:left">官方原始镜像</td>\n<td style="text-align:left">npm config set registry https://registry.npmjs.org/</td>\n</tr>\n<tr>\n<td style="text-align:left">查看当前的镜像源</td>\n<td style="text-align:left">npm config get registry</td>\n</tr>\n</tbody>\n</table>',r:{minutes:.27,words:81},t:"npm更换镜像源",y:"a"}}],["/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>l.e(9666).then(l.bind(l,26476)),meta:{e:'\n<blockquote>\n<p>nvm是一个node版本管理工具</p>\n</blockquote>\n<p>阿里云镜像</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> npm_mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://npmmirror.com/mirrors/npm/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> node_mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://npmmirror.com/mirrors/node/</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.15,words:46},t:"nvm更换镜像源",y:"a"}}],["/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/socket%E6%98%AF%E4%BB%80%E4%B9%88.html",{loader:()=>l.e(57417).then(l.bind(l,46692)),meta:{e:'\n<p>我相信大家刚开始学 socket 的时候，都跟我一样。</p>\n<p>云里雾里的，对 socket 的概念很模糊。</p>\n<p>这篇文章我打算从一个初学者的角度开始聊起，让大家了解下<strong>我眼里</strong>的 socket 到底是什么以及 socket 的原理和内核实现。</p>\n<h2>socket 的概念</h2>\n<p>故事要从一个<strong>插头</strong>说起。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202505182310176.png" alt="插头与插座" tabindex="0" loading="lazy"><figcaption>插头与插座</figcaption></figure>',r:{minutes:14.9,words:4470},t:"socket 到底是什么？",y:"a"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html",{loader:()=>l.e(97846).then(l.bind(l,58695)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>适配器模式（Adapter Pattern）是一种结构型设计模式，它允许将一个类的接口转换成客户端希望的另一个接口。适配器模式让原本接口不兼容的类能够协同工作，常常用于解决现有代码与新代码之间的兼容问题。</p>\n<p>在Java中，适配器模式可以通过**类适配器（Class Adapter）或者对象适配器（Object Adapter）**来实现。下面我将介绍适配器模式的基本概念、使用场景、以及如何在Java中实现适配器模式。</p>\n</div>',r:{minutes:4.37,words:1312},t:"适配器模式（Adapter Pattern）",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2.html",{loader:()=>l.e(62033).then(l.bind(l,23798)),meta:{e:'\n<h2>1. 项目打包</h2>\n<p>在 <code>VSCode</code> 中新打开一个终端窗口，执行如下命令，对前端项目进行打包：</p>\n<div class="language-undefined line-numbers-mode" data-highlighter="shiki" data-ext="undefined" data-title="undefined" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm run build</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:3.08,words:924},t:"前端工程打包部署至 Nginx",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/",{loader:()=>l.e(61486).then(l.bind(l,50606)),meta:{d:17291232e5,l:"2024年10月17日",c:["项目"],g:["教程"],e:"\n",r:{minutes:.08,words:23},t:"谷粒商城",i:"fa-brands fa-shopify",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html",{loader:()=>l.e(40010).then(l.bind(l,49837)),meta:{e:'\n<blockquote>\n<p>注释掉webpack.base.conf.js中的配置</p>\n</blockquote>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 关闭eslint检查</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> createLintingRule</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ({</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // test: /\\.(js|vue)$/,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // loader: \'eslint-loader\',</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // enforce: \'pre\',</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // include: [resolve(\'src\'), resolve(\'test\')],</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // options: {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //   formatter: require(\'eslint-friendly-formatter\'),</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  //   emitWarning: !config.dev.showEslintErrorsInOverlay</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.18,words:54},t:"关闭eslint检查",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>l.e(8741).then(l.bind(l,82575)),meta:{d:17291232e5,l:"2024年10月17日",c:["项目"],g:["教程"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.17,words:51},t:"视频教程",i:"fa-solid fa-play",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html",{loader:()=>l.e(33525).then(l.bind(l,57704)),meta:{e:'\n<h2>什么是跨域</h2>\n<blockquote>\n<p>当一个请求URL的协议，域名，端口三者之间任何一个与当前页面不同即为跨域</p>\n<p><strong>跨域都是目标地址需要配置规则，所以在阿里云网页配置规则。</strong></p>\n</blockquote>\n<h2>为什么有跨域问题</h2>\n<blockquote>\n<p>浏览器有同源策略限制，同源策略规定只有在协议，域名（IP地址）及端口号三者均相同的情况下，一个网页或则JavaScript脚本才能访问另一个网页中的资源。防止恶意网站窃取数据。</p>\n</blockquote>\n<h2>cors</h2>\n<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noopener noreferrer">跨源资源共享（CORS)</a></p>',r:{minutes:.53,words:158},t:"cors跨域访问",y:"a"}}],["/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat-web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html",{loader:()=>l.e(47032).then(l.bind(l,3870)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["分库分表"],e:"\n<h2>安装Zookeeper</h2>\n<p>A. 上传安装包\nzookeeper-3.4.6.tar.gz</p>\n<p>B. 解压\ntar -zxvf zookeeper-3.4.6.tar.gz -C /usr/local/</p>\n<p>​</p>\n<p>C. 创建数据存放目录\ncd /usr/local/zookeeper-3.4.6/\nmkdir data</p>\n<p>​</p>\n<p>D. 修改配置文件名称并配置</p>\n<p>​\tcd config</p>\n<p>​\tmv zoo_sample.cfg zoo.cfg</p>\n<p>​</p>\n<p>E. 配置数据存放目录\ndataDir=/usr/local/zookeeper-3.4.6/data</p>\n<p>F. 启动Zookeeper\nbin/zkServer.sh start</p>\n<p>​\tbin/zkServer.sh status</p>\n",r:{minutes:.66,words:199},t:"MyCat-web安装文档",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html",{loader:()=>l.e(3412).then(l.bind(l,71675)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["分库分表"],e:"\n<h2>JDK安装</h2>\n<p>JDK具体安装步骤如下：</p>\n<h3>1. 上传安装包</h3>\n<p>使用FinalShell自带的上传工具将jdk的二进制发布包上传到Linux</p>\n<p>由于上述在进行文件上传时，选择的上传目录为根目录 /，上传完毕后，我们执行指令 cd / 切换到根目录下，查看上传的安装包。</p>\n<figure><figcaption>image-20210814180702071</figcaption></figure>\n",r:{minutes:1.41,words:424},t:"MyCat安装文档",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/rule.html",{loader:()=>l.e(21728).then(l.bind(l,28780)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["配置文件"],e:"\n<h2>最终配置</h2>\n<p>🐈分片算法及方法实现</p>\n",r:{minutes:3.45,words:1034},t:"rule.xml配置文件",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/schema.html",{loader:()=>l.e(98717).then(l.bind(l,45011)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["配置文件"],e:"\n",r:{minutes:6.62,words:1985},t:"MyCat配置文件schema.xml",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/server.html",{loader:()=>l.e(89009).then(l.bind(l,26790)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","MyCat"],g:["配置文件"],e:'\n<p>😹注意用户访问权限配置，忘记配置会导致mycat-web连接逻辑库失败</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">user</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"root"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> defaultAccount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"password"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;123123&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"schemas"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;DB01,SHOPPING,ITCAST,ITCAST_RW2&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:3.13,words:940},t:"MyCat配置文件server.xml",i:"fa-solid fa-cat",y:"a"}}],["/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/union%E5%92%8CunionAll.html",{loader:()=>l.e(89949).then(l.bind(l,99627)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["基础","SQL优化"],e:"\n<blockquote>\n<p><code>UNION</code> 和 <code>UNION ALL</code> 都是用于合并两个或多个 <code>SELECT</code> 语句的结果集，但它们之间有以下区别：</p>\n</blockquote>\n",r:{minutes:1.61,words:482},t:"UNION 和 UNION ALL",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/MySQL%E5%8D%B8%E8%BD%BD-Linux.html",{loader:()=>l.e(40742).then(l.bind(l,74927)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL","Linux"],g:["卸载"],e:'\n<h2>MySQL卸载-Linux版</h2>\n<p>停止MySQL服务</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>systemctl stop mysqld</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.47,words:142},t:"MySQL卸载-Linux版",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows%E7%89%88.html",{loader:()=>l.e(18074).then(l.bind(l,31710)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","Windows"],g:["卸载"],e:'\n<h3>1. 停止MySQL服务</h3>\n<p>win+R 打开运行，输入 services.msc 点击 "确定" 调出系统服务。</p>\n',r:{minutes:.75,words:225},t:"MySQL卸载文档-Windows版",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html",{loader:()=>l.e(66544).then(l.bind(l,21373)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","数据库"],g:["笔记"],e:'\n<blockquote>\n<p><a href="https://www.bilibili.com/video/BV1Kr4y1i7ru/?share_source=copy_web&amp;vd_source=e43c1de8e41e1499f7f3fdb03fba0eb6" target="_blank" rel="noopener noreferrer">黑马程序员 MySQL数据库入门到精通，从mysql安装到mysql高级、mysql优化全囊括</a></p>\n</blockquote>\n<h1>1.基础篇</h1>\n<h2>通用语法及分类</h2>\n<ul>\n<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>\n<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>\n<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>\n<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>\n</ul>\n',r:{minutes:79.08,words:23723},t:"MySQL学习笔记",i:"fa-solid fa-database",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html",{loader:()=>l.e(56541).then(l.bind(l,76747)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["安全"],e:"\n<blockquote>\n<p>数据库授权是数据库管理中至关重要的一环，通过授权可以精确控制用户对数据库的访问和操作权限。在 MySQL 中，我们可以使用一系列命令来管理用户权限，包括创建用户、授予权限、撤销权限以及刷新权限。以下是一些常见的权限类型以及相关操作示例：</p>\n</blockquote>\n",r:{minutes:1.63,words:490},t:"MySQL 数据库授权管理指南",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html",{loader:()=>l.e(61685).then(l.bind(l,34698)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["安全"],e:"\n<h2>关闭root远程登录</h2>\n<p>要查看 'root' 用户的连接权限，可以执行以下步骤：</p>\n<ol>\n<li>\n<p><strong>登录到 MySQL 数据库：</strong></p>\n<p>使用具有管理员权限的用户（例如 'root' 用户）登录到 MySQL 数据库。</p>\n</li>\n</ol>\n",r:{minutes:3.43,words:1028},t:"数据库安全配置",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",{loader:()=>l.e(12880).then(l.bind(l,58730)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["事务"],e:"\n<blockquote>\n<ul>\n<li><strong>读未提交 (Read Uncommitted)</strong>：事务可以读取其他事务尚未提交的数据，可能会读取到脏数据。</li>\n<li><strong>读已提交 (Read Committed)</strong>：事务只能读取其他事务已提交的数据，避免了脏读。</li>\n<li><strong>可重复读 (Repeatable Read)</strong>：事务中读取的数据在整个事务期间都是一致的，避免了不可重复读。</li>\n<li><strong>串行化 (Serializable)</strong>：事务完全隔离，避免了幻读。</li>\n</ul>\n</blockquote>\n",r:{minutes:3.79,words:1136},t:"数据库的隔离级别",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html",{loader:()=>l.e(96114).then(l.bind(l,68828)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL"],g:["安装","yum安装","docker安装"],e:"\n<h2>普通安装</h2>\n<h3>获取源安装包</h3>\n<ul>\n<li>确定当前linux系统内核版本：[root@localhost ~]# cat /etc/redhat-release</li>\n<li>进入官网下载匹配的安装包：https://dev.mysql.com/downloads/repo/yum/</li>\n<li>假设为centos7则对应的版本为</li>\n<li><figcaption>img</figcaption></li>\n</ul>\n",r:{minutes:2.64,words:792},t:"MySQL8.0使用Yum或docker安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html",{loader:()=>l.e(90376).then(l.bind(l,60361)),meta:{d:17317152e5,l:"2024年11月16日",c:["MySQL","Linux"],g:["安装"],e:"\n<h2>MySQL8.0.26-Linux版离线安装</h2>\n<h3>1. 准备一台Linux服务器</h3>\n<p>云服务器或者虚拟机都可以;</p>\n<p>Linux的版本为 CentOS7;</p>\n",r:{minutes:1.55,words:466},t:"MySQL8.0.26-Linux版离线安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/MySQL%E5%AE%89%E8%A3%85.html",{loader:()=>l.e(71754).then(l.bind(l,3836)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","Windows"],g:["安装"],e:"\n<h3>1. 安装</h3>\n<p><strong>1). 双击官方下来的安装包文件</strong></p>\n<figure><figcaption>image-20210916184347938</figcaption></figure>\n",r:{minutes:1.13,words:338},t:"MySQL安装",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/mysql%E6%98%AF%E4%BB%80%E4%B9%88_%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html",{loader:()=>l.e(23126).then(l.bind(l,10047)),meta:{e:'\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504012300300.jpeg" alt="mysql是什么" tabindex="0" loading="lazy"><figcaption>mysql是什么</figcaption></figure>\n<p>你是一个程序员，你做了一个网站应用，站点里的用户数据，需要存到某个地方，方便随时读写。</p>\n<p>很容易想到可以将数据存到文件里。</p>\n<p>但如果数据量很大，想从大量文件数据中查找某部分数据，并更新，是一件很痛苦的事情。</p>',r:{minutes:12.91,words:3874},t:"mysql 是什么？架构是怎么样的？",y:"a"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html",{loader:()=>l.e(15107).then(l.bind(l,89467)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["踩坑"],e:'\n<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">2003-Can’t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ‘XXX.XX.XX.XX’（10060）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.65,words:196},t:"Navicat连接mysql报错",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html",{loader:()=>l.e(1736).then(l.bind(l,40680)),meta:{d:1735776e6,l:"2025年1月2日",c:["MySQL"],g:["踩坑"],e:"\n<blockquote>\n<p>错误信息：“2059 - Authentication plugin 'caching_sha2_password' cannot be loaded”。这个问题通常是由于MySQL 8.0默认使用了<code>caching_sha2_password</code>身份验证插件而导致的。该插件需要相关的共享库文件来正常工作，但如果这些文件缺失或无法加载，就会导致身份验证插件无法正确加载，从而导致错误的出现。</p>\n</blockquote>\n",r:{minutes:.93,words:279},t:"caching_sha2_password无法加载",i:"pen-to-square",y:"a"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/mysql-uroot-p%E6%8A%A5%E9%94%99.html",{loader:()=>l.e(60385).then(l.bind(l,60753)),meta:{d:17291232e5,l:"2024年10月17日",c:["MySQL"],g:["踩坑"],e:"\n<blockquote>\n<p>使用xshell登录MySQL时,<code>mysql -uroot -p</code>报错Can't connect to local MySQL server through socket '/tmp/mysql.sock'</p>\n</blockquote>\n",r:{minutes:.36,words:107},t:"mysql -uroot -p报错",i:"pen-to-square",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/DCL%E8%AF%AD%E5%8F%A5%E6%BC%94%E7%A4%BA.html",{loader:()=>l.e(79513).then(l.bind(l,63441)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建用户 itcast , 只能够在当前主机localhost访问, 密码123456;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">itcast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'localhost\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> identified </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'123456\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 创建用户 heima , 可以在任意主机访问该数据库, 密码123456 ;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">heima</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> identified </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'123456\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 修改用户 heima 的访问密码为 1234 ;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> identified </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mysql_native_password </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'1234\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 删除itcast@localhost用户</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'itcast\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'localhost\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 查询权限</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">show grants </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 授予权限</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">grant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> all </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> itcast.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 撤销权限</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">revoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> all </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> itcast.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'heima\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'%\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.41,words:123},t:"DCL语句演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>l.e(54892).then(l.bind(l,83958)),meta:{e:"\n<h2>数值类型</h2>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>大小</th>\n<th>有符号(SIGNED)范围</th>\n<th>无符号(UNSIGNED)范围</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TINYINT</td>\n<td>1 byte</td>\n<td>(-128，127)</td>\n<td>(0，255)</td>\n<td>小整数值</td>\n</tr>\n<tr>\n<td>SMALLINT</td>\n<td>2 bytes</td>\n<td>(-32768，32767)</td>\n<td>(0，65535)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>MEDIUMINT</td>\n<td>3 bytes</td>\n<td>(-8388608，8388607)</td>\n<td>(0，16777215)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>INT或INTEGER</td>\n<td>4 bytes</td>\n<td>(-2147483648，2147483647)</td>\n<td>(0，4294967295)</td>\n<td>大整数值</td>\n</tr>\n<tr>\n<td>BIGINT</td>\n<td>8 bytes</td>\n<td>(-2<sup>63，2</sup>63-1)</td>\n<td>(0，2^64-1)</td>\n<td>极大整数值</td>\n</tr>\n<tr>\n<td>FLOAT</td>\n<td>4 bytes</td>\n<td>(-3.402823466 E+38，3.402823466351 E+38)</td>\n<td>0 和 (1.175494351 E-38，3.402823466 E+38)</td>\n<td>单精度浮点数值</td>\n</tr>\n<tr>\n<td>DOUBLE</td>\n<td>8 bytes</td>\n<td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td>\n<td>0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td>\n<td>双精度浮点数值</td>\n</tr>\n<tr>\n<td>DECIMAL</td>\n<td></td>\n<td>依赖于M(精度)和D(标度)的值</td>\n<td>依赖于M(精度)和D(标度)的值</td>\n<td>小数值(精确定点数)</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.56,words:467},t:"MySQL数据类型",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%E6%BC%94%E7%A4%BA.html",{loader:()=>l.e(41671).then(l.bind(l,2396)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ---------------------------- 事务操作 ----------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 数据准备</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    money</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'余额\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'账户表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account(id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 恢复数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@autocommit;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@autocommit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置为手动提交</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 转账操作 (张三给李四转账1000)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询张三账户余额</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 将张三账户余额-1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">程序执行报错 ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 将李四账户余额+1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 提交事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 回滚事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">rollback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 方式二</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 转账操作 (张三给李四转账1000)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">start transaction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询张三账户余额</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 将张三账户余额-1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张三\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">程序执行报错 ...</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 将李四账户余额+1000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> account </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'李四\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 提交事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 回滚事务</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">rollback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 查看事务隔离级别</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @@transaction_isolation;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 设置事务隔离级别</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> session</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> transaction</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> isolation</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> level</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> read</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> uncommitted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> session</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> transaction</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> isolation</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> level</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> repeatable</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.96,words:289},t:"事务操作演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0.html",{loader:()=>l.e(80057).then(l.bind(l,41389)),meta:{e:'\n<h3>1. <strong>字符串函数</strong></h3>\n<p>这些函数用于操作字符串数据类型。</p>\n<ul>\n<li>\n<p><strong><code>CONCAT(str1, str2, ...)</code></strong><br>\n连接多个字符串。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> CONCAT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\' \'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'World\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>LENGTH(str)</code></strong><br>\n返回字符串的字节长度。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> LENGTH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>SUBSTRING(str, start, length)</code></strong><br>\n提取字符串的一部分。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> SUBSTRING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 输出 \'Hel\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>UPPER(str)</code></strong><br>\n将字符串转换为大写。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> UPPER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>LOWER(str)</code></strong><br>\n将字符串转换为小写。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> LOWER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'HELLO\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>TRIM(str)</code></strong><br>\n删除字符串两端的空格。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> TRIM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'   Hello   \'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>REPLACE(str, old_substring, new_substring)</code></strong><br>\n替换字符串中的子字符串。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> REPLACE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello World\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'World\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>LPAD(str, length, pad_string)</code></strong><br>\n将字符串填充到指定长度，填充发生在字符串的左侧。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> LPAD(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'123\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 输出 \'00123\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>RPAD(str, length, pad_string)</code></strong><br>\n将字符串填充到指定长度，填充发生在字符串的右侧。</p>\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> RPAD(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'123\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 输出 \'12300\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:3.41,words:1022},t:"函数",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0%E6%BC%94%E7%A4%BA.html",{loader:()=>l.e(41263).then(l.bind(l,75730)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ---------------------------------------------------- 函数演示 ------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 字符串函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- concat</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> concat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\' MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- lower</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> lower</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- upper</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> upper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- lpad</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lpad(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'-\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- rpad</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> rpad(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'-\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- trim</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> trim</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\' Hello  MySQL \'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- substring</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> substring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例:  由于业务需求变更，企业员工的工号，统一为5位数，目前不足5位数的全部在前面补0。比如： 1号员工的工号应该为00001。</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> workno </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lpad(workno, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- -------------------------------------------------------------------------------------------------------------</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 数值函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ceil</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ceil(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- floor</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> floor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- mod</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mod(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- rand</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> rand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- round</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> round</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">344</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例: 通过数据库的函数，生成一个六位数的随机验证码。</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lpad(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">round</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">rand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- --------------------------------------------------------------------------------------------------------</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 日期函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- curdate()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> curdate();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- curtime()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> curtime();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- now()</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- YEAR , MONTH , DAY</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> YEAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> MONTH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> DAY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- date_add</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> date_add(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), INTERVAL </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">70</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> YEAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- datediff</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> datediff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2021-10-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2021-12-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例: 查询所有员工的入职天数，并根据入职天数倒序排序。</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">datediff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(curdate(), entrydate) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'entrydays\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">order by</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydays </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">desc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 流程控制函数</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- if</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(false, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Ok\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Error\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ifnull</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ifnull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Ok\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Default\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ifnull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Default\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> ifnull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Default\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- case when then else end</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 需求: 查询emp表的员工姓名和工作地址 (北京/上海 ----&gt; 一线城市 , 其他 ----&gt; 二线城市)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> workaddress </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">when</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'北京\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'一线城市\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'上海\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'一线城市\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'二线城市\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'工作地址\'</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 案例: 统计班级各个学员的成绩，展示的规则如下：</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- &gt;= 85，展示优秀</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- &gt;= 60，展示及格</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 否则，展示不及格</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> score</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    math </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'数学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    english </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'英语\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    chinese </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'语文\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学员成绩表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> score(id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, math, english, chinese) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">67</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">88</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">95</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Rose\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">66</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">90</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Jack\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">56</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">98</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">76</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">--</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> math </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'优秀\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> math </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'不及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'数学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> english </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'优秀\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> english </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'不及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'英语\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> chinese </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'优秀\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> when</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> chinese </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'不及格\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'语文\'</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> score;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.65,words:495},t:"函数演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA.html",{loader:()=>l.e(46034).then(l.bind(l,60541)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ---------------------------------------&gt; 多表查询案例 &lt;----------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> salgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    grade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    losal </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    hisal </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'薪资等级表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">25000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salgrade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">25001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询员工的姓名、年龄、职位、部门信息 （隐式内连接）</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询年龄小于30岁的员工的姓名、年龄、职位、部门信息（显式内连接）</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">inner join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 查询拥有员工的部门ID、部门名称</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select distinct</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 4. 查询所有年龄大于40岁的员工, 及其归属的部门名称; 如果员工没有分配部门, 也需要展示出来</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 外连接</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">age</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 5. 查询所有员工的工资等级</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , salgrade</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件 : emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.* , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">grade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , salgrade s </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.* , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">grade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , salgrade s </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> between</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 6. 查询 "研发部" 所有员工的信息及 工资等级</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , salgrade , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件 : emp.salary between salgrade.losal and salgrade.hisal , emp.dept_id = dept.id</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 查询条件 : dept.name = \'研发部\'</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.* , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">grade</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d , salgrade s </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> between</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">losal</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">hisal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 7. 查询 "研发部" 员工的平均工资</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件 :  emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e, dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 8. 查询工资比 "灭绝" 高的员工信息。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "灭绝" 的薪资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'灭绝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询比她工资高的员工数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'灭绝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 9. 查询比平均薪资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询员工的平均薪资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询比平均薪资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 10. 查询低于本部门平均工资的员工信息</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询指定部门平均薪资  1</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e1 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e1 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询低于本部门平均工资的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e2 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> avg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">salary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e1 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 11. 查询所有的部门信息, 并统计部门的员工人数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'人数\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 12. 查询所有学生的选课情况, 展示出学生名称, 学号, 课程名称</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表: student , course , student_course</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: student.id = student_course.studentid , course.id = student_course.courseid</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">no</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student s , student_course sc , course c </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> sc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">studentid</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> sc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">courseid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.44,words:732},t:"多表查询案例演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%BC%94%E7%A4%BA.html",{loader:()=>l.e(77875).then(l.bind(l,65707)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ------------------------------------&gt; 多表查询 &lt;--------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 准备数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门名称\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    job </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职位\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'薪资\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'入职时间\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'直属领导ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门ID\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'员工表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加外键</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总经办\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'人事部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, age, job,salary, entrydate, managerid, dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'金庸\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">66</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总裁\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'项目经理\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2005-12-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杨逍\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-11-03\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'韦一笑\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">48</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2002-02-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'常遇春\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-09-07\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'小昭\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'程序员鼓励师\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'灭绝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'财务总监\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2002-09-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'周芷若\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'会计\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">48000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2006-06-02\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'丁敏君\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'出纳\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5250</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2009-05-13\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'赵敏\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'市场部总监\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'鹿杖客\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">56</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职员\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3750</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2006-10-03\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'鹤笔翁\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职员\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3750</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2007-05-09\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">13</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'方东白\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职员\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2009-02-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张三丰\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">88</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售总监\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'俞莲舟\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">38</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'宋远桥\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'陈友谅\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2011-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 多表查询 -- 笛卡尔积</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp , dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 内连接演示</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询每一个员工的姓名 , 及关联的部门的名称 (隐式内连接实现)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp , dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e , dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询每一个员工的姓名 , 及关联的部门的名称 (显式内连接实现)  --- INNER JOIN ... ON ...</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp , dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">inner join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 外连接演示</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询emp表的所有数据, 和对应的部门信息(左外连接)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp, dept</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 连接条件: emp.dept_id = dept.id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left outer join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询dept表的所有数据, 和对应的员工信息(右外连接)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> d.*, e.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">right outer join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> d.*, e.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left outer join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 自连接</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询员工 及其 所属领导的名字</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp a , emp b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">managerid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导, 也需要查询出来</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表结构: emp a , emp b</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'员工\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'领导\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">managerid</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- union all , union</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 将薪资低于 5000 的员工 , 和 年龄大于 50 岁的员工全部查询出来.</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">union all</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5000</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">union</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- -------------------------------------- 子查询 ------------------------</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 标量子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询 "销售部" 的所有员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "销售部" 部门ID</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 根据销售部部门ID, 查询员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询在 "方东白" 入职之后的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 方东白 的入职日期</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'方东白\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询指定入职日期之后入职的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'方东白\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 列子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询 "销售部" 和 "市场部" 的所有员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "销售部" 和 "市场部" 的部门ID</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 根据部门ID, 查询员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'销售部\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询比 财务部 所有人工资都高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询所有 财务部 人员工资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 比 财务部 所有人工资都高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> all ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 3. 查询比研发部其中任意一人工资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询研发部所有人工资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 比研发部其中任意一人工资高的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> some ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept_id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 行子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "张无忌" 的薪资及直属领导</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary, managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (salary,managerid) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> salary, managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 表子查询</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 1. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 查询 "鹿杖客" , "宋远桥" 的职位和薪资</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> job, salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'鹿杖客\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'宋远桥\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (job,salary) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> job, salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'鹿杖客\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'宋远桥\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 2. 查询入职日期是 "2006-01-01" 之后的员工信息 , 及其部门信息</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- a. 入职日期是 "2006-01-01" 之后的员工信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'2006-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- b. 查询这部分员工, 对应的部门信息;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e.*, d.* </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> entrydate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'2006-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) e </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">left join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">dept_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:4.86,words:1459},t:"多表查询演示",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80DCL.html",{loader:()=>l.e(76062).then(l.bind(l,16669)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 MySQL 中，<strong>数据控制语言（DCL）</strong> 主要用于管理用户权限和访问控制。DCL 语句可以控制哪些用户可以访问数据库以及他们能够执行的操作。常见的 DCL 类型语句包括：</p>\n</div>\n<h3>1. <strong>CREATE USER</strong></h3>\n<ul>\n<li>用于创建新的数据库用户。</li>\n<li><strong>语法</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> USER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'host\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> IDENTIFIED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">BY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'password\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li><strong>示例</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> USER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> \'</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">user1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\'@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'localhost\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> IDENTIFIED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">BY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'password123\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:1.94,words:581},t:"数据控制语言（DCL）",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87.html",{loader:()=>l.e(89898).then(l.bind(l,86827)),meta:{d:17416512e5,l:"2025年3月11日",c:["MySQL","数据库"],g:["笔记"],e:"\n<h2>1.1 通用语法及分类</h2>\n<ul>\n<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>\n<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>\n<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>\n<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>\n</ul>\n",r:{minutes:18.54,words:5562},t:"1.基础篇",i:"fa-database",y:"a"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%BA%A6%E6%9D%9F%E5%8F%8A%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%BC%94%E7%A4%BA.html",{loader:()=>l.e(46695).then(l.bind(l,42798)),meta:{e:'\n<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- ------------------------------------------------------------------- 约束演示 ----------------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unique</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    status</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'状态\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    gender </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'性别\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 插入数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom2\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'0\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom3\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom3\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom4\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom5\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom5\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">121</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> user(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,age,gender) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Tom5\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'男\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- --------------------------------------------- 约束 (外键) -------------------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 准备数据</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门名称\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'研发部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'市场部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'财务部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'销售部\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总经办\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'ID\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    job </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'职位\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'薪资\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    entrydate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'入职时间\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    managerid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'直属领导ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'部门ID\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'员工表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp (id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, age, job,salary, entrydate, managerid, dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">VALUES</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'金庸\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">66</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'总裁\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-01-01\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'张无忌\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'项目经理\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2005-12-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杨逍\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000-11-03\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'韦一笑\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">48</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2002-02-05\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'常遇春\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'开发\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-09-07\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'小昭\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'程序员鼓励师\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2004-10-12\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 添加外键</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 删除外键</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 外键的删除和更新行为</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> cascade </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on delete cascade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">alter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> emp </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_emp_dept_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (dept_id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> dept(id) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">on</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> null</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> on delete</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- -------------------------------- 多表关系 演示 ---------------------------------------------</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 多对多 ----------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    no</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学号\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学生表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'黛绮丝\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100101\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'谢逊\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100102\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'殷天正\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100103\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'韦一笑\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2000100104\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> course</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'课程名称\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'课程表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> course </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Java\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'PHP\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> , </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'MySQL\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) , (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hadoop\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> student_course</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键\'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    studentid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学生ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    courseid  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> not null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'课程ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_courseid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (courseid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> course (id),</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_studentid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (studentid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student (id)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学生课程中间表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> student_course </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- --------------------------------- 一对一 ---------------------------</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tb_user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'姓名\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'年龄\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    gender </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1: 男 , 2: 女\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    phone </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'手机号\'</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户基本信息表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">create</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> table</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tb_user_edu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> auto_increment </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">primary key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'主键ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    degree </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'学历\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    major </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'专业\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    primaryschool </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    middleschool </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    university </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'大学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    userid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unique</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户ID\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fk_userid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">foreign key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (userid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">references</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tb_user(id)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) comment </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'用户教育信息表\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tb_user(id, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, age, gender, phone) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'黄渤\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">45</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800001111\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'冰冰\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'2\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800002222\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'码云\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">55</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800008888\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'李彦宏\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'1\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'18800009999\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">insert into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tb_user_edu(id, degree, major, primaryschool, middleschool, university, userid) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">values</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'本科\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'舞蹈\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'静安区第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'静安区第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'北京舞蹈学院\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'硕士\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'表演\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'朝阳区第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'朝阳区第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'北京电影学院\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'本科\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'英语\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杭州市第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杭州市第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'杭州师范大学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'本科\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'应用数学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'阳泉第一小学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'阳泉区第一中学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'清华大学\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.93,words:880},t:"约束及多表关系演示",y:"a"}}],["/Database/MySQL/%E5%B7%A5%E5%85%B7/%E9%97%AA%E5%9B%9E-flashback.html",{loader:()=>l.e(35174).then(l.bind(l,77111)),meta:{e:"\n<h3><strong>1. 简介</strong></h3>\n<p>mysqlbinlog flashback（闪回）用于快速恢复由于误操作丢失的数据。在DBA误操作时，可以把数据库恢复到以前某个时间点（或者说某个binlog的某个pos）。比如忘了带where条件的update、delete操作，传统的恢复方式是利用全备+二进制日志前滚进行恢复，相比于传统的全备+增备，flashback显然更为快速、简单。</p>\n<p>目前MySQL的flashback功能是利用binlog完成的，第一个实现该功能的是阿里云的<strong>彭立勋</strong>， 他在MySQL 5.5版本上就已实现，并将其提交给MariaDB。</p>",r:{minutes:1.6,words:481},t:"闪回-flashback",y:"a"}}],["/Database/MySQL/%E8%BF%90%E7%BB%B4/MyCat%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E5%90%AB%E4%B9%89.html",{loader:()=>l.e(26145).then(l.bind(l,11166)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","数据库"],g:["配置文件"],e:"\n",r:{minutes:2.7,words:810},t:"MyCat系统配置信息含义",i:"fa-solid fa-database",y:"a"}}],["/Database/MySQL/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E7%AF%87.html",{loader:()=>l.e(55489).then(l.bind(l,31191)),meta:{d:17426016e5,l:"2025年3月22日",c:["MySQL","数据库"],g:["讲义","阅读完毕"],e:'\n<h2>日志</h2>\n<h3>错误日志</h3>\n<p>错误日志是 MySQL 中最重要的日志之一，它记录了当 mysqld 启动和停止时，以及服务器在运行过程中发生任何严重错误时的相关信息当数据库出现任何故障导致无法正常使用时，建议首先查看此日志。</p>\n<p>该日志是默认开启的，默认存放目录 /var/log/，默认的日志文件名为 mysqld.log 。查看日志位置：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>show variables like \'%log_error%\'</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:8.94,words:2683},t:"运维篇",i:"fa-solid fa-database",y:"a"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html",{loader:()=>l.e(37179).then(l.bind(l,53527)),meta:{e:"<h3></h3>\n<h1>1.为什么InnoDB存储引擎选择使用B+tree索引结构？</h1>\n<blockquote>\n<p>相对于二叉树，层级更少，搜索效率高；\n对于B-tree,无论是叶子节点还是非叶子节点，都会保存数据，这样导致一\n页中存储的键值减少，指针跟着减少，要同样保存大量数据，只能增加树的\n高度，导致性能降低；\n相对Hash索引，B+tree支持范围匹配及排序操作；</p>\n</blockquote>\n",r:{minutes:.4,words:119},t:"1.为什么InnoDB存储引擎选择使用B+tree索引结构？",y:"a"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%87%BA%E7%8E%B0%E8%AF%BB%E5%8F%96%E8%AE%B0%E5%BD%95%E7%9A%84%E4%BA%8B%E5%8A%A1id%E6%AF%94%E5%88%9B%E5%BB%BAreadview%E7%9A%84%E4%BA%8B%E5%8A%A1id%E5%A4%A7.html",{loader:()=>l.e(88888).then(l.bind(l,79334)),meta:{d:17416512e5,l:"2025年3月11日",c:["MySQL"],g:["事务","了解"],e:"\n",r:{minutes:2.85,words:854},t:"1.什么情况下会出现读取记录的事务id比创建readview的事务id大",i:"pen-to-square",y:"a"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/%E7%AC%94%E8%AE%B0-%E8%BF%9B%E9%98%B6%E7%AF%87.html",{loader:()=>l.e(94430).then(l.bind(l,418)),meta:{d:17414784e5,l:"2025年3月9日",c:["MySQL","数据库"],g:["笔记","阅读完毕"],e:"\n<h2>2.1 存储引擎</h2>\n<p>MySQL体系结构：</p>\n<p>\n</p>\n<p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。\n默认存储引擎是InnoDB。</p>\n",r:{minutes:52.86,words:15859},t:"2.进阶篇",i:"fa-database",y:"a"}}],["/Database/Redis/1.%E5%85%A5%E9%97%A8/Redis%E5%9F%BA%E7%A1%80%E7%AF%87.html",{loader:()=>l.e(91547).then(l.bind(l,45725)),meta:{d:17291232e5,l:"2024年10月17日",c:["Redis"],g:["讲义","阅读完毕"],e:"\n<h2>开篇导读</h2>\n<p><strong>理想课程</strong></p>\n<p>小伙伴们理想的课程一定是能够通过讲解的方式，得到如下这些启发，我们的课程会从基础到精通，从redis小白，到redis大牛，还在等什么，这套课程一定就是你最适合你的课程~</p>\n",r:{minutes:27.31,words:8193},t:"基础篇Redis",i:"pen-to-square",O:1,y:"a"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87-%E5%9C%A8%E7%BA%BF.html",{loader:()=>l.e(49557).then(l.bind(l,27020)),meta:{d:17397504e5,l:"2025年2月17日",c:["Redis"],g:["讲义","阅读完毕"],e:"\n<h2>开篇导读</h2>\n<p>亲爱的小伙伴们大家好，马上咱们就开始实战篇的内容了，相信通过本章的学习，小伙伴们就能理解各种redis的使用啦，接下来咱们来一起看看实战篇我们要学习一些什么样的内容</p>\n<ul>\n<li>短信登录</li>\n</ul>\n<p>这一块我们会使用redis共享session来实现</p>\n<ul>\n<li>商户查询缓存</li>\n</ul>\n<p>通过本章节，我们会理解缓存击穿，缓存穿透，缓存雪崩等问题，让小伙伴的对于这些概念的理解不仅仅是停留在概念上，更是能在代码中看到对应的内容</p>\n<ul>\n<li>优惠卷秒杀</li>\n</ul>\n<p>通过本章节，我们可以学会Redis的计数器功能， 结合Lua完成高性能的redis操作，同时学会Redis分布式锁的原理，包括Redis的三种消息队列</p>",r:{minutes:109.65,words:32895},t:"实战篇Redis",i:"pen-to-square",O:2,y:"a"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87.html",{loader:()=>l.e(57011).then(l.bind(l,21974)),meta:{d:17397504e5,l:"2025年2月17日",c:["Redis"],g:["讲义","阅读完毕"],e:"\n<h2>开篇导读</h2>\n<p>亲爱的小伙伴们大家好，马上咱们就开始实战篇的内容了，相信通过本章的学习，小伙伴们就能理解各种redis的使用啦，接下来咱们来一起看看实战篇我们要学习一些什么样的内容</p>\n<ul>\n<li>短信登录</li>\n</ul>\n<p>这一块我们会使用redis共享session来实现</p>\n<ul>\n<li>商户查询缓存</li>\n</ul>\n<p>通过本章节，我们会理解缓存击穿，缓存穿透，缓存雪崩等问题，让小伙伴的对于这些概念的理解不仅仅是停留在概念上，更是能在代码中看到对应的内容</p>\n<ul>\n<li>优惠卷秒杀</li>\n</ul>\n<p>通过本章节，我们可以学会Redis的计数器功能， 结合Lua完成高性能的redis操作，同时学会Redis分布式锁的原理，包括Redis的三种消息队列</p>",r:{minutes:110.93,words:33278},t:"实战篇Redis",i:"pen-to-square",O:2,y:"a"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/pending-list.html",{loader:()=>l.e(38523).then(l.bind(l,85514)),meta:{e:'\n<p>🍃<strong>Pending List</strong>存的就是已经分配给消费者了，但是消费者还没有处理完，没有确认的消息</p>\n<p><code>命令 1: XREADGROUP GROUP g1 c1 COUNT 1 BLOCK 2000 STREAMS stream.orders &gt;</code></p>\n<p><code>&gt;</code>: 这个符号表示消费者 <code>c1</code> 只会读取那些 <strong>尚未被其他消费者组消费的消息</strong>【<strong>pending-list</strong>】。也就是说，<code>&gt;</code> 确保了它只会消费那些 "未被任何消费者确认" 或 "尚未被处理" 的消息。</p>',r:{minutes:2.04,words:611},t:"Pending List",y:"a"}}],["/Database/Redis/4.%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%90%86%E7%AF%87.html",{loader:()=>l.e(25206).then(l.bind(l,248)),meta:{e:"\n<h2>1、原理篇-Redis数据结构</h2>\n<h3>1.1 Redis数据结构-动态字符串</h3>\n<p>我们都知道Redis中保存的Key是字符串，value往往是字符串或者字符串的集合。可见字符串是Redis中最常用的一种数据结构。</p>\n<p>不过Redis没有直接使用C语言中的字符串，因为C语言字符串存在很多问题：\n获取字符串长度的需要通过运算\n非二进制安全\n不可修改\nRedis构建了一种新的字符串结构，称为简单动态字符串（Simple Dynamic String），简称SDS。\n例如，我们执行命令：</p>\n<figure><figcaption>1653984583289</figcaption></figure>",r:{minutes:45.83,words:13749},t:"Redis原理篇",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",{loader:()=>l.e(81989).then(l.bind(l,67974)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>序列化是将对象转换为字节流的过程，使对象能够通过网络传输，进行持久化存储或者缓存。Java提供了<code>java.io.serializable</code>接口来支持序列化，只要类实现了该接口，类的实例化对象就能进行序列化。</p>\n<p>反序列化是将字节流重新转化为对象的过程，即从存储中读取数据并重新创建对象。</p>\n<p>每一个实现序列化接口的类都要定义一个<code>serialVersionUID</code>，用于反序列化时验证版本一致性。版本不匹配会导致反序列化失败。若不指定<code>serialVersionUID</code>，Java会根据类的定义自动hash生成一个。不需要进行序列化的成员属性变量可使用<code>transient</code>关键字修饰。</p>\n<p>Java中对应序列化，反序列化机制在java.io包中在顶级父类下封装了ObjectOutputStream类，作用是将Java对象的原始数据类型以流的方式写出到文件,实现对象的持久存储；ObjectInputStream类，作用是把文件中保存的对象,以流的方式读取出来使用。</p>\n<p>Java中默认序列化框架<code>JDK Serializable</code>比较慢，对于大规模分布式系统，选择更加高效的序列化框架（FST， Kryo，Protocol buffer，Thrift，Hessian）</p>\n<p>在身份验证，文件读写，数据传输等功能处，在未对反序列化接口做访问控制，未对序列化数据做加密和签名，加密密钥使用硬编码（如Shiro 1.2.4），使用不安全的反序列化框架库（如Fastjson 1.2.24）或函数的情况下，由于序列化数据可被用户控制，攻击者可以精心构造恶意的序列化数据（执行特定代码或命令的数据）传递给应用程序，在应用程序反序列化对象时执行攻击者构造的恶意代码，达到攻击者的目的。</p>\n</div>',r:{minutes:1.85,words:555},t:"1.序列化与反序列化",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",{loader:()=>l.e(29847).then(l.bind(l,55799)),meta:{d:17307648e5,l:"2024年11月5日",c:["Java"],g:["了解"],e:'\n<div class="hint-container info">\n<p class="hint-container-title">相关信息</p>\n<p><code>序列化面试题补充，了解即可</code>在实际项目中使用 <strong>FST (Fast Serialization)</strong> 进行序列化和反序列化时，主要的目的是提升性能，尤其是在处理大量数据或者频繁进行对象存取的场景中。以下是一些常见的使用场景和最佳实践。</p>\n</div>\n',r:{minutes:3.98,words:1194},t:"1.补充-FST框架使用实例",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html",{loader:()=>l.e(11444).then(l.bind(l,44356)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3><strong>口述稿</strong></h3>\n",r:{minutes:4.72,words:1417},t:"10.Java内部类及作用",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",{loader:()=>l.e(47137).then(l.bind(l,80668)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<h3>口述稿</h3>\n<p><strong>面试官提问：请简要讲一下 Java 8 的新特性。</strong></p>\n<p>Java 8 引入了很多重要的新特性，增强了语言的功能和性能，以下是几个核心特性：</p>\n",r:{minutes:3.49,words:1047},t:"11.Java8新特性",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(73539).then(l.bind(l,15056)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<p><strong>面试官：请简要说明一下 JDK 和 JRE 之间的区别。</strong></p>\n<p><strong>回答：</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>"好的，JDK（Java Development Kit）和 JRE（Java Runtime Environment）是 Java 开发和运行中两个非常重要的组件。它们之间有一些关键的区别，下面我来详细说明。</p>\n<p>首先，<strong>JDK</strong> 是 Java 开发工具包，它是为开发者设计的。JDK 不仅包含了 JRE，而且还提供了开发 Java 程序所需的各种工具，比如 <strong>Java 编译器（javac）</strong>、<strong>调试工具（jdb）</strong>、以及 <strong>文档生成工具（javadoc）</strong> 等。因此，<strong>JDK 是一个完整的开发环境</strong>，如果我们需要编写、编译、调试、执行 Java 程序，都需要用到 JDK。</p>\n<p>而 <strong>JRE</strong> 是 Java 运行环境，主要用于 <strong>运行 Java 程序</strong>。它包含了 Java 虚拟机（JVM）和 Java 类库等基础运行时环境，但是不包括开发工具。因此，JRE 主要是为用户提供一个能够运行 Java 应用的环境，但它 <strong>不包含编译 Java 程序的功能</strong>。</p>\n<p>简单来说，<strong>JDK 包含了 JRE</strong>，所以如果你是开发人员，通常需要安装 JDK，因为它不仅可以用来运行 Java 程序，还可以进行开发和编译。而 <strong>JRE 主要是为了运行 Java 程序而设计</strong>，如果你只是需要运行一个 Java 应用，那么安装 JRE 就足够了。</p>\n<p>所以总结一下：<strong>JDK 是用于开发 Java 应用程序的工具包，包含了 JRE 和开发工具</strong>；而 <strong>JRE 是用于运行 Java 程序的环境</strong>，不包含开发工具。"</p>\n</div>',r:{minutes:3.37,words:1011},t:"12.JDK和JRE之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html",{loader:()=>l.e(92697).then(l.bind(l,49445)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:"\n<p><strong>Java开发工具</strong></p>\n<ul>\n<li><strong>javac</strong>：Java 编译器，负责将 Java 源代码编译成字节码 （.class 文件）。</li>\n<li><strong>java</strong>：运行 Java 应用程序的命令，使用 JVM 来解释并执行编译后的字节码文件。</li>\n<li><strong>javadoc</strong>：生成 API 文档的工具，能够根据源代码中的注释生成 HTML 格式的文档。</li>\n<li><strong>jar</strong>：用于创建和管理 JAR 文件的工具，可以将多个 .class 文件打包为单一文件，便于分发和管理。</li>\n<li><strong>jdb</strong>：Java 调试工具，用于在命令行中调试 Java 应用程序，支持断点设置、变量查看等功能。</li>\n</ul>",r:{minutes:1.59,words:476},t:"13.使用过哪些JDK开发工具",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html",{loader:()=>l.e(50285).then(l.bind(l,75581)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><code>hashCode</code>、<code>equals</code> 和 <code>==</code> 是 Java 中三个非常重要的概念，它们在对象比较和哈希结构中扮演着不同的角色。下面我来详细说明它们之间的区别。</p>\n<p>首先，<code>==</code> 是 Java 中用于比较对象引用是否相等的操作符。它检查的是两个对象在<code>内存中的地址</code>是否相同，也就是说，<code>==</code> 判断的是两个对象是否指向同一个内存位置。如果两个对象的引用指向的是同一个对象，那么 <code>==</code> 返回 <code>true</code>；如果指向不同的对象，返回 <code>false</code>。</p>\n<p>而 <code>equals</code> 是 <code>Object</code> 类中定义的方法，它用来比较两个对象的内容是否相等。默认情况下，<code>equals</code> 方法会比较对象的内存地址（类似于 <code>==</code> 的行为），但通常我们会在自定义类中重写 <code>equals</code> 方法，以实现对对象内容的比较。比如在 <code>String</code> 类中，<code>equals</code> 方法比较的是字符串的值，而不是它们在内存中的地址。因此，<code>equals</code> 是一种更为常见的内容比较方式，尤其是在集合操作中。</p>\n<p>接下来是 <code>hashCode</code>，它是每个对象的哈希值，用于哈希存储结构中的对象查找和存储优化。<code>hashCode</code> 返回一个整数值，表示对象的哈希地址，它用于加速对象在哈希集合（如 <code>HashMap</code>、<code>HashSet</code>）中的查找。当我们将对象插入这些集合时，<code>hashCode</code> 被用来快速确定对象的存储位置。如果两个对象的 <code>hashCode</code> 不同，它们一定不相等（<code>equals</code> 返回 <code>false</code>）。但需要注意的是，<code>hashCode</code> 相同的对象不一定通过 <code>equals</code> 比较为相等。</p>\n<p>总结一下它们之间的关系：</p>\n<ul>\n<li><code>==</code> 比较的是对象的引用，判断它们是否指向同一个内存地址。</li>\n<li><code>equals</code> 比较的是对象的内容，判断它们的内容是否相等（需要根据具体实现来决定）。</li>\n<li><code>hashCode</code> 是用于哈希结构中对象查找和存储的优化工具，通常需要与 <code>equals</code> 配合使用，以保证哈希结构的正确性。</li>\n</ul>\n<p>简单来说，<code>==</code> 是比较对象的引用，<code>equals</code> 是比较对象的内容，而 <code>hashCode</code> 是为了提高哈希结构效率所使用的哈希值。</p>\n</div>',r:{minutes:4.28,words:1285},t:"14.Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html",{loader:()=>l.e(62612).then(l.bind(l,72622)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<h3>口述稿</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<code>hashCode()</code> 和 <code>equals()</code> 方法是紧密相关的，尤其是在哈希数据结构中。根据 Java 的规范，如果两个对象通过 <code>equals()</code> 比较是相等的，它们的 <code>hashCode()</code> 必须相等。反之，<code>hashCode()</code> 相等并不意味着 <code>equals()</code> 必定相等，但通常建议避免不同对象具有相同的 <code>hashCode()</code>，以减少哈希冲突。在实现这两个方法时，通常根据对象的核心属性来重写 <code>equals()</code> 和 <code>hashCode()</code>，这样才能确保在像 <code>HashMap</code> 或 <code>HashSet</code> 这样的哈希数据结构中正常工作。</p>\n</div>',r:{minutes:3.03,words:910},t:"15.hashCode() 和equals() 之间的关系",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",{loader:()=>l.e(4082).then(l.bind(l,44772)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>Java 动态代理是一种在程序运行时生成代理类并将其应用到目标对象的机制。动态代理允许我们在不修改目标类的情况下，通过代理类在方法调用前后增加额外的逻辑。它广泛应用于日志记录、权限控制、事务管理等场景。</p>\n</div>\n<h3>工作原理：</h3>\n<p>Java 动态代理主要依赖于 <code>java.lang.reflect.Proxy</code> 类和 <code>InvocationHandler</code> 接口。</p>',r:{minutes:2.98,words:894},t:"16.什么是Java中的动态代理？",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(38589).then(l.bind(l,28837)),meta:{d:17364672e5,l:"2025年1月10日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li><strong>Java动态代理</strong>适用于实现了接口的类，内存消耗低，但性能稍逊。</li>\n<li><strong>CGLIB动态代理</strong>适用于没有接口的类，性能更好，但不能代理 <code>final</code> 类和方法，且内存消耗较大。</li>\n</ul>\n</div>\n<blockquote>\n<p>Java中的动态代理和CGLIB动态代理是两种常用的代理机制，它们都可以在运行时动态地创建代理对象，通常用于面向切面编程（AOP）和设计模式（如装饰器模式）。下面是对这两种代理机制的总结：</p>\n</blockquote>',r:{minutes:3.22,words:965},t:"17.JDK动态代理和CGLIB动态代理有什么区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/18.%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(53463).then(l.bind(l,48764)),meta:{e:"\n",r:{minutes:.04,words:11},t:"接口和抽象类有什么区别",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",{loader:()=>l.e(98664).then(l.bind(l,61194)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>不可变类的定义</strong></p>\n</div>\n<blockquote>\n<p><strong>不可变类</strong>（Immutable Class）是指实例对象一旦创建，其状态（即属性）就不能被修改的类。<strong>不可变类</strong>的实例在其生命周期内始终保持不变。</p>\n</blockquote>\n',r:{minutes:1.47,words:440},t:"2.什么是 Java 中的不可变类",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(93686).then(l.bind(l,43019)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p><strong>定义</strong></p>\n</div>\n<blockquote>\n<p>都是<code>Throwable</code>的子类。（在 Java 代码中只有继承了 Throwable 类的实例才可以被 throw 或者被 catch）</p>\n<ul>\n<li><strong>Exception</strong>：表示程序中可以被捕获和处理的异常情况。通常由程序错误、外部资源问题等引发。</li>\n<li><strong>Error</strong>：表示严重的问题，通常是 JVM 或硬件层面的错误。</li>\n</ul>\n</blockquote>\n',r:{minutes:.89,words:266},t:"3.Java 中 Exception 和 Error 有什么区别？",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html",{loader:()=>l.e(51).then(l.bind(l,9070)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p>在 Java 中，异常处理是确保程序健壮性和稳定性的一个关键部分。然而，不恰当的异常处理可能会导致程序出现不易察觉的错误或性能问题。因此，编写异常处理代码时需要特别注意一些细节。以下是 <strong>Java 异常处理中需要注意的地方</strong>：</p>\n</div>\n',r:{minutes:4.93,words:1478},t:"3.扩展-异常处理注意点",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html",{loader:()=>l.e(63722).then(l.bind(l,39749)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<h3>1. <strong>平台无关性（跨平台性）</strong></h3>\n<ul>\n<li><strong>“一次编写，到处运行（Write Once, Run Anywhere）”</strong>：Java 代码编译成字节码（.class 文件），通过 Java 虚拟机（JVM）在不同平台上运行，无需修改源代码。这使得 Java 成为开发跨平台应用的理想选择，支持多种操作系统，如 Windows、Linux、macOS。</li>\n</ul>\n",r:{minutes:3.95,words:1184},t:"4.Java的优势",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html",{loader:()=>l.e(14932).then(l.bind(l,51078)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>多态</strong>（Polymorphism）是面向对象编程（OOP）中的一个重要概念，它指的是“同一方法或操作作用于不同对象时，可以有不同的表现形式”。在 Java 中，多态使得同一个方法调用可以根据实际对象的类型执行不同的操作，从而提高代码的灵活性和可扩展性。</p>\n</div>\n',r:{minutes:3.3,words:989},t:"5.什么是Java的多态",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html",{loader:()=>l.e(38529).then(l.bind(l,66995)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>在 Java 中，<strong>参数传递是按值传递</strong>（pass-by-value）。</p>\n<ul>\n<li><strong>基本类型参数</strong>：按值传递，即传递的是变量的副本，修改副本不会影响原始变量。</li>\n<li><strong>引用类型参数</strong>：按值传递，即传递的是引用（内存地址）的副本，修改对象的内容会影响原始对象，但修改引用本身（让引用指向新对象）不会影响原始引用。</li>\n</ul>\n</div>\n<h3>1. <strong>基本类型参数：</strong></h3>\n<p>对于基本数据类型（如 <code>int</code>、<code>float</code>、<code>boolean</code> 等），传递的是<strong>值</strong>。也就是说，当你将一个基本数据类型的变量作为参数传递给方法时，传递的是该变量的副本，方法内部对参数的修改不会影响原始变量。</p>\n',r:{minutes:2.46,words:737},t:"6.Java中的参数传递是按值还是按引用",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>l.e(51204).then(l.bind(l,87299)),meta:{d:17362944e5,l:"2025年1月8日",c:["Java"],g:["必背"],e:"\n<p>是的，Java <strong>不支持多重继承</strong>。这意味着一个类不能同时继承自两个或多个类。Java 之所以不支持多重继承，主要是为了避免一些潜在的复杂性和问题，尤其是<strong>菱形继承问题</strong>。</p>\n",r:{minutes:2.82,words:846},t:"7.Java 不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",{loader:()=>l.e(25594).then(l.bind(l,85697)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>1. <strong>避免菱形继承问题</strong></h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>多重继承可能会导致“菱形继承”问题。假设有一个类 <code>A</code>，然后类 <code>B</code> 和类 <code>C</code> 都继承自 <code>A</code>，接着类 <code>D</code> 同时继承自 <code>B</code> 和 <code>C</code>。如果 <code>B</code> 和 <code>C</code> 都重写了 <code>A</code> 的某个方法，类 <code>D</code> 在调用这个方法时就无法明确到底调用 <code>B</code> 还是 <code>C</code> 中的实现，导致继承关系的模糊性和不确定性。这种问题被称为“菱形继承”。</p>\n</div>\n',r:{minutes:2.29,words:687},t:"7.为什么Java不支持多重继承",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(38443).then(l.bind(l,11666)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:'\n<h3>0. A</h3>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>面向过程编程和面向对象编程是两种不同的编程范式，它们的主要区别在于关注的重点和代码的组织方式。</p>\n<ol>\n<li><strong>面向过程编程</strong>，顾名思义，它注重的是“做什么”和“怎么做”。在面向过程的程序中，我们通常通过一系列函数或过程来实现特定的功能。数据和操作数据的逻辑通常是分开的，程序逻辑是按顺序执行的。适用于那些任务明确、功能简单的小型程序。</li>\n<li><strong>面向对象编程</strong>，则关注的是“对象”和“行为”。在这种范式中，程序通过类和对象来组织。对象是数据和操作数据的代码的封装体，每个对象既包含数据，也包含对数据的操作方法。面向对象的三大特性——封装、继承和多态，帮助我们将复杂的系统组织得更加清晰、模块化，同时也增强了代码的重用性和可维护性。</li>\n</ol>\n<p>具体来讲，面向过程的程序结构主要由函数组成，函数直接操作全局数据，程序随着功能的增多，代码的可维护性和扩展性会变得较差。而面向对象则通过类和对象来组织代码，类定义了对象的属性和行为，对象之间通过方法进行交互。面向对象的方式使得程序更容易扩展和维护，尤其在处理复杂系统时优势更为明显。</p>\n<p>举个简单的例子，如果我们有一个银行账户的管理程序，<strong>面向过程</strong>的实现可能是通过函数来存取余额，而数据和方法是分开的；而在<strong>面向对象</strong>中，我们会创建一个<code>BankAccount</code>类，这个类封装了余额和存取款的方法，使得代码更加清晰，也更容易扩展，比如未来需要增加更多的功能（例如转账、利息计算等）。</p>\n<p>总结来说，面向过程适合功能简单、需求明确的项目，而面向对象则更适用于需要长期维护和扩展的大型项目。面向对象通过封装、继承和多态，使得系统更加模块化、灵活，并且具有更强的可扩展性和可维护性。</p>\n</div>\n',r:{minutes:5.3,words:1591},t:"8.面向过程和面向对象的区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(84982).then(l.bind(l,92432)),meta:{d:17363808e5,l:"2025年1月9日",c:["Java"],g:["必背"],e:"\n<h3>0. A</h3>\n",r:{minutes:5.77,words:1730},t:"9.Java方法重载和重写之间的区别",i:"fa-brands fa-java",y:"a"}}],["/Interview/Java/02%E4%B8%AD%E7%AD%89/1.Java%E4%B8%ADString%E3%80%81StringBuffer%E5%92%8CStringBuilder%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(17540).then(l.bind(l,30737)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>它们都是Java中处理字符串的类，区别主要体现在<strong>可变性</strong>、<strong>线程安全性</strong>和<strong>性能</strong>上：</p>\n</div>\n<h2>1)String</h2>\n<ul>\n<li>不可变:String是不可变类，字符串一旦创建，其内容无法更改。每次对String进行修改操作（如拼接、截取等），都会创建新的String对象。</li>\n<li>适合场景：String适用于字符串内容不会频繁变化的场景，例如少量的字符串拼接操作或字符串常量。</li>\n</ul>',r:{minutes:1.2,words:361},t:"1.Java中String、StringBuffer和StringBuilder的区别是什么？",y:"a"}}],["/Interview/Java/02%E4%B8%AD%E7%AD%89/2.Java%E4%B8%ADvolatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8.html",{loader:()=>l.e(76453).then(l.bind(l,32965)),meta:{e:"\n<blockquote>\n<p>volatile关键字的主要作用是<code>确保变量的可见性</code>和<code>禁止指令重排</code></p>\n</blockquote>\n<h3>1. <strong>确保变量的可见性</strong></h3>\n<p>在多线程环境中，每个线程都会有自己的工作内存（缓存），当一个线程修改了某个共享变量的值时，其他线程可能无法立即看到这个修改。<code>volatile</code> 关键字确保了当一个线程修改了被 <code>volatile</code> 修饰的变量时，其他线程会立刻看到最新的值。这是通过禁止线程缓存该变量的值并保证它直接从主内存读取来实现的。<code>volatile</code> 关键字不能保证操作的<strong>原子性</strong>，</p>",r:{minutes:.91,words:274},t:"2.Java中volatile关键字的作用是什么？",y:"a"}}],["/Interview/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87.html",{loader:()=>l.e(14617).then(l.bind(l,23115)),meta:{e:'\n<h2>概念</h2>\n<h3>1.说一下Java的特点</h3>\n<p>主要有以下的特点：</p>\n<ul>\n<li><strong>平台无关性</strong>：Java的“编写一次，运行无处不在"哲学是其最大的特点之一。Java编译器将源代码编译成\n字节码(bytecode)，该字节码可以在任何安装了Java虚拟机（JVM)的系统上运行。</li>\n<li><strong>面向对象</strong>：Java是一门严格的面向对象编程语言，几乎一切都是对象。面向对象编程(OOP)特性使\n得代码更易于维护和重用，包括类(class)、对象（object)、继承(inheritance)、多态\n(polymorphism)、抽象（abstraction)和封装(encapsulation)。</li>\n<li><strong>内存管理</strong>：Java有自己的垃圾回收机制，自动管理内存和回收不再使用的对象。这样，开发者不需要\n手动管理内存，从而减少内存泄漏和其他内存相关的问题。</li>\n</ul>',r:{minutes:38.01,words:11402},t:"Java基础面试题",y:"a"}}],["/Interview/MQ/RabbitMQ/RabbitMQ%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>l.e(7689).then(l.bind(l,47118)),meta:{e:"\n<h2>RabbitMQ routing 路由模式</h2>\n<p>消息生产者将消息发送给交换机按照路由判断,路由是字符串(info)  当前产生的消息携 带路由字符(对象的方法)，交换机根据路由的 key，只能匹配上路由 key 对应的消息队列, 对应的消费者才能消费消息。</p>\n<p>根据业务功能定义路由字符串。</p>\n<p>从系统的代码逻辑中获取对应的功能字符串,将消息任务扔到对应的队列中。</p>\n<p>业务场景：error  通知、EXCEPTION、错误通知的功能、传统意义的错误通知、客户 通知、利用 key 路由，可以将程序中的错误封装成消息传入到消息队列中，开发者可以自 定义消费者，实时接收错误。</p>",r:{minutes:4.58,words:1373},t:"RabbitMQ  面试题",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%20%E4%B8%AD%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",{loader:()=>l.e(73966).then(l.bind(l,59475)),meta:{e:'\n<h2>❓面试题目：</h2>\n<p><strong>请简述 Java 中常用的深拷贝实现方式。</strong></p>\n<hr>\n<h2>✅ 答题要点：</h2>\n<h3>1. 手动拷贝（推荐做法，最清晰）</h3>\n<ul>\n<li>适合结构简单、可控的类。</li>\n<li>对每个字段进行手动复制，<strong>引用字段必须创建新对象并复制内容</strong>。</li>\n</ul>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> city</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Address</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> deepCopy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Person</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> copy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">city</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">city</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> copy;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.52,words:455},t:"☕Java面试答题卡：Java 中的深拷贝实现方式",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java_%E5%A4%9A%E6%80%81_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>l.e(35776).then(l.bind(l,28257)),meta:{e:"\n<hr>\n<h2>1️⃣ 多态基础概念</h2>\n<ul>\n<li><strong>定义</strong>：同一个方法调用，在运行时可表现为不同的行为。</li>\n<li><strong>实现方式</strong>：继承/接口 + 方法重写 + 父类引用指向子类对象 + 动态绑定（虚方法表）。</li>\n<li><strong>解决的问题</strong>：\n<ul>\n<li>调用方式统一，行为多样</li>\n<li>实现开闭原则，增强扩展性</li>\n<li>降低耦合，提高代码复用</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>2️⃣ 多态与常见设计模式</h2>\n<table>\n<thead>\n<tr>\n<th>设计模式</th>\n<th>多态的体现方式</th>\n<th>关键词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>策略模式</td>\n<td>一组算法实现同一接口，运行时动态替换</td>\n<td>interface + 多实现类</td>\n</tr>\n<tr>\n<td>工厂模式</td>\n<td>返回父类引用，实际是子类对象</td>\n<td>多态返回值</td>\n</tr>\n<tr>\n<td>模板方法模式</td>\n<td>父类定义流程，子类重写细节步骤方法</td>\n<td>抽象类 + 方法重写</td>\n</tr>\n<tr>\n<td>状态模式</td>\n<td>不同状态类实现同一接口，行为动态切换</td>\n<td>上下文 + 多态</td>\n</tr>\n<tr>\n<td>观察者模式</td>\n<td>通知所有观察者，具体响应由各自决定</td>\n<td>统一回调接口</td>\n</tr>\n<tr>\n<td>责任链模式</td>\n<td>各个处理器实现统一接口，动态传递处理请求</td>\n<td>next.handle()</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.87,words:561},t:"☕Java 面试答题卡：Java 多态 + 设计模式",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/LSP%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E5%8F%8D%E4%BE%8B.html",{loader:()=>l.e(72256).then(l.bind(l,53995)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>LSP（Liskov Substitution Principle）—— 里氏替换原则：</strong></p>\n<blockquote>\n<p>所有引用基类的地方必须能透明地使用其子类对象，且不会引发错误或改变程序原有逻辑。</p>\n</blockquote>\n<hr>\n<h2>❌ 经典反例：正方形继承矩形</h2>\n<h3>代码示例：</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Rectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> w; }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h; }</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> width </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> height; }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Square</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Rectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> w;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> w;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 强制长宽相等</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> h;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 同样强制长宽相等</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> resize</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Rectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> r) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getArea</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 预期输出 50</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.33,words:399},t:"☕Java 面试答题卡：设计原则反例 —— 里氏替换原则（LSP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99%EF%BC%88DIP%EF%BC%89.html",{loader:()=>l.e(89671).then(l.bind(l,57951)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>依赖倒置原则（DIP，Dependency Inversion Principle）</strong></p>\n<blockquote>\n<p>高层模块不应该依赖低层模块，二者都应该依赖抽象（接口或抽象类）。\n抽象不应该依赖细节，细节应该依赖抽象。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：高层模块依赖低层模块实现</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MySQLDatabase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"保存数据到 MySQL: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> data);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MySQLDatabase</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> db </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MySQLDatabase</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">saveData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.13,words:338},t:"☕Java 面试答题卡：依赖倒置原则（DIP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99%EF%BC%88SRP%EF%BC%89.html",{loader:()=>l.e(69160).then(l.bind(l,63501)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>单一职责原则（SRP，Single Responsibility Principle）：</strong></p>\n<blockquote>\n<p>一个类应该只有一个引起它变化的原因，即一个类只负责一项职责。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：职责混乱的类</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UserManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> addUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 添加用户逻辑</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> saveToDatabase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 保存用户到数据库</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sendEmail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 给用户发送邮件</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.04,words:312},t:"☕Java面试答题卡：单一职责原则（SRP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%88OCP%EF%BC%89.html",{loader:()=>l.e(95815).then(l.bind(l,44381)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>开放封闭原则（OCP，Open-Closed Principle）：</strong></p>\n<blockquote>\n<p>软件实体（类、模块、函数等）应该对扩展开放，对修改封闭。\n意思是说，系统功能可以通过扩展来实现，而不应该通过修改已有代码来实现。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：修改已有代码实现新功能</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> GraphicEditor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drawShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Shape</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            drawCircle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(shape);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            drawRectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(shape);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 新增形状时需要修改此方法，违反OCP</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drawCircle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Shape</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 画圆形 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drawRectangle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Shape</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 画矩形 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.25,words:374},t:"☕Java 面试答题卡：开放封闭原则（OCP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99%EF%BC%88ISP%EF%BC%89.html",{loader:()=>l.e(34810).then(l.bind(l,39776)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>接口隔离原则（ISP，Interface Segregation Principle）：</strong></p>\n<blockquote>\n<p>客户端不应该依赖它不需要的接口，即接口应该“小而专”，避免设计“胖接口”。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：胖接口导致问题</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IWorker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> work</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> RobotWorker</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IWorker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> work</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 实现工作 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> UnsupportedOperationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"机器人不需要吃饭"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> UnsupportedOperationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"机器人不需要睡觉"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.24,words:372},t:"☕Java 面试答题卡：接口隔离原则（ISP）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%9C%80%E5%B0%91%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%99%EF%BC%88LoD%EF%BC%89.html",{loader:()=>l.e(26216).then(l.bind(l,94205)),meta:{e:'\n<hr>\n<h2>🧠 原则简介</h2>\n<p><strong>最少知识原则（LoD，Law of Demeter）：</strong></p>\n<blockquote>\n<p>一个对象应当对其他对象有尽可能少的了解，只与直接的“朋友”通信，避免与“陌生人”交互。\n简单来说，就是“只和你的直接朋友说话，不和朋友的朋友说话”。</p>\n</blockquote>\n<hr>\n<h2>❌ 反例：违反最少知识原则</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Engine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* 启动引擎 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Engine</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> engine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Engine</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getEngine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> engine;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Car</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getEngine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 直接调用“朋友的朋友”的方法，违反LoD</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.22,words:366},t:"☕Java 面试答题卡：最少知识原则（LoD）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%EF%BC%88SOLID%20%E5%8F%8A%E7%9B%B8%E5%85%B3%EF%BC%89.html",{loader:()=>l.e(75723).then(l.bind(l,51481)),meta:{e:"\n<hr>\n<h2>1. 单一职责原则（SRP）</h2>\n<ul>\n<li><strong>定义</strong>：一个类应该只有一个引起它变化的原因，即一个类只负责一项职责。</li>\n<li><strong>作用</strong>：降低类的复杂度，提高可维护性。</li>\n<li><strong>示例</strong>：将用户管理、数据存储和通知拆分到不同的类中。</li>\n</ul>\n<hr>\n<h2>2. 开放封闭原则（OCP）</h2>\n<ul>\n<li><strong>定义</strong>：软件实体应对扩展开放，对修改封闭。</li>\n<li><strong>作用</strong>：新增功能时，避免修改已有代码，降低风险。</li>\n<li><strong>示例</strong>：使用抽象类和接口，通过继承和多态实现扩展。</li>\n</ul>",r:{minutes:1.59,words:478},t:"☕Java面试答题卡：面向对象设计原则（SOLID 及相关）",y:"a"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/Linux%20%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5.html",{loader:()=>l.e(81351).then(l.bind(l,31818)),meta:{e:"<h2>🐧Linux面试答题卡：Linux 中的两种链接方式</h2>\n<h2>❓面试题目：</h2>\n<p><strong>请简述 Linux 中两种链接方式（软链接与硬链接）的区别。</strong></p>\n<hr>\n<h3>✅ 答题要点：</h3>\n<h4>1. 链接类型简介</h4>\n<table>\n<thead>\n<tr>\n<th>链接方式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>软链接（Symbolic Link）</td>\n<td>类似于快捷方式，保存的是目标文件路径</td>\n</tr>\n<tr>\n<td>硬链接（Hard Link）</td>\n<td>与原文件共享 inode，指向相同的数据块</td>\n</tr>\n</tbody>\n</table>",r:{minutes:1.22,words:366},t:"",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%9F%BA%E7%A1%80%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>l.e(8922).then(l.bind(l,11465)),meta:{e:"\n<blockquote>\n<p><em><strong>基础篇要点：算法、数据结构、基础设计模式</strong></em></p>\n</blockquote>\n<h2>1. 二分查找</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>能够用自己语言描述二分查找算法</li>\n<li>能够手写二分查找代码</li>\n<li>能够解答一些变化后的考法</li>\n</ul>\n<p><strong>算法描述</strong></p>\n<ol>\n<li>\n<p>前提：有已排序数组 A（假设已经做好）</p>\n</li>\n<li>\n<p>定义左边界 L、右边界 R，确定搜索范围，循环执行二分查找（3、4两步）</p>\n</li>\n<li>\n<p>获取中间索引 M = Floor((L+R) /2)</p>\n</li>\n<li>\n<p>中间索引的值  A[M] 与待搜索的值 T 进行比较</p>\n<p>① A[M] == T 表示找到，返回中间索引</p>\n<p>② A[M] &gt; T，中间值右侧的其它元素都大于 T，无需比较，中间索引左边去找，M - 1 设置为右边界，重新查找</p>\n<p>③ A[M] &lt; T，中间值左侧的其它元素都小于 T，无需比较，中间索引右边去找， M + 1 设置为左边界，重新查找</p>\n</li>\n<li>\n<p>当 L &gt; R 时，表示没有找到，应结束循环</p>\n</li>\n</ol>",r:{minutes:19.86,words:5959},t:"基础篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/%E5%B9%B6%E5%8F%91%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>l.e(20381).then(l.bind(l,85913)),meta:{e:"\n<h2>1. 线程状态</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>掌握 Java 线程六种状态</li>\n<li>掌握 Java 线程状态转换</li>\n<li>能理解五种状态与六种状态两种说法的区别</li>\n</ul>\n<p><strong>六种状态及转换</strong></p>\n<figure><figcaption>image-20210831090722658</figcaption></figure>\n<p>分别是</p>\n<ul>\n<li>新建\n<ul>\n<li>当一个线程对象被创建，但还未调用 start 方法时处于<strong>新建</strong>状态</li>\n<li>此时未与操作系统底层线程关联</li>\n</ul>\n</li>\n<li>可运行\n<ul>\n<li>调用了 start 方法，就会由<strong>新建</strong>进入<strong>可运行</strong></li>\n<li>此时与底层线程关联，由操作系统调度执行</li>\n</ul>\n</li>\n<li>终结\n<ul>\n<li>线程内代码已经执行完毕，由<strong>可运行</strong>进入<strong>终结</strong></li>\n<li>此时会取消与底层线程关联</li>\n</ul>\n</li>\n<li>阻塞\n<ul>\n<li>当获取锁失败后，由<strong>可运行</strong>进入 Monitor 的阻塞队列<strong>阻塞</strong>，此时不占用 cpu 时间</li>\n<li>当持锁线程释放锁时，会按照一定规则唤醒阻塞队列中的<strong>阻塞</strong>线程，唤醒后的线程进入<strong>可运行</strong>状态</li>\n</ul>\n</li>\n<li>等待\n<ul>\n<li>当获取锁成功后，但由于条件不满足，调用了 wait() 方法，此时从<strong>可运行</strong>状态释放锁进入 Monitor 等待集合<strong>等待</strong>，同样不占用 cpu 时间</li>\n<li>当其它持锁线程调用 notify() 或 notifyAll() 方法，会按照一定规则唤醒等待集合中的<strong>等待</strong>线程，恢复为<strong>可运行</strong>状态</li>\n</ul>\n</li>\n<li>有时限等待\n<ul>\n<li>当获取锁成功后，但由于条件不满足，调用了 wait(long) 方法，此时从<strong>可运行</strong>状态释放锁进入 Monitor 等待集合进行<strong>有时限等待</strong>，同样不占用 cpu 时间</li>\n<li>当其它持锁线程调用 notify() 或 notifyAll() 方法，会按照一定规则唤醒等待集合中的<strong>有时限等待</strong>线程，恢复为<strong>可运行</strong>状态，并重新去竞争锁</li>\n<li>如果等待超时，也会从<strong>有时限等待</strong>状态恢复为<strong>可运行</strong>状态，并重新去竞争锁</li>\n<li>还有一种情况是调用 sleep(long) 方法也会从<strong>可运行</strong>状态进入<strong>有时限等待</strong>状态，但与 Monitor 无关，不需要主动唤醒，超时时间到自然恢复为<strong>可运行</strong>状态</li>\n</ul>\n</li>\n</ul>",r:{minutes:12.4,words:3721},t:"并发篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>l.e(4253).then(l.bind(l,51578)),meta:{e:"\n<h2>1. JVM 内存结构</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>掌握 JVM 内存结构划分</li>\n<li>尤其要知道方法区、永久代、元空间的关系</li>\n</ul>\n<p><strong>结合一段 java 代码的执行理解内存划分</strong></p>\n<figure><figcaption>image-20210831165728217</figcaption></figure>\n<ul>\n<li>执行 javac 命令编译源代码为字节码</li>\n<li>执行 java 命令\n<ol>\n<li>创建 JVM，调用类加载子系统加载 class，将类的信息存入<strong>方法区</strong></li>\n<li>创建 main 线程，使用的内存区域是 <strong>JVM 虚拟机栈</strong>，开始执行 main 方法代码</li>\n<li>如果遇到了未见过的类，会继续触发类加载过程，同样会存入<strong>方法区</strong></li>\n<li>需要创建对象，会使用<strong>堆</strong>内存来存储对象</li>\n<li>不再使用的对象，会由<strong>垃圾回收器</strong>在内存不足时回收其内存</li>\n<li>调用方法时，方法内的局部变量、方法参数所使用的是  <strong>JVM 虚拟机栈</strong>中的栈帧内存</li>\n<li>调用方法时，先要到<strong>方法区</strong>获得到该方法的字节码指令，由<strong>解释器</strong>将字节码指令解释为机器码执行</li>\n<li>调用方法时，会将要执行的指令行号读到<strong>程序计数器</strong>，这样当发生了线程切换，恢复时就可以从中断的位置继续</li>\n<li>对于非 java 实现的方法调用，使用内存称为<strong>本地方法栈</strong>（见说明）</li>\n<li>对于热点方法调用，或者频繁的循环代码，由 <strong>JIT 即时编译器</strong>将这些代码编译成机器码缓存，提高执行性能</li>\n</ol>\n</li>\n</ul>",r:{minutes:19.43,words:5828},t:"虚拟机篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/%E6%A1%86%E6%9E%B6%E7%AF%87%E8%AE%B2%E4%B9%89.html",{loader:()=>l.e(52779).then(l.bind(l,97149)),meta:{e:"\n<h2>1. Spring refresh 流程</h2>\n<p><strong>要求</strong></p>\n<ul>\n<li>掌握 refresh 的 12 个步骤</li>\n</ul>\n<p><strong>Spring refresh 概述</strong></p>\n<p>refresh 是 AbstractApplicationContext 中的一个方法，负责初始化 ApplicationContext 容器，容器必须调用 refresh 才能正常工作。它的内部主要会调用 12 个方法，我们把它们称为 refresh 的 12 个步骤：</p>\n<ol>\n<li>\n<p>prepareRefresh</p>\n</li>\n<li>\n<p>obtainFreshBeanFactory</p>\n</li>\n<li>\n<p>prepareBeanFactory</p>\n</li>\n<li>\n<p>postProcessBeanFactory</p>\n</li>\n<li>\n<p>invokeBeanFactoryPostProcessors</p>\n</li>\n<li>\n<p>registerBeanPostProcessors</p>\n</li>\n<li>\n<p>initMessageSource</p>\n</li>\n<li>\n<p>initApplicationEventMulticaster</p>\n</li>\n<li>\n<p>onRefresh</p>\n</li>\n<li>\n<p>registerListeners</p>\n</li>\n<li>\n<p>finishBeanFactoryInitialization</p>\n</li>\n<li>\n<p>finishRefresh</p>\n</li>\n</ol>",r:{minutes:26.83,words:8050},t:"框架篇",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/",{loader:()=>l.e(81594).then(l.bind(l,66445)),meta:{e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在文档中对所有的面试题都进行了<strong>难易程度</strong>和<strong>出现频率</strong>的等级说明</p>\n<p>星数越多代表权重越大，最多五颗星（☆☆☆☆☆） 最少一颗星（☆）</p>\n</div>\n<h2>线程的基础知识</h2>\n',r:{minutes:.21,words:62},t:"08并发编程",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html",{loader:()=>l.e(11592).then(l.bind(l,12384)),meta:{e:'\n<h2>今日内容</h2>\n<ul>\n<li>抽象类</li>\n<li>接口</li>\n<li>内部类</li>\n</ul>\n<h2>教学目标</h2>\n<ul class="task-list-container">\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 能够写出抽象类的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 能够写出抽象方法的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 能说出抽象类的应用场景</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 写出定义接口的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 写出实现接口的格式</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 说出接口中成员的特点</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 能说出接口的应用场景</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 能说出接口中为什么会出现带有方法体的方法</label></li>\n<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 能完成适配器设计模式</label></li>\n</ul>',r:{minutes:18.22,words:5466},t:"面向对象进阶",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html",{loader:()=>l.e(46683).then(l.bind(l,39938)),meta:{e:"\n<h2>1.抽象类的作用是什么样的？</h2>\n<ul>\n<li>抽取共性时，无法确定方法体，就把方法定义为抽象的。</li>\n<li>强制让子类按照某种格式重写。</li>\n<li>抽象方法所在的类，必须是抽象类。</li>\n</ul>\n<hr>\n<h2>2.抽象类和抽象方法的格式？</h2>\n<ul>\n<li><code>public abstract 返回值类型 方法名（参数列表);</code></li>\n<li>``public abstract class 类名{}`</li>\n</ul>\n<hr>\n<h2>3.继承抽象类有哪些要注意？</h2>\n<ul>\n<li>要么重写抽象类中的所有抽象方法</li>\n<li>要么是抽象类</li>\n</ul>",r:{minutes:2.19,words:657},t:"课堂笔记",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/%E9%9B%86%E5%90%8801.html",{loader:()=>l.e(47755).then(l.bind(l,58172)),meta:{e:"\n<h2>1.1数组和集合的区别【理解】</h2>\n<ul>\n<li>\n<p>相同点</p>\n<p>都是容器,可以存储多个数据</p>\n</li>\n<li>\n<p>不同点</p>\n<ul>\n<li>\n<p>数组的长度是不可变的,集合的长度是可变的</p>\n</li>\n<li>\n<p>数组可以存基本数据类型和引用数据类型</p>\n<p>集合只能存引用数据类型,如果要存基本数据类型,需要存对应的包装类</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>1.2集合类体系结构【理解】</h2>\n<figure><figcaption>01_集合类体系结构图</figcaption></figure>",r:{minutes:11.62,words:3487},t:"1.Collection集合",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html",{loader:()=>l.e(69312).then(l.bind(l,16157)),meta:{e:'\n<h2>1.1泛型概述</h2>\n<ul>\n<li>\n<p>泛型的介绍</p>\n<p>​\t泛型是JDK5中引入的特性，它提供了编译时类型安全检测机制</p>\n</li>\n<li>\n<p>泛型的好处</p>\n<ol>\n<li>把运行时期的问题提前到了编译期间</li>\n<li>避免了强制类型转换</li>\n</ol>\n</li>\n<li>\n<p>泛型的定义格式</p>\n<ul>\n<li><code>&lt;类型&gt;</code>: 指定一种类型的格式.尖括号里面可以任意书写,一般只写一个字母.例如: <code>&lt;E&gt; &lt;T&gt;</code></li>\n<li><code>&lt;类型1,类型2…&gt;</code>: 指定多种类型的格式,多种类型之间用逗号隔开.例如: <code>&lt;E,T&gt; &lt;K,V&gt;</code></li>\n</ul>\n<p>🔥泛型就是为了统一集合中的类型</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// extends:同一个长辈的数据允许进集合</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// super:同一个子辈的数据允许进集合</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> extends Ye</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> list) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> method2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ArrayList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Zi</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> list) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:11.63,words:3489},t:"1.泛型",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html",{loader:()=>l.e(91837).then(l.bind(l,5003)),meta:{e:"\n<h2>1.1 什么是不可变集合</h2>\n<p>​\t是一个长度不可变，内容也无法修改的集合</p>\n<h2>1.2 使用场景</h2>\n<p>​\t如果某个数据不能被修改，把它防御性地拷贝到不可变集合中是个很好的实践。</p>\n<p>​\t当集合对象被不可信的库调用时，不可变形式是安全的。</p>\n<p>简单理解：</p>\n<p>​\t不想让别人修改集合中的内容</p>\n<p>比如说：</p>\n<p>1，斗地主的54张牌，是不能添加，不能删除，不能修改的</p>\n<p>2，斗地主的打牌规则：单张，对子，三张，顺子等，也是不能修改的</p>\n<p>3，用代码获取的操作系统硬件信息，也是不能被修改的</p>",r:{minutes:17.29,words:5188},t:"1.不可变集合",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html",{loader:()=>l.e(80490).then(l.bind(l,76980)),meta:{d:1740528e6,l:"2025年2月26日",c:["Java高级"],g:["多线程","阅读完毕"],e:"<h2>1.实现多线程</h2>\n<h3>1.1简单了解多线程【理解】</h3>\n<p>是指从软件或者硬件上实现多个线程并发执行的技术。\n具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。</p>\n",r:{minutes:20.77,words:6230},t:"",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html",{loader:()=>l.e(51571).then(l.bind(l,99165)),meta:{e:'<h2>1. 线程池</h2>\n<h3>1.1 线程状态介绍</h3>\n<p>当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程</p>\n<p>状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 新建 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        NEW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 可运行状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        RUNNABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 阻塞状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        BLOCKED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 无限等待状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 计时等待 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TIMED_WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 终止 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TERMINATED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">\t}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取当前线程的状态</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">internal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">misc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">VM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toThreadState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(threadStatus);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:34.03,words:10208},t:"",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%80%BB%E7%BB%93.html",{loader:()=>l.e(65203).then(l.bind(l,30536)),meta:{e:"\n<h3>1.什么是多线程？</h3>\n<p>有了多线程，可以让程序做多件事情</p>\n<h3>2.多线程的作用？</h3>\n<p>提高效率</p>\n<h3>3.多线程的应用场景？</h3>\n<p>只要你想要多个事情同时运行就需要用到多线程</p>\n<p>比如：软件中的耗时操作，所有的聊天软件，所有的服务器</p>\n<h3>4.并发和并行</h3>\n<p>并发：在同一时刻，有多个指令在单个CPU上<code>交替</code>执行</p>\n<p>并行：在同一时刻，有多个指令在多个CPU上<code>同时</code>执行</p>\n<h3>5.守护线程</h3>\n<p><code>备胎线程</code></p>",r:{minutes:2.13,words:639},t:"多线程总结",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",{loader:()=>l.e(41655).then(l.bind(l,69128)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java高级"],g:["反射动态代理"],e:"\n<h2>1.1 反射的概述：</h2>\n<p>​\t<strong>专业的解释（了解一下）：</strong></p>\n<p>​       是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；</p>\n<p>​       对于任意一个对象，都能够调用它的任意属性和方法；</p>\n<p>​       这种动态获取信息以及动态调用对象方法的功能称为Java语言的反射机制。</p>\n<p>​\t<strong>通俗的理解：（掌握）</strong></p>\n<ul>\n<li>\n<p>利用<strong>反射</strong>创建的对象<strong>可以无视修饰符</strong>调用类里面的内容</p>\n</li>\n<li>\n<p>可以跟<strong>配置文件结合起来使用</strong>，把要创建的对象信息和方法写在配置文件中。</p>\n<p>读取到什么类，就创建什么类的对象</p>\n<p>读取到什么方法，就调用什么方法</p>\n<p>此时当需求变更的时候不需要修改代码，只要修改配置文件即可。</p>\n</li>\n</ul>\n",r:{minutes:19.23,words:5769},t:"1. 反射",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(9134).then(l.bind(l,46494)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["反射"],e:"\n<p>在 <strong>反射机制</strong> 中，它们的区别在于可以访问的字段类型和访问权限。具体区别如下：</p>\n",r:{minutes:1.67,words:500},t:"getDeclaredField()和getField()区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(27850).then(l.bind(l,11150)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["反射"],e:"\n<blockquote>\n<p><code>getMethods()</code> 和 <code>getDeclaredMethods()</code> 都是 Java 反射中 <code>Class</code> 类的方法，用于获取类中定义的方法。它们之间的主要区别在于<strong>访问权限</strong>和<strong>方法范围</strong>。下面是它们的区别详细解释：</p>\n</blockquote>\n",r:{minutes:1.94,words:582},t:"getMethods()和getDeclaredMethods()的区别",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html",{loader:()=>l.e(90279).then(l.bind(l,93450)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["高级特性","总结","面试题"],e:'\n<h2>反射</h2>\n<h3>1.反射的作用</h3>\n<p>①获取任意一个类中的所有信息</p>\n<p>②结合配置文件动态创建对象</p>\n<h3>2.获得class字节码文件对象的三种方式</h3>\n<p>①Class.forName("全类名")</p>\n<p>②类名.class</p>\n<p>③对象的.getClass</p>\n<h3>3.如何获取构造方法、成员方法、成员变量</h3>\n<ul>\n<li>get:获取</li>\n<li>set:设置</li>\n<li>Constructor:构造方法</li>\n<li>Parameter:参数</li>\n<li>Field:成员变量</li>\n<li>Modifiers:修饰符</li>\n<li>Method:方法</li>\n<li>Declared:私有的</li>\n</ul>',r:{minutes:.8,words:240},t:"反射&动态代理总结",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html",{loader:()=>l.e(93284).then(l.bind(l,37318)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["SE基础"],e:"\n<blockquote>\n<p><strong>反射</strong>是Java语言的一种强大功能，它允许程序在运行时查询和操作类、方法、字段、构造函数等信息。反射机制使得程序能够在运行时获取有关类和对象的详细信息，甚至动态创建对象、调用方法、访问字段等。</p>\n</blockquote>\n",r:{minutes:2.51,words:753},t:"Java中的反射 (Reflection)",i:"fa-brands fa-java",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html",{loader:()=>l.e(37759).then(l.bind(l,77759)),meta:{d:17391456e5,l:"2025年2月10日",c:["Java"],g:["SE基础"],e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在Java虚拟机（JVM）中，每当一个类被加载时，JVM会为该类创建一个字节码对象，类型为<code>Class</code>，用于存储类的结构信息（比如类名、字段信息、方法信息等）。字节码对象是反射机制的基础，可以通过它动态地获取和操作类的信息。</p>\n</div>\n',r:{minutes:1.98,words:593},t:"字节码对象",i:"fa-brands fa-java",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html",{loader:()=>l.e(51295).then(l.bind(l,35991)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["接口文档"],e:"\n<blockquote>\n<p><code>MetaObjectHandler</code> 接口是一个与 MyBatis-Plus 插件相关的接口，主要用于插入和更新操作中自动填充字段的处理。此接口提供了一系列的方法，供开发者在处理数据库操作时动态填充字段值。以下是接口的详细说明及方法文档。</p>\n</blockquote>\n",r:{minutes:4.47,words:1340},t:"MetaObjectHandler 接口文档",i:"fa-file",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html",{loader:()=>l.e(50842).then(l.bind(l,98341)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["接口示例"],e:"\n<blockquote>\n<p><code>MetaObjectHandler</code> 是 MyBatis-Plus 提供的一个接口，用于处理自动填充（自动填充字段）功能。通过实现这个接口，可以在执行插入或更新操作时，自动为指定字段填充数据，比如填充创建时间、更新时间等常见字段。</p>\n</blockquote>\n",r:{minutes:3.32,words:995},t:"MetaObjectHandler示例",i:"fa-screwdriver-wrench",y:"a"}}],["/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html",{loader:()=>l.e(938).then(l.bind(l,85524)),meta:{d:17361216e5,l:"2025年1月6日",c:["MyBatis-Plus"],g:["注解"],e:'\n<blockquote>\n<p><code>@TableField</code> 是 MyBatis-Plus 提供的注解，用于指定实体类字段与数据库表列之间的映射关系，并可以进行一些字段属性的控制。它的常用方法可以帮助我们灵活地配置字段的行为，特别是在执行数据库操作时，如何映射字段、处理自动填充等。</p>\n</blockquote>\n<h3><code>@TableField</code> 常用属性总结</h3>\n<ol>\n<li>\n<p><strong>value</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段对应的数据库表列名。</li>\n<li><strong>类型</strong>：<code>String</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"user_name"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>exist</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定该字段是否参与数据库映射。默认值是 <code>true</code>，表示该字段会参与数据库操作。</li>\n<li><strong>类型</strong>：<code>boolean</code>（默认为 <code>true</code>）</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">exist</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tempField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 该字段不会映射到数据库</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>fill</strong>:</p>\n<ul>\n<li>\n<p><strong>说明</strong>：指定字段的自动填充策略，可以通过 <code>FieldFill</code> 枚举来设置填充操作的时机。</p>\n</li>\n<li>\n<p><strong>类型</strong>：<code>FieldFill</code></p>\n</li>\n<li>\n<p><strong>常用值</strong>：</p>\n<ul>\n<li><code>FieldFill.INSERT</code>: 插入时填充。</li>\n<li><code>FieldFill.UPDATE</code>: 更新时填充。</li>\n<li><code>FieldFill.INSERT_UPDATE</code>: 插入或更新时填充。</li>\n<li><code>FieldFill.DEFAULT</code>: 默认行为，通常不进行自动填充。</li>\n</ul>\n</li>\n<li>\n<p><strong>示例</strong>：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">fill</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldFill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">INSERT</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Long</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 只在插入时自动填充</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>updateStrategy</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定更新时的策略。主要用于在更新操作时，决定是否更新该字段。</li>\n<li><strong>类型</strong>：<code>FieldStrategy</code></li>\n<li><strong>常用值</strong>：\n<ul>\n<li><code>FieldStrategy.NOT_NULL</code>: 更新时只有非 <code>null</code> 的字段才会更新。</li>\n<li><code>FieldStrategy.IGNORED</code>: 更新时忽略该字段。</li>\n<li><code>FieldStrategy.NOT_EMPTY</code>: 更新时只有字段非空时才会更新。</li>\n<li><code>FieldStrategy.DEFAULT</code>: 默认行为。</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">updateStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NOT_NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 更新时仅当该字段不为null时才会更新</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>insertStrategy</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定插入时的策略。与 <code>updateStrategy</code> 类似，但它是在插入操作时生效的。</li>\n<li><strong>类型</strong>：<code>FieldStrategy</code></li>\n<li><strong>常用值</strong>：\n<ul>\n<li><code>FieldStrategy.NOT_NULL</code>: 插入时只有非 <code>null</code> 的字段才会插入。</li>\n<li><code>FieldStrategy.IGNORED</code>: 插入时忽略该字段。</li>\n<li><code>FieldStrategy.NOT_EMPTY</code>: 插入时只有字段非空时才会插入。</li>\n<li><code>FieldStrategy.DEFAULT</code>: 默认行为。</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">insertStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> FieldStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">NOT_NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> email</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 插入时仅当该字段不为null时才会插入</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>select</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定该字段在查询时是否参与查询操作。默认为 <code>true</code>，表示该字段会参与查询。</li>\n<li><strong>类型</strong>：<code>boolean</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">select</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 查询时不包含该字段</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>typeHandler</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段使用的 <code>TypeHandler</code>，用于处理数据库类型与 Java 类型之间的转换。一般用于特殊类型的字段，例如枚举类型、JSON 类型等。</li>\n<li><strong>类型</strong>：<code>Class&lt;? extends TypeHandler&lt;?&gt;&gt;</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">typeHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> MyEnumTypeHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyEnum</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 自定义 TypeHandler 用于 MyEnum 类型的字段</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n<li>\n<p><strong>el</strong>:</p>\n<ul>\n<li><strong>说明</strong>：指定字段在 SQL 语句中是否作为 <code>null</code> 使用。可选值为：\n<ul>\n<li><code>true</code>：字段在 SQL 中作为 <code>null</code> 处理。</li>\n<li><code>false</code>：字段在 SQL 中不会作为 <code>null</code> 使用。</li>\n</ul>\n</li>\n<li><strong>类型</strong>：<code>boolean</code></li>\n<li><strong>示例</strong>：<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">TableField</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">el</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "status!=null"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 如果 status 不为 null 则会在 SQL 语句中作为字段插入</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>\n</li>\n</ol>',r:{minutes:3.35,words:1004},t:"@TableField",i:"fa-solid fa-hashtag",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%85%A5%E5%8F%82%E5%A4%84%E7%90%86%E5%88%87%E9%9D%A2.html",{loader:()=>l.e(39775).then(l.bind(l,8239)),meta:{e:'\n<h2>1 需求分析</h2>\n<p>需求: 对百度网盘分享链接输入密码时尾部多输入的空格做兼容处理。</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504102255551.png" alt="1630240203033" tabindex="0" loading="lazy"><figcaption>1630240203033</figcaption></figure>\n<p>问题描述:</p>\n<ul>\n<li>\n<p>点击链接，会提示，请输入提取码，如下图所示</p>\n<figure><img src="https://felix-docs.oss-cn-beijing.aliyuncs.com/gitblogimg/202504102255523.png" alt="1630240528228" tabindex="0" loading="lazy"><figcaption>1630240528228</figcaption></figure>\n</li>\n<li>\n<p>当我们从别人发给我们的内容中复制提取码的时候，有时候会多复制到一些空格，直接粘贴到百度的提取码输入框</p>\n</li>\n<li>\n<p>但是百度那边记录的提取码是没有空格的</p>\n</li>\n<li>\n<p>这个时候如果不做处理，直接对比的话，就会引发提取码不一致，导致无法访问百度盘上的内容</p>\n</li>\n<li>\n<p>所以多输入一个空格可能会导致项目的功能无法正常使用。</p>\n</li>\n<li>\n<p>此时我们就想能不能将输入的参数先帮用户去掉空格再操作呢?</p>\n</li>\n</ul>',r:{minutes:3.61,words:1084},t:"百度网盘密码数据兼容处理",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%88%87%E9%9D%A2.html",{loader:()=>l.e(76142).then(l.bind(l,42648)),meta:{e:'\n<h2>环境准备</h2>\n<ul>\n<li>\n<p>创建一个Maven项目</p>\n</li>\n<li>\n<p>pom.xml添加Spring依赖</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-context&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.2.10.RELEASE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-jdbc&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.2.10.RELEASE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.2.10.RELEASE&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.aspectj&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;aspectjweaver&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.9.4&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mysql&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mysql-connector-java&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;5.1.47&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;com.alibaba&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;druid&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.1.16&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.mybatis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mybatis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;3.5.6&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.mybatis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;mybatis-spring&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;1.3.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;4.12&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>添加AccountService、AccountServiceImpl、AccountDao与Account类</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Account</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Service</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountServiceImpl</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autowired</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountDao</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(account);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(account);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(id);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Account</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(id);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountDao</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Insert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"insert into tbl_account(name,money)values(#{name},#{money})"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Delete</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"delete from tbl_account where id = #{id} "</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> delete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Update</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"update tbl_account set name = #{name} , money = #{money} where id = #{id} "</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Select</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"select * from tbl_account"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Select</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"select * from tbl_account where id = #{id} "</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Account</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Account</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Serializable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Double</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> money</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //setter..getter..toString方法省略</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>resources下提供一个jdbc.properties</p>\n<div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">com.mysql.jdbc.Driver</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">jdbc:mysql://localhost:3306/spring_db?</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">useSSL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">false</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">root</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">jdbc.password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">root</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>创建相关配置类</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//Spring配置类:SpringConfig</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Configuration</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ComponentScan</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.itheima"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">PropertySource</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"classpath:jdbc.properties"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Import</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">JdbcConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MybatisConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SpringConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//JdbcConfig配置类</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> JdbcConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.driver}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.url}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.username}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> userName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"${jdbc.password}"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DataSource</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        DruidDataSource</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> DruidDataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDriverClassName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(driver);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(url);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setUsername</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(userName);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(password);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ds;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//MybatisConfig配置类</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MybatisConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SqlSessionFactoryBean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sqlSessionFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DataSource</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> dataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        SqlSessionFactoryBean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ssfb</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SqlSessionFactoryBean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ssfb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTypeAliasesPackage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.itheima.domain"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        ssfb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setDataSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dataSource);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ssfb;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Bean</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MapperScannerConfigurer</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mapperScannerConfigurer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        MapperScannerConfigurer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> msc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MapperScannerConfigurer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        msc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setBasePackage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.itheima.dao"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> msc;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>编写Spring整合Junit的测试类</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RunWith</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">SpringJUnit4ClassRunner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ContextConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">classes</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> SpringConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountServiceTestCase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autowired</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AccountService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testFindById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Account</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ac</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testFindAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">all</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> accountService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">findAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ul>',r:{minutes:3.67,words:1101},t:"性能监控切面",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84.html",{loader:()=>l.e(61263).then(l.bind(l,58921)),meta:{e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Aspect</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Component</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyAspect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 定义切点，拦截所有的请求，但排除特定路径</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"execution(* com.example.controller.*.*(..)) &amp;&amp; !execution(* com.example.controller.ExcludedController.*(..))"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 切点定义</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 在切点上增加通知</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Before</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pointcut()"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">JoinPoint</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> joinPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // 你的逻辑代码</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Before method execution: "</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> joinPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSignature</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.26,words:78},t:"日志切面排除路径",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/Spring_day01.html",{loader:()=>l.e(53495).then(l.bind(l,13990)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>掌握Spring相关概念</li>\n<li>完成IOC/DI的入门案例编写</li>\n<li>掌握IOC的相关配置与使用</li>\n<li>掌握DI的相关配置与使用</li>\n</ul>\n</blockquote>\n<h2>1，课程介绍</h2>\n<p>对于一门新技术，我们需要从<code>为什么要学</code>、<code>学什么</code>以及<code>怎么学</code>这三个方向入手来学习。那对于Spring来说:</p>\n",r:{minutes:51.89,words:15566},t:"Spring_day01",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/Spring_day02.html",{loader:()=>l.e(60737).then(l.bind(l,67335)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>掌握IOC/DI配置管理第三方bean</li>\n<li>掌握IOC/DI的注解开发</li>\n<li>掌握IOC/DI注解管理第三方bean</li>\n<li>完成Spring与Mybatis及Junit的整合开发</li>\n</ul>\n</blockquote>\n<h2>1，IOC/DI配置管理第三方bean</h2>\n<p>前面所讲的知识点都是基于我们自己写的类，现在如果有需求让我们去管理第三方jar包中的类，该如何管理?</p>\n",r:{minutes:42.96,words:12887},t:"Spring_day02",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/Spring_day03.html",{loader:()=>l.e(84983).then(l.bind(l,34093)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>理解并掌握AOP相关概念</li>\n<li>能够说出AOP的工作流程</li>\n<li>能运用AOP相关知识完成对应的案例编写</li>\n<li>重点掌握Spring的声明式事务管理</li>\n</ul>\n</blockquote>\n",r:{minutes:55.11,words:16533},t:"Spring_day03",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E6%B3%A8%E8%A7%A3.html",{loader:()=>l.e(66436).then(l.bind(l,58133)),meta:{e:"\n<h2>AOP</h2>\n<h3>@PropertySource</h3>\n<p>用于指定外部的配置文件路径，并将文件中的属性加载到 Spring 的 Environment 中，方便在应用程序中使用</p>\n<h3>@Import</h3>\n<p>可以帮助你将多个配置类模块化地导入到一个主配置类中，避免单一配置类过于庞大</p>\n<h3>@RunWith</h3>\n<p><code>@RunWith</code> 的作用是为测试类指定一个自定义的 <strong>Test Runner</strong>，JUnit 默认使用的运行器<code>BlockJUnit4ClassRunner</code>，但可以通过 <code>@RunWith</code> 来指定其他的测试运行器</p>",r:{minutes:1.93,words:579},t:"Spring注解",y:"a"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E9%9A%8F%E7%AC%94.html",{loader:()=>l.e(43986).then(l.bind(l,30244)),meta:{e:'\n<h2>AOP</h2>\n<h3>AOP通知获取数据</h3>\n<p><code> @Before("pt()")</code>获取参数使用<code>JoinPoint</code></p>\n<p><code> @Around("pt()")</code>获取次参数使用<code>ProceedingJoinPoint</code></p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Component</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Aspect</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyAdvice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Pointcut</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"execution(* com.itheima.dao.BookDao.findName(..))"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Before</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pt()"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">JoinPoint</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> jp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        Object[] args = jp.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        System.out.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(args));</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">        System.out.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"before advice ..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Around</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"pt()"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> around</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ProceedingJoinPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> pjp)throws Throwable {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] args </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> pjp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(args));</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ret </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> pjp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">proceed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> ret</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t//其他的略</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.37,words:411},t:"Spring随笔",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/SpringMVC_day01.html",{loader:()=>l.e(16774).then(l.bind(l,68139)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>理解SpringMVC相关概念</li>\n<li>完成SpringMVC的入门案例</li>\n<li>学会使用PostMan工具发送请求和数据</li>\n<li>掌握SpringMVC如何接收请求、数据和响应结果</li>\n<li>掌握RESTful风格及其使用</li>\n<li>完成基于RESTful的案例编写</li>\n</ul>\n</blockquote>\n<p>SpringMVC是隶属于Spring框架的一部分，主要是用来进行Web开发，是对Servlet进行了封装。</p>\n<p>对于SpringMVC我们主要学习如下内容:</p>\n",r:{minutes:50.77,words:15230},t:"SpringMVC_day01",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/SpringMVC_day02.html",{loader:()=>l.e(10806).then(l.bind(l,61774)),meta:{d:17455392e5,l:"2025年4月25日",c:["Spring"],g:["讲义","阅读完毕"],e:"\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>完成SSM的整合开发</li>\n<li>能够理解并实现统一结果封装与统一异常处理</li>\n<li>能够完成前后台功能整合开发</li>\n<li>掌握拦截器的编写</li>\n</ul>\n</blockquote>\n",r:{minutes:38.2,words:11459},t:"SpringMVC_day02",i:"fa-solid fa-leaf",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E6%B3%A8%E8%A7%A3.html",{loader:()=>l.e(94555).then(l.bind(l,4799)),meta:{e:"\n<h2>@EnableWebMvc</h2>\n<p><code>@EnableWebMvc</code> 注解会启用 Spring MVC 的默认配置，包括：</p>\n<ul>\n<li><strong>配置 DispatcherServlet</strong>：Spring MVC 的核心控制器，负责处理 HTTP 请求。</li>\n<li><strong>启用视图解析器</strong>：默认的 <code>InternalResourceViewResolver</code>，用于解析 JSP 或其他视图。</li>\n<li><strong>启用注解驱动的控制器</strong>：允许使用 <code>@Controller</code>, <code>@RequestMapping</code> 等注解来定义请求处理方法。</li>\n<li><strong>启用消息转换器</strong>：支持请求和响应的 JSON、XML 等格式的转换。</li>\n</ul>",r:{minutes:.51,words:153},t:"SpringMVC注解",y:"a"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E9%9A%8F%E7%AC%94.html",{loader:()=>l.e(89785).then(l.bind(l,75637)),meta:{e:"\n<h2>1.servlet的坐标为什么需要添加<code>&lt;scope&gt;provided&lt;/scope&gt;</code>?</h2>\n<ul>\n<li>\n<p>scope是maven中jar包依赖作用范围的描述，</p>\n</li>\n<li>\n<p>如果不设置默认是<code>compile</code>在在编译、运行、测试时均有效</p>\n</li>\n<li>\n<p>如果运行有效的话就会和<code>tomcat中</code>的<code>servlet-api</code>包发生冲突，导致启动报错</p>\n</li>\n<li>\n<p>provided代表的是该包只在编译和测试的时候用，运行的时候无效直接使用<code>tomcat</code>中的，就避免冲突</p>\n</li>\n</ul>",r:{minutes:1.03,words:309},t:"SpringMVC随笔",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/packaging%E7%B1%BB%E5%9E%8B.html",{loader:()=>l.e(20598).then(l.bind(l,86749)),meta:{e:'\n<ol>\n<li>\n<p><strong><code>jar</code></strong>（默认值）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 JAR 文件（Java ARchive），适用于普通的 Java 库项目。</li>\n<li><strong>用途</strong>：适用于普通的 Java 应用程序或库项目。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;jar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>war</code></strong>（Web Application Archive）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 WAR 文件（Web ARchive），用于 Web 应用程序。</li>\n<li><strong>用途</strong>：适用于基于 Servlet 的 Web 应用程序或使用类似 Spring MVC 的 Web 框架。启动Tomcat服务器时需要改为此类型</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;war&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>ear</code></strong>（Enterprise ARchive）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 EAR 文件（Enterprise ARchive），用于企业级 Java 应用，包含多个模块（如 EJB、Web 模块等）。</li>\n<li><strong>用途</strong>：适用于 Java EE（企业版）应用程序。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;ear&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>pom</code></strong></p>\n<ul>\n<li><strong>描述</strong>：用于 Maven 的父项目，通常不构建任何产物，只是作为项目的管理和依赖的容器。</li>\n<li><strong>用途</strong>：用于构建和管理多个子模块的父项目，常用于多模块的 Maven 项目。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;pom&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>maven-plugin</code></strong></p>\n<ul>\n<li><strong>描述</strong>：用于构建 Maven 插件。</li>\n<li><strong>用途</strong>：当你要创建一个自定义的 Maven 插件时，使用这个 <code>packaging</code> 类型。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;maven-plugin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>bundle</code></strong></p>\n<ul>\n<li><strong>描述</strong>：用于创建 OSGi（开放服务网格）包，通常用于模块化的 Java 应用程序。</li>\n<li><strong>用途</strong>：适用于 OSGi 模块化框架。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;bundle&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>ejb</code></strong>（Enterprise JavaBeans）</p>\n<ul>\n<li><strong>描述</strong>：生成一个 EJB 模块，适用于包含 EJB 组件的企业级应用。</li>\n<li><strong>用途</strong>：适用于 Java EE 应用程序中的 EJB 模块。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;ejb&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>zip</code></strong></p>\n<ul>\n<li><strong>描述</strong>：生成一个 ZIP 文件，通常用于将项目打包为压缩文件。</li>\n<li><strong>用途</strong>：适用于需要将项目以压缩格式分发的情况。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;zip&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>tar</code></strong></p>\n<ul>\n<li><strong>描述</strong>：生成一个 TAR 文件（类似 ZIP 文件），适用于打包为 TAR 格式。</li>\n<li><strong>用途</strong>：适用于类似于 <code>zip</code>，但是打包成 tar 格式的场景。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;tar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong><code>rar</code></strong>（Resource Adapter Archive）</p>\n<ul>\n<li><strong>描述</strong>：用于生成资源适配器的归档文件。</li>\n<li><strong>用途</strong>：适用于 Java EE 的资源适配器（JCA）项目。</li>\n</ul>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;rar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:1.69,words:507},t:"packaging 类型",y:"a"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/pom%E4%B8%AD%E7%9A%84relativePath.html",{loader:()=>l.e(25465).then(l.bind(l,76641)),meta:{e:'\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;spring-boot-starter-parent&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;2.6.6&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">relativePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.39,words:118},t:"Pom中的relativePath",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Centos7%E5%AE%89%E8%A3%85Docker.html",{loader:()=>l.e(8368).then(l.bind(l,38068)),meta:{e:'\n<p>Docker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。</p>\n<p>Docker CE 分为 <code>stable</code> <code>test</code> 和 <code>nightly</code> 三个更新频道。</p>\n<p>官方网站上有各种环境下的 <a href="https://docs.docker.com/install/" target="_blank" rel="noopener noreferrer">安装指南</a>，这里主要介绍 Docker CE 在 CentOS上的安装。</p>',r:{minutes:3.08,words:923},t:"0.安装Docker",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Docker%E5%AE%9E%E7%94%A8%E7%AF%87.html",{loader:()=>l.e(39552).then(l.bind(l,2357)),meta:{e:"\n<h1>0.学习目标</h1>\n<h1>1.初识Docker</h1>\n<h2>1.1.什么是Docker</h2>\n<p>微服务虽然具备各种各样的优势，但服务的拆分通用给部署带来了很大的麻烦。</p>\n<ul>\n<li>分布式系统中，依赖的组件非常多，不同组件之间部署时往往会产生一些冲突。</li>\n<li>在数百上千台服务中重复部署，环境不一定一致，会遇到各种问题</li>\n</ul>\n<h3>1.1.1.应用部署的环境问题</h3>\n<p>大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题：</p>\n<ul>\n<li>\n<p>依赖关系复杂，容易出现兼容性问题</p>\n</li>\n<li>\n<p>开发、测试、生产环境有差异</p>\n</li>\n</ul>",r:{minutes:22.5,words:6750},t:"Docker实用篇",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/1.%E4%BB%80%E4%B9%88%E6%98%AFES.html",{loader:()=>l.e(28151).then(l.bind(l,48477)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>什么是elasticsearch?</p>\n<ul>\n<li>一个开源的分布式搜索引擎，可以用来实现搜索、日志统计、分析、系统监控等功能</li>\n</ul>\n<p>什么是elastic stack(ELK)?</p>\n<ul>\n<li>是以elasticsearch为核心的技术栈，包括beats、Logstash、kibana,elasticsearch</li>\n</ul>\n<p>什么是Lucene?</p>\n<ul>\n<li>是Apache的开源搜索引擎类库，提供了搜索引擎的核心APl</li>\n</ul>\n</div>\n<hr>\n',r:{minutes:6.14,words:1841},t:"1.什么是ES?",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/10.%E5%88%86%E9%A1%B5.html",{loader:()=>l.e(54907).then(l.bind(l,8641)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["重点"],e:"\n<p>Elasticsearch的分页操作原理涉及如何高效地处理和返回大量数据的不同策略，避免性能瓶颈。以下是几种常见的分页方式及其优缺点：</p>\n",r:{minutes:3.92,words:1176},t:"10.分页",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/2.%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html",{loader:()=>l.e(77166).then(l.bind(l,21920)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>每一条数据就是一个文档</li>\n<li>对文档中的内容分词，得到的词语就是词条</li>\n</ul>\n<p>什么是正向索引？</p>\n<ul>\n<li>基于文档d创建索引。查询词条时必须先找到文档，而后判断是否包含词条</li>\n</ul>\n<p>什么是倒排索引？</p>\n<ul>\n<li>对文档内容分词，对词条创建索引，并记录词条所在文档的信息。查询时先根据词条查询到文档d,而后获取到文档</li>\n</ul>\n</div>',r:{minutes:.47,words:141},t:"2.倒排索引",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/3.%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html",{loader:()=>l.e(121).then(l.bind(l,3228)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:"\n<h3><strong>基本概念</strong></h3>\n<ul>\n<li>\n<p>文档：一条数据就是一个文档，es中是)son格式</p>\n</li>\n<li>\n<p>字段：Json文档中的字段</p>\n</li>\n<li>\n<p>索引：同类型文档的集合</p>\n</li>\n<li>\n<p>映射：索引中文档的约束，比如字段名称、类型</p>\n</li>\n</ul>\n",r:{minutes:.81,words:244},t:"3.基本概念",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/4.%E5%AE%89%E8%A3%85elasticsearch.html",{loader:()=>l.e(24024).then(l.bind(l,73024)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["讲义"],e:'\n<h1>1.部署单点es</h1>\n<h2>1.1.创建网络</h2>\n<p>因为我们还需要部署kibana容器，因此需要让es和kibana容器互联。这里先创建一个网络：</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> es-net</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:5.93,words:1778},t:"4.安装elasticsearch",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/5.%E5%88%86%E8%AF%8D%E5%99%A8.html",{loader:()=>l.e(52581).then(l.bind(l,24003)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:"\n<h3>分词器的作用是什么？</h3>\n<ul>\n<li>创建倒排索引时对文档分词</li>\n<li>用户搜索时，对输入的内容分词</li>\n</ul>\n",r:{minutes:.44,words:133},t:"5.分词器",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/6.mapping%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7.html",{loader:()=>l.e(4853).then(l.bind(l,17716)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:"\n<h3>mapping常见属性有哪些？</h3>\n<ul>\n<li>type:数据类型</li>\n<li>index:是否索引</li>\n<li>analyzer:分词器</li>\n<li>properties:子字段</li>\n</ul>\n",r:{minutes:.25,words:75},t:"6.mapping常见属性",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/7.%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%BA%93.html",{loader:()=>l.e(83917).then(l.bind(l,74847)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["重点"],e:'\n<h3>示例</h3>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PUT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /heima</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  "mappings"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    "properties"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      "info"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "type"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "text",</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "analyzer"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "standard"</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      "email"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "type"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "keyword",</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "index"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      },</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      "name"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        "properties"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">          "firstName"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            "type"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">"keyword"</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.14,words:42},t:"7.创建索引库",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/8.%E5%B8%B8%E8%A7%81%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B.html",{loader:()=>l.e(68999).then(l.bind(l,67241)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["重点"],e:'\n<h3>0.查询语法</h3>\n<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">GET&nbsp;/indexName/_search</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">&nbsp;&nbsp;"query"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:&nbsp;{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">&nbsp;&nbsp;&nbsp;&nbsp;"查询类型"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:&nbsp;{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"查询条件"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:&nbsp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"条件值"</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&nbsp;&nbsp;&nbsp;&nbsp;}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&nbsp;&nbsp;}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.62,words:785},t:"8.常见查询类型",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/9.copy_to%E7%9A%84%E7%94%A8%E6%B3%95.html",{loader:()=>l.e(6078).then(l.bind(l,77149)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["重点"],e:'\n<div class="hint-container note">\n<p class="hint-container-title">注</p>\n<p>在 Elasticsearch 中，<code>copy_to</code> 是一个字段映射选项，它允许将一个字段的值复制到另一个字段。这通常用于将多个字段的内容合并到一个字段中，以便进行更高效的搜索和查询操作。<code>copy_to</code> 主要用于构建复合字段，简化查询，尤其在需要执行全文搜索时。</p>\n</div>\n',r:{minutes:2.43,words:729},t:"copy_to的用法",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",{loader:()=>l.e(38398).then(l.bind(l,27583)),meta:{d:17371584e5,l:"2025年1月18日",c:["项目"],g:["教程"],e:'\n<p><a href="https://api.bilibili.com/x/web-interface/wbi/view?bvid=BV1np4y1C7Yf">获取视频基本信息</a></p>\n<h3>学习进度</h3>\n',r:{minutes:.17,words:51},t:"视频教程",i:"fa-solid fa-play",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E01.html",{loader:()=>l.e(193).then(l.bind(l,64)),meta:{d:17371584e5,l:"2025年1月18日",c:["ES"],g:["讲义"],e:"\n<p>-- elasticsearch基础</p>\n<h1>0.学习目标</h1>\n<h1>1.初识elasticsearch</h1>\n<h2>1.1.了解ES</h2>\n<h3>1.1.1.elasticsearch的作用</h3>\n<p>elasticsearch是一款非常强大的开源搜索引擎，具备非常多强大功能，可以帮助我们从海量数据中快速找到需要的内容</p>\n",r:{minutes:22.33,words:6699},t:"讲义-分布式搜索引擎01",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E02.html",{loader:()=>l.e(31100).then(l.bind(l,37060)),meta:{d:17374176e5,l:"2025年1月21日",c:["ES"],g:["讲义"],e:"\n<p>在昨天的学习中，我们已经导入了大量数据到elasticsearch中，实现了elasticsearch的数据存储功能。但elasticsearch最擅长的还是搜索和数据分析。</p>\n<p>所以今天，我们研究下elasticsearch的数据搜索功能。我们会分别使用<strong>DSL</strong>和<strong>RestClient</strong>实现搜索。</p>\n",r:{minutes:30.57,words:9172},t:"讲义-分布式搜索引擎02",i:"fa-brands fa-searchengin",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/RabbitMQ.html",{loader:()=>l.e(25327).then(l.bind(l,83651)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud实用篇"],g:["讲义","RabbitMQ"],e:"\n<h1>1.初识MQ</h1>\n",r:{minutes:15.76,words:4729},t:"RabbitMQ",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html",{loader:()=>l.e(75396).then(l.bind(l,53335)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],g:["总结"],e:'\n<blockquote>\n<p>nacos是依附于java的，因为他的启动是一个jar文件，target下的nacos-server.jar，所以使用nacos之前必须确保java以下载，且版本是1.8以上。</p>\n</blockquote>\n<p><a href="https://github.com/alibaba/nacos/releases" target="_blank" rel="noopener noreferrer">下载链接 Releases · alibaba/nacos</a></p>\n<h2>安装</h2>\n<figure><figcaption>image-20241027184717558</figcaption></figure>',r:{minutes:.84,words:253},t:"安装与启动",i:"fa-solid fa-cloud",O:1,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",{loader:()=>l.e(47746).then(l.bind(l,68415)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:'\n<div class="language-application.properties line-numbers-mode" data-highlighter="shiki" data-ext="application.properties" data-title="application.properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 注册应用名</span></span>\n<span class="line"><span>spring.application.name=coupon</span></span>\n<span class="line"><span># 注册地址</span></span>\n<span class="line"><span>spring.cloud.nacos.discovery.server-addr=192.168.68.86:8848</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 参数</span></span>\n<span class="line"><span>coupon.user.name=zhangsan</span></span>\n<span class="line"><span>coupon.user.age=20</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.27,words:82},t:"注册中心",i:"fa-solid fa-cloud",O:2,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html",{loader:()=>l.e(85338).then(l.bind(l,15587)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],g:["总结"],e:'\n<h3>1.引入依赖</h3>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">作为配置中心</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t\t&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">starter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">nacos</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">config</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">\t\t&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:2.51,words:752},t:"如何使用Nacos作为配置中心统一管理配置",i:"fa-solid fa-cloud",O:3,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html",{loader:()=>l.e(68359).then(l.bind(l,91156)),meta:{d:173016e7,l:"2024年10月29日",c:["Nacos"],g:["总结"],e:'\n<p>application.yml</p>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    gateway</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      routes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">test_route</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">https://www.baidu.com</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Query=url,baidu</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">qq_route</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            https://www.qq.com</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          predicates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Query=url,qq</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.46,words:139},t:"网关API配置",i:"fa-solid fa-cloud",O:4,y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html",{loader:()=>l.e(55846).then(l.bind(l,77921)),meta:{e:"\n<blockquote>\n<p>Nacos在服务端启动时会出现IP地址错误导致无法访问</p>\n</blockquote>\n<ol>\n<li>\n<p>进入Nacos安装目录</p>\n<figure><figcaption>image-20241117112715049</figcaption></figure>\n</li>\n<li>\n<p><code>vim conf/application.properties</code>，修改所示配置项的IP地址。<code>:x</code>退出</p>\n<figure><figcaption>image-20241117112858652</figcaption></figure>\n</li>\n<li>\n<p>重启Nacos服务：使用单例模式启动 <code>./startup.sh -m standalone</code></p>\n</li>\n<li>\n<p>查看启动信息<code>view logs/start.out</code> <strong>IP地址修改成功</strong></p>\n</li>\n</ol>",r:{minutes:.4,words:121},t:"指定Nacos的服务端IP",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/",{loader:()=>l.e(12565).then(l.bind(l,44050)),meta:{d:17299872e5,l:"2024年10月27日",c:["Nacos"],e:"\n",r:{minutes:.04,words:12},t:"Nacos",i:"fa-solid fa-cloud",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/1.MAC%E5%AE%89%E8%A3%85JMeter.html",{loader:()=>l.e(90398).then(l.bind(l,87941)),meta:{e:'\n<h2>一、下载JMeter</h2>\n<ul>\n<li><strong>最新版本</strong>：<a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener noreferrer">JMeter 官方下载</a></li>\n<li><strong>历史版本</strong>：<a href="https://archive.apache.org/dist/jmeter/binaries/" target="_blank" rel="noopener noreferrer">JMeter 历史版本下载</a></li>\n</ul>',r:{minutes:.83,words:248},t:"1.MAC安装JMeter",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/2.Jmeter%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",{loader:()=>l.e(56881).then(l.bind(l,91028)),meta:{e:"\n<h1>1.安装Jmeter</h1>\n<p>Jmeter依赖于JDK，所以必须确保当前计算机上已经安装了JDK，并且配置了环境变量。</p>\n<h2>1.1.下载</h2>\n<p>可以Apache Jmeter官网下载，地址：http://jmeter.apache.org/download_jmeter.cgi</p>\n<figure><figcaption>image-20210715193149837</figcaption></figure>\n<p>当然，我们课前资料也提供了下载好的安装包：</p>\n<figure><figcaption>image-20210715193224094</figcaption></figure>",r:{minutes:1.42,words:426},t:"Jmeter快速入门",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html",{loader:()=>l.e(23771).then(l.bind(l,60963)),meta:{e:'\n<h2>一、修改order-service服务</h2>\n<p>修改OrderService，让其监听Nacos中的sentinel规则配置。</p>\n<p>具体步骤如下：</p>\n<h3>1.引入依赖</h3>\n<p>在order-service中引入sentinel监听nacos的依赖：</p>\n<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;com.alibaba.csp&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;sentinel-datasource-nacos&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.76,words:527},t:"Sentinel 规则持久化",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html",{loader:()=>l.e(74751).then(l.bind(l,44054)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务"],e:"\n<ul>\n<li><strong>TM（事务管理器）</strong>：在事务开始时负责启动和管理事务生命周期，协调全局事务的进展。</li>\n<li><strong>TC（事务协调者）</strong>：决定全局事务的提交或回滚，并协调所有 <strong>RM</strong> 的操作。</li>\n<li><strong>RM（资源管理器）</strong>：执行本地事务操作，记录操作日志，按照 <strong>TC</strong> 的指令执行提交或回滚。</li>\n</ul>\n",r:{minutes:.41,words:122},t:"TC,TM,RM",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata1.4.2%E5%8D%87%E7%BA%A72.0.0%E6%B3%A8%E6%84%8F%E7%82%B9.html",{loader:()=>l.e(37873).then(l.bind(l,29597)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务"],e:'\n<ol>\n<li>\n<p>lock_table中status字段缺失要补上</p>\n</li>\n<li>\n<p>客户端配置项中，特别注意<code>seata.registry.application</code>配置的要与<code>seata-server</code>在Nacos中注册的服务名一致</p>\n<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">seata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 注册中心</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 参考tc服务自己的registry.conf中的配置</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nacos</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    nacos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># tc</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      server-addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">81.70.62.114:8848</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">DEFAULT_GROUP</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">      # 注意这个地方一定与Nacos中注册的tc服务名一致！！！！</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">seata-server</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # tc服务在nacos中的服务名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      cluster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SH</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  tx-service-group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">seata-demo</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 事务组，根据这个获取tc服务的cluster名称</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    vgroup-mapping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 事务组与TC服务cluster的映射关系</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      seata-demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SH</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>',r:{minutes:.7,words:211},t:"seata1.4.2升级2.0.0注意点",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.html",{loader:()=>l.e(55394).then(l.bind(l,35954)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["阅读完毕","讲义","Seata","分布式事务","微服务"],e:'\n<h1>一、部署Seata的tc-server</h1>\n<h2>1.下载</h2>\n<p>首先我们要下载seata-server包，<a href="http://seata.io/zh-cn/blog/download.html" target="_blank" rel="noopener noreferrer">下载地址</a></p>\n<p>当然，课前资料也准备好了：</p>\n<figure><figcaption>image-20210622202357640</figcaption></figure>\n',r:{minutes:5.49,words:1646},t:"seata的部署和集成",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E5%9B%9B%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html",{loader:()=>l.e(33526).then(l.bind(l,96959)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务"],e:"\n<h2>1. XA 模式</h2>\n<h3>1.1 概念</h3>\n<p><strong>XA（eXtended Architecture）</strong> 是一种分布式事务协议，通常用于支持跨多个资源管理器（如数据库、消息队列等）的事务。</p>\n<ul>\n<li><strong>特点</strong>:\n<ul>\n<li>使用两阶段提交协议（2PC）来保证事务的一致性。</li>\n<li>保证所有参与的资源管理器在同一个事务中要么都成功提交，要么都回滚。</li>\n<li>对于涉及多个资源管理器的事务，XA 协议能够提供强一致性。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>XA模式下RM由数据库提供</p>\n</blockquote>",r:{minutes:9.53,words:2859},t:"四种分布式事务模式",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html",{loader:()=>l.e(31906).then(l.bind(l,19682)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["课堂随笔"],e:"\n<p>XA DB锁</p>\n<p>AT 全局锁 要用undo_log和lock_table两个表（用的多）</p>\n<p>TCC：预授权。不用加锁。性能最好。不依赖于数据库事务，可以用于非事务型数据库。缺点：要写代码（有代码侵入）</p>\n<p>TCC三阶段：try-&gt;confirm-&gt;cancel</p>\n<p>幂等性：</p>\n<p>空回滚：没冻结金额但是要回滚（try卡了结果先执行了cancel）</p>\n<p>业务悬挂：已经空回滚了，卡住的try又执行了，结果没后续尬在那了(先执行了cancel结果try又运行了)</p>\n<p>注解加在谁头上谁是try</p>\n<p>TCC写代码思路</p>",r:{minutes:.7,words:210},t:"模式总结",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html",{loader:()=>l.e(78510).then(l.bind(l,62952)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["Seata","分布式事务","微服务","配置文件"],e:'\n<h2>Seata版本</h2>\n<p><code>seata-server-2.0.0</code></p>\n<p><a href="https://seata.apache.org/zh-cn/release-history/seata-server" target="_blank" rel="noopener noreferrer">Seata-Server版本历史 | Apache Seata</a></p>\n<h2>Seata注册/配置到Nacos</h2>\n<div class="language-ya line-numbers-mode" data-highlighter="shiki" data-ext="ya" data-title="ya" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#  Copyright 1999-2019 Seata.io Group.</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#  Licensed under the Apache License, Version 2.0 (the "License");</span></span>\n<span class="line"><span>#  you may not use this file except in compliance with the License.</span></span>\n<span class="line"><span>#  You may obtain a copy of the License at</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#  http://www.apache.org/licenses/LICENSE-2.0</span></span>\n<span class="line"><span>#</span></span>\n<span class="line"><span>#  Unless required by applicable law or agreed to in writing, software</span></span>\n<span class="line"><span>#  distributed under the License is distributed on an "AS IS" BASIS,</span></span>\n<span class="line"><span>#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span>\n<span class="line"><span>#  See the License for the specific language governing permissions and</span></span>\n<span class="line"><span>#  limitations under the License.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># 本地多开时注意修改端口，默认服务端口+1000=8091</span></span>\n<span class="line"><span>server:</span></span>\n<span class="line"><span>  port: 7091</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>spring:</span></span>\n<span class="line"><span>  application:</span></span>\n<span class="line"><span>    name: seata-server</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>logging:</span></span>\n<span class="line"><span>  config: classpath:logback-spring.xml</span></span>\n<span class="line"><span>  file:</span></span>\n<span class="line"><span>    path: ${log.home:${user.home}/logs/seata}</span></span>\n<span class="line"><span>seata:</span></span>\n<span class="line"><span>  config:</span></span>\n<span class="line"><span>    # support: nacos 、 consul 、 apollo 、 zk  、 etcd3</span></span>\n<span class="line"><span>    type: nacos</span></span>\n<span class="line"><span>    nacos:</span></span>\n<span class="line"><span>      server-addr: 81.70.62.114:8848</span></span>\n<span class="line"><span>      group: DEFAULT_GROUP</span></span>\n<span class="line"><span>      data-id: seataServer.properties</span></span>\n<span class="line"><span>  registry:</span></span>\n<span class="line"><span>    # support: nacos 、 eureka 、 redis 、 zk  、 consul 、 etcd3 、 sofa</span></span>\n<span class="line"><span>    type: nacos</span></span>\n<span class="line"><span>    preferred-networks: 30.240.*</span></span>\n<span class="line"><span>    nacos:</span></span>\n<span class="line"><span>      application: seata-server</span></span>\n<span class="line"><span>      server-addr: 81.70.62.114:8848</span></span>\n<span class="line"><span>      group: DEFAULT_GROUP</span></span>\n<span class="line"><span>      # 多个集群（多开）时注意修改</span></span>\n<span class="line"><span>      cluster: SH</span></span>\n<span class="line"><span>  security:</span></span>\n<span class="line"><span>    secretKey: SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</span></span>\n<span class="line"><span>    tokenValidityInMilliseconds: 1800000</span></span>\n<span class="line"><span>    ignore:</span></span>\n<span class="line"><span>      urls: /,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-fe/public/**,/api/v1/auth/login</span></span>\n<span class="line"><span>console:</span></span>\n<span class="line"><span>  user:</span></span>\n<span class="line"><span>    username: felix</span></span>\n<span class="line"><span>    password: YINSHI9981</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.37,words:412},t:"配置文件示例",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html",{loader:()=>l.e(75839).then(l.bind(l,24329)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["阅读完毕","讲义","Sentinel"],e:"\n<h1>1.初识Sentinel</h1>\n<h2>1.1.雪崩问题及解决方案</h2>\n<h3>1.1.1.雪崩问题</h3>\n<p>微服务中，服务间调用关系错综复杂，一个微服务往往依赖于多个其它微服务。</p>\n<figure><figcaption>1533829099748</figcaption></figure>\n<p>如图，如果服务提供者I发生了故障，当前的应用的部分业务因为依赖于服务I，因此也会被阻塞。此时，其它不依赖于服务I的业务似乎不受影响。</p>\n",r:{minutes:30.21,words:9063},t:"微服务保护",i:"fa-solid fa-web-awesome",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html",{loader:()=>l.e(76778).then(l.bind(l,14679)),meta:{d:17404416e5,l:"2025年2月25日",c:["SpringCloud高级篇"],g:["阅读完毕","讲义","分布式事务","Seata"],e:"\n<h1>0.学习目标</h1>\n",r:{minutes:19.87,words:5962},t:"分布式事务",i:"fa-solid fa-web-awesome",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html",{loader:()=>l.e(67296).then(l.bind(l,56385)),meta:{d:17317152e5,l:"2024年11月16日",c:["实战"],g:["bug"],e:"\n<blockquote>\n<p>修改ValidationMessages.properties的编码格式，改成UTF-8。\nFile &gt; Settings &gt; Editor &gt; File Encodings</p>\n</blockquote>\n",r:{minutes:.22,words:65},t:"SpringBoot读取ValidationMessages.properties，中文乱码",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",{loader:()=>l.e(14997).then(l.bind(l,52040)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<h2>问题描述</h2>\n<blockquote>\n<p>vue项目<code>npm install</code>失败，node-sass版本不匹配</p>\n</blockquote>\n",r:{minutes:.81,words:244},t:"人人前端vue项目启动失败",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html",{loader:()=>l.e(27395).then(l.bind(l,50099)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<h2>问题描述</h2>\n<blockquote>\n<p>spring boot与spring cloud版本不匹配导致nacos注册失败</p>\n</blockquote>\n",r:{minutes:1.57,words:470},t:"人人fast后台注册nacos失败问题",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",{loader:()=>l.e(62229).then(l.bind(l,2781)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:"\n<p>报错信息：</p>\n<blockquote>\n<p><code>Error creating bean with name 'scheduleJobController': Unsatisfied dependency expressed through field 'scheduleJobService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scheduleJobService': Invocation of init method failed; nested exception is io.renren.common.exception.RRException: 获取定时任务CronTrigger出现异常</code></p>\n</blockquote>\n",r:{minutes:.29,words:88},t:"定时任务启动失败",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html",{loader:()=>l.e(11546).then(l.bind(l,51302)),meta:{d:173016e7,l:"2024年10月29日",c:["实战"],g:["bug"],e:"\n<blockquote>\n<p>在使用SpringBoot时，由于不同模块间SpringBoot版本不一致，导致Maven未将Entity类打包进target目录的问题。解决方法是统一所有模块的SpringBoot版本号，确保依赖一致性。</p>\n</blockquote>\n",r:{minutes:.3,words:91},t:"谷粒商城 java: 找不到符号 符号: 方法 setCouponName(java.lang.String)",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html",{loader:()=>l.e(14113).then(l.bind(l,72303)),meta:{d:1735776e6,l:"2025年1月2日",c:["实战"],g:["bug"],e:'\n<blockquote>\n<p><code>@FeignClient("coupon")</code>中的服务名<code>coupon</code>在nacos注册中心中找不到</p>\n</blockquote>\n',r:{minutes:.14,words:42},t:"current ips:(0) service: DEFAULT_GROUP@@gulimall-coupon -> []",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html",{loader:()=>l.e(61504).then(l.bind(l,96825)),meta:{d:17304192e5,l:"2024年11月1日",c:["实战"],g:["bug"],e:'\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">java.lang.NullPointerException</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.atguigu.gulimall.thirdparty.GulimallThirdPartyApplicationTests.testUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">GulimallThirdPartyApplicationTests.java:23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.NativeMethodAccessorImpl.invoke0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.NativeMethodAccessorImpl.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">NativeMethodAccessorImpl.java:62</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sun.reflect.DelegatingMethodAccessorImpl.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">DelegatingMethodAccessorImpl.java:43</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> java.lang.reflect.Method.invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Method.java:498</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.model.FrameworkMethod</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.runReflectiveCall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">FrameworkMethod.java:50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.internal.runners.model.ReflectiveCallable.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ReflectiveCallable.java:12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.model.FrameworkMethod.invokeExplosively</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">FrameworkMethod.java:47</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.internal.runners.statements.InvokeMethod.evaluate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">InvokeMethod.java:17</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.runLeaf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:325</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.BlockJUnit4ClassRunner.runChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BlockJUnit4ClassRunner.java:78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.BlockJUnit4ClassRunner.runChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BlockJUnit4ClassRunner.java:57</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:290</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.schedule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:71</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.runChildren</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:288</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.access</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:58</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">$2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.evaluate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:268</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runners.ParentRunner.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ParentRunner.java:363</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> org.junit.runner.JUnitCore.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitCore.java:137</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnit4IdeaTestRunner.java:69</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.IdeaTestRunner</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$Repeater</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.startRunnerWithArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">IdeaTestRunner.java:33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitStarter.java:220</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">\tat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> com.intellij.rt.junit.JUnitStarter.main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">JUnitStarter.java:53</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.73,words:218},t:"测试方法启动空指针",i:"fa-solid fa-bug",y:"a"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html",{loader:()=>l.e(79927).then(l.bind(l,48140)),meta:{e:'\n<h2>1.JSR303</h2>\n<ol>\n<li>\n<p>给Bean添加校验注解：javax.validation.constraints，并定义自己的message提示</p>\n</li>\n<li>\n<p>开启校验功能<code>@Valid</code>。效果：校验错误以后会有默认的响应</p>\n</li>\n<li>\n<p>给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果</p>\n</li>\n<li>\n<p>分组校验（多场景的复杂校验）</p>\n<ul>\n<li><code>@NotBlank(message = "品牌名必须提交",groups = {AddGroup.class, UpdateGroup.class}) </code>给校验注解标注什么情况下需要进行校验</li>\n<li><code>@Validated({AddGroup.class})</code>：controller层参数前注解</li>\n<li>默认没有指定分组的校验注解<code>@NotBlank</code>，在分组校验情况<code>@Validated({AddGroup.class})</code>下不生效</li>\n</ul>\n</li>\n<li>\n<p>自定义校验</p>\n<ol>\n<li>\n<p>编写一个自定义的校验注解<code>public @interface ListValue {}</code></p>\n</li>\n<li>\n<p>编写一个自定义的校验器ConstraintValidator</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//第一个泛型是校验注解，第二个泛型是校验数据类型</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ListValueConstraintValidator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ConstraintValidator</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //初始化方法,ListValue是自定义的注解.</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> constraintAnnotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> constraintAnnotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> value) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * 判断是否校验成功</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> 需要校验的值</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic">@return</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> isValid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConstraintValidatorContext</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">  set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(value);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>关联自定义的校验器和自定义的校验注解</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Documented</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//约束。【同一个注解可以指定多个不同的校验器，适配不同类型的校验。】这里ListValueConstraintValidator.class是数值校验器</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Constraint</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">validatedBy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ListValueConstraintValidator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//可以标注在哪些位置。方法、字段等。</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Target</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">METHOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">FIELD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ANNOTATION_TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">CONSTRUCTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">PARAMETER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ElementType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TYPE_USE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//注解的时机。这里是可以在运行时获取校验</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Retention</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RetentionPolicy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">RUNTIME</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B"> ListValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    校验出错后，错误信息去哪取。前缀一般是当前全类名，在ValidationMessages.properties配置文件里设置com.atguigu.common.valid.ListValue.message=必须提交指定的值</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "{com.vince.common.valid.ListValue.message}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    支持分组校验的功能</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    自定义负载信息</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> extends Payload</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">payload</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//    自定义注解里的属性</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">default</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p>自定义注解使用</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t/**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t * 显示状态[0-不显示；1-显示]</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">\t */</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">NotNull</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AddGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">UpdateGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UpdateStatusGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ListValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">vals</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">groups</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">AddGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> UpdateStatusGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">})</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">\tprivate</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> showStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>\n</ol>\n</li>\n</ol>',r:{minutes:1.82,words:547},t:"数据校验",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html",{loader:()=>l.e(4825).then(l.bind(l,63986)),meta:{e:"\n<p>-- 基于Redis集群解决单机Redis存在的问题</p>\n<p>单机的Redis存在四大问题：</p>\n<figure><figcaption>image-20210725144240631</figcaption></figure>\n<h1>0.学习目标</h1>\n<h1>1.Redis持久化</h1>\n<p>Redis有两种持久化方案：</p>\n<ul>\n<li>RDB持久化</li>\n<li>AOF持久化</li>\n</ul>\n<h2>1.1.RDB持久化</h2>\n<p>RDB全称Redis Database Backup file（Redis数据备份文件），也被叫做Redis数据快照。简单来说就是把内存中的所有数据都记录到磁盘中。当Redis实例故障重启后，从磁盘读取快照文件，恢复数据。快照文件称为RDB文件，默认是保存在当前运行目录。</p>",r:{minutes:17.25,words:5174},t:"分布式缓存",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html",{loader:()=>l.e(40393).then(l.bind(l,94793)),meta:{e:"\n<h1>0.学习目标</h1>\n<h1>1.什么是多级缓存</h1>\n<p>传统的缓存策略一般是请求到达Tomcat后，先查询Redis，如果未命中则查询数据库，如图：</p>\n<figure><figcaption>image-20210821075259137</figcaption></figure>\n<p>存在下面的问题：</p>\n<p>•请求要经过Tomcat处理，Tomcat的性能成为整个系统的瓶颈</p>\n<p>•Redis缓存失效时，会对数据库产生冲击</p>\n<p>多级缓存就是充分利用请求处理的每个环节，分别添加缓存，减轻Tomcat压力，提升服务性能：</p>\n<ul>\n<li>浏览器访问静态资源时，优先读取浏览器本地缓存</li>\n<li>访问非静态资源（ajax查询数据）时，访问服务端</li>\n<li>请求到达Nginx后，优先读取Nginx本地缓存</li>\n<li>如果Nginx本地缓存未命中，则去直接查询Redis（不经过Tomcat）</li>\n<li>如果Redis查询未命中，则查询Tomcat</li>\n<li>请求进入Tomcat后，优先查询JVM进程缓存</li>\n<li>如果JVM进程缓存未命中，则查询数据库</li>\n</ul>",r:{minutes:28.71,words:8612},t:"多级缓存",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",{loader:()=>l.e(35379).then(l.bind(l,86559)),meta:{e:"<h2>Redis高级篇之最佳实践</h2>\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>Redis键值设计</li>\n<li>批处理优化</li>\n<li>服务端优化</li>\n<li>集群最佳实践</li>\n</ul>\n</blockquote>\n<h2>1、Redis键值设计</h2>\n<h3>1.1、优雅的key结构</h3>\n<p>Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定：</p>\n<ul>\n<li>遵循基本格式：[业务名称]:[数据名]:[id]</li>\n<li>长度不超过44字节</li>\n<li>不包含特殊字符</li>\n</ul>",r:{minutes:20.62,words:6185},t:"",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html",{loader:()=>l.e(97277).then(l.bind(l,75939)),meta:{e:"\n<p>-- 基于Redis集群解决单机Redis存在的问题</p>\n<p>单机的Redis存在四大问题：</p>\n<figure><figcaption>image-20210725144240631</figcaption></figure>\n<h1>0.学习目标</h1>\n<h1>1.Redis持久化</h1>\n<p>Redis有两种持久化方案：</p>\n<ul>\n<li>RDB持久化</li>\n<li>AOF持久化</li>\n</ul>\n<h2>1.1.RDB持久化</h2>\n<p>RDB全称Redis Database Backup file（Redis数据备份文件），也被叫做Redis数据快照。简单来说就是把内存中的所有数据都记录到磁盘中。当Redis实例故障重启后，从磁盘读取快照文件，恢复数据。快照文件称为RDB文件，默认是保存在当前运行目录。</p>",r:{minutes:17.25,words:5174},t:"分布式缓存",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html",{loader:()=>l.e(1348).then(l.bind(l,37985)),meta:{e:"\n<h1>0.学习目标</h1>\n<h1>1.什么是多级缓存</h1>\n<p>传统的缓存策略一般是请求到达Tomcat后，先查询Redis，如果未命中则查询数据库，如图：</p>\n<figure><figcaption>image-20210821075259137</figcaption></figure>\n<p>存在下面的问题：</p>\n<p>•请求要经过Tomcat处理，Tomcat的性能成为整个系统的瓶颈</p>\n<p>•Redis缓存失效时，会对数据库产生冲击</p>\n<p>多级缓存就是充分利用请求处理的每个环节，分别添加缓存，减轻Tomcat压力，提升服务性能：</p>\n<ul>\n<li>浏览器访问静态资源时，优先读取浏览器本地缓存</li>\n<li>访问非静态资源（ajax查询数据）时，访问服务端</li>\n<li>请求到达Nginx后，优先读取Nginx本地缓存</li>\n<li>如果Nginx本地缓存未命中，则去直接查询Redis（不经过Tomcat）</li>\n<li>如果Redis查询未命中，则查询Tomcat</li>\n<li>请求进入Tomcat后，优先查询JVM进程缓存</li>\n<li>如果JVM进程缓存未命中，则查询数据库</li>\n</ul>",r:{minutes:28.71,words:8612},t:"多级缓存",y:"a"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",{loader:()=>l.e(79434).then(l.bind(l,24733)),meta:{e:"<h2>Redis高级篇之最佳实践</h2>\n<p><strong>今日内容</strong></p>\n<blockquote>\n<ul>\n<li>Redis键值设计</li>\n<li>批处理优化</li>\n<li>服务端优化</li>\n<li>集群最佳实践</li>\n</ul>\n</blockquote>\n<h2>1、Redis键值设计</h2>\n<h3>1.1、优雅的key结构</h3>\n<p>Redis的Key虽然可以自定义，但最好遵循下面的几个最佳实践约定：</p>\n<ul>\n<li>遵循基本格式：[业务名称]:[数据名]:[id]</li>\n<li>长度不超过44字节</li>\n<li>不包含特殊字符</li>\n</ul>",r:{minutes:20.62,words:6185},t:"",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(91029).then(l.bind(l,52847)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<p><strong>参考回答</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>进程是正在运行程序的实例，进程中包含了线程，每个线程执行不同的任务</li>\n<li>不同的进程使用不同的内存空间，在当前进程下的所有线程可以共享内存空间</li>\n<li>线程更轻量，线程上下文切换成本一般上要比进程上下文切换低(上下文切换指的是从一个线程切换到另一个线程)</li>\n</ul>\n</div>',r:{minutes:1.53,words:460},t:"1.线程和进程的区别？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E4%B8%80%E4%B8%AA%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84%E7%BA%BF%E7%A8%8B.html",{loader:()=>l.e(32636).then(l.bind(l,25594)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>有三种方式可以停止线程</p>\n<ul>\n<li>使用退出标志，使线程正常退出，也就是当run方法完成后线程终止</li>\n<li>使用stop方法强行终止（不推荐，方法已作废）</li>\n<li>使用interrupt方法中断线程</li>\n</ul>\n</div>',r:{minutes:1.18,words:355},t:"10.如何停止一个正在运行的线程？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(93672).then(l.bind(l,27176)),meta:{e:'\n<blockquote>\n<p>难易程度：☆</p>\n<p>出现频率：☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>现在都是多核CPU，在多核CPU下</p>\n<ul>\n<li>\n<p>并发是同一时间应对多件事情的能力，多个线程轮流使用一个或多个CPU</p>\n</li>\n<li>\n<p>并行是同一时间动手做多件事情的能力，4核CPU同时执行4个线程</p>\n</li>\n</ul>\n</div>',r:{minutes:1.39,words:416},t:"2.并行和并发有什么区别?",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html",{loader:()=>l.e(61035).then(l.bind(l,71891)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>在java中一共有四种常见的创建方式，分别是：继承Thread类、实现runnable接口、实现Callable接口、线程池创建线程。通常情况下，我们项目中都会采用线程池的方式创建线程。</p>\n</div>\n<hr>\n<p>共有四种方式可以创建线程，分别是：继承Thread类、实现runnable接口、实现Callable接口、线程池创建线程</p>',r:{minutes:1.3,words:391},t:"3.创建线程的四种方式",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.runnable%20%E5%92%8C%20callable%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(93728).then(l.bind(l,75718)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<p><strong>参考回答</strong></p>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ol>\n<li>Runnable 接口run方法没有返回值；Callable接口call方法有返回值，是个泛型，和Future、FutureTask配合可以用来获取异步执行的结果</li>\n<li>Callalbe接口支持返回执行结果，需要调用FutureTask.get()得到，此方法会阻塞主进程的继续往下执行，如果不调用不会阻塞。</li>\n<li>Callable接口的call()方法允许抛出异常；而Runnable接口的run()方法的异常只能在内部消化，不能继续上抛</li>\n</ol>\n</div>',r:{minutes:.49,words:147},t:"4.runnable 和 callable 有什么区别?",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E7%BA%BF%E7%A8%8B%E7%9A%84%20run()%E5%92%8C%20start()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(14777).then(l.bind(l,25056)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>\n<p>start(): 用来启动线程，通过该线程调用run方法执行run方法中所定义的逻辑代码。start方法只能被调用一次。</p>\n</li>\n<li>\n<p>run(): 封装了要被线程执行的代码，可以被调用多次。</p>\n</li>\n</ul>\n</div>\n',r:{minutes:.27,words:82},t:"5.线程的 run()和 start()有什么区别？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E7%BA%BF%E7%A8%8B%E5%8C%85%E6%8B%AC%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81%EF%BC%8C%E7%8A%B6%E6%80%81%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E5%8F%98%E5%8C%96%E7%9A%84.html",{loader:()=>l.e(37350).then(l.bind(l,59303)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>在JDK中的Thread类中的枚举State里面定义了6种线程的状态分别是：新建、可运行、终结、阻塞、等待和有时限等待六种。</p>\n<p>关于线程的状态切换情况比较多。我分别介绍一下</p>\n<p>当一个线程对象被创建，但还未调用 start 方法时处于<strong>新建</strong>状态，调用了 start 方法，就会由<strong>新建</strong>进入<strong>可运行</strong>状态。如果线程内代码已经执行完毕，由<strong>可运行</strong>进入<strong>终结</strong>状态。当然这些是一个线程正常执行情况。</p>\n<p>如果线程获取锁失败后，由<strong>可运行</strong>进入 Monitor 的阻塞队列<strong>阻塞</strong>，只有当持锁线程释放锁时，会按照一定规则唤醒阻塞队列中的<strong>阻塞</strong>线程，唤醒后的线程进入<strong>可运行</strong>状态</p>\n<p>如果线程获取锁成功后，但由于条件不满足，调用了 wait() 方法，此时从<strong>可运行</strong>状态释放锁进入<strong>等待</strong>状态，当其它持锁线程调用 notify() 或 notifyAll() 方法，会恢复为<strong>可运行</strong>状态</p>\n<p>还有一种情况是调用 sleep(long) 方法也会从<strong>可运行</strong>状态进入<strong>有时限等待</strong>状态，不需要主动唤醒，超时时间到自然恢复为<strong>可运行</strong>状态</p>\n</div>',r:{minutes:4,words:1201},t:"6.线程包括哪些状态，状态之间是如何变化的",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E6%96%B0%E5%BB%BA%20T1%E3%80%81T2%E3%80%81T3%20%E4%B8%89%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%AE%83%E4%BB%AC%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C.html",{loader:()=>l.e(70622).then(l.bind(l,54601)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>嗯~~，我思考一下 （适当的思考或想一下属于正常情况，脱口而出反而太假[背诵痕迹]）</p>\n<p>可以这么做，在多线程中有多种方法让线程按特定顺序执行，可以用线程类的<strong>join</strong>()方法在一个线程中启动另一个线程，另外一个线程完成该线程继续执行。</p>\n<p>比如说：</p>\n<p>使用join方法，T3调用T2，T2调用T1，这样就能确保T1就会先完成而T3最后完成</p>\n</div>',r:{minutes:1.24,words:373},t:"7.新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.notify()%E5%92%8C%20notifyAll()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(78332).then(l.bind(l,14754)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆</p>\n<p>出现频率：☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>notifyAll：唤醒所有wait的线程</p>\n<p>notify：只随机唤醒一个 wait 线程</p>\n</div>\n<hr>\n<p>notifyAll：唤醒所有wait的线程</p>\n<p>notify：只随机唤醒一个 wait 线程</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> com.itheima.basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> WaitNotify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> flag </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> lock </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">         Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">             synchronized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (lock){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                 while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">flag){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...wating..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                     try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 }</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...flag is true"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">         });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">         Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">             synchronized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (lock){</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                 while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">flag){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...wating..."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                     try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                         e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                     }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 }</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"...flag is true"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">         });</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">         Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">             synchronized</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (lock) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> " hold lock"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                 lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">notifyAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 flag </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                 try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                     e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">         });</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">         t1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">         t2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">         t3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.51,words:154},t:"8.notify()和 notifyAll()有什么区别？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E5%9C%A8%20java%20%E4%B8%AD%20wait%20%E5%92%8C%20sleep%20%E6%96%B9%E6%B3%95%E7%9A%84%E4%B8%8D%E5%90%8C.html",{loader:()=>l.e(91700).then(l.bind(l,10846)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>共同点</p>\n<ul>\n<li>wait() ，wait(long) 和 sleep(long) 的效果都是让当前线程暂时放弃 CPU 的使用权，进入阻塞状态</li>\n</ul>\n<p>不同点</p>\n<ul>\n<li>方法归属不同\n<ul>\n<li>sleep(long) 是 Thread 的静态方法</li>\n<li>而 wait()，wait(long) 都是 Object 的成员方法，每个对象都有</li>\n</ul>\n</li>\n<li>醒来时机不同\n<ul>\n<li>执行 sleep(long) 和 wait(long) 的线程都会在等待相应毫秒后醒来</li>\n<li>wait(long) 和 wait() 还可以被 notify 唤醒，wait() 如果不唤醒就一直等下去</li>\n<li>它们都可以被打断唤醒</li>\n</ul>\n</li>\n<li>锁特性不同（重点）\n<ul>\n<li>wait 方法的调用必须先获取 wait 对象的锁，而 sleep 则无此限制</li>\n<li>wait 方法执行后会释放对象锁，允许其它线程获得该对象锁（我放弃 cpu，但你们还可以用）</li>\n<li>而 sleep 如果在 synchronized 代码块中执行，并不会释放对象锁（我放弃 cpu，你们也用不了）</li>\n</ul>\n</li>\n</ul>\n</div>',r:{minutes:1.17,words:351},t:"9.在 java 中 wait 和 sleep 方法的不同？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/1.%E8%AE%B2%E4%B8%80%E4%B8%8Bsynchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html",{loader:()=>l.e(52257).then(l.bind(l,9900)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>synchronized 底层使用的JVM级别中的Monitor 来决定当前线程是否获得了锁，如果某一个线程获得了锁，在没有释放锁之前，其他线程是不能或得到锁的。synchronized 属于<strong>悲观锁</strong>。</p>\n<p>synchronized 因为需要依赖于JVM级别的Monitor ，相对性能也比较低。</p>\n<p>monitor对象存在于每个Java对象的对象头中，synchronized 锁便是通过这种方式获取锁的，也是为什么Java中任意对象可以作为锁的原因</p>\n<p>monitor内部维护了三个变量</p>\n<ul>\n<li>WaitSet：保存处于Waiting状态的线程</li>\n<li>EntryList：保存处于Blocked状态的线程</li>\n<li>Owner：持有锁的线程</li>\n</ul>\n<p>只有一个线程获取到的标志就是在monitor中设置成功了Owner，一个monitor中只能有一个Owner</p>\n<p>在上锁的过程中，如果有其他线程也来抢锁，则进入EntryList 进行阻塞，当获得锁的线程执行完了，释放了锁，就会唤醒EntryList 中等待的线程竞争锁，竞争的时候是非公平的。</p>\n</div>',r:{minutes:3.31,words:994},t:"1.讲一下synchronized关键字的底层原理？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/10.synchronized%E5%92%8CLock%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",{loader:()=>l.e(61915).then(l.bind(l,38490)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>第一，语法层面</p>\n<ul>\n<li>synchronized 是关键字，源码在 jvm 中，用 c++ 语言实现，退出同步代码块锁会自动释放</li>\n<li>Lock 是接口，源码由 jdk 提供，用 java 语言实现，需要手动调用 unlock 方法释放锁</li>\n</ul>\n<p>第二，功能层面</p>\n<ul>\n<li>二者均属于悲观锁、都具备基本的互斥、同步、锁重入功能</li>\n<li>Lock 提供了许多 synchronized 不具备的功能，例如获取等待状态、公平锁、可打断、可超时、多条件变量，同时Lock 可以实现不同的场景，如 ReentrantLock， ReentrantReadWriteLock</li>\n</ul>\n<p>第三，性能层面</p>\n<ul>\n<li>在没有竞争时，synchronized 做了很多优化，如偏向锁、轻量级锁，性能不赖</li>\n<li>在竞争激烈时，Lock 的实现通常会提供更好的性能</li>\n</ul>\n<p>统合来看，需要根据不同的场景来选择不同的锁的使用。</p>\n</div>',r:{minutes:.76,words:229},t:"10.synchronized和Lock有什么区别 ?",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/11.%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E7%9A%84%E6%9D%A1%E4%BB%B6.html",{loader:()=>l.e(452).then(l.bind(l,85145)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>嗯，是这样的，一个线程需要同时获取多把锁，这时就容易发生死锁，举个例子来说：t1 线程获得A对象锁，接下来想获取B对象的锁t2 线程获得B对象锁，接下来想获取A对象的锁 这个时候t1线程和t2线程都在互相等待对方的锁，就产生了死锁</p>\n</div>\n<hr>',r:{minutes:1.16,words:349},t:"11.死锁产生的条件是什么？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%AD%BB%E9%94%81%E5%88%A4%E6%96%AD.html",{loader:()=>l.e(29607).then(l.bind(l,73594)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>我们只需要通过jdk自动的工具就能搞定我们可以先通过jps来查看当前java程序运行的进程id然后通过jstack来查看这个进程id，就能展示出来死锁的问题，并且，可以定位代码的具体行号范围，我们再去找到对应的代码进行排查就行了。</p>\n</div>\n<hr>',r:{minutes:1.06,words:317},t:"12.如何进行死锁诊断？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E8%81%8A%E4%B8%80%E4%B8%8BConcurrentHashMap%20.html",{loader:()=>l.e(2336).then(l.bind(l,81135)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>ConcurrentHashMap 是一种<code>线程安全</code>的<code>高效</code>Map集合，jdk1.7和1.8也做了很多调整。</p>\n<ul>\n<li>JDK1.7的底层采用是<strong>分段的数组</strong>+<strong>链表</strong> 实现</li>\n<li>JDK1.8 采用的数据结构跟HashMap1.8的结构一样，数组+链表/红黑二叉树。</li>\n</ul>\n<p>在jdk1.7中 ConcurrentHashMap 里包含一个 Segment 数组。Segment 的结构和HashMap类似，是一 种数组和链表结构，一个 Segment 包含一个 HashEntry 数组，每个 HashEntry 是一个链表结构的元素，每个 Segment 守护着一个HashEntry数组里的元素，当对 HashEntry 数组的数据进行修改时，必须首先获得对应的 Segment的锁。</p>\n<p>Segment 是一种可重入的锁 ReentrantLock，每个 Segment 守护一个HashEntry 数组里得元素，当对 HashEntry 数组的数据进行修改时，必须首先获得对应的 Segment 锁</p>\n<p>在jdk1.8中的ConcurrentHashMap 做了较大的优化，性能提升了不少。首先是它的数据结构与jdk1.8的hashMap数据结构完全一致。其次是放弃了Segment臃肿的设计，取而代之的是采用Node + CAS + Synchronized来保 证并发安全进行实现，synchronized只锁定当前链表或红黑二叉树的首节点，这样<code>只要hash不冲突</code>，就不会产生并发 , 效率得到提升</p>\n</div>',r:{minutes:2.42,words:727},t:"12.聊一下ConcurrentHashMap",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/13.%E5%AF%BC%E8%87%B4%E5%B9%B6%E5%8F%91%E7%A8%8B%E5%BA%8F%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88.html",{loader:()=>l.e(27327).then(l.bind(l,56877)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>Java并发编程有三大核心特性，分别是原子性、可见性和有序性（袁克友）。</p>\n<p>首先，原子性指的是一个线程在CPU中的操作是不可暂停也不可中断的，要么执行完成，要么不执行。比如，一些简单的操作如赋值可能是原子的，但复合操作如自增就不是原子的。为了保证原子性，我们可以使用synchronized关键字或JUC里面的Lock来进行加锁。</p>\n<p>其次，可见性是指让一个线程对共享变量的修改对另一个线程可见。由于线程可能在自己的工作内存中缓存共享变量的副本，因此一个线程对共享变量的修改可能不会立即反映在其他线程的工作内存中。为了解决这个问题，我们可以使用synchronized关键字、volatile关键字或Lock来确保可见性。</p>\n<p>最后，有序性是指处理器为了提高程序运行效率，可能会对输入代码进行优化，导致程序中各个语句的执行先后顺序与代码中的顺序不一致。虽然处理器会保证程序最终执行结果与代码顺序执行的结果一致，但在某些情况下我们可能需要确保特定的执行顺序。为了解决这个问题，我们可以使用volatile关键字来禁止指令重排。</p>\n</div>',r:{minutes:2.3,words:690},t:"13.导致并发程序出现问题的根本原因是什么",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/2.synchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-%E8%BF%9B%E9%98%B6.html",{loader:()=>l.e(9621).then(l.bind(l,56604)),meta:{e:'\n<p>Monitor实现的锁属于重量级锁，你了解过锁升级吗？</p>\n<ul>\n<li>\n<p>Monitor实现的锁属于重量级锁，里面涉及到了用户态和内核态的切换、进程的上下文切换，成本较高，性能比较低。</p>\n</li>\n<li>\n<p>在JDK 1.6引入了两种新型锁机制：偏向锁和轻量级锁，它们的引入是为了解决在没有多线程竞争或基本没有竞争的场景下因使用传统锁机制带来的性能开销问题。</p>\n</li>\n</ul>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<h4>参考回答</h4>\n<p>Java中的synchronized有偏向锁、轻量级锁、重量级锁三种形式，分别对应了锁只被一个线程持有、不同线程交替持有锁、多线程竞争锁三种情况。</p>\n<p>重量级锁：底层使用的Monitor实现，里面涉及到了用户态和内核态的切换、进程的上下文切换，成本较高，性能比较低。</p>\n<p>轻量级锁：线程加锁的时间是错开的（也就是没有竞争），可以使用轻量级锁来优化。轻量级修改了对象头的锁标志，相对重量级锁性能提升很多。每次修改都是CAS操作，保证原子性</p>\n<p>偏向锁：一段很长的时间内都只被一个线程使用锁，可以使用了偏向锁，在第一次获得锁时，会有一个CAS操作，之后该线程再获取锁，只需要判断<code>markword</code>中是否是自己的线程id即可，而不是开销相对较大的CAS命令</p>\n<p>一旦锁发生了竞争，都会升级为重量级锁</p>\n</div>',r:{minutes:5.54,words:1661},t:"2.synchronized关键字的底层原理-进阶",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/3.%E4%BD%A0%E8%B0%88%E8%B0%88%20JMM%EF%BC%88Java%20%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%89.html",{loader:()=>l.e(88720).then(l.bind(l,95663)),meta:{e:'<ol>\n<li>\n<h3>你谈谈 JMM（Java 内存模型）</h3>\n</li>\n</ol>\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<ul>\n<li>JMM(Java Memory Model)Java内存模型，定义了共享内存中多线程程序读写操作的行为规范，通过这些规则来规范对内存的读写操作从而保证指令的正确性</li>\n<li>JMM把内存分为两块，一块是私有线程的工作区域（工作内存），一块是所有线程的共享区域（主内存）</li>\n<li>线程跟线程之间是相互隔离，线程跟线程交互需要通过主内存</li>\n</ul>\n</div>',r:{minutes:1.41,words:423},t:"",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/4.CAS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%88%E5%90%AB%E4%B9%90%E8%A7%82%E6%82%B2%E8%A7%82%E9%94%81%EF%BC%89.html",{loader:()=>l.e(63460).then(l.bind(l,16962)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>CAS的全称是： Compare And Swap(比较再交换)。它的核心思想是，比较内存中的一个值与预期值是否相等，如果相等，则将该值更新为新值；如果不相等，则不做任何操作，并且通常会返回当前值。它体现的一种乐观锁的思想，在无锁状态下保证线程操作数据的原子性。</p>\n<ul>\n<li>CAS使用到的地方很多：AQS框架、AtomicXXX类</li>\n<li>在操作共享变量的时候使用的自旋锁，效率上更高一些</li>\n<li>CAS的底层是调用的Unsafe类中的方法，都是操作系统提供的，其他语言实现</li>\n</ul>\n</div>',r:{minutes:2.95,words:885},t:"4.CAS 是什么（含乐观悲观锁）？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/5.%E8%AF%B7%E8%B0%88%E8%B0%88%E4%BD%A0%E5%AF%B9%20volatile%20%E7%9A%84%E7%90%86%E8%A7%A3.html",{loader:()=>l.e(19487).then(l.bind(l,42076)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>参考回答</strong></p>\n<p>volatile 是一个关键字，可以修饰类的成员变量、类的静态成员变量，主要有两个功能</p>\n<p>第一：保证了不同线程对这个变量进行操作时的可见性，即一个线程修改了某个变量的值，这新值对其他线程来说是立即可见的,volatile关键字会强制将修改的值立即写入主存。</p>\n<p>第二： 禁止进行指令重排序，可以保证代码执行有序性。底层实现原理是，添加了一个<strong>内存屏障</strong>，通过插入内存屏障禁止在内存屏障<strong>前后</strong>的指令执行重排序优化</p>\n</div>',r:{minutes:3.67,words:1101},t:"5.请谈谈你对 volatile 的理解",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/6.%E4%BB%80%E4%B9%88%E6%98%AFAQS.html",{loader:()=>l.e(95665).then(l.bind(l,9641)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>AQS是多线程中的队列同步器。是一种锁机制，它是做为一个基础框架使用的,像ReentrantLock、Semaphore都是基于AQS实现的</li>\n<li>AQS内部维护了一个先进先出的双向队列，队列中存储的排队的线程</li>\n<li>在AQS内部还有一个属性state,这个state就相当于是一个资源，默认是0(无锁状态)，如果队列中的有一个线程修改成功了state为1，则当前线程就相等于获取了资源</li>\n<li>在对state修改的时候使用的cas操作，保证多个线程修改的情况下原子性</li>\n</ul>\n</div>',r:{minutes:2.11,words:634},t:"6.什么是AQS？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/7.%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81.html",{loader:()=>l.e(51921).then(l.bind(l,92589)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p><strong>可重入锁（Reentrant Lock）</strong> 是一种允许同一个线程多次获取锁的锁机制，也就是说，当一个线程已经持有某个锁时，它可以再次获得该锁，而不会发生死锁。</p>\n</div>\n<h3>详细解释：</h3>\n<ol>\n<li>\n<p><strong>可重入性</strong>：可重入锁的最关键特性是，如果一个线程已经获得了锁，它可以在同一线程内再次获取该锁。例如，线程可以进入一个已经同步的代码块或方法，继续执行其他同步代码，而不需要等待锁的释放。</p>\n</li>\n<li>\n<p><strong>避免死锁</strong>：可重入锁防止了一个线程因无法再次获取锁而陷入死锁。没有可重入锁时，如果一个线程试图进入自己已经持有的锁所保护的代码块，将会造成死锁。可重入锁通过允许线程重新获得锁来避免这个问题。</p>\n</li>\n<li>\n<p><strong>工作原理</strong>：每个锁都有一个计数器，表示锁被获得的次数。当一个线程第一次请求该锁时，计数器被设为1。如果同一个线程再次请求该锁，计数器的值会递增。每次释放锁时，计数器会递减，直到计数器为0，表示锁被完全释放。</p>\n</li>\n</ol>',r:{minutes:2.15,words:644},t:"7.什么是可重入锁？",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/8.%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E6%97%8B%E9%94%81.html",{loader:()=>l.e(63934).then(l.bind(l,29e3)),meta:{e:'\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<p>自旋锁（Spinlock）是一种同步机制，用于在并发编程中保护共享资源，避免多个线程或进程同时访问同一资源。自旋锁的核心思想是，当一个线程尝试获取锁时，如果锁已经被其他线程持有，它不会进入休眠状态（像传统的互斥锁），而是持续地在<code>循环中“自旋”</code>，不断地检查锁是否可用，直到成功获取锁。</p>\n</div>\n<h3>自旋锁的工作原理：</h3>\n<ol>\n<li><strong>尝试获取锁</strong>：当线程请求锁时，如果锁当前没有被占用，线程立即获取锁并继续执行。</li>\n<li><strong>自旋等待</strong>：如果锁已经被其他线程持有，线程不会进入阻塞状态，而是进入一个忙等待（自旋）的状态，不断地检查锁是否被释放。</li>\n<li><strong>释放锁</strong>：当持有锁的线程完成任务后，它会释放锁，允许其他线程获取锁。</li>\n</ol>',r:{minutes:3.07,words:921},t:"8.什么是自旋锁",y:"a"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/9.ReentrantLock%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html",{loader:()=>l.e(30499).then(l.bind(l,79009)),meta:{e:'\n<blockquote>\n<p>难易程度：☆☆☆☆</p>\n<p>出现频率：☆☆☆</p>\n</blockquote>\n<div class="hint-container important">\n<p class="hint-container-title">重要</p>\n<ul>\n<li>ReentrantLock是一个可重入锁:，调用 lock 方 法获取了锁之后，再次调用 lock，是不会再阻塞，内部直接增加重入次数就行了，标识这个线程已经重复获取一把锁而不需要等待锁的释放。</li>\n<li>ReentrantLock是属于juc报下的类，属于api层面的锁，跟synchronized一样，都是悲观锁。通过lock()用来获取锁，unlock()释放锁。</li>\n<li>它的底层实现原理主要利用<strong>CAS+AQS队列</strong>来实现。它支持公平锁和非公平锁，两者的实现类似</li>\n<li>构造方法接受一个可选的公平参数（<strong>默认非公平锁</strong>），当设置为true时，表示公平锁，否则为非公平锁。公平锁的效率往往没有非公平锁的效率高。</li>\n</ul>\n</div>',r:{minutes:2.35,words:705},t:"9. ReentrantLock的实现原理",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%88%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%EF%BC%89.html",{loader:()=>l.e(74122).then(l.bind(l,2730)),meta:{e:'\n<h2>1.1 状态介绍</h2>\n<p>当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。线程对象在不同的时期有不同的状态。那么Java中的线程存在哪几种状态呢？Java中的线程</p>\n<p>状态被定义在了java.lang.Thread.State枚举类中，State枚举类的源码如下：</p>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 新建 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        NEW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 可运行状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        RUNNABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 阻塞状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        BLOCKED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 无限等待状态 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 计时等待 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TIMED_WAITING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* 终止 */</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        TERMINATED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">\t}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 获取当前线程的状态</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> State</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> jdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">internal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">misc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">VM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toThreadState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(threadStatus);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:72.24,words:21672},t:"1 线程状态",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/1.Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html",{loader:()=>l.e(49853).then(l.bind(l,93963)),meta:{e:"\n<p>在多线程编程中，Java内存模型（Java Memory Model，简称JMM）是一个非常重要的概念，它决定了多个线程如何通过共享内存来进行通信、协作，并确保线程安全。在这篇文章中，我们将详细解析JMM的核心概念，包括它的原理、特性、关键字的使用以及如何处理并发问题。</p>\n<h4>什么是JMM？</h4>\n<p>Java内存模型（JMM）是Java虚拟机（JVM）的一部分，它定义了Java程序中多个线程如何与内存交互、如何保证数据一致性、如何确保线程安全。JMM主要解决了多线程编程中的以下问题：</p>\n<ul>\n<li><strong>内存可见性</strong>：一个线程对共享变量的修改，如何确保其他线程能够看到。</li>\n<li><strong>原子性</strong>：线程对共享变量的操作，如何确保不被其他线程中断。</li>\n<li><strong>有序性</strong>：线程对共享变量的操作，如何确保执行顺序符合预期。</li>\n</ul>",r:{minutes:5.95,words:1784},t:"JMM详解：Java内存模型的深度解析",y:"a"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/2.happens-before%E5%8E%9F%E5%88%99.html",{loader:()=>l.e(96964).then(l.bind(l,56790)),meta:{e:'\n<p>在Java多线程编程中，保证程序的正确性和一致性至关重要。Java内存模型（JMM）通过一系列规则来确保多线程环境下数据的一致性，其中最核心的概念之一就是 <code>happens-before</code> 关系。理解并正确运用 <code>happens-before</code> 规则是开发高效且正确的多线程程序的关键。</p>\n<h4>什么是 <code>happens-before</code>？</h4>\n<p><code>happens-before</code> 是Java内存模型中的一个关键概念，定义了两项操作之间的执行顺序关系。当我们说一个操作 "happens-before" 另一个操作时，意味着第一个操作的结果在第二个操作之前对所有线程可见，并且保证了前者的操作不会被重排到后者的后面。</p>',r:{minutes:4.67,words:1401},t:"Java内存模型中的 happens-before 规则",y:"a"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.html",{loader:()=>l.e(38028).then(l.bind(l,77860)),meta:{e:'\n<h1>1.单机部署</h1>\n<p>我们在Centos7虚拟机中使用Docker来安装。</p>\n<h2>1.1.下载镜像</h2>\n<p>方式一：在线拉取</p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rabbitmq:3-management</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:1.45,words:436},t:"RabbitMQ部署指南",y:"a"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/windows%E7%89%88sentinel%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86Unable%20to%20make%20protected%20final%20java.lang.Class%20java.lang.ClassLoader.define.html",{loader:()=>l.e(74772).then(l.bind(l,80886)),meta:{e:"\n<blockquote>\n<p>更改启动命令，打开特定的包装进行反射：\n<code>java --add-opens java.base/java.lang=ALL-UNNAMED -jar sentinel-dashboard-1.8.1.jar</code></p>\n</blockquote>\n",r:{minutes:.15,words:45},t:"windows版sentinel运行报错问题处理:Unable to make protected final java.lang.Class java.lang.ClassLoader.define",y:"a"}}],["/404.html",{loader:()=>l.e(27490).then(l.bind(l,81489)),meta:{t:""}}],["/Bug/",{loader:()=>l.e(30771).then(l.bind(l,99119)),meta:{t:"Bug"}}],["/CICD/",{loader:()=>l.e(104).then(l.bind(l,39615)),meta:{t:"CICD"}}],["/%E7%BD%91%E7%BB%9C/",{loader:()=>l.e(83230).then(l.bind(l,86513)),meta:{t:"网络"}}],["/%E8%A3%85%E6%9C%BA/",{loader:()=>l.e(47984).then(l.bind(l,85292)),meta:{t:"装机"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>l.e(21090).then(l.bind(l,1213)),meta:{t:"设计模式"}}],["/Bug/Java/",{loader:()=>l.e(93928).then(l.bind(l,79480)),meta:{t:"Java"}}],["/Database/",{loader:()=>l.e(52214).then(l.bind(l,27200)),meta:{t:"Database"}}],["/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/",{loader:()=>l.e(23105).then(l.bind(l,89778)),meta:{t:"私有云"}}],["/Docker/%E9%9A%8F%E7%AC%94/",{loader:()=>l.e(55547).then(l.bind(l,62107)),meta:{t:"随笔"}}],["/Interview/MySQL/",{loader:()=>l.e(60927).then(l.bind(l,47830)),meta:{t:"My SQL"}}],["/Interview/Spring/",{loader:()=>l.e(48918).then(l.bind(l,98240)),meta:{t:"Spring"}}],["/Interview/sanfene/",{loader:()=>l.e(86923).then(l.bind(l,29419)),meta:{t:"Sanfene"}}],["/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/",{loader:()=>l.e(46833).then(l.bind(l,62816)),meta:{t:"2.内存结构"}}],["/Java/Java8%E7%89%B9%E6%80%A7/",{loader:()=>l.e(41852).then(l.bind(l,56902)),meta:{t:"Java8特性"}}],["/Java/String/",{loader:()=>l.e(385).then(l.bind(l,80677)),meta:{t:"String"}}],["/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/",{loader:()=>l.e(52069).then(l.bind(l,95856)),meta:{t:"唯手熟尔"}}],["/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/",{loader:()=>l.e(60573).then(l.bind(l,1619)),meta:{t:"工具类"}}],["/Java/%E5%BC%82%E5%B8%B8/",{loader:()=>l.e(54338).then(l.bind(l,68784)),meta:{t:"异常"}}],["/Java/%E9%9A%8F%E7%AC%94/",{loader:()=>l.e(74211).then(l.bind(l,56491)),meta:{t:"随笔"}}],["/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>l.e(89327).then(l.bind(l,34875)),meta:{t:"面试题"}}],["/Linux/0.%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(95710).then(l.bind(l,74384)),meta:{t:"0.笔记"}}],["/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/",{loader:()=>l.e(10754).then(l.bind(l,61451)),meta:{t:"1.安装与配置"}}],["/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/",{loader:()=>l.e(90021).then(l.bind(l,21994)),meta:{t:"13.服务与自动化管理"}}],["/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/",{loader:()=>l.e(28846).then(l.bind(l,40013)),meta:{t:"15.故障排除与修复"}}],["/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/",{loader:()=>l.e(82055).then(l.bind(l,30496)),meta:{t:"2.文件系统"}}],["/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/",{loader:()=>l.e(56625).then(l.bind(l,47597)),meta:{t:"3.用户与组管理"}}],["/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/",{loader:()=>l.e(39867).then(l.bind(l,9798)),meta:{t:"4.系统与进程管理"}}],["/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/",{loader:()=>l.e(3114).then(l.bind(l,91501)),meta:{t:"5.软件包管理"}}],["/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/",{loader:()=>l.e(20819).then(l.bind(l,46532)),meta:{t:"6.网络配置与管理"}}],["/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/",{loader:()=>l.e(47652).then(l.bind(l,94853)),meta:{t:"7.文件与目录管理"}}],["/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/",{loader:()=>l.e(74621).then(l.bind(l,38131)),meta:{t:"9.磁盘管理与存储"}}],["/MQ/Kafka/",{loader:()=>l.e(7244).then(l.bind(l,45130)),meta:{t:"Kafka"}}],["/MQ/",{loader:()=>l.e(9469).then(l.bind(l,36262)),meta:{t:"MQ"}}],["/MQ/RabbitMQ/",{loader:()=>l.e(27872).then(l.bind(l,16776)),meta:{t:"Rabbit MQ"}}],["/Mybatis/Mybatis/",{loader:()=>l.e(45686).then(l.bind(l,68954)),meta:{t:"Mybatis"}}],["/Mybatis/",{loader:()=>l.e(81292).then(l.bind(l,31269)),meta:{t:"Mybatis"}}],["/Mybatis/Mybatis%20Plus/",{loader:()=>l.e(90454).then(l.bind(l,22841)),meta:{t:"Mybatis Plus"}}],["/Netty/API/",{loader:()=>l.e(65494).then(l.bind(l,81849)),meta:{t:"API"}}],["/Python/%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(83204).then(l.bind(l,84335)),meta:{t:"基础"}}],["/Python/%E7%88%AC%E8%99%AB/",{loader:()=>l.e(26707).then(l.bind(l,1103)),meta:{t:"爬虫"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(77239).then(l.bind(l,32568)),meta:{t:"03 Maven高级笔记"}}],["/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(44209).then(l.bind(l,69422)),meta:{t:"04 Spring Boot笔记"}}],["/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(95322).then(l.bind(l,93584)),meta:{t:"05 Mybatisplus笔记"}}],["/Spring/Junit/",{loader:()=>l.e(20837).then(l.bind(l,78310)),meta:{t:"Junit"}}],["/Spring/%E6%B3%A8%E8%A7%A3/",{loader:()=>l.e(87950).then(l.bind(l,58977)),meta:{t:"注解"}}],["/SpringCloud/Alibaba-OSS/",{loader:()=>l.e(39794).then(l.bind(l,87614)),meta:{t:"Alibaba OSS"}}],["/SpringCloud/",{loader:()=>l.e(70691).then(l.bind(l,68130)),meta:{t:"Spring Cloud"}}],["/SpringCloud/%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(28898).then(l.bind(l,24203)),meta:{t:"基础"}}],["/SpringMVC/",{loader:()=>l.e(46178).then(l.bind(l,4335)),meta:{t:"Spring MVC"}}],["/VCS/Git/",{loader:()=>l.e(69062).then(l.bind(l,9774)),meta:{t:"Git"}}],["/VCS/",{loader:()=>l.e(23577).then(l.bind(l,30835)),meta:{t:"VCS"}}],["/%E5%89%8D%E7%AB%AF/node/",{loader:()=>l.e(88860).then(l.bind(l,87897)),meta:{t:"Node"}}],["/%E5%89%8D%E7%AB%AF/",{loader:()=>l.e(35155).then(l.bind(l,24838)),meta:{t:"前端"}}],["/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/",{loader:()=>l.e(57207).then(l.bind(l,7966)),meta:{t:"网络"}}],["/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(50597).then(l.bind(l,88432)),meta:{t:"计算机基础"}}],["/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/",{loader:()=>l.e(20505).then(l.bind(l,18976)),meta:{t:"结构型"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/",{loader:()=>l.e(48891).then(l.bind(l,68089)),meta:{t:"个人博客"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",{loader:()=>l.e(99670).then(l.bind(l,54087)),meta:{t:"项目实战"}}],["/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/",{loader:()=>l.e(68477).then(l.bind(l,40465)),meta:{t:"My Cat Web安装文档"}}],["/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/",{loader:()=>l.e(96390).then(l.bind(l,14285)),meta:{t:"My Cat安装文档"}}],["/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",{loader:()=>l.e(55588).then(l.bind(l,60204)),meta:{t:"My Cat配置文件"}}],["/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/",{loader:()=>l.e(89192).then(l.bind(l,31185)),meta:{t:"My SQL优化"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/",{loader:()=>l.e(80864).then(l.bind(l,64058)),meta:{t:"My SQL卸载文档 Linux"}}],["/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/",{loader:()=>l.e(18803).then(l.bind(l,17558)),meta:{t:"My SQL卸载文档 Windows"}}],["/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(29544).then(l.bind(l,31934)),meta:{t:"My SQL学习笔记"}}],["/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/",{loader:()=>l.e(38428).then(l.bind(l,24029)),meta:{t:"My SQL安全配置"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/",{loader:()=>l.e(61721).then(l.bind(l,42221)),meta:{t:"My SQL安装文档 Linux"}}],["/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/",{loader:()=>l.e(21130).then(l.bind(l,92592)),meta:{t:"My SQL安装文档 Windows"}}],["/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/",{loader:()=>l.e(36850).then(l.bind(l,67750)),meta:{t:"My SQL小白"}}],["/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/",{loader:()=>l.e(18650).then(l.bind(l,12310)),meta:{t:"My SQL故障修复"}}],["/Database/MySQL/%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(10794).then(l.bind(l,77339)),meta:{t:"基础"}}],["/Database/MySQL/%E5%B7%A5%E5%85%B7/",{loader:()=>l.e(79868).then(l.bind(l,82748)),meta:{t:"工具"}}],["/Database/MySQL/%E8%BF%90%E7%BB%B4/",{loader:()=>l.e(24244).then(l.bind(l,4673)),meta:{t:"运维"}}],["/Database/MySQL/%E8%BF%9B%E9%98%B6/",{loader:()=>l.e(30613).then(l.bind(l,91286)),meta:{t:"进阶"}}],["/Database/Redis/1.%E5%85%A5%E9%97%A8/",{loader:()=>l.e(80337).then(l.bind(l,85469)),meta:{t:"1.入门"}}],["/Database/Redis/2.%E5%AE%9E%E6%88%98/",{loader:()=>l.e(69149).then(l.bind(l,51332)),meta:{t:"2.实战"}}],["/Database/Redis/4.%E5%8E%9F%E7%90%86/",{loader:()=>l.e(67320).then(l.bind(l,28775)),meta:{t:"4.原理"}}],["/Interview/Java/01%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(11113).then(l.bind(l,50373)),meta:{t:"01基础"}}],["/Interview/Java/02%E4%B8%AD%E7%AD%89/",{loader:()=>l.e(84064).then(l.bind(l,58246)),meta:{t:"02中等"}}],["/Interview/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87/",{loader:()=>l.e(62740).then(l.bind(l,67368)),meta:{t:"Java基础面试篇"}}],["/Interview/MQ/RabbitMQ/",{loader:()=>l.e(6468).then(l.bind(l,86901)),meta:{t:"Rabbit MQ"}}],["/Interview/MQ/",{loader:()=>l.e(53953).then(l.bind(l,12699)),meta:{t:"MQ"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/",{loader:()=>l.e(90370).then(l.bind(l,71641)),meta:{t:"Java"}}],["/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/",{loader:()=>l.e(70452).then(l.bind(l,7393)),meta:{t:"Linux"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/",{loader:()=>l.e(47172).then(l.bind(l,46565)),meta:{t:"01基础篇"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/",{loader:()=>l.e(74193).then(l.bind(l,83432)),meta:{t:"黑马 Java2021"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/",{loader:()=>l.e(23066).then(l.bind(l,39297)),meta:{t:"02并发篇"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/",{loader:()=>l.e(44006).then(l.bind(l,70897)),meta:{t:"03虚拟机"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/",{loader:()=>l.e(667).then(l.bind(l,41753)),meta:{t:"04框架篇"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/",{loader:()=>l.e(33555).then(l.bind(l,57449)),meta:{t:"黑马 Java2023"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/",{loader:()=>l.e(4475).then(l.bind(l,6489)),meta:{t:"15.面向对象进阶（抽象类 接口 内部类）"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/",{loader:()=>l.e(52050).then(l.bind(l,95155)),meta:{t:"入门到起飞"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/",{loader:()=>l.e(2e4).then(l.bind(l,78729)),meta:{t:"22.集合（ List集合）"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/",{loader:()=>l.e(77134).then(l.bind(l,15219)),meta:{t:"23.集合（泛型 Set 数据结构)"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/",{loader:()=>l.e(6767).then(l.bind(l,39110)),meta:{t:"26.集合（ Stream流 方法引用）"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>l.e(17093).then(l.bind(l,83)),meta:{t:"31.多线程"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",{loader:()=>l.e(84325).then(l.bind(l,3769)),meta:{t:"35.反射 动态代理"}}],["/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/",{loader:()=>l.e(41703).then(l.bind(l,90464)),meta:{t:"接口"}}],["/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/",{loader:()=>l.e(28330).then(l.bind(l,94587)),meta:{t:"注解"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/",{loader:()=>l.e(40423).then(l.bind(l,90559)),meta:{t:"AOP"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(63240).then(l.bind(l,24116)),meta:{t:"01 Spring笔记"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/",{loader:()=>l.e(4502).then(l.bind(l,96727)),meta:{t:"Spring Day01"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/",{loader:()=>l.e(42975).then(l.bind(l,24952)),meta:{t:"Spring Day02"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/",{loader:()=>l.e(80384).then(l.bind(l,91766)),meta:{t:"Spring Day03"}}],["/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",{loader:()=>l.e(98678).then(l.bind(l,31179)),meta:{t:"随笔"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/",{loader:()=>l.e(639).then(l.bind(l,39598)),meta:{t:"Spring MVC Day01"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(99441).then(l.bind(l,78067)),meta:{t:"02 Spring MVC笔记"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/",{loader:()=>l.e(62166).then(l.bind(l,7096)),meta:{t:"Spring MVC Day02"}}],["/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",{loader:()=>l.e(29485).then(l.bind(l,11767)),meta:{t:"随笔"}}],["/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",{loader:()=>l.e(16647).then(l.bind(l,16397)),meta:{t:"随笔"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/",{loader:()=>l.e(58139).then(l.bind(l,68982)),meta:{t:"Docker"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/",{loader:()=>l.e(67942).then(l.bind(l,10109)),meta:{t:"实用"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/ES/",{loader:()=>l.e(58471).then(l.bind(l,15709)),meta:{t:"ES"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/",{loader:()=>l.e(47373).then(l.bind(l,97727)),meta:{t:"MQ"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/",{loader:()=>l.e(29833).then(l.bind(l,47761)),meta:{t:"Jmeter"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/",{loader:()=>l.e(24654).then(l.bind(l,31574)),meta:{t:"Seata"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/",{loader:()=>l.e(37662).then(l.bind(l,43078)),meta:{t:"Sentinel"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",{loader:()=>l.e(49122).then(l.bind(l,8522)),meta:{t:"分布式事务"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/",{loader:()=>l.e(39426).then(l.bind(l,48284)),meta:{t:"报错记录"}}],["/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/",{loader:()=>l.e(20382).then(l.bind(l,82424)),meta:{t:"板书"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/",{loader:()=>l.e(18997).then(l.bind(l,87838)),meta:{t:"01 分布式缓存"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/",{loader:()=>l.e(76771).then(l.bind(l,58666)),meta:{t:"3.高级"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/",{loader:()=>l.e(80637).then(l.bind(l,83830)),meta:{t:"02 多级缓存"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/",{loader:()=>l.e(52363).then(l.bind(l,52129)),meta:{t:"03 Redis最佳实践"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/",{loader:()=>l.e(77073).then(l.bind(l,9991)),meta:{t:"Redis高级篇 分布式缓存"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/",{loader:()=>l.e(31990).then(l.bind(l,13899)),meta:{t:"Redis高级篇 多级缓存"}}],["/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/",{loader:()=>l.e(89270).then(l.bind(l,43401)),meta:{t:"Redis高级篇 最佳实践"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",{loader:()=>l.e(38897).then(l.bind(l,90320)),meta:{t:"01基础知识"}}],["/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/",{loader:()=>l.e(68557).then(l.bind(l,30100)),meta:{t:"02并发安全"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/",{loader:()=>l.e(18790).then(l.bind(l,45103)),meta:{t:"Juc额外扩展资料"}}],["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/",{loader:()=>l.e(13551).then(l.bind(l,50090)),meta:{t:"并发编程的艺术"}}],["/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/",{loader:()=>l.e(2512).then(l.bind(l,77616)),meta:{t:"安装"}}],["/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/",{loader:()=>l.e(69323).then(l.bind(l,19361)),meta:{t:"Bug"}}],["/category/",{loader:()=>l.e(23583).then(l.bind(l,3233)),meta:{t:"分类",I:!1}}],["/category/markdown/",{loader:()=>l.e(3521).then(l.bind(l,6324)),meta:{t:"markdown 分类",I:!1}}],["/category/java/",{loader:()=>l.e(68236).then(l.bind(l,1730)),meta:{t:"Java 分类",I:!1}}],["/category/mysql/",{loader:()=>l.e(41006).then(l.bind(l,37667)),meta:{t:"MySQL 分类",I:!1}}],["/category/es/",{loader:()=>l.e(23228).then(l.bind(l,11891)),meta:{t:"ES 分类",I:!1}}],["/category/spring/",{loader:()=>l.e(9097).then(l.bind(l,97494)),meta:{t:"Spring 分类",I:!1}}],["/category/jvm/",{loader:()=>l.e(63035).then(l.bind(l,7969)),meta:{t:"JVM 分类",I:!1}}],["/category/linux/",{loader:()=>l.e(38654).then(l.bind(l,70332)),meta:{t:"Linux 分类",I:!1}}],["/category/netty/",{loader:()=>l.e(92776).then(l.bind(l,67690)),meta:{t:"Netty 分类",I:!1}}],["/category/docker/",{loader:()=>l.e(11360).then(l.bind(l,72570)),meta:{t:"docker 分类",I:!1}}],["/category/mybatis/",{loader:()=>l.e(72285).then(l.bind(l,99951)),meta:{t:"Mybatis 分类",I:!1}}],["/category/%E5%AE%9E%E6%88%98/",{loader:()=>l.e(33274).then(l.bind(l,39264)),meta:{t:"实战 分类",I:!1}}],["/category/nacos/",{loader:()=>l.e(8496).then(l.bind(l,75942)),meta:{t:"Nacos 分类",I:!1}}],["/category/%E8%A3%85%E6%9C%BA/",{loader:()=>l.e(28483).then(l.bind(l,39640)),meta:{t:"装机 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>l.e(3863).then(l.bind(l,7241)),meta:{t:"数据库 分类",I:!1}}],["/category/python/",{loader:()=>l.e(91034).then(l.bind(l,99983)),meta:{t:"Python 分类",I:!1}}],["/category/%E9%A1%B9%E7%9B%AE/",{loader:()=>l.e(55459).then(l.bind(l,18260)),meta:{t:"项目 分类",I:!1}}],["/category/git/",{loader:()=>l.e(95612).then(l.bind(l,44232)),meta:{t:"Git 分类",I:!1}}],["/category/mybatis-plus/",{loader:()=>l.e(41512).then(l.bind(l,83795)),meta:{t:"Mybatis-Plus 分类",I:!1}}],["/category/springcloud%E9%AB%98%E7%BA%A7%E7%AF%87/",{loader:()=>l.e(32524).then(l.bind(l,93235)),meta:{t:"SpringCloud高级篇 分类",I:!1}}],["/category/vue/",{loader:()=>l.e(8628).then(l.bind(l,32352)),meta:{t:"vue 分类",I:!1}}],["/category/redis/",{loader:()=>l.e(30007).then(l.bind(l,21902)),meta:{t:"Redis 分类",I:!1}}],["/category/java%E9%AB%98%E7%BA%A7/",{loader:()=>l.e(3621).then(l.bind(l,66968)),meta:{t:"Java高级 分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>l.e(24021).then(l.bind(l,37062)),meta:{t:"使用指南 分类",I:!1}}],["/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",{loader:()=>l.e(7281).then(l.bind(l,60529)),meta:{t:"中间件 分类",I:!1}}],["/category/nginx/",{loader:()=>l.e(55552).then(l.bind(l,31320)),meta:{t:"Nginx 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C/",{loader:()=>l.e(50953).then(l.bind(l,57796)),meta:{t:"网络 分类",I:!1}}],["/category/java%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(22878).then(l.bind(l,8309)),meta:{t:"Java基础 分类",I:!1}}],["/category/springcloud%E5%AE%9E%E7%94%A8%E7%AF%87/",{loader:()=>l.e(45217).then(l.bind(l,10683)),meta:{t:"SpringCloud实用篇 分类",I:!1}}],["/category/devops/",{loader:()=>l.e(58873).then(l.bind(l,73475)),meta:{t:"DevOps 分类",I:!1}}],["/category/maven/",{loader:()=>l.e(71179).then(l.bind(l,37334)),meta:{t:"Maven 分类",I:!1}}],["/category/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>l.e(35451).then(l.bind(l,68677)),meta:{t:"面试题 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",{loader:()=>l.e(26582).then(l.bind(l,59602)),meta:{t:"网络编程 分类",I:!1}}],["/category/redis/",{loader:()=>l.e(30007).then(l.bind(l,21902)),meta:{t:"redis 分类",I:!1}}],["/category/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",{loader:()=>l.e(89462).then(l.bind(l,99232)),meta:{t:"面渣逆袭 分类",I:!1}}],["/category/mybatis/",{loader:()=>l.e(72285).then(l.bind(l,99951)),meta:{t:"MyBatis 分类",I:!1}}],["/category/springcloud/",{loader:()=>l.e(61762).then(l.bind(l,71499)),meta:{t:"SpringCloud 分类",I:!1}}],["/category/mycat/",{loader:()=>l.e(25046).then(l.bind(l,71968)),meta:{t:"MyCat 分类",I:!1}}],["/category/windows/",{loader:()=>l.e(433).then(l.bind(l,93729)),meta:{t:"Windows 分类",I:!1}}],["/category/mybatis-plus/",{loader:()=>l.e(41512).then(l.bind(l,83795)),meta:{t:"MyBatis-Plus 分类",I:!1}}],["/tag/",{loader:()=>l.e(1797).then(l.bind(l,83332)),meta:{t:"标签",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8/",{loader:()=>l.e(98781).then(l.bind(l,61812)),meta:{t:"标签: 使用",I:!1}}],["/tag/%E5%BF%85%E8%83%8C/",{loader:()=>l.e(75787).then(l.bind(l,92672)),meta:{t:"标签: 必背",I:!1}}],["/tag/%E6%80%BB%E7%BB%93/",{loader:()=>l.e(95436).then(l.bind(l,32361)),meta:{t:"标签: 总结",I:!1}}],["/tag/java8%E7%89%B9%E6%80%A7/",{loader:()=>l.e(74406).then(l.bind(l,58669)),meta:{t:"标签: Java8特性",I:!1}}],["/tag/%E6%B3%A8%E8%A7%A3/",{loader:()=>l.e(72771).then(l.bind(l,6575)),meta:{t:"标签: 注解",I:!1}}],["/tag/%E9%87%8D%E7%82%B9/",{loader:()=>l.e(29688).then(l.bind(l,24365)),meta:{t:"标签: 重点",I:!1}}],["/tag/%E6%95%99%E7%A8%8B/",{loader:()=>l.e(75154).then(l.bind(l,61628)),meta:{t:"标签: 教程",I:!1}}],["/tag/%E8%AE%B2%E4%B9%89/",{loader:()=>l.e(88319).then(l.bind(l,5746)),meta:{t:"标签: 讲义",I:!1}}],["/tag/bug/",{loader:()=>l.e(26504).then(l.bind(l,12914)),meta:{t:"标签: bug",I:!1}}],["/tag/%E6%9F%A5%E8%AF%A2/",{loader:()=>l.e(5493).then(l.bind(l,42612)),meta:{t:"标签: 查询",I:!1}}],["/tag/%E9%98%85%E8%AF%BB%E5%AE%8C%E6%AF%95/",{loader:()=>l.e(19133).then(l.bind(l,63260)),meta:{t:"标签: 阅读完毕",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(56080).then(l.bind(l,33306)),meta:{t:"标签: 基础",I:!1}}],["/tag/%E8%A3%85%E6%9C%BA/",{loader:()=>l.e(64605).then(l.bind(l,80810)),meta:{t:"标签: 装机",I:!1}}],["/tag/%E9%95%9C%E5%83%8F/",{loader:()=>l.e(15555).then(l.bind(l,26753)),meta:{t:"标签: 镜像",I:!1}}],["/tag/%E4%BA%86%E8%A7%A3/",{loader:()=>l.e(30945).then(l.bind(l,51814)),meta:{t:"标签: 了解",I:!1}}],["/tag/%E7%AC%94%E8%AE%B0/",{loader:()=>l.e(26238).then(l.bind(l,93374)),meta:{t:"标签: 笔记",I:!1}}],["/tag/%E8%B8%A9%E5%9D%91/",{loader:()=>l.e(14820).then(l.bind(l,60410)),meta:{t:"标签: 踩坑",I:!1}}],["/tag/%E7%BB%8F%E9%AA%8C/",{loader:()=>l.e(15785).then(l.bind(l,96439)),meta:{t:"标签: 经验",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",{loader:()=>l.e(25860).then(l.bind(l,50393)),meta:{t:"标签: 网络编程",I:!1}}],["/tag/%E4%BA%8B%E5%8A%A1/",{loader:()=>l.e(75426).then(l.bind(l,33347)),meta:{t:"标签: 事务",I:!1}}],["/tag/%E5%AE%89%E5%85%A8/",{loader:()=>l.e(26123).then(l.bind(l,64610)),meta:{t:"标签: 安全",I:!1}}],["/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>l.e(1033).then(l.bind(l,94390)),meta:{t:"标签: 面试题",I:!1}}],["/tag/%E5%8F%8D%E5%B0%84/",{loader:()=>l.e(85307).then(l.bind(l,33536)),meta:{t:"标签: 反射",I:!1}}],["/tag/se%E5%9F%BA%E7%A1%80/",{loader:()=>l.e(57356).then(l.bind(l,9164)),meta:{t:"标签: SE基础",I:!1}}],["/tag/seata/",{loader:()=>l.e(97418).then(l.bind(l,45007)),meta:{t:"标签: Seata",I:!1}}],["/tag/%E5%AE%B9%E5%99%A8/",{loader:()=>l.e(19387).then(l.bind(l,94688)),meta:{t:"标签: 容器",I:!1}}],["/tag/%E5%91%BD%E4%BB%A4/",{loader:()=>l.e(34827).then(l.bind(l,31118)),meta:{t:"标签: 命令",I:!1}}],["/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",{loader:()=>l.e(14803).then(l.bind(l,54767)),meta:{t:"标签: 基础知识",I:!1}}],["/tag/%E5%85%A5%E9%97%A8/",{loader:()=>l.e(86127).then(l.bind(l,59405)),meta:{t:"标签: 入门",I:!1}}],["/tag/error/",{loader:()=>l.e(86116).then(l.bind(l,77865)),meta:{t:"标签: error",I:!1}}],["/tag/git/",{loader:()=>l.e(88474).then(l.bind(l,63532)),meta:{t:"标签: git",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C/",{loader:()=>l.e(48663).then(l.bind(l,80224)),meta:{t:"标签: 网络",I:!1}}],["/tag/%E5%AE%89%E8%A3%85/",{loader:()=>l.e(21496).then(l.bind(l,57535)),meta:{t:"标签: 安装",I:!1}}],["/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",{loader:()=>l.e(5623).then(l.bind(l,46673)),meta:{t:"标签: 私有云",I:!1}}],["/tag/%E5%9D%91%E7%8E%8B/",{loader:()=>l.e(28634).then(l.bind(l,84290)),meta:{t:"标签: 坑王",I:!1}}],["/tag/%E7%AE%80%E5%8D%95/",{loader:()=>l.e(55533).then(l.bind(l,96979)),meta:{t:"标签: 简单",I:!1}}],["/tag/%E6%8F%92%E4%BB%B6/",{loader:()=>l.e(70506).then(l.bind(l,13470)),meta:{t:"标签: 插件",I:!1}}],["/tag/api/",{loader:()=>l.e(96810).then(l.bind(l,5414)),meta:{t:"标签: API",I:!1}}],["/tag/%E7%88%AC%E8%99%AB/",{loader:()=>l.e(29559).then(l.bind(l,41536)),meta:{t:"标签: 爬虫",I:!1}}],["/tag/rabbitmq/",{loader:()=>l.e(43688).then(l.bind(l,69509)),meta:{t:"标签: RabbitMQ",I:!1}}],["/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>l.e(68042).then(l.bind(l,47657)),meta:{t:"标签: 多线程",I:!1}}],["/tag/%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",{loader:()=>l.e(87993).then(l.bind(l,57042)),meta:{t:"标签: 反射动态代理",I:!1}}],["/tag/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/",{loader:()=>l.e(27155).then(l.bind(l,48062)),meta:{t:"标签: 高级特性",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",{loader:()=>l.e(65076).then(l.bind(l,50369)),meta:{t:"标签: 接口文档",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",{loader:()=>l.e(90609).then(l.bind(l,69468)),meta:{t:"标签: 接口示例",I:!1}}],["/tag/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",{loader:()=>l.e(62156).then(l.bind(l,81050)),meta:{t:"标签: 配置文件",I:!1}}],["/tag/sentinel/",{loader:()=>l.e(1666).then(l.bind(l,85038)),meta:{t:"标签: Sentinel",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",{loader:()=>l.e(79198).then(l.bind(l,18277)),meta:{t:"标签: 分布式事务",I:!1}}],["/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",{loader:()=>l.e(36726).then(l.bind(l,682)),meta:{t:"标签: 微服务",I:!1}}],["/tag/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",{loader:()=>l.e(70535).then(l.bind(l,8812)),meta:{t:"标签: 分库分表",I:!1}}],["/tag/%E5%8D%B8%E8%BD%BD/",{loader:()=>l.e(83037).then(l.bind(l,97314)),meta:{t:"标签: 卸载",I:!1}}],["/tag/cicd/",{loader:()=>l.e(16613).then(l.bind(l,82105)),meta:{t:"标签: CICD",I:!1}}],["/tag/jenkins/",{loader:()=>l.e(97008).then(l.bind(l,42117)),meta:{t:"标签: Jenkins",I:!1}}],["/tag/%E7%9B%AE%E5%BD%95/",{loader:()=>l.e(85119).then(l.bind(l,49619)),meta:{t:"标签: 目录",I:!1}}],["/tag/%E9%AB%98%E8%B4%A8%E9%87%8F/",{loader:()=>l.e(23727).then(l.bind(l,1728)),meta:{t:"标签: 高质量",I:!1}}],["/tag/%E4%BD%8E%E8%B4%A8%E9%87%8F/",{loader:()=>l.e(15897).then(l.bind(l,84854)),meta:{t:"标签: 低质量",I:!1}}],["/tag/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",{loader:()=>l.e(84056).then(l.bind(l,46566)),meta:{t:"标签: 面渣逆袭",I:!1}}],["/tag/sql%E4%BC%98%E5%8C%96/",{loader:()=>l.e(40396).then(l.bind(l,53284)),meta:{t:"标签: SQL优化",I:!1}}],["/tag/yum%E5%AE%89%E8%A3%85/",{loader:()=>l.e(85737).then(l.bind(l,39798)),meta:{t:"标签: yum安装",I:!1}}],["/tag/docker%E5%AE%89%E8%A3%85/",{loader:()=>l.e(11996).then(l.bind(l,36354)),meta:{t:"标签: docker安装",I:!1}}],["/tag/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/",{loader:()=>l.e(97729).then(l.bind(l,18744)),meta:{t:"标签: 课堂随笔",I:!1}}],["/article/",{loader:()=>l.e(97511).then(l.bind(l,2772)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>l.e(47199).then(l.bind(l,70353)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>l.e(85464).then(l.bind(l,14695)),meta:{t:"时间轴",I:!1}}]])},35124:(i,s,l)=>{l.d(s,{o:()=>e});const e=[{title:"主页",headers:[],path:"/",pathLocale:"/",extraFields:[]},{title:"表情",headers:[],path:"/emoji.html",pathLocale:"/",extraFields:[]},{title:"介绍页",headers:[],path:"/intro.html",pathLocale:"/",extraFields:[]},{title:"学习记录",headers:[],path:"/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html",pathLocale:"/",extraFields:[]},{title:"学习路线",headers:[],path:"/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE.html",pathLocale:"/",extraFields:[]},{title:"Maven刷新时语言级别重置",headers:[{level:2,title:"解决方案",slug:"解决方案",link:"#解决方案",children:[{level:3,title:"修改Maven配置文件",slug:"修改maven配置文件",link:"#修改maven配置文件",children:[]},{level:3,title:"修改项目中pom.xml文件",slug:"修改项目中pom-xml文件",link:"#修改项目中pom-xml文件",children:[]}]}],path:"/Bug/maven%E5%88%B7%E6%96%B0%E6%97%B6%E8%AF%AD%E8%A8%80%E5%9F%BA%E6%9C%AC%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98.html",pathLocale:"/",extraFields:[]},{title:"Jenkins配置后端",headers:[{level:2,title:"1. 创建 Job",slug:"_1-创建-job",link:"#_1-创建-job",children:[]},{level:2,title:"2. 配置 Git 源码管理",slug:"_2-配置-git-源码管理",link:"#_2-配置-git-源码管理",children:[]},{level:2,title:"3. 构建任务",slug:"_3-构建任务",link:"#_3-构建任务",children:[]},{level:2,title:"4. 安装 NodeJS 插件",slug:"_4-安装-nodejs-插件",link:"#_4-安装-nodejs-插件",children:[]},{level:2,title:"5. 全局配置 NodeJS",slug:"_5-全局配置-nodejs",link:"#_5-全局配置-nodejs",children:[]},{level:2,title:"6. 配置前端打包",slug:"_6-配置前端打包",link:"#_6-配置前端打包",children:[]},{level:2,title:"7. 上传前端文件至 Nginx 静态目录",slug:"_7-上传前端文件至-nginx-静态目录",link:"#_7-上传前端文件至-nginx-静态目录",children:[]}],path:"/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E4%B8%8A%E4%BC%A0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8.html",pathLocale:"/",extraFields:[]},{title:"Jenkins配置后端",headers:[{level:2,title:"1. 创建 Job",slug:"_1-创建-job",link:"#_1-创建-job",children:[]},{level:2,title:"2. 配置 Git 源码管理",slug:"_2-配置-git-源码管理",link:"#_2-配置-git-源码管理",children:[]},{level:2,title:"3. 构建任务",slug:"_3-构建任务",link:"#_3-构建任务",children:[]},{level:2,title:"4. 配置 Maven",slug:"_4-配置-maven",link:"#_4-配置-maven",children:[]},{level:2,title:"5. Maven 打包",slug:"_5-maven-打包",link:"#_5-maven-打包",children:[]},{level:2,title:"6. Publish Over SSH 插件安装",slug:"_6-publish-over-ssh-插件安装",link:"#_6-publish-over-ssh-插件安装",children:[]},{level:2,title:"7. 配置服务器连接",slug:"_7-配置服务器连接",link:"#_7-配置服务器连接",children:[]},{level:2,title:"8. 上传 Jar 包，重启服务",slug:"_8-上传-jar-包-重启服务",link:"#_8-上传-jar-包-重启服务",children:[]}],path:"/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81%E3%80%81%E6%89%93%E5%8C%85%E4%B8%8E%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2.html",pathLocale:"/",extraFields:[]},{title:"Jenkins配置后端",headers:[{level:2,title:"1. 删除之前的启动命令脚本",slug:"_1-删除之前的启动命令脚本",link:"#_1-删除之前的启动命令脚本",children:[]},{level:2,title:"2. 上传 Dockerfile , 构建镜像，启动容器",slug:"_2-上传-dockerfile-构建镜像-启动容器",link:"#_2-上传-dockerfile-构建镜像-启动容器",children:[]}],path:"/CICD/Jenkins%20%E9%85%8D%E7%BD%AE%E5%90%8E%E7%AB%AF%EF%BC%9A%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%20Docker%20%E9%95%9C%E5%83%8F%E3%80%81%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8%E6%9C%8D%E5%8A%A1.html",pathLocale:"/",extraFields:[]},{title:"Docker",headers:[],path:"/Docker/",pathLocale:"/",extraFields:[]},{title:"Interview",headers:[],path:"/Interview/",pathLocale:"/",extraFields:[]},{title:"1. 学习JVM有什么用？",headers:[{level:2,title:"1. 关系",slug:"_1-关系",link:"#_1-关系",children:[]},{level:2,title:"2.常见JVM（hotpot为例）",slug:"_2-常见jvm-hotpot为例",link:"#_2-常见jvm-hotpot为例",children:[]},{level:2,title:"3. 学习路线",slug:"_3-学习路线",link:"#_3-学习路线",children:[]}],path:"/JVM/1.%E5%AD%A6%E4%B9%A0JVM%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"2.1内存模型",headers:[{level:2,title:"1. 年轻代 (Young Generation)",slug:"_1-年轻代-young-generation",link:"#_1-年轻代-young-generation",children:[]},{level:2,title:"2. 老年代 (Old Generation)",slug:"_2-老年代-old-generation",link:"#_2-老年代-old-generation",children:[]},{level:2,title:"3. 永久代 (Permanent Generation) [JDK 7 及之前]",slug:"_3-永久代-permanent-generation-jdk-7-及之前",link:"#_3-永久代-permanent-generation-jdk-7-及之前",children:[]},{level:2,title:"4. 元空间 (Metaspace) [JDK 8 及之后]",slug:"_4-元空间-metaspace-jdk-8-及之后",link:"#_4-元空间-metaspace-jdk-8-及之后",children:[]}],path:"/JVM/2.1.%E5%B9%B4%E8%BD%BB%E4%BB%A3%E8%80%81%E5%B9%B4%E4%BB%A3.html",pathLocale:"/",extraFields:[]},{title:"2.JVM 内存结构",headers:[],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.html",pathLocale:"/",extraFields:[]},{title:"GC类型",headers:[{level:3,title:"1. Serial Garbage Collector（串行垃圾回收器）",slug:"_1-serial-garbage-collector-串行垃圾回收器",link:"#_1-serial-garbage-collector-串行垃圾回收器",children:[]},{level:3,title:"2. Parallel Garbage Collector（并行垃圾回收器）",slug:"_2-parallel-garbage-collector-并行垃圾回收器",link:"#_2-parallel-garbage-collector-并行垃圾回收器",children:[]},{level:3,title:"3. Concurrent Mark-Sweep Garbage Collector（CMS，垃圾回收器）",slug:"_3-concurrent-mark-sweep-garbage-collector-cms-垃圾回收器",link:"#_3-concurrent-mark-sweep-garbage-collector-cms-垃圾回收器",children:[]},{level:3,title:"4. G1 Garbage Collector（G1垃圾回收器）",slug:"_4-g1-garbage-collector-g1垃圾回收器",link:"#_4-g1-garbage-collector-g1垃圾回收器",children:[]},{level:3,title:"5. Z Garbage Collector（ZGC，Z垃圾回收器）",slug:"_5-z-garbage-collector-zgc-z垃圾回收器",link:"#_5-z-garbage-collector-zgc-z垃圾回收器",children:[]},{level:3,title:"6. Shenandoah Garbage Collector（Shenandoah垃圾回收器）",slug:"_6-shenandoah-garbage-collector-shenandoah垃圾回收器",link:"#_6-shenandoah-garbage-collector-shenandoah垃圾回收器",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/JVM/GC%E7%B1%BB%E5%9E%8B.html",pathLocale:"/",extraFields:[]},{title:"内存溢出",headers:[{level:2,title:"OOM类型及解决方案",slug:"oom类型及解决方案",link:"#oom类型及解决方案",children:[{level:3,title:"1. Java Heap Space (堆内存溢出)",slug:"_1-java-heap-space-堆内存溢出",link:"#_1-java-heap-space-堆内存溢出",children:[]},{level:3,title:"2. PermGen Space (永久代内存溢出) [JDK 7 及以前]",slug:"_2-permgen-space-永久代内存溢出-jdk-7-及以前",link:"#_2-permgen-space-永久代内存溢出-jdk-7-及以前",children:[]},{level:3,title:"3. Metaspace (元空间内存溢出) [JDK 8 及以后]",slug:"_3-metaspace-元空间内存溢出-jdk-8-及以后",link:"#_3-metaspace-元空间内存溢出-jdk-8-及以后",children:[]},{level:3,title:"4. Stack Space (栈内存溢出)",slug:"_4-stack-space-栈内存溢出",link:"#_4-stack-space-栈内存溢出",children:[]},{level:3,title:"5. Direct Memory (直接内存溢出)",slug:"_5-direct-memory-直接内存溢出",link:"#_5-direct-memory-直接内存溢出",children:[]}]},{level:2,title:"如何诊断和解决 OOM 问题",slug:"如何诊断和解决-oom-问题",link:"#如何诊断和解决-oom-问题",children:[]},{level:2,title:"OOM 错误的常见 JVM 参数",slug:"oom-错误的常见-jvm-参数",link:"#oom-错误的常见-jvm-参数",children:[]}],path:"/JVM/OOM.html",pathLocale:"/",extraFields:[]},{title:"JVM总结",headers:[],path:"/JVM/",pathLocale:"/",extraFields:[]},{title:"CPU Load过高问题的排查与优化",headers:[{level:2,title:"什么是CPU Load？",slug:"什么是cpu-load",link:"#什么是cpu-load",children:[]},{level:2,title:"排查CPU负载过高的思路",slug:"排查cpu负载过高的思路",link:"#排查cpu负载过高的思路",children:[{level:3,title:"1. 查找高CPU占用的进程",slug:"_1-查找高cpu占用的进程",link:"#_1-查找高cpu占用的进程",children:[]},{level:3,title:"2. 进一步分析Java进程的线程",slug:"_2-进一步分析java进程的线程",link:"#_2-进一步分析java进程的线程",children:[]},{level:3,title:"3. 查看系统的I/O情况",slug:"_3-查看系统的i-o情况",link:"#_3-查看系统的i-o情况",children:[]}]},{level:2,title:"CPU负载高的常见原因",slug:"cpu负载高的常见原因",link:"#cpu负载高的常见原因",children:[{level:3,title:"1. 程序设计问题",slug:"_1-程序设计问题",link:"#_1-程序设计问题",children:[]},{level:3,title:"2. 数据库查询问题",slug:"_2-数据库查询问题",link:"#_2-数据库查询问题",children:[]},{level:3,title:"3. 硬件和配置问题",slug:"_3-硬件和配置问题",link:"#_3-硬件和配置问题",children:[]}]},{level:2,title:"如何优化CPU负载",slug:"如何优化cpu负载",link:"#如何优化cpu负载",children:[{level:3,title:"1. 数据库层面的优化",slug:"_1-数据库层面的优化",link:"#_1-数据库层面的优化",children:[]},{level:3,title:"2. JVM参数优化",slug:"_2-jvm参数优化",link:"#_2-jvm参数优化",children:[]},{level:3,title:"3. 磁盘和I/O优化",slug:"_3-磁盘和i-o优化",link:"#_3-磁盘和i-o优化",children:[]},{level:3,title:"4. 系统资源监控和管理",slug:"_4-系统资源监控和管理",link:"#_4-系统资源监控和管理",children:[]}]}],path:"/JVM/cpu%20load%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98.html",pathLocale:"/",extraFields:[]},{title:"jstack用法总结",headers:[{level:3,title:"jstack 用法概述",slug:"jstack-用法概述",link:"#jstack-用法概述",children:[]},{level:3,title:"注意事项",slug:"注意事项",link:"#注意事项",children:[]},{level:3,title:"示例",slug:"示例",link:"#示例",children:[]},{level:3,title:"示例背景",slug:"示例背景",link:"#示例背景",children:[]},{level:3,title:"示例代码（可能引发死锁）",slug:"示例代码-可能引发死锁",link:"#示例代码-可能引发死锁",children:[]},{level:3,title:"使用 jstack 查看锁信息",slug:"使用-jstack-查看锁信息",link:"#使用-jstack-查看锁信息",children:[]},{level:3,title:"jstack 输出分析",slug:"jstack-输出分析",link:"#jstack-输出分析",children:[]},{level:3,title:"解释",slug:"解释",link:"#解释",children:[]},{level:3,title:"锁信息分析",slug:"锁信息分析",link:"#锁信息分析",children:[]},{level:3,title:"解决死锁的思路",slug:"解决死锁的思路",link:"#解决死锁的思路",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/JVM/jstack%E7%94%A8%E6%B3%95.html",pathLocale:"/",extraFields:[]},{title:"黑马JVM",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/JVM/%E9%BB%91%E9%A9%ACJVM.html",pathLocale:"/",extraFields:[]},{title:"Java总结",headers:[{level:2,title:"徽章",slug:"徽章",link:"#徽章",children:[]},{level:2,title:"基本规范",slug:"基本规范",link:"#基本规范",children:[{level:3,title:"继承",slug:"继承",link:"#继承",children:[]},{level:3,title:"异常",slug:"异常",link:"#异常",children:[]},{level:3,title:"面向对象",slug:"面向对象",link:"#面向对象",children:[]}]}],path:"/Java/",pathLocale:"/",extraFields:[]},{title:"空值（empty value）和null值",headers:[],path:"/Java/%E7%A9%BA%E5%80%BC%E5%92%8Cnull%E5%80%BC.html",pathLocale:"/",extraFields:[]},{title:"雷丰阳Java",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/Java/%E9%9B%B7%E4%B8%B0%E9%98%B3Java%E8%A7%86%E9%A2%91.html",pathLocale:"/",extraFields:[]},{title:"Linux",headers:[],path:"/Linux/",pathLocale:"/",extraFields:[]},{title:"一. NIO 基础",headers:[{level:2,title:"1. 三大组件",slug:"_1-三大组件",link:"#_1-三大组件",children:[{level:3,title:"1.1 Channel & Buffer",slug:"_1-1-channel-buffer",link:"#_1-1-channel-buffer",children:[]},{level:3,title:"1.2 Selector",slug:"_1-2-selector",link:"#_1-2-selector",children:[]}]},{level:2,title:"2. ByteBuffer",slug:"_2-bytebuffer",link:"#_2-bytebuffer",children:[{level:3,title:"2.1  ByteBuffer 正确使用姿势",slug:"_2-1-bytebuffer-正确使用姿势",link:"#_2-1-bytebuffer-正确使用姿势",children:[]},{level:3,title:"2.2 ByteBuffer 结构",slug:"_2-2-bytebuffer-结构",link:"#_2-2-bytebuffer-结构",children:[]},{level:3,title:"2.3 ByteBuffer 常见方法",slug:"_2-3-bytebuffer-常见方法",link:"#_2-3-bytebuffer-常见方法",children:[]},{level:3,title:"2.4 Scattering Reads",slug:"_2-4-scattering-reads",link:"#_2-4-scattering-reads",children:[]},{level:3,title:"2.5 Gathering Writes",slug:"_2-5-gathering-writes",link:"#_2-5-gathering-writes",children:[]},{level:3,title:"2.6 练习",slug:"_2-6-练习",link:"#_2-6-练习",children:[]}]},{level:2,title:"3. 文件编程",slug:"_3-文件编程",link:"#_3-文件编程",children:[{level:3,title:"3.1 FileChannel",slug:"_3-1-filechannel",link:"#_3-1-filechannel",children:[]},{level:3,title:"3.2 两个 Channel 传输数据",slug:"_3-2-两个-channel-传输数据",link:"#_3-2-两个-channel-传输数据",children:[]},{level:3,title:"3.3 Path",slug:"_3-3-path",link:"#_3-3-path",children:[]},{level:3,title:"3.4 Files",slug:"_3-4-files",link:"#_3-4-files",children:[]}]},{level:2,title:"4. 网络编程",slug:"_4-网络编程",link:"#_4-网络编程",children:[{level:3,title:"4.1 非阻塞 vs 阻塞",slug:"_4-1-非阻塞-vs-阻塞",link:"#_4-1-非阻塞-vs-阻塞",children:[]},{level:3,title:"4.2 Selector",slug:"_4-2-selector",link:"#_4-2-selector",children:[]},{level:3,title:"4.3 处理 accept 事件",slug:"_4-3-处理-accept-事件",link:"#_4-3-处理-accept-事件",children:[]},{level:3,title:"4.4 处理 read 事件",slug:"_4-4-处理-read-事件",link:"#_4-4-处理-read-事件",children:[]},{level:3,title:"4.5 处理 write 事件",slug:"_4-5-处理-write-事件",link:"#_4-5-处理-write-事件",children:[]},{level:3,title:"4.6 更进一步",slug:"_4-6-更进一步",link:"#_4-6-更进一步",children:[]},{level:3,title:"4.7 UDP",slug:"_4-7-udp",link:"#_4-7-udp",children:[]}]},{level:2,title:"5. NIO vs BIO",slug:"_5-nio-vs-bio",link:"#_5-nio-vs-bio",children:[{level:3,title:"5.1 stream vs channel",slug:"_5-1-stream-vs-channel",link:"#_5-1-stream-vs-channel",children:[]},{level:3,title:"5.2 IO 模型",slug:"_5-2-io-模型",link:"#_5-2-io-模型",children:[]},{level:3,title:"5.3 零拷贝",slug:"_5-3-零拷贝",link:"#_5-3-零拷贝",children:[]},{level:3,title:"5.3 AIO",slug:"_5-3-aio",link:"#_5-3-aio",children:[]}]}],path:"/Netty/01Netty-nio.html",pathLocale:"/",extraFields:[]},{title:"二. Netty 入门",headers:[{level:2,title:"1. 概述",slug:"_1-概述",link:"#_1-概述",children:[{level:3,title:"1.1 Netty 是什么？",slug:"_1-1-netty-是什么",link:"#_1-1-netty-是什么",children:[]},{level:3,title:"1.2 Netty 的作者",slug:"_1-2-netty-的作者",link:"#_1-2-netty-的作者",children:[]},{level:3,title:"1.3 Netty 的地位",slug:"_1-3-netty-的地位",link:"#_1-3-netty-的地位",children:[]},{level:3,title:"1.4 Netty 的优势",slug:"_1-4-netty-的优势",link:"#_1-4-netty-的优势",children:[]}]},{level:2,title:"2. Hello World",slug:"_2-hello-world",link:"#_2-hello-world",children:[{level:3,title:"2.1 目标",slug:"_2-1-目标",link:"#_2-1-目标",children:[]},{level:3,title:"2.2 服务器端",slug:"_2-2-服务器端",link:"#_2-2-服务器端",children:[]},{level:3,title:"2.3 客户端",slug:"_2-3-客户端",link:"#_2-3-客户端",children:[]},{level:3,title:"2.4 流程梳理",slug:"_2-4-流程梳理",link:"#_2-4-流程梳理",children:[]}]},{level:2,title:"3. 组件",slug:"_3-组件",link:"#_3-组件",children:[{level:3,title:"3.1 EventLoop",slug:"_3-1-eventloop",link:"#_3-1-eventloop",children:[]},{level:3,title:"3.2 Channel",slug:"_3-2-channel",link:"#_3-2-channel",children:[]},{level:3,title:"3.3 Future & Promise",slug:"_3-3-future-promise",link:"#_3-3-future-promise",children:[]},{level:3,title:"3.4 Handler & Pipeline",slug:"_3-4-handler-pipeline",link:"#_3-4-handler-pipeline",children:[]},{level:3,title:"3.5 ByteBuf",slug:"_3-5-bytebuf",link:"#_3-5-bytebuf",children:[]}]},{level:2,title:"4. 双向通信",slug:"_4-双向通信",link:"#_4-双向通信",children:[{level:3,title:"4.1 练习",slug:"_4-1-练习",link:"#_4-1-练习",children:[]},{level:3,title:"💡 读和写的误解",slug:"💡-读和写的误解",link:"#💡-读和写的误解",children:[]}]}],path:"/Netty/02Netty-%E5%85%A5%E9%97%A8.html",pathLocale:"/",extraFields:[]},{title:"三. Netty 进阶",headers:[{level:2,title:"1. 粘包与半包",slug:"_1-粘包与半包",link:"#_1-粘包与半包",children:[{level:3,title:"1.1 粘包现象",slug:"_1-1-粘包现象",link:"#_1-1-粘包现象",children:[]},{level:3,title:"1.2 半包现象",slug:"_1-2-半包现象",link:"#_1-2-半包现象",children:[]},{level:3,title:"1.3 现象分析",slug:"_1-3-现象分析",link:"#_1-3-现象分析",children:[]},{level:3,title:"1.4 解决方案",slug:"_1-4-解决方案",link:"#_1-4-解决方案",children:[]}]},{level:2,title:"2. 协议设计与解析",slug:"_2-协议设计与解析",link:"#_2-协议设计与解析",children:[{level:3,title:"2.1 为什么需要协议？",slug:"_2-1-为什么需要协议",link:"#_2-1-为什么需要协议",children:[]},{level:3,title:"2.2 redis 协议举例",slug:"_2-2-redis-协议举例",link:"#_2-2-redis-协议举例",children:[]},{level:3,title:"2.3 http 协议举例",slug:"_2-3-http-协议举例",link:"#_2-3-http-协议举例",children:[]},{level:3,title:"2.4 自定义协议要素",slug:"_2-4-自定义协议要素",link:"#_2-4-自定义协议要素",children:[]}]},{level:2,title:"3. 聊天室案例",slug:"_3-聊天室案例",link:"#_3-聊天室案例",children:[{level:3,title:"3.1 聊天室业务介绍",slug:"_3-1-聊天室业务介绍",link:"#_3-1-聊天室业务介绍",children:[]},{level:3,title:"3.2 聊天室业务-登录",slug:"_3-2-聊天室业务-登录",link:"#_3-2-聊天室业务-登录",children:[]},{level:3,title:"3.3 聊天室业务-单聊",slug:"_3-3-聊天室业务-单聊",link:"#_3-3-聊天室业务-单聊",children:[]},{level:3,title:"3.4 聊天室业务-群聊",slug:"_3-4-聊天室业务-群聊",link:"#_3-4-聊天室业务-群聊",children:[]},{level:3,title:"3.5 聊天室业务-退出",slug:"_3-5-聊天室业务-退出",link:"#_3-5-聊天室业务-退出",children:[]},{level:3,title:"3.6 聊天室业务-空闲检测",slug:"_3-6-聊天室业务-空闲检测",link:"#_3-6-聊天室业务-空闲检测",children:[]}]}],path:"/Netty/03Netty-%E8%BF%9B%E9%98%B6.html",pathLocale:"/",extraFields:[]},{title:"四. 优化与源码",headers:[{level:2,title:"1. 优化",slug:"_1-优化",link:"#_1-优化",children:[{level:3,title:"1.1 扩展序列化算法",slug:"_1-1-扩展序列化算法",link:"#_1-1-扩展序列化算法",children:[]},{level:3,title:"1.2 参数调优",slug:"_1-2-参数调优",link:"#_1-2-参数调优",children:[]},{level:3,title:"1.3 RPC 框架",slug:"_1-3-rpc-框架",link:"#_1-3-rpc-框架",children:[]}]},{level:2,title:"2. 源码分析",slug:"_2-源码分析",link:"#_2-源码分析",children:[{level:3,title:"2.1 启动剖析",slug:"_2-1-启动剖析",link:"#_2-1-启动剖析",children:[]},{level:3,title:"2.2 NioEventLoop 剖析",slug:"_2-2-nioeventloop-剖析",link:"#_2-2-nioeventloop-剖析",children:[]},{level:3,title:"2.3 accept 剖析",slug:"_2-3-accept-剖析",link:"#_2-3-accept-剖析",children:[]},{level:3,title:"2.4 read 剖析",slug:"_2-4-read-剖析",link:"#_2-4-read-剖析",children:[]}]}],path:"/Netty/04Netty-%E4%BC%98%E5%8C%96%E4%B8%8E%E6%BA%90%E7%A0%81.html",pathLocale:"/",extraFields:[]},{title:"黑马Netty",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/Netty/1.%E9%BB%91%E9%A9%AC%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",pathLocale:"/",extraFields:[]},{title:"Channel",headers:[{level:2,title:"1.连接问题",slug:"_1-连接问题",link:"#_1-连接问题",children:[]},{level:2,title:"2.处理结果",slug:"_2-处理结果",link:"#_2-处理结果",children:[]},{level:2,title:"3.处理关闭",slug:"_3-处理关闭",link:"#_3-处理关闭",children:[]}],path:"/Netty/Channel.html",pathLocale:"/",extraFields:[]},{title:"Netty",headers:[],path:"/Netty/",pathLocale:"/",extraFields:[]},{title:"关闭事件循环组",headers:[{level:3,title:"shutdownGracefully 的签名：",slug:"shutdowngracefully-的签名",link:"#shutdowngracefully-的签名",children:[]},{level:3,title:"例子：",slug:"例子",link:"#例子",children:[]},{level:3,title:"解释：",slug:"解释",link:"#解释",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Netty/%E5%85%B3%E9%97%AD%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%BB%84.html",pathLocale:"/",extraFields:[]},{title:"核心概念理解",headers:[{level:3,title:"1. 树立正确的观念：",slug:"_1-树立正确的观念",link:"#_1-树立正确的观念",children:[]},{level:3,title:"2. 把 Channel 理解为数据的通道：",slug:"_2-把-channel-理解为数据的通道",link:"#_2-把-channel-理解为数据的通道",children:[]},{level:3,title:"3. 把 msg 理解为流动的数据：",slug:"_3-把-msg-理解为流动的数据",link:"#_3-把-msg-理解为流动的数据",children:[]},{level:3,title:"4. 把 handler 理解为数据的处理工序：",slug:"_4-把-handler-理解为数据的处理工序",link:"#_4-把-handler-理解为数据的处理工序",children:[]},{level:3,title:"5. pipeline 负责发布事件并传播给每个 handler：",slug:"_5-pipeline-负责发布事件并传播给每个-handler",link:"#_5-pipeline-负责发布事件并传播给每个-handler",children:[]},{level:3,title:"6. handler 分为 Inbound 和 Outbound 两类：",slug:"_6-handler-分为-inbound-和-outbound-两类",link:"#_6-handler-分为-inbound-和-outbound-两类",children:[]},{level:3,title:"7. 把 EventLoop 理解为处理数据的工人：",slug:"_7-把-eventloop-理解为处理数据的工人",link:"#_7-把-eventloop-理解为处理数据的工人",children:[]},{level:3,title:"8. 任务队列与任务类型：",slug:"_8-任务队列与任务类型",link:"#_8-任务队列与任务类型",children:[]},{level:3,title:"9. 工人按照 pipeline 顺序处理数据：",slug:"_9-工人按照-pipeline-顺序处理数据",link:"#_9-工人按照-pipeline-顺序处理数据",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Netty/%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"Netty ByteBuf 内存管理：手动释放与自动释放",headers:[{level:3,title:"什么时候需要手动释放 ByteBuf？",slug:"什么时候需要手动释放-bytebuf",link:"#什么时候需要手动释放-bytebuf",children:[]},{level:3,title:"什么时候不需要手动释放 ByteBuf？",slug:"什么时候不需要手动释放-bytebuf",link:"#什么时候不需要手动释放-bytebuf",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Netty/%E9%87%8A%E6%94%BEByteBuf.html",pathLocale:"/",extraFields:[]},{title:"413 (Request Entity Too Large)",headers:[{level:3,title:"修改配置文件",slug:"修改配置文件",link:"#修改配置文件",children:[]},{level:3,title:"重启Nginx服务",slug:"重启nginx服务",link:"#重启nginx服务",children:[]}],path:"/Nginx/413%20(Request%20Entity%20Too%20Large).html",pathLocale:"/",extraFields:[]},{title:"Nginx",headers:[],path:"/Nginx/",pathLocale:"/",extraFields:[]},{title:"Python总结",headers:[],path:"/Python/",pathLocale:"/",extraFields:[]},{title:"黑马SSM",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/SSM/",pathLocale:"/",extraFields:[]},{title:"Spring",headers:[],path:"/Spring/",pathLocale:"/",extraFields:[]},{title:"Spring5.x概述",headers:[{level:2,title:"spring框架概述（Spring5.x）",slug:"spring框架概述-spring5-x",link:"#spring框架概述-spring5-x",children:[]},{level:2,title:"面试题",slug:"面试题",link:"#面试题",children:[{level:3,title:"spring方便解耦，简化开发体现在哪些方面？",slug:"spring方便解耦-简化开发体现在哪些方面",link:"#spring方便解耦-简化开发体现在哪些方面",children:[]}]}],path:"/Spring/Spring5.x%E6%A6%82%E8%BF%B0.html",pathLocale:"/",extraFields:[]},{title:"Spring Boot无数据源启动",headers:[],path:"/Spring/SpringBoot%E6%97%A0%E6%95%B0%E6%8D%AE%E6%BA%90%E5%90%AF%E5%8A%A8.html",pathLocale:"/",extraFields:[]},{title:"Vue",headers:[],path:"/Vue/",pathLocale:"/",extraFields:[]},{title:"vue模板",headers:[{level:2,title:"效果",slug:"效果",link:"#效果",children:[]}],path:"/Vue/vue%E6%A8%A1%E6%9D%BF.html",pathLocale:"/",extraFields:[]},{title:"表单验证",headers:[],path:"/Vue/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81.html",pathLocale:"/",extraFields:[]},{title:"L2TP/IPsec协议",headers:[{level:3,title:"1. L2TP（Layer 2 Tunneling Protocol）：",slug:"_1-l2tp-layer-2-tunneling-protocol",link:"#_1-l2tp-layer-2-tunneling-protocol",children:[]},{level:3,title:"2. IPsec（Internet Protocol Security）：",slug:"_2-ipsec-internet-protocol-security",link:"#_2-ipsec-internet-protocol-security",children:[]},{level:3,title:"3. L2TP/IPsec结合使用：",slug:"_3-l2tp-ipsec结合使用",link:"#_3-l2tp-ipsec结合使用",children:[]},{level:3,title:"4. 工作流程：",slug:"_4-工作流程",link:"#_4-工作流程",children:[]},{level:3,title:"5. 优缺点：",slug:"_5-优缺点",link:"#_5-优缺点",children:[]}],path:"/%E7%BD%91%E7%BB%9C/L2TPIPsec.html",pathLocale:"/",extraFields:[]},{title:"L2TP和IPsec协议的常见软件和工具",headers:[{level:3,title:"1. 操作系统内置支持",slug:"_1-操作系统内置支持",link:"#_1-操作系统内置支持",children:[]},{level:3,title:"2. 第三方VPN客户端软件",slug:"_2-第三方vpn客户端软件",link:"#_2-第三方vpn客户端软件",children:[]},{level:3,title:"3. 企业级VPN设备和解决方案",slug:"_3-企业级vpn设备和解决方案",link:"#_3-企业级vpn设备和解决方案",children:[]},{level:3,title:"4. 其他VPN服务",slug:"_4-其他vpn服务",link:"#_4-其他vpn服务",children:[]},{level:3,title:"5. 路由器和网关设备",slug:"_5-路由器和网关设备",link:"#_5-路由器和网关设备",children:[]}],path:"/%E7%BD%91%E7%BB%9C/L2TP%E5%92%8CIPsec%E5%8D%8F%E8%AE%AE%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7.html",pathLocale:"/",extraFields:[]},{title:"刷新dns缓存",headers:[{level:2,title:"Windows",slug:"windows",link:"#windows",children:[]},{level:2,title:"Mac",slug:"mac",link:"#mac",children:[]}],path:"/%E7%BD%91%E7%BB%9C/%E5%88%B7%E6%96%B0dns%E7%BC%93%E5%AD%98.html",pathLocale:"/",extraFields:[]},{title:"AMD桌面处理器规格",headers:[],path:"/%E8%A3%85%E6%9C%BA/AMD%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html",pathLocale:"/",extraFields:[]},{title:"Intel桌面处理器规格",headers:[],path:"/%E8%A3%85%E6%9C%BA/Intel%E6%A1%8C%E9%9D%A2%E5%A4%84%E7%90%86%E5%99%A8%E8%A7%84%E6%A0%BC.html",pathLocale:"/",extraFields:[]},{title:"电脑装机进阶",headers:[{level:2,title:"CPU/主板",slug:"cpu-主板",link:"#cpu-主板",children:[]},{level:2,title:"显卡",slug:"显卡",link:"#显卡",children:[]},{level:2,title:"内存",slug:"内存",link:"#内存",children:[]},{level:2,title:"存储",slug:"存储",link:"#存储",children:[]},{level:2,title:"电源",slug:"电源",link:"#电源",children:[]},{level:2,title:"散热/机箱/风扇",slug:"散热-机箱-风扇",link:"#散热-机箱-风扇",children:[]},{level:2,title:"显示器",slug:"显示器",link:"#显示器",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA%E8%BF%9B%E9%98%B6.html",pathLocale:"/",extraFields:[]},{title:"4060Ti配置",headers:[],path:"/%E8%A3%85%E6%9C%BA/%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE.html",pathLocale:"/",extraFields:[]},{title:"飞牛OS合盖不休眠",headers:[],path:"/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%90%88%E7%9B%96%E4%B8%8D%E4%BC%91%E7%9C%A0.html",pathLocale:"/",extraFields:[]},{title:"飞牛开关屏幕",headers:[],path:"/%E8%A3%85%E6%9C%BA/%E9%A3%9E%E7%89%9BOS%E5%BC%80%E5%85%B3%E5%B1%8F%E5%B9%95.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"代理模式（Proxy Pattern）",slug:"代理模式-proxy-pattern",link:"#代理模式-proxy-pattern",children:[{level:3,title:"1. 定义",slug:"_1-定义",link:"#_1-定义",children:[]},{level:3,title:"2. 特点",slug:"_2-特点",link:"#_2-特点",children:[]},{level:3,title:"3. 代理模式的角色",slug:"_3-代理模式的角色",link:"#_3-代理模式的角色",children:[]},{level:3,title:"4. 实现方式",slug:"_4-实现方式",link:"#_4-实现方式",children:[]},{level:3,title:"5. 应用场景",slug:"_5-应用场景",link:"#_5-应用场景",children:[]},{level:3,title:"6. 代理模式与装饰者模式的区别",slug:"_6-代理模式与装饰者模式的区别",link:"#_6-代理模式与装饰者模式的区别",children:[]},{level:3,title:"7. 总结",slug:"_7-总结",link:"#_7-总结",children:[]}]}],path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"解决 Java 反射问题：InaccessibleObjectException 和 --add-opens 配置",headers:[{level:3,title:"问题描述",slug:"问题描述",link:"#问题描述",children:[]},{level:3,title:"解决方案：使用 --add-opens",slug:"解决方案-使用-add-opens",link:"#解决方案-使用-add-opens",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Bug/Java/InaccessibleObjectException.html",pathLocale:"/",extraFields:[]},{title:"MySQL",headers:[{level:2,title:"安装",slug:"安装",link:"#安装",children:[]},{level:2,title:"安全配置",slug:"安全配置",link:"#安全配置",children:[]},{level:2,title:"笔记",slug:"笔记",link:"#笔记",children:[]},{level:2,title:"MyCat",slug:"mycat",link:"#mycat",children:[]},{level:2,title:"基础",slug:"基础",link:"#基础",children:[]},{level:2,title:"SQL示例",slug:"sql示例",link:"#sql示例",children:[]},{level:2,title:"SQL优化",slug:"sql优化",link:"#sql优化",children:[]},{level:2,title:"故障修复",slug:"故障修复",link:"#故障修复",children:[]}],path:"/Database/MySQL/",pathLocale:"/",extraFields:[]},{title:"Redis",headers:[],path:"/Database/Redis/",pathLocale:"/",extraFields:[]},{title:"Redis 是什么？架构是怎么样的？",headers:[{level:2,title:"本地缓存",slug:"本地缓存",link:"#本地缓存",children:[]},{level:2,title:"远程缓存",slug:"远程缓存",link:"#远程缓存",children:[]},{level:2,title:"多种数据类型支持",slug:"多种数据类型支持",link:"#多种数据类型支持",children:[]},{level:2,title:"内存过期策略",slug:"内存过期策略",link:"#内存过期策略",children:[]},{level:2,title:"缓存淘汰",slug:"缓存淘汰",link:"#缓存淘汰",children:[]},{level:2,title:"持久化",slug:"持久化",link:"#持久化",children:[]},{level:2,title:"简化网络协议",slug:"简化网络协议",link:"#简化网络协议",children:[]},{level:2,title:"Redis 是什么？",slug:"redis-是什么",link:"#redis-是什么",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"推荐阅读",slug:"推荐阅读",link:"#推荐阅读",children:[]}],path:"/Database/Redis/Redis%20%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%EF%BC%9F.html",pathLocale:"/",extraFields:[]},{title:"视频教程",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/Database/Redis/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",pathLocale:"/",extraFields:[]},{title:"博客项目",headers:[{level:3,title:"1. 目录结构",slug:"_1-目录结构",link:"#_1-目录结构",children:[]},{level:3,title:"2.docker方式启动",slug:"_2-docker方式启动",link:"#_2-docker方式启动",children:[]},{level:3,title:"3. docker-compose方式启动",slug:"_3-docker-compose方式启动",link:"#_3-docker-compose方式启动",children:[]}],path:"/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE.html",pathLocale:"/",extraFields:[]},{title:"玩客云",headers:[{level:3,title:"蓝灯常亮",slug:"蓝灯常亮",link:"#蓝灯常亮",children:[]},{level:3,title:"alist安装",slug:"alist安装",link:"#alist安装",children:[]},{level:3,title:"安装aria2",slug:"安装aria2",link:"#安装aria2",children:[]},{level:3,title:"安装Docker AriaNgWebUI",slug:"安装docker-ariangwebui",link:"#安装docker-ariangwebui",children:[]}],path:"/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%8E%A9%E5%AE%A2%E4%BA%91.html",pathLocale:"/",extraFields:[]},{title:"私有云部署软件",headers:[],path:"/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/%E7%A7%81%E6%9C%89%E4%BA%91%E9%83%A8%E7%BD%B2%E8%BD%AF%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"Dockerfile 构建 Spring Boot 镜像并运行服务",headers:[{level:2,title:"1. 什么是 Dockerfile ?",slug:"_1-什么是-dockerfile",link:"#_1-什么是-dockerfile",children:[]},{level:2,title:"2. 创建 Dockerfile",slug:"_2-创建-dockerfile",link:"#_2-创建-dockerfile",children:[]},{level:2,title:"3. 构建镜像",slug:"_3-构建镜像",link:"#_3-构建镜像",children:[]},{level:2,title:"4. 运行容器",slug:"_4-运行容器",link:"#_4-运行容器",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/Dockerfile%20%E6%9E%84%E5%BB%BA%20Spring%20Boot%20%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C%E6%9C%8D%E5%8A%A1.html",pathLocale:"/",extraFields:[]},{title:"容器与宿主机时间同步",headers:[{level:2,title:"问题",slug:"问题",link:"#问题",children:[]},{level:2,title:"解决方案",slug:"解决方案",link:"#解决方案",children:[{level:3,title:"1. 同步时间（常用）",slug:"_1-同步时间-常用",link:"#_1-同步时间-常用",children:[]},{level:3,title:"2.  docker run 添加参数",slug:"_2-docker-run-添加参数",link:"#_2-docker-run-添加参数",children:[]},{level:3,title:"3. DockerFile",slug:"_3-dockerfile",link:"#_3-dockerfile",children:[]},{level:3,title:"4. docker-compose",slug:"_4-docker-compose",link:"#_4-docker-compose",children:[]}]}],path:"/Docker/%E9%9A%8F%E7%AC%94/Docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5.html",pathLocale:"/",extraFields:[]},{title:"docker-compose安装软件",headers:[{level:2,title:"docker-compose安装redis",slug:"docker-compose安装redis",link:"#docker-compose安装redis",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/docker-compose%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"docker安装jenkins及配置",headers:[{level:2,title:"1. 什么是 jenkins?",slug:"_1-什么是-jenkins",link:"#_1-什么是-jenkins",children:[]},{level:2,title:"2. 为什么要使用 Jenkins 呢？",slug:"_2-为什么要使用-jenkins-呢",link:"#_2-为什么要使用-jenkins-呢",children:[]},{level:2,title:"3. 拉取镜像",slug:"_3-拉取镜像",link:"#_3-拉取镜像",children:[]},{level:2,title:"4. 运行容器",slug:"_4-运行容器",link:"#_4-运行容器",children:[]},{level:2,title:"5. 访问 Jenkins",slug:"_5-访问-jenkins",link:"#_5-访问-jenkins",children:[]},{level:2,title:"6. 安装插件",slug:"_6-安装插件",link:"#_6-安装插件",children:[]},{level:2,title:"7. 配置管理员用户",slug:"_7-配置管理员用户",link:"#_7-配置管理员用户",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85jenkins%E5%8F%8A%E9%85%8D%E7%BD%AE.html",pathLocale:"/",extraFields:[]},{title:"docker安装软件",headers:[{level:2,title:"docker安装Nginx",slug:"docker安装nginx",link:"#docker安装nginx",children:[]},{level:2,title:"docker安装jenkins",slug:"docker安装jenkins",link:"#docker安装jenkins",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"pull",headers:[{level:3,title:"docker pull 命令概述",slug:"docker-pull-命令概述",link:"#docker-pull-命令概述",children:[]},{level:3,title:"基本语法",slug:"基本语法",link:"#基本语法",children:[]},{level:3,title:"常用选项",slug:"常用选项",link:"#常用选项",children:[]},{level:3,title:"示例",slug:"示例",link:"#示例",children:[]},{level:3,title:"验证拉取的镜像",slug:"验证拉取的镜像",link:"#验证拉取的镜像",children:[]},{level:3,title:"注意事项",slug:"注意事项",link:"#注意事项",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/pull.html",pathLocale:"/",extraFields:[]},{title:"安装NocoDB",headers:[{level:3,title:"步骤1：安装Docker",slug:"步骤1-安装docker",link:"#步骤1-安装docker",children:[]},{level:3,title:"步骤2：拉取Nocodb镜像",slug:"步骤2-拉取nocodb镜像",link:"#步骤2-拉取nocodb镜像",children:[]},{level:3,title:"步骤3：运行Nocodb容器",slug:"步骤3-运行nocodb容器",link:"#步骤3-运行nocodb容器",children:[]},{level:3,title:"步骤4：访问Nocodb",slug:"步骤4-访问nocodb",link:"#步骤4-访问nocodb",children:[]},{level:3,title:"步骤5：连接数据库",slug:"步骤5-连接数据库",link:"#步骤5-连接数据库",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/%E5%AE%89%E8%A3%85NocoDB.html",pathLocale:"/",extraFields:[]},{title:"查看数据卷目录",headers:[],path:"/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%8D%B7%E7%9B%AE%E5%BD%95.html",pathLocale:"/",extraFields:[]},{title:"Nginx",headers:[{level:3,title:"1. 使用 docker inspect",slug:"_1-使用-docker-inspect",link:"#_1-使用-docker-inspect",children:[]},{level:3,title:"2. 使用 docker manifest inspect",slug:"_2-使用-docker-manifest-inspect",link:"#_2-使用-docker-manifest-inspect",children:[]},{level:3,title:"3. 使用第三方工具",slug:"_3-使用第三方工具",link:"#_3-使用第三方工具",children:[]},{level:3,title:"4. 使用 docker run 动态验证",slug:"_4-使用-docker-run-动态验证",link:"#_4-使用-docker-run-动态验证",children:[]},{level:3,title:"5. 强制指定架构运行",slug:"_5-强制指定架构运行",link:"#_5-强制指定架构运行",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/%E6%9F%A5%E7%9C%8B%E9%95%9C%E5%83%8F%E6%9E%B6%E6%9E%84.html",pathLocale:"/",extraFields:[]},{title:"特权模式运行容器",headers:[{level:3,title:"特权模式概述",slug:"特权模式概述",link:"#特权模式概述",children:[]},{level:3,title:"主要功能",slug:"主要功能",link:"#主要功能",children:[]},{level:3,title:"使用场景",slug:"使用场景",link:"#使用场景",children:[]},{level:3,title:"安全性考虑",slug:"安全性考虑",link:"#安全性考虑",children:[]},{level:3,title:"例子",slug:"例子",link:"#例子",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"镜像导入导出",headers:[{level:3,title:"导出 Docker 镜像",slug:"导出-docker-镜像",link:"#导出-docker-镜像",children:[]},{level:3,title:"导入 Docker 镜像",slug:"导入-docker-镜像",link:"#导入-docker-镜像",children:[]},{level:3,title:"镜像传输",slug:"镜像传输",link:"#镜像传输",children:[]},{level:3,title:"示例场景",slug:"示例场景",link:"#示例场景",children:[]},{level:3,title:"差异对比",slug:"差异对比",link:"#差异对比",children:[]}],path:"/Docker/%E9%9A%8F%E7%AC%94/%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA.html",pathLocale:"/",extraFields:[]},{title:"Java",headers:[],path:"/Interview/Java/",pathLocale:"/",extraFields:[]},{title:"MySQL面试题，84道MySQL八股文",headers:[{level:2,title:"🆗MySQL 基础",slug:"mysql-基础",link:"#mysql-基础",children:[{level:3,title:"🌟0.什么是 MySQL？",slug:"🌟0-什么是-mysql",link:"#🌟0-什么是-mysql",children:[]},{level:3,title:"1.两张表怎么进行连接？",slug:"_1-两张表怎么进行连接",link:"#_1-两张表怎么进行连接",children:[]},{level:3,title:"2.内连接、左连接、右连接有什么区别？",slug:"_2-内连接、左连接、右连接有什么区别",link:"#_2-内连接、左连接、右连接有什么区别",children:[]},{level:3,title:"3.说一下数据库的三大范式？",slug:"_3-说一下数据库的三大范式",link:"#_3-说一下数据库的三大范式",children:[]},{level:3,title:"4.varchar 与 char 的区别？",slug:"_4-varchar-与-char-的区别",link:"#_4-varchar-与-char-的区别",children:[]},{level:3,title:"5.blob 和 text 有什么区别？",slug:"_5-blob-和-text-有什么区别",link:"#_5-blob-和-text-有什么区别",children:[]},{level:3,title:"6.DATETIME 和 TIMESTAMP 有什么区别？",slug:"_6-datetime-和-timestamp-有什么区别",link:"#_6-datetime-和-timestamp-有什么区别",children:[]},{level:3,title:"7.in 和 exists 的区别？",slug:"_7-in-和-exists-的区别",link:"#_7-in-和-exists-的区别",children:[]},{level:3,title:"8.记录货币用什么类型比较好？",slug:"_8-记录货币用什么类型比较好",link:"#_8-记录货币用什么类型比较好",children:[]},{level:3,title:"9.怎么存储 emoji?",slug:"_9-怎么存储-emoji",link:"#_9-怎么存储-emoji",children:[]},{level:3,title:"10.drop、delete 与 truncate 的区别？",slug:"_10-drop、delete-与-truncate-的区别",link:"#_10-drop、delete-与-truncate-的区别",children:[]},{level:3,title:"11.UNION 与 UNION ALL 的区别？",slug:"_11-union-与-union-all-的区别",link:"#_11-union-与-union-all-的区别",children:[]},{level:3,title:"12.count(1)、count(*) 与 count(列名) 的区别？",slug:"_12-count-1-、count-与-count-列名-的区别",link:"#_12-count-1-、count-与-count-列名-的区别",children:[]},{level:3,title:"13.SQL 查询语句的执行顺序了解吗？",slug:"_13-sql-查询语句的执行顺序了解吗",link:"#_13-sql-查询语句的执行顺序了解吗",children:[]},{level:3,title:"14.介绍一下 MySQL 的常用命令（补充）",slug:"_14-介绍一下-mysql-的常用命令-补充",link:"#_14-介绍一下-mysql-的常用命令-补充",children:[]},{level:3,title:"👀15.MySQL bin 目录下的可执行文件了解吗（补充）",slug:"_15-mysql-bin-目录下的可执行文件了解吗-补充",link:"#_15-mysql-bin-目录下的可执行文件了解吗-补充",children:[]},{level:3,title:"16.MySQL 第 3-10 条记录怎么查？（补充）",slug:"_16-mysql-第-3-10-条记录怎么查-补充",link:"#_16-mysql-第-3-10-条记录怎么查-补充",children:[]},{level:3,title:"17.用过哪些 MySQL 函数？（补充）",slug:"_17-用过哪些-mysql-函数-补充",link:"#_17-用过哪些-mysql-函数-补充",children:[]},{level:3,title:"18.说说 SQL 的隐式数据类型转换？（补充）",slug:"_18-说说-sql-的隐式数据类型转换-补充",link:"#_18-说说-sql-的隐式数据类型转换-补充",children:[]},{level:3,title:"19. 说说 SQL 的语法树解析？（补充）",slug:"_19-说说-sql-的语法树解析-补充",link:"#_19-说说-sql-的语法树解析-补充",children:[]}]},{level:2,title:"数据库架构",slug:"数据库架构",link:"#数据库架构",children:[{level:3,title:"20.说说 MySQL 的基础架构？",slug:"_20-说说-mysql-的基础架构",link:"#_20-说说-mysql-的基础架构",children:[]},{level:3,title:"21.一条查询语句是如何执行的？",slug:"_21-一条查询语句是如何执行的",link:"#_21-一条查询语句是如何执行的",children:[]},{level:3,title:"22.一条更新语句是如何执行的？",slug:"_22-一条更新语句是如何执行的",link:"#_22-一条更新语句是如何执行的",children:[]},{level:3,title:"23.说说 MySQL 的段区页行（补充）",slug:"_23-说说-mysql-的段区页行-补充",link:"#_23-说说-mysql-的段区页行-补充",children:[]}]},{level:2,title:"存储引擎",slug:"存储引擎",link:"#存储引擎",children:[{level:3,title:"🔥24.MySQL 有哪些常见存储引擎？",slug:"_24-mysql-有哪些常见存储引擎",link:"#_24-mysql-有哪些常见存储引擎",children:[]},{level:3,title:"🔥25.存储引擎应该怎么选择？",slug:"_25-存储引擎应该怎么选择",link:"#_25-存储引擎应该怎么选择",children:[]},{level:3,title:"26.InnoDB 和 MyISAM 主要有什么区别？",slug:"_26-innodb-和-myisam-主要有什么区别",link:"#_26-innodb-和-myisam-主要有什么区别",children:[]},{level:3,title:"27. InnoDB 的 Buffer Pool了解吗？（补充）",slug:"_27-innodb-的-buffer-pool了解吗-补充",link:"#_27-innodb-的-buffer-pool了解吗-补充",children:[]}]},{level:2,title:"日志",slug:"日志",link:"#日志",children:[{level:3,title:"28.MySQL 日志文件有哪些？",slug:"_28-mysql-日志文件有哪些",link:"#_28-mysql-日志文件有哪些",children:[]},{level:3,title:"29.binlog 和 redo log 有什么区别？",slug:"_29-binlog-和-redo-log-有什么区别",link:"#_29-binlog-和-redo-log-有什么区别",children:[]},{level:3,title:"30.为什么要两阶段提交呢？",slug:"_30-为什么要两阶段提交呢",link:"#_30-为什么要两阶段提交呢",children:[]},{level:3,title:"31.redo log 的写入过程了解吗？",slug:"_31-redo-log-的写入过程了解吗",link:"#_31-redo-log-的写入过程了解吗",children:[]}]},{level:2,title:"SQL 优化",slug:"sql-优化",link:"#sql-优化",children:[{level:3,title:"🌟32.什么是慢 SQL？",slug:"🌟32-什么是慢-sql",link:"#🌟32-什么是慢-sql",children:[]},{level:3,title:"🌟33.你知道哪些方法来优化 SQL？",slug:"🌟33-你知道哪些方法来优化-sql",link:"#🌟33-你知道哪些方法来优化-sql",children:[]},{level:3,title:"34.怎么看执行计划 explain，如何理解其中各个字段的含义？",slug:"_34-怎么看执行计划-explain-如何理解其中各个字段的含义",link:"#_34-怎么看执行计划-explain-如何理解其中各个字段的含义",children:[]}]},{level:2,title:"索引",slug:"索引",link:"#索引",children:[{level:3,title:"35.为什么使用索引会加快查询？",slug:"_35-为什么使用索引会加快查询",link:"#_35-为什么使用索引会加快查询",children:[]},{level:3,title:"36.能简单说一下索引的分类吗？",slug:"_36-能简单说一下索引的分类吗",link:"#_36-能简单说一下索引的分类吗",children:[]},{level:3,title:"37.创建索引有哪些注意点？",slug:"_37-创建索引有哪些注意点",link:"#_37-创建索引有哪些注意点",children:[]},{level:3,title:"38.索引哪些情况下会失效呢？",slug:"_38-索引哪些情况下会失效呢",link:"#_38-索引哪些情况下会失效呢",children:[]},{level:3,title:"39.索引不适合哪些场景呢？",slug:"_39-索引不适合哪些场景呢",link:"#_39-索引不适合哪些场景呢",children:[]},{level:3,title:"40.索引是不是建的越多越好？",slug:"_40-索引是不是建的越多越好",link:"#_40-索引是不是建的越多越好",children:[]},{level:3,title:"41.为什么 InnoDB 要使用 B+树作为索引？",slug:"_41-为什么-innodb-要使用-b-树作为索引",link:"#_41-为什么-innodb-要使用-b-树作为索引",children:[]},{level:3,title:"42.一棵 B+树能存储多少条数据呢？",slug:"_42-一棵-b-树能存储多少条数据呢",link:"#_42-一棵-b-树能存储多少条数据呢",children:[]},{level:3,title:"43.为什么不用普通二叉树？",slug:"_43-为什么不用普通二叉树",link:"#_43-为什么不用普通二叉树",children:[]},{level:3,title:"44.为什么用 B+ 树而不用 B 树呢？",slug:"_44-为什么用-b-树而不用-b-树呢",link:"#_44-为什么用-b-树而不用-b-树呢",children:[]},{level:3,title:"45.Hash 索引和 B+ 树索引区别是什么？",slug:"_45-hash-索引和-b-树索引区别是什么",link:"#_45-hash-索引和-b-树索引区别是什么",children:[]},{level:3,title:"46.聚簇索引与非聚簇索引的区别？",slug:"_46-聚簇索引与非聚簇索引的区别",link:"#_46-聚簇索引与非聚簇索引的区别",children:[]},{level:3,title:"47.回表了解吗？",slug:"_47-回表了解吗",link:"#_47-回表了解吗",children:[]},{level:3,title:"48.联合索引了解吗？（补充）",slug:"_48-联合索引了解吗-补充",link:"#_48-联合索引了解吗-补充",children:[]},{level:3,title:"49.覆盖索引了解吗？",slug:"_49-覆盖索引了解吗",link:"#_49-覆盖索引了解吗",children:[]},{level:3,title:"50.什么是最左前缀原则？",slug:"_50-什么是最左前缀原则",link:"#_50-什么是最左前缀原则",children:[]},{level:3,title:"51.什么是索引下推优化？",slug:"_51-什么是索引下推优化",link:"#_51-什么是索引下推优化",children:[]},{level:3,title:"52.如何查看是否用到了索引？（补充）",slug:"_52-如何查看是否用到了索引-补充",link:"#_52-如何查看是否用到了索引-补充",children:[]}]},{level:2,title:"锁",slug:"锁",link:"#锁",children:[{level:3,title:"53.MySQL 中有哪几种锁，列举一下？",slug:"_53-mysql-中有哪几种锁-列举一下",link:"#_53-mysql-中有哪几种锁-列举一下",children:[]},{level:3,title:"54.全局锁和表级锁了解吗？（补充）",slug:"_54-全局锁和表级锁了解吗-补充",link:"#_54-全局锁和表级锁了解吗-补充",children:[]},{level:3,title:"55.说说 MySQL 的行锁？",slug:"_55-说说-mysql-的行锁",link:"#_55-说说-mysql-的行锁",children:[]},{level:3,title:"85. 间隙锁了解吗？（补充）",slug:"_85-间隙锁了解吗-补充",link:"#_85-间隙锁了解吗-补充",children:[]},{level:3,title:"56.意向锁是什么知道吗？",slug:"_56-意向锁是什么知道吗",link:"#_56-意向锁是什么知道吗",children:[]},{level:3,title:"57.MySQL 的乐观锁和悲观锁了解吗？",slug:"_57-mysql-的乐观锁和悲观锁了解吗",link:"#_57-mysql-的乐观锁和悲观锁了解吗",children:[]},{level:3,title:"58.遇到过死锁问题吗，你是如何解决的？",slug:"_58-遇到过死锁问题吗-你是如何解决的",link:"#_58-遇到过死锁问题吗-你是如何解决的",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"59.MySQL 事务的四大特性说一下？",slug:"_59-mysql-事务的四大特性说一下",link:"#_59-mysql-事务的四大特性说一下",children:[]},{level:3,title:"60.ACID 靠什么保证的呢？",slug:"_60-acid-靠什么保证的呢",link:"#_60-acid-靠什么保证的呢",children:[]},{level:3,title:"61.事务的隔离级别有哪些？",slug:"_61-事务的隔离级别有哪些",link:"#_61-事务的隔离级别有哪些",children:[]},{level:3,title:"62.什么是脏读、不可重复读、幻读呢？",slug:"_62-什么是脏读、不可重复读、幻读呢",link:"#_62-什么是脏读、不可重复读、幻读呢",children:[]},{level:3,title:"63.事务的隔离级别是如何实现的？",slug:"_63-事务的隔离级别是如何实现的",link:"#_63-事务的隔离级别是如何实现的",children:[]},{level:3,title:"64.MVCC 了解吗？怎么实现的？",slug:"_64-mvcc-了解吗-怎么实现的",link:"#_64-mvcc-了解吗-怎么实现的",children:[]}]},{level:2,title:"高可用/性能",slug:"高可用-性能",link:"#高可用-性能",children:[{level:3,title:"65.数据库读写分离了解吗？",slug:"_65-数据库读写分离了解吗",link:"#_65-数据库读写分离了解吗",children:[]},{level:3,title:"66.读写分离的分配怎么实现呢？",slug:"_66-读写分离的分配怎么实现呢",link:"#_66-读写分离的分配怎么实现呢",children:[]},{level:3,title:"67.主从复制原理了解吗？",slug:"_67-主从复制原理了解吗",link:"#_67-主从复制原理了解吗",children:[]},{level:3,title:"68.主从同步延迟怎么处理？",slug:"_68-主从同步延迟怎么处理",link:"#_68-主从同步延迟怎么处理",children:[]},{level:3,title:"69.你们一般是怎么分库的呢？",slug:"_69-你们一般是怎么分库的呢",link:"#_69-你们一般是怎么分库的呢",children:[]},{level:3,title:"70.那你们是怎么分表的？",slug:"_70-那你们是怎么分表的",link:"#_70-那你们是怎么分表的",children:[]},{level:3,title:"71.分片策略有哪几种？",slug:"_71-分片策略有哪几种",link:"#_71-分片策略有哪几种",children:[]},{level:3,title:"72.不停机扩容怎么实现？",slug:"_72-不停机扩容怎么实现",link:"#_72-不停机扩容怎么实现",children:[]},{level:3,title:"73.怎么分库分表？",slug:"_73-怎么分库分表",link:"#_73-怎么分库分表",children:[]},{level:3,title:"74.你觉得分库分表会带来什么问题呢？",slug:"_74-你觉得分库分表会带来什么问题呢",link:"#_74-你觉得分库分表会带来什么问题呢",children:[]}]},{level:2,title:"运维",slug:"运维",link:"#运维",children:[{level:3,title:"75.百万级别以上的数据如何删除？",slug:"_75-百万级别以上的数据如何删除",link:"#_75-百万级别以上的数据如何删除",children:[]},{level:3,title:"76.百万千万级大表如何添加字段？",slug:"_76-百万千万级大表如何添加字段",link:"#_76-百万千万级大表如何添加字段",children:[]},{level:3,title:"77.MySQL cpu 飙升的话，要怎么处理呢？",slug:"_77-mysql-cpu-飙升的话-要怎么处理呢",link:"#_77-mysql-cpu-飙升的话-要怎么处理呢",children:[]}]},{level:2,title:"SQL 题",slug:"sql-题",link:"#sql-题",children:[{level:3,title:"78.一张表：id，name，age，sex，class，sql 语句：所有年龄为 18 的人的名字？找到每个班年龄大于 18 有多少人？找到每个班年龄排前两名的人？（补充）",slug:"_78-一张表-id-name-age-sex-class-sql-语句-所有年龄为-18-的人的名字-找到每个班年龄大于-18-有多少人-找到每个班年龄排前两名的人-补充",link:"#_78-一张表-id-name-age-sex-class-sql-语句-所有年龄为-18-的人的名字-找到每个班年龄大于-18-有多少人-找到每个班年龄排前两名的人-补充",children:[]},{level:3,title:"79.有一个查询需求，MySQL 中有两个表，一个表 1000W 数据，另一个表只有几千数据，要做一个关联查询，如何优化",slug:"_79-有一个查询需求-mysql-中有两个表-一个表-1000w-数据-另一个表只有几千数据-要做一个关联查询-如何优化",link:"#_79-有一个查询需求-mysql-中有两个表-一个表-1000w-数据-另一个表只有几千数据-要做一个关联查询-如何优化",children:[]},{level:3,title:"80.新建一个表结构，创建索引，将百万或千万级的数据使用 insert 导入该表，新建一个表结构，将百万或千万级的数据使用 isnert 导入该表，再创建索引，这两种效率哪个高呢？或者说用时短呢？",slug:"_80-新建一个表结构-创建索引-将百万或千万级的数据使用-insert-导入该表-新建一个表结构-将百万或千万级的数据使用-isnert-导入该表-再创建索引-这两种效率哪个高呢-或者说用时短呢",link:"#_80-新建一个表结构-创建索引-将百万或千万级的数据使用-insert-导入该表-新建一个表结构-将百万或千万级的数据使用-isnert-导入该表-再创建索引-这两种效率哪个高呢-或者说用时短呢",children:[]},{level:3,title:"81.什么是深分页，select * from tbn limit 1000000000 这个有什么问题，如果表大或者表小分别什么问题",slug:"_81-什么是深分页-select-from-tbn-limit-1000000000-这个有什么问题-如果表大或者表小分别什么问题",link:"#_81-什么是深分页-select-from-tbn-limit-1000000000-这个有什么问题-如果表大或者表小分别什么问题",children:[]},{level:3,title:"82.一个表（name, sex,age,id），select age,id,name from tblname where name='paicoding';怎么建索引",slug:"_82-一个表-name-sex-age-id-select-age-id-name-from-tblname-where-name-paicoding-怎么建索引",link:"#_82-一个表-name-sex-age-id-select-age-id-name-from-tblname-where-name-paicoding-怎么建索引",children:[]},{level:3,title:"83.SQL 题：一个学生成绩表，字段有学生姓名、班级、成绩，求各班前十名",slug:"_83-sql-题-一个学生成绩表-字段有学生姓名、班级、成绩-求各班前十名",link:"#_83-sql-题-一个学生成绩表-字段有学生姓名、班级、成绩-求各班前十名",children:[]}]}],path:"/Interview/MySQL/MySQL%E9%9D%A2%E6%B8%A384.html",pathLocale:"/",extraFields:[]},{title:"60道 MySQL 精选面试题(优化版)",headers:[{level:2,title:"📚基础",slug:"基础",link:"#基础",children:[{level:3,title:"📖1.关系型和非关系型数据库的区别",slug:"_1-关系型和非关系型数据库的区别",link:"#_1-关系型和非关系型数据库的区别",children:[]},{level:3,title:"📖2.详细说一下一条 MySQL 语句执行的步骤",slug:"_2-详细说一下一条-mysql-语句执行的步骤",link:"#_2-详细说一下一条-mysql-语句执行的步骤",children:[]}]},{level:2,title:"📚索引相关",slug:"索引相关",link:"#索引相关",children:[{level:3,title:"📖3.MySQL 使用索引的原因？",slug:"_3-mysql-使用索引的原因",link:"#_3-mysql-使用索引的原因",children:[]},{level:3,title:"📚4.索引的三种常见底层数据结构以及优缺点",slug:"_4-索引的三种常见底层数据结构以及优缺点",link:"#_4-索引的三种常见底层数据结构以及优缺点",children:[]},{level:3,title:"📖5.MySQL的索引类型有哪些？",slug:"_5-mysql的索引类型有哪些",link:"#_5-mysql的索引类型有哪些",children:[]},{level:3,title:"📖6. MyISAM 和 InnoDB 实现 B 树索引方式的区别是什么？",slug:"_6-myisam-和-innodb-实现-b-树索引方式的区别是什么",link:"#_6-myisam-和-innodb-实现-b-树索引方式的区别是什么",children:[]},{level:3,title:"📖7.InnoDB 为什么设计 B+ 树索引？",slug:"_7-innodb-为什么设计-b-树索引",link:"#_7-innodb-为什么设计-b-树索引",children:[]},{level:3,title:"📚8.什么是覆盖索引和索引下推？",slug:"_8-什么是覆盖索引和索引下推",link:"#_8-什么是覆盖索引和索引下推",children:[]},{level:3,title:"📖9.哪些操作会导致索引失效？",slug:"_9-哪些操作会导致索引失效",link:"#_9-哪些操作会导致索引失效",children:[]},{level:3,title:"📖10.字符串加索引",slug:"_10-字符串加索引",link:"#_10-字符串加索引",children:[]}]},{level:2,title:"📚 日志相关",slug:"日志相关",link:"#日志相关",children:[{level:3,title:"📖11.MySQL 的 change buffer 是什么？",slug:"_11-mysql-的-change-buffer-是什么",link:"#_11-mysql-的-change-buffer-是什么",children:[]},{level:3,title:"👀 12.MySQL 是如何判断一行扫描数的？",slug:"_12-mysql-是如何判断一行扫描数的",link:"#_12-mysql-是如何判断一行扫描数的",children:[]},{level:3,title:"📖13.MySQL 的 redo log 和 binlog 区别？",slug:"_13-mysql-的-redo-log-和-binlog-区别",link:"#_13-mysql-的-redo-log-和-binlog-区别",children:[]},{level:3,title:"📖14. MySQL中的WAL机制是什么,有什么优点？",slug:"_14-mysql中的wal机制是什么-有什么优点",link:"#_14-mysql中的wal机制是什么-有什么优点",children:[]},{level:3,title:"📖15.为什么需要 redo log？",slug:"_15-为什么需要-redo-log",link:"#_15-为什么需要-redo-log",children:[]},{level:3,title:"📖16.为什么 redo log 具有 crash-safe 的能力，是 binlog 无法替代的？",slug:"_16-为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的",link:"#_16-为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的",children:[]},{level:3,title:"📖17.当数据库 crash 后，如何恢复未刷盘的数据到内存中？",slug:"_17-当数据库-crash-后-如何恢复未刷盘的数据到内存中",link:"#_17-当数据库-crash-后-如何恢复未刷盘的数据到内存中",children:[]},{level:3,title:"📖18.redo log 写入方式？",slug:"_18-redo-log-写入方式",link:"#_18-redo-log-写入方式",children:[]},{level:3,title:"📖19.redo log 的执行流程?",slug:"_19-redo-log-的执行流程",link:"#_19-redo-log-的执行流程",children:[]},{level:3,title:"📖20.binlog 的概念是什么，起到什么作用， 可以保证 crash-safe 吗?",slug:"_20-binlog-的概念是什么-起到什么作用-可以保证-crash-safe-吗",link:"#_20-binlog-的概念是什么-起到什么作用-可以保证-crash-safe-吗",children:[]},{level:3,title:"📚21.MySQL事务的二阶段提交是什么？",slug:"_21-mysql事务的二阶段提交是什么",link:"#_21-mysql事务的二阶段提交是什么",children:[]},{level:3,title:"📖22.MySQL 怎么知道 binlog 是完整的?",slug:"_22-mysql-怎么知道-binlog-是完整的",link:"#_22-mysql-怎么知道-binlog-是完整的",children:[]},{level:3,title:"📚23.binlog 日志的三种格式",slug:"_23-binlog-日志的三种格式",link:"#_23-binlog-日志的三种格式",children:[]},{level:3,title:"📖24.redo log日志格式",slug:"_24-redo-log日志格式",link:"#_24-redo-log日志格式",children:[]},{level:3,title:"📖25.原本可以执行得很快的 SQL 语句，执行速度却比预期的慢很多，原因是什么？如何解决？",slug:"_25-原本可以执行得很快的-sql-语句-执行速度却比预期的慢很多-原因是什么-如何解决",link:"#_25-原本可以执行得很快的-sql-语句-执行速度却比预期的慢很多-原因是什么-如何解决",children:[]},{level:3,title:"📖26.InnoDB 数据页结构",slug:"_26-innodb-数据页结构",link:"#_26-innodb-数据页结构",children:[]}]},{level:2,title:"📚数据相关",slug:"数据相关",link:"#数据相关",children:[{level:3,title:"📖27.MySQL 是如何保证数据不丢失的？",slug:"_27-mysql-是如何保证数据不丢失的",link:"#_27-mysql-是如何保证数据不丢失的",children:[]},{level:3,title:"📖28.误删数据怎么办？",slug:"_28-误删数据怎么办",link:"#_28-误删数据怎么办",children:[]},{level:3,title:"📚29.drop、truncate 和 delete 的区别?",slug:"_29-drop、truncate-和-delete-的区别",link:"#_29-drop、truncate-和-delete-的区别",children:[]},{level:3,title:"📖30. MySQL 中两个 kill 命令？",slug:"_30-mysql-中两个-kill-命令",link:"#_30-mysql-中两个-kill-命令",children:[]},{level:3,title:"📖31.如何理解 MySQL 的边读边发?",slug:"_31-如何理解-mysql-的边读边发",link:"#_31-如何理解-mysql-的边读边发",children:[]},{level:3,title:"📖32.MySQL 的大表查询为什么不会爆内存？",slug:"_32-mysql-的大表查询为什么不会爆内存",link:"#_32-mysql-的大表查询为什么不会爆内存",children:[]},{level:3,title:"📖33.MySQL 临时表的用法和特性?",slug:"_33-mysql-临时表的用法和特性",link:"#_33-mysql-临时表的用法和特性",children:[]},{level:3,title:"📖34.MySQL 存储引擎介绍（InnoDB、MyISAM、MEMORY）",slug:"_34-mysql-存储引擎介绍-innodb、myisam、memory",link:"#_34-mysql-存储引擎介绍-innodb、myisam、memory",children:[]}]}],path:"/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160-%E4%BC%98%E5%8C%96%E7%89%88.html",pathLocale:"/",extraFields:[]},{title:"60 道 MySQL 精选面试题👍",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1、关系型和非关系型数据库的区别？",slug:"_1、关系型和非关系型数据库的区别",link:"#_1、关系型和非关系型数据库的区别",children:[]},{level:3,title:"2、详细说一下一条 MySQL 语句执行的步骤",slug:"_2、详细说一下一条-mysql-语句执行的步骤",link:"#_2、详细说一下一条-mysql-语句执行的步骤",children:[]}]},{level:2,title:"索引相关",slug:"索引相关",link:"#索引相关",children:[{level:3,title:"3、MySQL 使用索引的原因？",slug:"_3、mysql-使用索引的原因",link:"#_3、mysql-使用索引的原因",children:[]},{level:3,title:"4、索引的三种常见底层数据结构以及优缺点",slug:"_4、索引的三种常见底层数据结构以及优缺点",link:"#_4、索引的三种常见底层数据结构以及优缺点",children:[]},{level:3,title:"5、索引的常见类型以及它是如何发挥作用的？",slug:"_5、索引的常见类型以及它是如何发挥作用的",link:"#_5、索引的常见类型以及它是如何发挥作用的",children:[]},{level:3,title:"6、MyISAM 和 InnoDB 实现 B 树索引方式的区别是什么？",slug:"_6、myisam-和-innodb-实现-b-树索引方式的区别是什么",link:"#_6、myisam-和-innodb-实现-b-树索引方式的区别是什么",children:[]},{level:3,title:"7、InnoDB 为什么设计 B+ 树索引？",slug:"_7、innodb-为什么设计-b-树索引",link:"#_7、innodb-为什么设计-b-树索引",children:[]},{level:3,title:"8、什么是覆盖索引和索引下推？",slug:"_8、什么是覆盖索引和索引下推",link:"#_8、什么是覆盖索引和索引下推",children:[]},{level:3,title:"9、哪些操作会导致索引失效？",slug:"_9、哪些操作会导致索引失效",link:"#_9、哪些操作会导致索引失效",children:[]},{level:3,title:"10、字符串加索引",slug:"_10、字符串加索引",link:"#_10、字符串加索引",children:[]}]},{level:2,title:"日志相关",slug:"日志相关",link:"#日志相关",children:[{level:3,title:"11、MySQL 的 change buffer 是什么？",slug:"_11、mysql-的-change-buffer-是什么",link:"#_11、mysql-的-change-buffer-是什么",children:[]},{level:3,title:"12、MySQL 是如何判断一行扫描数的？",slug:"_12、mysql-是如何判断一行扫描数的",link:"#_12、mysql-是如何判断一行扫描数的",children:[]},{level:3,title:"13、MySQL 的 redo log 和 binlog 区别？",slug:"_13、mysql-的-redo-log-和-binlog-区别",link:"#_13、mysql-的-redo-log-和-binlog-区别",children:[]},{level:3,title:"14、为什么需要 redo log？",slug:"_14、为什么需要-redo-log",link:"#_14、为什么需要-redo-log",children:[]},{level:3,title:"15、为什么 redo log 具有 crash-safe 的能力，是 binlog 无法替代的？",slug:"_15、为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的",link:"#_15、为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的",children:[]},{level:3,title:"16、当数据库 crash 后，如何恢复未刷盘的数据到内存中？",slug:"_16、当数据库-crash-后-如何恢复未刷盘的数据到内存中",link:"#_16、当数据库-crash-后-如何恢复未刷盘的数据到内存中",children:[]},{level:3,title:"17、redo log 写入方式？",slug:"_17、redo-log-写入方式",link:"#_17、redo-log-写入方式",children:[]},{level:3,title:"18、redo log 的执行流程?",slug:"_18、redo-log-的执行流程",link:"#_18、redo-log-的执行流程",children:[]},{level:3,title:"19、binlog 的概念是什么，起到什么作用， 可以保证 crash-safe 吗?",slug:"_19、binlog-的概念是什么-起到什么作用-可以保证-crash-safe-吗",link:"#_19、binlog-的概念是什么-起到什么作用-可以保证-crash-safe-吗",children:[]},{level:3,title:"20、什么是两阶段提交？",slug:"_20、什么是两阶段提交",link:"#_20、什么是两阶段提交",children:[]},{level:3,title:"21、MySQL 怎么知道 binlog 是完整的?",slug:"_21、mysql-怎么知道-binlog-是完整的",link:"#_21、mysql-怎么知道-binlog-是完整的",children:[]},{level:3,title:"22、什么是 WAL 技术，有什么优点？",slug:"_22、什么是-wal-技术-有什么优点",link:"#_22、什么是-wal-技术-有什么优点",children:[]},{level:3,title:"23、binlog 日志的三种格式",slug:"_23、binlog-日志的三种格式",link:"#_23、binlog-日志的三种格式",children:[]},{level:3,title:"24、redo log日志格式",slug:"_24、redo-log日志格式",link:"#_24、redo-log日志格式",children:[]},{level:3,title:"25、原本可以执行得很快的 SQL 语句，执行速度却比预期的慢很多，原因是什么？如何解决？",slug:"_25、原本可以执行得很快的-sql-语句-执行速度却比预期的慢很多-原因是什么-如何解决",link:"#_25、原本可以执行得很快的-sql-语句-执行速度却比预期的慢很多-原因是什么-如何解决",children:[]},{level:3,title:"26、InnoDB 数据页结构",slug:"_26、innodb-数据页结构",link:"#_26、innodb-数据页结构",children:[]}]},{level:2,title:"数据相关",slug:"数据相关",link:"#数据相关",children:[{level:3,title:"27、MySQL 是如何保证数据不丢失的？",slug:"_27、mysql-是如何保证数据不丢失的",link:"#_27、mysql-是如何保证数据不丢失的",children:[]},{level:3,title:"28、误删数据怎么办？",slug:"_28、误删数据怎么办",link:"#_28、误删数据怎么办",children:[]},{level:3,title:"29、drop、truncate 和 delete 的区别",slug:"_29、drop、truncate-和-delete-的区别",link:"#_29、drop、truncate-和-delete-的区别",children:[]},{level:3,title:"30、在 MySQL 中有两个 kill 命令",slug:"_30、在-mysql-中有两个-kill-命令",link:"#_30、在-mysql-中有两个-kill-命令",children:[]},{level:3,title:"31、如何理解 MySQL 的边读边发",slug:"_31、如何理解-mysql-的边读边发",link:"#_31、如何理解-mysql-的边读边发",children:[]},{level:3,title:"32、MySQL 的大表查询为什么不会爆内存？",slug:"_32、mysql-的大表查询为什么不会爆内存",link:"#_32、mysql-的大表查询为什么不会爆内存",children:[]},{level:3,title:"33、MySQL 临时表的用法和特性",slug:"_33、mysql-临时表的用法和特性",link:"#_33、mysql-临时表的用法和特性",children:[]},{level:3,title:"34、MySQL 存储引擎介绍（InnoDB、MyISAM、MEMORY）",slug:"_34、mysql-存储引擎介绍-innodb、myisam、memory",link:"#_34、mysql-存储引擎介绍-innodb、myisam、memory",children:[]},{level:3,title:"35、都说 InnoDB 好，那还要不要使用 MEMORY 引擎？",slug:"_35、都说-innodb-好-那还要不要使用-memory-引擎",link:"#_35、都说-innodb-好-那还要不要使用-memory-引擎",children:[]},{level:3,title:"36、如果数据库误操作, 如何执行数据恢复?",slug:"_36、如果数据库误操作-如何执行数据恢复",link:"#_36、如果数据库误操作-如何执行数据恢复",children:[]}]},{level:2,title:"主从备份相关",slug:"主从备份相关",link:"#主从备份相关",children:[{level:3,title:"37、MySQL 是如何保证主备同步？",slug:"_37、mysql-是如何保证主备同步",link:"#_37、mysql-是如何保证主备同步",children:[]},{level:3,title:"38、什么是主备延迟",slug:"_38、什么是主备延迟",link:"#_38、什么是主备延迟",children:[]},{level:3,title:"39、为什么要有多线程复制策略？",slug:"_39、为什么要有多线程复制策略",link:"#_39、为什么要有多线程复制策略",children:[]},{level:3,title:"40、MySQL 的并行策略有哪些？",slug:"_40、mysql-的并行策略有哪些",link:"#_40、mysql-的并行策略有哪些",children:[]},{level:3,title:"41、MySQL的一主一备和一主多从有什么区别？",slug:"_41、mysql的一主一备和一主多从有什么区别",link:"#_41、mysql的一主一备和一主多从有什么区别",children:[]},{level:3,title:"42、主库出问题如何解决?",slug:"_42、主库出问题如何解决",link:"#_42、主库出问题如何解决",children:[]},{level:3,title:"43、MySQL 读写分离涉及到过期读问题的几种解决方案?",slug:"_43、mysql-读写分离涉及到过期读问题的几种解决方案",link:"#_43、mysql-读写分离涉及到过期读问题的几种解决方案",children:[]},{level:3,title:"44、MySQL的并发链接和并发查询有什么区别？",slug:"_44、mysql的并发链接和并发查询有什么区别",link:"#_44、mysql的并发链接和并发查询有什么区别",children:[]}]},{level:2,title:"性能相关",slug:"性能相关",link:"#性能相关",children:[{level:3,title:"45、短时间提高 MySQL 性能的方法",slug:"_45、短时间提高-mysql-性能的方法",link:"#_45、短时间提高-mysql-性能的方法",children:[]},{level:3,title:"46、为什么 MySQL 自增主键 ID 不连续？",slug:"_46、为什么-mysql-自增主键-id-不连续",link:"#_46、为什么-mysql-自增主键-id-不连续",children:[]},{level:3,title:"47、InnoDB 为什么要用自增 ID 作为主键？",slug:"_47、innodb-为什么要用自增-id-作为主键",link:"#_47、innodb-为什么要用自增-id-作为主键",children:[]},{level:3,title:"48、如何最快的复制一张表？",slug:"_48、如何最快的复制一张表",link:"#_48、如何最快的复制一张表",children:[]},{level:3,title:"49、grant 和 flush privileges语句",slug:"_49、grant-和-flush-privileges语句",link:"#_49、grant-和-flush-privileges语句",children:[]},{level:3,title:"50、要不要使用分区表？",slug:"_50、要不要使用分区表",link:"#_50、要不要使用分区表",children:[]},{level:3,title:"51、join 用法",slug:"_51、join-用法",link:"#_51、join-用法",children:[]},{level:3,title:"52、MySQL 有哪些自增ID？各自场景是什么？",slug:"_52、mysql-有哪些自增id-各自场景是什么",link:"#_52、mysql-有哪些自增id-各自场景是什么",children:[]},{level:3,title:"53、Xid 在 MySQL 内部是怎么生成的呢？",slug:"_53、xid-在-mysql-内部是怎么生成的呢",link:"#_53、xid-在-mysql-内部是怎么生成的呢",children:[]}]},{level:2,title:"锁相关",slug:"锁相关",link:"#锁相关",children:[{level:3,title:"54、说一下 MySQL 的锁",slug:"_54、说一下-mysql-的锁",link:"#_54、说一下-mysql-的锁",children:[]},{level:3,title:"55、什么是幻读？",slug:"_55、什么是幻读",link:"#_55、什么是幻读",children:[]}]},{level:2,title:"其它为什么系列",slug:"其它为什么系列",link:"#其它为什么系列",children:[{level:3,title:"56、为什么 MySQL 会抖一下？",slug:"_56、为什么-mysql-会抖一下",link:"#_56、为什么-mysql-会抖一下",children:[]},{level:3,title:"57、为什么删除了表，表文件的大小还是没变？",slug:"_57、为什么删除了表-表文件的大小还是没变",link:"#_57、为什么删除了表-表文件的大小还是没变",children:[]},{level:3,title:"58、count(*)实现方式以及各种 count 对比",slug:"_58、count-实现方式以及各种-count-对比",link:"#_58、count-实现方式以及各种-count-对比",children:[]},{level:3,title:"59、orderby 排序内部原理",slug:"_59、orderby-排序内部原理",link:"#_59、orderby-排序内部原理",children:[]},{level:3,title:"60、如何高效的使用 MySQL 显式随机消息",slug:"_60、如何高效的使用-mysql-显式随机消息",link:"#_60、如何高效的使用-mysql-显式随机消息",children:[]}]}],path:"/Interview/MySQL/MySQL%E9%AB%98%E9%A2%9160.html",pathLocale:"/",extraFields:[]},{title:"MySQL黑马面试题",headers:[{level:2,title:"📖 1. MySQL中，如何定位慢查询？",slug:"_1-mysql中-如何定位慢查询",link:"#_1-mysql中-如何定位慢查询",children:[]},{level:2,title:"📖 2.那这个SQL语句执行很慢，如何分析呢？",slug:"_2-那这个sql语句执行很慢-如何分析呢",link:"#_2-那这个sql语句执行很慢-如何分析呢",children:[]},{level:2,title:"📖 3.了解过索引吗？（什么是索引）",slug:"_3-了解过索引吗-什么是索引",link:"#_3-了解过索引吗-什么是索引",children:[]},{level:2,title:"📖 4.索引的底层数据结构了解过吗？",slug:"_4-索引的底层数据结构了解过吗",link:"#_4-索引的底层数据结构了解过吗",children:[]},{level:2,title:"📖 5.B树和B+树的区别是什么呢？",slug:"_5-b树和b-树的区别是什么呢",link:"#_5-b树和b-树的区别是什么呢",children:[]},{level:2,title:"📖 6.什么是聚簇索引什么是非聚簇索引？",slug:"_6-什么是聚簇索引什么是非聚簇索引",link:"#_6-什么是聚簇索引什么是非聚簇索引",children:[]},{level:2,title:"📖 7.知道什么是回表查询吗？",slug:"_7-知道什么是回表查询吗",link:"#_7-知道什么是回表查询吗",children:[]},{level:2,title:"📖 8.知道什么叫覆盖索引吗？",slug:"_8-知道什么叫覆盖索引吗",link:"#_8-知道什么叫覆盖索引吗",children:[]},{level:2,title:"📖 9.MySQL超大分页怎么处理？",slug:"_9-mysql超大分页怎么处理",link:"#_9-mysql超大分页怎么处理",children:[]},{level:2,title:"📖 10索引创建原则有哪些？",slug:"_10索引创建原则有哪些",link:"#_10索引创建原则有哪些",children:[]},{level:2,title:"📖 11.什么情况下索引会失效？",slug:"_11-什么情况下索引会失效",link:"#_11-什么情况下索引会失效",children:[]},{level:2,title:"📖 12.SQL的优化经验有哪些？",slug:"_12-sql的优化经验有哪些",link:"#_12-sql的优化经验有哪些",children:[]},{level:2,title:"📖 13.创建表的时候，你们是如何优化的呢？",slug:"_13-创建表的时候-你们是如何优化的呢",link:"#_13-创建表的时候-你们是如何优化的呢",children:[]},{level:2,title:"📖 14.在使用索引的时候，是如何优化呢？",slug:"_14-在使用索引的时候-是如何优化呢",link:"#_14-在使用索引的时候-是如何优化呢",children:[]},{level:2,title:"📖 15.你平时对SQL语句做了哪些优化呢？",slug:"_15-你平时对sql语句做了哪些优化呢",link:"#_15-你平时对sql语句做了哪些优化呢",children:[]},{level:2,title:"📖 16. 事务的特性是什么？可以详细说一下吗？",slug:"_16-事务的特性是什么-可以详细说一下吗",link:"#_16-事务的特性是什么-可以详细说一下吗",children:[]},{level:2,title:"📖 17.并发事务带来哪些问题？",slug:"_17-并发事务带来哪些问题",link:"#_17-并发事务带来哪些问题",children:[]},{level:2,title:"📖 18怎么解决这些问题呢？MySQL的默认隔离级别是？",slug:"_18怎么解决这些问题呢-mysql的默认隔离级别是",link:"#_18怎么解决这些问题呢-mysql的默认隔离级别是",children:[]},{level:2,title:"📖 19.undo log和redo log的区别是什么？",slug:"_19-undo-log和redo-log的区别是什么",link:"#_19-undo-log和redo-log的区别是什么",children:[]},{level:2,title:"📖 20.事务中的隔离性是如何保证的呢？（你解释一下MVCC）",slug:"_20-事务中的隔离性是如何保证的呢-你解释一下mvcc",link:"#_20-事务中的隔离性是如何保证的呢-你解释一下mvcc",children:[]},{level:2,title:"📖 21.MySQL主从同步原理是什么？",slug:"_21-mysql主从同步原理是什么",link:"#_21-mysql主从同步原理是什么",children:[]},{level:2,title:"📖 22.你们项目用过MySQL的分库分表吗？",slug:"_22-你们项目用过mysql的分库分表吗",link:"#_22-你们项目用过mysql的分库分表吗",children:[]},{level:2,title:"📖 23.那你之前使用过水平分库吗？",slug:"_23-那你之前使用过水平分库吗",link:"#_23-那你之前使用过水平分库吗",children:[]}],path:"/Interview/MySQL/MySQL%E9%BB%91%E9%A9%AC23.html",pathLocale:"/",extraFields:[]},{title:"Spring 实例化 Bean 的四种方式",headers:[{level:3,title:"1. 通过构造函数实例化 Bean",slug:"_1-通过构造函数实例化-bean",link:"#_1-通过构造函数实例化-bean",children:[]},{level:3,title:"2. 通过静态工厂方法实例化 Bean",slug:"_2-通过静态工厂方法实例化-bean",link:"#_2-通过静态工厂方法实例化-bean",children:[]},{level:3,title:"3. 通过实例工厂方法实例化 Bean",slug:"_3-通过实例工厂方法实例化-bean",link:"#_3-通过实例工厂方法实例化-bean",children:[]},{level:3,title:"4. 通过 Bean 的实例化方法实例化 Bean（如 @PostConstruct 和 @PreDestroy）",slug:"_4-通过-bean-的实例化方法实例化-bean-如-postconstruct-和-predestroy",link:"#_4-通过-bean-的实例化方法实例化-bean-如-postconstruct-和-predestroy",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Spring/Spring%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Bean%20%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"Spring面试题，41道Spring八股文",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1.Spring 是什么？特性？有哪些模块？",slug:"_1-spring-是什么-特性-有哪些模块",link:"#_1-spring-是什么-特性-有哪些模块",children:[]},{level:3,title:"2.Spring 有哪些模块呢？",slug:"_2-spring-有哪些模块呢",link:"#_2-spring-有哪些模块呢",children:[]},{level:3,title:"3.Spring 有哪些常用注解呢？",slug:"_3-spring-有哪些常用注解呢",link:"#_3-spring-有哪些常用注解呢",children:[]},{level:3,title:"4.Spring 中应用了哪些设计模式呢？",slug:"_4-spring-中应用了哪些设计模式呢",link:"#_4-spring-中应用了哪些设计模式呢",children:[]},{level:3,title:"39.Spring 容器、Web 容器之间的区别？（补充）",slug:"_39-spring-容器、web-容器之间的区别-补充",link:"#_39-spring-容器、web-容器之间的区别-补充",children:[]}]},{level:2,title:"IoC",slug:"ioc",link:"#ioc",children:[{level:3,title:"5.说一说什么是 IoC、DI？",slug:"_5-说一说什么是-ioc、di",link:"#_5-说一说什么是-ioc、di",children:[]},{level:3,title:"6.能简单说一下 Spring IoC 的实现机制吗？",slug:"_6-能简单说一下-spring-ioc-的实现机制吗",link:"#_6-能简单说一下-spring-ioc-的实现机制吗",children:[]},{level:3,title:"7.说说 BeanFactory 和 ApplicantContext?",slug:"_7-说说-beanfactory-和-applicantcontext",link:"#_7-说说-beanfactory-和-applicantcontext",children:[]},{level:3,title:"8.你知道 Spring 容器启动阶段会干什么吗？",slug:"_8-你知道-spring-容器启动阶段会干什么吗",link:"#_8-你知道-spring-容器启动阶段会干什么吗",children:[]},{level:3,title:"9.你是怎么理解 Bean 的？",slug:"_9-你是怎么理解-bean-的",link:"#_9-你是怎么理解-bean-的",children:[]},{level:3,title:"10.能说一下 Bean 的生命周期吗？",slug:"_10-能说一下-bean-的生命周期吗",link:"#_10-能说一下-bean-的生命周期吗",children:[]},{level:3,title:"11.为什么 IDEA 不推荐使用 @Autowired 注解注入 Bean？",slug:"_11-为什么-idea-不推荐使用-autowired-注解注入-bean",link:"#_11-为什么-idea-不推荐使用-autowired-注解注入-bean",children:[]},{level:3,title:"12.Spring 有哪些自动装配的方式？",slug:"_12-spring-有哪些自动装配的方式",link:"#_12-spring-有哪些自动装配的方式",children:[]},{level:3,title:"13.Bean 的作用域有哪些?",slug:"_13-bean-的作用域有哪些",link:"#_13-bean-的作用域有哪些",children:[]},{level:3,title:"14.Spring 中的单例 Bean 会存在线程安全问题吗？",slug:"_14-spring-中的单例-bean-会存在线程安全问题吗",link:"#_14-spring-中的单例-bean-会存在线程安全问题吗",children:[]},{level:3,title:"15.说说循环依赖?",slug:"_15-说说循环依赖",link:"#_15-说说循环依赖",children:[]},{level:3,title:"16.Spring 怎么解决循环依赖呢？",slug:"_16-spring-怎么解决循环依赖呢",link:"#_16-spring-怎么解决循环依赖呢",children:[]},{level:3,title:"17.为什么要三级缓存？⼆级不⾏吗？",slug:"_17-为什么要三级缓存-二级不行吗",link:"#_17-为什么要三级缓存-二级不行吗",children:[]},{level:3,title:"18.@Autowired 的实现原理？",slug:"_18-autowired-的实现原理",link:"#_18-autowired-的实现原理",children:[]}]},{level:2,title:"AOP",slug:"aop",link:"#aop",children:[{level:3,title:"19.说说什么是 AOP？",slug:"_19-说说什么是-aop",link:"#_19-说说什么是-aop",children:[]},{level:3,title:"20.AOP的使用场景有哪些？",slug:"_20-aop的使用场景有哪些",link:"#_20-aop的使用场景有哪些",children:[]},{level:3,title:"21.说说 JDK 动态代理和 CGLIB 代理？",slug:"_21-说说-jdk-动态代理和-cglib-代理",link:"#_21-说说-jdk-动态代理和-cglib-代理",children:[]},{level:3,title:"22.说说 Spring AOP 和 AspectJ AOP 区别?",slug:"_22-说说-spring-aop-和-aspectj-aop-区别",link:"#_22-说说-spring-aop-和-aspectj-aop-区别",children:[]},{level:3,title:"40.说说 AOP 和反射的区别？（补充）",slug:"_40-说说-aop-和反射的区别-补充",link:"#_40-说说-aop-和反射的区别-补充",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"23.Spring 事务的种类？",slug:"_23-spring-事务的种类",link:"#_23-spring-事务的种类",children:[]},{level:3,title:"24.说说 Spring 的事务隔离级别？",slug:"_24-说说-spring-的事务隔离级别",link:"#_24-说说-spring-的事务隔离级别",children:[]},{level:3,title:"25.Spring 的事务传播机制？",slug:"_25-spring-的事务传播机制",link:"#_25-spring-的事务传播机制",children:[]},{level:3,title:"26.声明式事务实现原理了解吗？",slug:"_26-声明式事务实现原理了解吗",link:"#_26-声明式事务实现原理了解吗",children:[]},{level:3,title:"27.声明式事务在哪些情况下会失效？",slug:"_27-声明式事务在哪些情况下会失效",link:"#_27-声明式事务在哪些情况下会失效",children:[]}]},{level:2,title:"MVC",slug:"mvc",link:"#mvc",children:[{level:3,title:"28.Spring MVC 的核心组件？",slug:"_28-spring-mvc-的核心组件",link:"#_28-spring-mvc-的核心组件",children:[]},{level:3,title:"29.Spring MVC 的工作流程？",slug:"_29-spring-mvc-的工作流程",link:"#_29-spring-mvc-的工作流程",children:[]},{level:3,title:"30.SpringMVC Restful 风格的接口的流程是什么样的呢？",slug:"_30-springmvc-restful-风格的接口的流程是什么样的呢",link:"#_30-springmvc-restful-风格的接口的流程是什么样的呢",children:[]}]},{level:2,title:"Spring Boot",slug:"spring-boot",link:"#spring-boot",children:[{level:3,title:"31.介绍一下 SpringBoot，有哪些优点？",slug:"_31-介绍一下-springboot-有哪些优点",link:"#_31-介绍一下-springboot-有哪些优点",children:[]},{level:3,title:"32.SpringBoot 自动配置原理了解吗？",slug:"_32-springboot-自动配置原理了解吗",link:"#_32-springboot-自动配置原理了解吗",children:[]},{level:3,title:"33.如何自定义一个 SpringBoot Srarter?",slug:"_33-如何自定义一个-springboot-srarter",link:"#_33-如何自定义一个-springboot-srarter",children:[]},{level:3,title:"34.Spring Boot 启动原理了解吗？",slug:"_34-spring-boot-启动原理了解吗",link:"#_34-spring-boot-启动原理了解吗",children:[]},{level:3,title:"36.SpringBoot 和 SpringMVC 的区别？（补充）",slug:"_36-springboot-和-springmvc-的区别-补充",link:"#_36-springboot-和-springmvc-的区别-补充",children:[]},{level:3,title:"38.Spring Boot 和 Spring 有什么区别？（补充）",slug:"_38-spring-boot-和-spring-有什么区别-补充",link:"#_38-spring-boot-和-spring-有什么区别-补充",children:[]}]},{level:2,title:"Spring Cloud",slug:"spring-cloud",link:"#spring-cloud",children:[{level:3,title:"35.对 SpringCloud 了解多少？",slug:"_35-对-springcloud-了解多少",link:"#_35-对-springcloud-了解多少",children:[]}]},{level:2,title:"补充",slug:"补充",link:"#补充",children:[{level:3,title:"37.SpringTask 了解吗？",slug:"_37-springtask-了解吗",link:"#_37-springtask-了解吗",children:[]},{level:3,title:"41.Spring Cache 了解吗？",slug:"_41-spring-cache-了解吗",link:"#_41-spring-cache-了解吗",children:[]}]}],path:"/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%9841.html",pathLocale:"/",extraFields:[]},{title:"Spring面试题及总结",headers:[{level:2,title:"Spring IoC",slug:"spring-ioc",link:"#spring-ioc",children:[{level:3,title:"什么是Spring IoC?",slug:"什么是spring-ioc",link:"#什么是spring-ioc",children:[]},{level:3,title:"什么是 Spring Bean？",slug:"什么是-spring-bean",link:"#什么是-spring-bean",children:[]},{level:3,title:"将一个类声明为 Bean 的注解有哪些?",slug:"将一个类声明为-bean-的注解有哪些",link:"#将一个类声明为-bean-的注解有哪些",children:[]},{level:3,title:"@Component 和 @Bean 的区别是什么？",slug:"component-和-bean-的区别是什么",link:"#component-和-bean-的区别是什么",children:[]},{level:3,title:"注入 Bean 的注解有哪些？",slug:"注入-bean-的注解有哪些",link:"#注入-bean-的注解有哪些",children:[]},{level:3,title:"@Autowired 和 @Resource 的区别是什么？",slug:"autowired-和-resource-的区别是什么",link:"#autowired-和-resource-的区别是什么",children:[]},{level:3,title:"@Qualifier注解有什么作用？",slug:"qualifier注解有什么作用",link:"#qualifier注解有什么作用",children:[]},{level:3,title:"注入Bean的方式有哪些？",slug:"注入bean的方式有哪些",link:"#注入bean的方式有哪些",children:[]},{level:3,title:"构造函数注入还是 Setter 注入？",slug:"构造函数注入还是-setter-注入",link:"#构造函数注入还是-setter-注入",children:[]},{level:3,title:"Bean 的作用域有哪些?",slug:"bean-的作用域有哪些",link:"#bean-的作用域有哪些",children:[]},{level:3,title:"Bean 是线程安全的吗？",slug:"bean-是线程安全的吗",link:"#bean-是线程安全的吗",children:[]},{level:3,title:"TODO:说下Spring Bean的生命周期？",slug:"todo-说下spring-bean的生命周期",link:"#todo-说下spring-bean的生命周期",children:[]}]}],path:"/Interview/Spring/Spring%E9%9D%A2%E8%AF%95%E9%A2%98%E5%88%86%E6%9E%90%E5%8F%8A%E6%80%BB%E7%BB%93.html",pathLocale:"/",extraFields:[]},{title:"Java面试题之Java集合框架篇（Java容器篇），29道Java集合框架八股文（7千字38张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"引言",slug:"引言",link:"#引言",children:[{level:3,title:"1.说说有哪些常见的集合框架？",slug:"_1-说说有哪些常见的集合框架",link:"#_1-说说有哪些常见的集合框架",children:[]}]},{level:2,title:"List",slug:"list",link:"#list",children:[{level:3,title:"2.ArrayList 和 LinkedList 有什么区别？",slug:"_2-arraylist-和-linkedlist-有什么区别",link:"#_2-arraylist-和-linkedlist-有什么区别",children:[]},{level:3,title:"3.ArrayList 的扩容机制了解吗？",slug:"_3-arraylist-的扩容机制了解吗",link:"#_3-arraylist-的扩容机制了解吗",children:[]},{level:3,title:"4.ArrayList 怎么序列化的知道吗？",slug:"_4-arraylist-怎么序列化的知道吗",link:"#_4-arraylist-怎么序列化的知道吗",children:[]},{level:3,title:"5.快速失败fail-fast了解吗？",slug:"_5-快速失败fail-fast了解吗",link:"#_5-快速失败fail-fast了解吗",children:[]},{level:3,title:"6.有哪几种实现 ArrayList 线程安全的方法？",slug:"_6-有哪几种实现-arraylist-线程安全的方法",link:"#_6-有哪几种实现-arraylist-线程安全的方法",children:[]},{level:3,title:"7.CopyOnWriteArrayList 了解多少？",slug:"_7-copyonwritearraylist-了解多少",link:"#_7-copyonwritearraylist-了解多少",children:[]}]},{level:2,title:"Map",slug:"map",link:"#map",children:[{level:3,title:"8.能说一下 HashMap 的底层数据结构吗？",slug:"_8-能说一下-hashmap-的底层数据结构吗",link:"#_8-能说一下-hashmap-的底层数据结构吗",children:[]},{level:3,title:"9.你对红黑树了解多少？",slug:"_9-你对红黑树了解多少",link:"#_9-你对红黑树了解多少",children:[]},{level:3,title:"10.红黑树怎么保持平衡的？",slug:"_10-红黑树怎么保持平衡的",link:"#_10-红黑树怎么保持平衡的",children:[]},{level:3,title:"11.HashMap 的 put 流程知道吗？",slug:"_11-hashmap-的-put-流程知道吗",link:"#_11-hashmap-的-put-流程知道吗",children:[]},{level:3,title:"12.HashMap 怎么查找元素的呢？",slug:"_12-hashmap-怎么查找元素的呢",link:"#_12-hashmap-怎么查找元素的呢",children:[]},{level:3,title:"13.HashMap 的 hash 函数是怎么设计的?",slug:"_13-hashmap-的-hash-函数是怎么设计的",link:"#_13-hashmap-的-hash-函数是怎么设计的",children:[]},{level:3,title:"14.为什么 hash 函数能减少哈希冲突？",slug:"_14-为什么-hash-函数能减少哈希冲突",link:"#_14-为什么-hash-函数能减少哈希冲突",children:[]},{level:3,title:"15.为什么 HashMap 的容量是 2 的幂次方？",slug:"_15-为什么-hashmap-的容量是-2-的幂次方",link:"#_15-为什么-hashmap-的容量是-2-的幂次方",children:[]},{level:3,title:"16.如果初始化 HashMap，传一个 17 的容量，它会怎么处理？",slug:"_16-如果初始化-hashmap-传一个-17-的容量-它会怎么处理",link:"#_16-如果初始化-hashmap-传一个-17-的容量-它会怎么处理",children:[]},{level:3,title:"17.你还知道哪些哈希函数的构造方法呢？",slug:"_17-你还知道哪些哈希函数的构造方法呢",link:"#_17-你还知道哪些哈希函数的构造方法呢",children:[]},{level:3,title:"18.解决哈希冲突有哪些方法？",slug:"_18-解决哈希冲突有哪些方法",link:"#_18-解决哈希冲突有哪些方法",children:[]},{level:3,title:"19.为什么 HashMap 链表转红黑树的阈值为 8 呢？",slug:"_19-为什么-hashmap-链表转红黑树的阈值为-8-呢",link:"#_19-为什么-hashmap-链表转红黑树的阈值为-8-呢",children:[]},{level:3,title:"20.HashMap扩容发生在什么时候呢？",slug:"_20-hashmap扩容发生在什么时候呢",link:"#_20-hashmap扩容发生在什么时候呢",children:[]},{level:3,title:"21.HashMap的扩容机制了解吗？",slug:"_21-hashmap的扩容机制了解吗",link:"#_21-hashmap的扩容机制了解吗",children:[]},{level:3,title:"22.JDK 8 对 HashMap 做了哪些优化呢？",slug:"_22-jdk-8-对-hashmap-做了哪些优化呢",link:"#_22-jdk-8-对-hashmap-做了哪些优化呢",children:[]},{level:3,title:"23.你能自己设计实现一个 HashMap 吗？",slug:"_23-你能自己设计实现一个-hashmap-吗",link:"#_23-你能自己设计实现一个-hashmap-吗",children:[]},{level:3,title:"24.HashMap 是线程安全的吗？",slug:"_24-hashmap-是线程安全的吗",link:"#_24-hashmap-是线程安全的吗",children:[]},{level:3,title:"25.怎么解决 HashMap 线程不安全的问题呢？",slug:"_25-怎么解决-hashmap-线程不安全的问题呢",link:"#_25-怎么解决-hashmap-线程不安全的问题呢",children:[]},{level:3,title:"26.HashMap 内部节点是有序的吗？",slug:"_26-hashmap-内部节点是有序的吗",link:"#_26-hashmap-内部节点是有序的吗",children:[]},{level:3,title:"27.讲讲 LinkedHashMap 怎么实现有序的？",slug:"_27-讲讲-linkedhashmap-怎么实现有序的",link:"#_27-讲讲-linkedhashmap-怎么实现有序的",children:[]},{level:3,title:"28.讲讲 TreeMap 怎么实现有序的？",slug:"_28-讲讲-treemap-怎么实现有序的",link:"#_28-讲讲-treemap-怎么实现有序的",children:[]},{level:3,title:"29.TreeMap 和 HashMap 的区别",slug:"_29-treemap-和-hashmap-的区别",link:"#_29-treemap-和-hashmap-的区别",children:[]}]},{level:2,title:"Set",slug:"set",link:"#set",children:[{level:3,title:"30.讲讲 HashSet 的底层实现？",slug:"_30-讲讲-hashset-的底层实现",link:"#_30-讲讲-hashset-的底层实现",children:[]}]}],path:"/Interview/sanfene/collection.html",pathLocale:"/",extraFields:[]},{title:"分布式面试题，12道分布式八股文（8千字25张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"分布式理论",slug:"分布式理论",link:"#分布式理论",children:[{level:3,title:"1. 说说 CAP 原则？",slug:"_1-说说-cap-原则",link:"#_1-说说-cap-原则",children:[]},{level:3,title:"2. 为什么 CAP 不可兼得呢？",slug:"_2-为什么-cap-不可兼得呢",link:"#_2-为什么-cap-不可兼得呢",children:[]},{level:3,title:"3. CAP 对应的模型和应用？",slug:"_3-cap-对应的模型和应用",link:"#_3-cap-对应的模型和应用",children:[]},{level:3,title:"4. BASE 理论了解吗？",slug:"_4-base-理论了解吗",link:"#_4-base-理论了解吗",children:[]}]},{level:2,title:"分布式锁",slug:"分布式锁",link:"#分布式锁",children:[{level:3,title:"5. 有哪些分布式锁的实现方案呢？",slug:"_5-有哪些分布式锁的实现方案呢",link:"#_5-有哪些分布式锁的实现方案呢",children:[]}]},{level:2,title:"分布式事务",slug:"分布式事务",link:"#分布式事务",children:[{level:3,title:"6.什么是分布式事务?",slug:"_6-什么是分布式事务",link:"#_6-什么是分布式事务",children:[]},{level:3,title:"7.分布式事务有哪些常见的实现方案？",slug:"_7-分布式事务有哪些常见的实现方案",link:"#_7-分布式事务有哪些常见的实现方案",children:[]},{level:3,title:"8.你们用什么？能说一下 Seata 吗？",slug:"_8-你们用什么-能说一下-seata-吗",link:"#_8-你们用什么-能说一下-seata-吗",children:[]}]},{level:2,title:"分布式一致性算法",slug:"分布式一致性算法",link:"#分布式一致性算法",children:[{level:3,title:"9.分布式算法 paxos 了解么 ？",slug:"_9-分布式算法-paxos-了解么",link:"#_9-分布式算法-paxos-了解么",children:[]},{level:3,title:"10.说说 Raft 算法？",slug:"_10-说说-raft-算法",link:"#_10-说说-raft-算法",children:[]}]},{level:2,title:"分布式设计",slug:"分布式设计",link:"#分布式设计",children:[{level:3,title:"11.说说什么是幂等性？",slug:"_11-说说什么是幂等性",link:"#_11-说说什么是幂等性",children:[]},{level:3,title:"怎么保证接口幂等性？",slug:"怎么保证接口幂等性",link:"#怎么保证接口幂等性",children:[]}]},{level:2,title:"分布式限流",slug:"分布式限流",link:"#分布式限流",children:[{level:3,title:"12.你了解哪些限流算法？",slug:"_12-你了解哪些限流算法",link:"#_12-你了解哪些限流算法",children:[]}]}],path:"/Interview/sanfene/fenbushi.html",pathLocale:"/",extraFields:[]},{title:"Java面试题之Java基础篇，56道Java基础八股文（1.3万字44张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"Java 概述",slug:"java-概述",link:"#java-概述",children:[{level:3,title:"1.什么是 Java？",slug:"_1-什么是-java",link:"#_1-什么是-java",children:[]},{level:3,title:"2.Java 语言有哪些特点？",slug:"_2-java-语言有哪些特点",link:"#_2-java-语言有哪些特点",children:[]},{level:3,title:"3.JVM、JDK 和 JRE 有什么区别？",slug:"_3-jvm、jdk-和-jre-有什么区别",link:"#_3-jvm、jdk-和-jre-有什么区别",children:[]},{level:3,title:"4.说说什么是跨平台？原理是什么",slug:"_4-说说什么是跨平台-原理是什么",link:"#_4-说说什么是跨平台-原理是什么",children:[]},{level:3,title:"5.什么是字节码？采用字节码的好处是什么?",slug:"_5-什么是字节码-采用字节码的好处是什么",link:"#_5-什么是字节码-采用字节码的好处是什么",children:[]},{level:3,title:"6.为什么有人说 Java 是“编译与解释并存”的语言？",slug:"_6-为什么有人说-java-是-编译与解释并存-的语言",link:"#_6-为什么有人说-java-是-编译与解释并存-的语言",children:[]}]},{level:2,title:"基础语法",slug:"基础语法",link:"#基础语法",children:[{level:3,title:"7.Java 有哪些数据类型？",slug:"_7-java-有哪些数据类型",link:"#_7-java-有哪些数据类型",children:[]},{level:3,title:"8.自动类型转换、强制类型转换了解吗？",slug:"_8-自动类型转换、强制类型转换了解吗",link:"#_8-自动类型转换、强制类型转换了解吗",children:[]},{level:3,title:"9.什么是自动拆箱/装箱？",slug:"_9-什么是自动拆箱-装箱",link:"#_9-什么是自动拆箱-装箱",children:[]},{level:3,title:"10.&和&&有什么区别？",slug:"_10-和-有什么区别",link:"#_10-和-有什么区别",children:[]},{level:3,title:"11.switch 语句能否用在 byte/long/String 类型上？",slug:"_11-switch-语句能否用在-byte-long-string-类型上",link:"#_11-switch-语句能否用在-byte-long-string-类型上",children:[]},{level:3,title:"12.break,continue,return 的区别及作用？",slug:"_12-break-continue-return-的区别及作用",link:"#_12-break-continue-return-的区别及作用",children:[]},{level:3,title:"13.用效率最高的方法计算 2 乘以 8？",slug:"_13-用效率最高的方法计算-2-乘以-8",link:"#_13-用效率最高的方法计算-2-乘以-8",children:[]},{level:3,title:"14.说说自增自减运算？",slug:"_14-说说自增自减运算",link:"#_14-说说自增自减运算",children:[]},{level:3,title:"15.float 是怎么表示小数的？（补充）",slug:"_15-float-是怎么表示小数的-补充",link:"#_15-float-是怎么表示小数的-补充",children:[]},{level:3,title:"16.讲一下数据准确性高是怎么保证的？（补充）",slug:"_16-讲一下数据准确性高是怎么保证的-补充",link:"#_16-讲一下数据准确性高是怎么保证的-补充",children:[]}]},{level:2,title:"面向对象",slug:"面向对象",link:"#面向对象",children:[{level:3,title:"17.⾯向对象和⾯向过程的区别?",slug:"_17-面向对象和面向过程的区别",link:"#_17-面向对象和面向过程的区别",children:[]},{level:3,title:"18.面向对象编程有哪些特性？",slug:"_18-面向对象编程有哪些特性",link:"#_18-面向对象编程有哪些特性",children:[]},{level:3,title:"19.多态解决了什么问题？（补充）",slug:"_19-多态解决了什么问题-补充",link:"#_19-多态解决了什么问题-补充",children:[]},{level:3,title:"20.重载和重写的区别？",slug:"_20-重载和重写的区别",link:"#_20-重载和重写的区别",children:[]},{level:3,title:"21.访问修饰符 public、private、protected、以及默认时的区别？",slug:"_21-访问修饰符-public、private、protected、以及默认时的区别",link:"#_21-访问修饰符-public、private、protected、以及默认时的区别",children:[]},{level:3,title:"22.this 关键字有什么作用？",slug:"_22-this-关键字有什么作用",link:"#_22-this-关键字有什么作用",children:[]},{level:3,title:"23.抽象类和接口有什么区别？",slug:"_23-抽象类和接口有什么区别",link:"#_23-抽象类和接口有什么区别",children:[]},{level:3,title:"24.成员变量与局部变量的区别有哪些？",slug:"_24-成员变量与局部变量的区别有哪些",link:"#_24-成员变量与局部变量的区别有哪些",children:[]},{level:3,title:"25.static 关键字了解吗？",slug:"_25-static-关键字了解吗",link:"#_25-static-关键字了解吗",children:[]},{level:3,title:"26.final 关键字有什么作用？",slug:"_26-final-关键字有什么作用",link:"#_26-final-关键字有什么作用",children:[]},{level:3,title:"27.final、finally、finalize 的区别？",slug:"_27-final、finally、finalize-的区别",link:"#_27-final、finally、finalize-的区别",children:[]},{level:3,title:"28.==和 equals 的区别？",slug:"_28-和-equals-的区别",link:"#_28-和-equals-的区别",children:[]},{level:3,title:"29.为什么重写 equals 时必须重写 hashCode ⽅法？",slug:"_29-为什么重写-equals-时必须重写-hashcode-方法",link:"#_29-为什么重写-equals-时必须重写-hashcode-方法",children:[]},{level:3,title:"30.Java 是值传递，还是引用传递？",slug:"_30-java-是值传递-还是引用传递",link:"#_30-java-是值传递-还是引用传递",children:[]},{level:3,title:"31.说说深拷贝和浅拷贝的区别?",slug:"_31-说说深拷贝和浅拷贝的区别",link:"#_31-说说深拷贝和浅拷贝的区别",children:[]},{level:3,title:"32.Java 创建对象有哪几种方式？",slug:"_32-java-创建对象有哪几种方式",link:"#_32-java-创建对象有哪几种方式",children:[]}]},{level:2,title:"String",slug:"string",link:"#string",children:[{level:3,title:"33.String 是 Java 基本数据类型吗？可以被继承吗？",slug:"_33-string-是-java-基本数据类型吗-可以被继承吗",link:"#_33-string-是-java-基本数据类型吗-可以被继承吗",children:[]},{level:3,title:"34.String 和 StringBuilder、StringBuffer 的区别？",slug:"_34-string-和-stringbuilder、stringbuffer-的区别",link:"#_34-string-和-stringbuilder、stringbuffer-的区别",children:[]},{level:3,title:'35.String str1 = new String("abc") 和 String str2 = "abc" 的区别？',slug:"_35-string-str1-new-string-abc-和-string-str2-abc-的区别",link:"#_35-string-str1-new-string-abc-和-string-str2-abc-的区别",children:[]},{level:3,title:"36.String 是不可变类吗？字符串拼接是如何实现的？",slug:"_36-string-是不可变类吗-字符串拼接是如何实现的",link:"#_36-string-是不可变类吗-字符串拼接是如何实现的",children:[]},{level:3,title:"37.intern 方法有什么作用？",slug:"_37-intern-方法有什么作用",link:"#_37-intern-方法有什么作用",children:[]}]},{level:2,title:"Integer",slug:"integer",link:"#integer",children:[{level:3,title:"38.Integer a= 127，Integer b = 127；Integer c= 128，Integer d = 128；相等吗?",slug:"_38-integer-a-127-integer-b-127-integer-c-128-integer-d-128-相等吗",link:"#_38-integer-a-127-integer-b-127-integer-c-128-integer-d-128-相等吗",children:[]},{level:3,title:"39.String 怎么转成 Integer 的？原理？",slug:"_39-string-怎么转成-integer-的-原理",link:"#_39-string-怎么转成-integer-的-原理",children:[]}]},{level:2,title:"Object",slug:"object",link:"#object",children:[{level:3,title:"40.Object 类的常见方法？",slug:"_40-object-类的常见方法",link:"#_40-object-类的常见方法",children:[]}]},{level:2,title:"异常处理",slug:"异常处理",link:"#异常处理",children:[{level:3,title:"41.Java 中异常处理体系?",slug:"_41-java-中异常处理体系",link:"#_41-java-中异常处理体系",children:[]},{level:3,title:"42.异常的处理方式？",slug:"_42-异常的处理方式",link:"#_42-异常的处理方式",children:[]},{level:3,title:"43.三道经典异常处理代码题",slug:"_43-三道经典异常处理代码题",link:"#_43-三道经典异常处理代码题",children:[]}]},{level:2,title:"I/O",slug:"i-o",link:"#i-o",children:[{level:3,title:"44.Java 中 IO 流分为几种?",slug:"_44-java-中-io-流分为几种",link:"#_44-java-中-io-流分为几种",children:[]},{level:3,title:"45.既然有了字节流,为什么还要有字符流?",slug:"_45-既然有了字节流-为什么还要有字符流",link:"#_45-既然有了字节流-为什么还要有字符流",children:[]},{level:3,title:"46.BIO、NIO、AIO 之间的区别？",slug:"_46-bio、nio、aio-之间的区别",link:"#_46-bio、nio、aio-之间的区别",children:[]}]},{level:2,title:"序列化",slug:"序列化",link:"#序列化",children:[{level:3,title:"47.什么是序列化？什么是反序列化？",slug:"_47-什么是序列化-什么是反序列化",link:"#_47-什么是序列化-什么是反序列化",children:[]},{level:3,title:"48.说说有几种序列化方式？",slug:"_48-说说有几种序列化方式",link:"#_48-说说有几种序列化方式",children:[]}]},{level:2,title:"网络编程",slug:"网络编程",link:"#网络编程",children:[{level:3,title:"49.了解过Socket网络套接字吗？（补充）",slug:"_49-了解过socket网络套接字吗-补充",link:"#_49-了解过socket网络套接字吗-补充",children:[]}]},{level:2,title:"泛型",slug:"泛型",link:"#泛型",children:[{level:3,title:"50.Java 泛型了解么？",slug:"_50-java-泛型了解么",link:"#_50-java-泛型了解么",children:[]}]},{level:2,title:"注解",slug:"注解",link:"#注解",children:[{level:3,title:"51.说一下你对注解的理解？",slug:"_51-说一下你对注解的理解",link:"#_51-说一下你对注解的理解",children:[]}]},{level:2,title:"反射",slug:"反射-1",link:"#反射-1",children:[{level:3,title:"52.什么是反射？应用？原理？",slug:"_52-什么是反射-应用-原理",link:"#_52-什么是反射-应用-原理",children:[]}]},{level:2,title:"JDK1.8 新特性",slug:"jdk1-8-新特性",link:"#jdk1-8-新特性",children:[{level:3,title:"53.JDK 1.8 都有哪些新特性？",slug:"_53-jdk-1-8-都有哪些新特性",link:"#_53-jdk-1-8-都有哪些新特性",children:[]},{level:3,title:"54.Lambda 表达式了解多少？",slug:"_54-lambda-表达式了解多少",link:"#_54-lambda-表达式了解多少",children:[]},{level:3,title:"55.Optional 了解吗？",slug:"_55-optional-了解吗",link:"#_55-optional-了解吗",children:[]},{level:3,title:"56.Stream 流用过吗？",slug:"_56-stream-流用过吗",link:"#_56-stream-流用过吗",children:[]}]}],path:"/Interview/sanfene/javase.html",pathLocale:"/",extraFields:[]},{title:"Java并发编程面试题，71道Java多线程八股文（4万字92张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1.并行跟并发有什么区别？",slug:"_1-并行跟并发有什么区别",link:"#_1-并行跟并发有什么区别",children:[]},{level:3,title:"🌟2.说说进程和线程的区别？",slug:"🌟2-说说进程和线程的区别",link:"#🌟2-说说进程和线程的区别",children:[]},{level:3,title:"🌟3.说说线程有几种创建方式？",slug:"🌟3-说说线程有几种创建方式",link:"#🌟3-说说线程有几种创建方式",children:[]},{level:3,title:"4.调用 start 方法时会执行 run 方法，那怎么不直接调用 run方法？",slug:"_4-调用-start-方法时会执行-run-方法-那怎么不直接调用-run方法",link:"#_4-调用-start-方法时会执行-run-方法-那怎么不直接调用-run方法",children:[]},{level:3,title:"5.线程有哪些常用的调度方法？",slug:"_5-线程有哪些常用的调度方法",link:"#_5-线程有哪些常用的调度方法",children:[]},{level:3,title:"6.线程有几种状态？",slug:"_6-线程有几种状态",link:"#_6-线程有几种状态",children:[]},{level:3,title:"7.什么是线程上下文切换？",slug:"_7-什么是线程上下文切换",link:"#_7-什么是线程上下文切换",children:[]},{level:3,title:"8.守护线程了解吗？",slug:"_8-守护线程了解吗",link:"#_8-守护线程了解吗",children:[]},{level:3,title:"9.线程间有哪些通信方式？",slug:"_9-线程间有哪些通信方式",link:"#_9-线程间有哪些通信方式",children:[]},{level:3,title:"10.请说说 sleep 和 wait 的区别？（补充）",slug:"_10-请说说-sleep-和-wait-的区别-补充",link:"#_10-请说说-sleep-和-wait-的区别-补充",children:[]},{level:3,title:"11.怎么保证线程安全？（补充）",slug:"_11-怎么保证线程安全-补充",link:"#_11-怎么保证线程安全-补充",children:[]}]},{level:2,title:"ThreadLocal",slug:"threadlocal",link:"#threadlocal",children:[{level:3,title:"🌟12.ThreadLocal 是什么？",slug:"🌟12-threadlocal-是什么",link:"#🌟12-threadlocal-是什么",children:[]},{level:3,title:"13.你在工作中用到过 ThreadLocal 吗？",slug:"_13-你在工作中用到过-threadlocal-吗",link:"#_13-你在工作中用到过-threadlocal-吗",children:[]},{level:3,title:"🌟14.ThreadLocal 怎么实现的呢？",slug:"🌟14-threadlocal-怎么实现的呢",link:"#🌟14-threadlocal-怎么实现的呢",children:[]},{level:3,title:"🌟15.ThreadLocal 内存泄露是怎么回事？",slug:"🌟15-threadlocal-内存泄露是怎么回事",link:"#🌟15-threadlocal-内存泄露是怎么回事",children:[]},{level:3,title:"16.ThreadLocalMap 的源码看过吗？",slug:"_16-threadlocalmap-的源码看过吗",link:"#_16-threadlocalmap-的源码看过吗",children:[]},{level:3,title:"17.ThreadLocalMap 怎么解决 Hash 冲突的？",slug:"_17-threadlocalmap-怎么解决-hash-冲突的",link:"#_17-threadlocalmap-怎么解决-hash-冲突的",children:[]},{level:3,title:"18.ThreadLocalMap 扩容机制了解吗？",slug:"_18-threadlocalmap-扩容机制了解吗",link:"#_18-threadlocalmap-扩容机制了解吗",children:[]},{level:3,title:"19.父线程能用 ThreadLocal 给子线程传值吗？",slug:"_19-父线程能用-threadlocal-给子线程传值吗",link:"#_19-父线程能用-threadlocal-给子线程传值吗",children:[]}]},{level:2,title:"Java 内存模型",slug:"java-内存模型",link:"#java-内存模型",children:[{level:3,title:"🌟20.说一下你对 Java 内存模型的理解？",slug:"🌟20-说一下你对-java-内存模型的理解",link:"#🌟20-说一下你对-java-内存模型的理解",children:[]},{level:3,title:"21. i++是原子操作吗？",slug:"_21-i-是原子操作吗",link:"#_21-i-是原子操作吗",children:[]},{level:3,title:"22.说说什么是指令重排？",slug:"_22-说说什么是指令重排",link:"#_22-说说什么是指令重排",children:[]},{level:3,title:"23.happens-before 了解吗？",slug:"_23-happens-before-了解吗",link:"#_23-happens-before-了解吗",children:[]},{level:3,title:"24.as-if-serial 了解吗？",slug:"_24-as-if-serial-了解吗",link:"#_24-as-if-serial-了解吗",children:[]},{level:3,title:"25.volatile 了解吗？",slug:"_25-volatile-了解吗",link:"#_25-volatile-了解吗",children:[]}]},{level:2,title:"锁",slug:"锁",link:"#锁",children:[{level:3,title:"26.synchronized 用过吗？",slug:"_26-synchronized-用过吗",link:"#_26-synchronized-用过吗",children:[]},{level:3,title:"27.synchronized 的实现原理了解吗？",slug:"_27-synchronized-的实现原理了解吗",link:"#_27-synchronized-的实现原理了解吗",children:[]},{level:3,title:"28.synchronized 怎么保证可见性？",slug:"_28-synchronized-怎么保证可见性",link:"#_28-synchronized-怎么保证可见性",children:[]},{level:3,title:"29.synchronized 锁升级了解吗？",slug:"_29-synchronized-锁升级了解吗",link:"#_29-synchronized-锁升级了解吗",children:[]},{level:3,title:"🌟30.synchronized 和 ReentrantLock 的区别了解吗？",slug:"🌟30-synchronized-和-reentrantlock-的区别了解吗",link:"#🌟30-synchronized-和-reentrantlock-的区别了解吗",children:[]},{level:3,title:"31.AQS 了解多少？",slug:"_31-aqs-了解多少",link:"#_31-aqs-了解多少",children:[]},{level:3,title:"32.说说 ReentrantLock 的实现原理？",slug:"_32-说说-reentrantlock-的实现原理",link:"#_32-说说-reentrantlock-的实现原理",children:[]},{level:3,title:"33.ReentrantLock 怎么创建公平锁？",slug:"_33-reentrantlock-怎么创建公平锁",link:"#_33-reentrantlock-怎么创建公平锁",children:[]},{level:3,title:"34.CAS 了解多少？",slug:"_34-cas-了解多少",link:"#_34-cas-了解多少",children:[]},{level:3,title:"35.CAS 有什么问题？",slug:"_35-cas-有什么问题",link:"#_35-cas-有什么问题",children:[]},{level:3,title:"36.Java 有哪些保证原子性的方法？",slug:"_36-java-有哪些保证原子性的方法",link:"#_36-java-有哪些保证原子性的方法",children:[]},{level:3,title:"37.原子操作类了解多少？",slug:"_37-原子操作类了解多少",link:"#_37-原子操作类了解多少",children:[]},{level:3,title:"38.AtomicInteger 的源码读过吗？",slug:"_38-atomicinteger-的源码读过吗",link:"#_38-atomicinteger-的源码读过吗",children:[]},{level:3,title:"39.线程死锁了解吗？",slug:"_39-线程死锁了解吗",link:"#_39-线程死锁了解吗",children:[]},{level:3,title:"40.死锁问题怎么排查呢？",slug:"_40-死锁问题怎么排查呢",link:"#_40-死锁问题怎么排查呢",children:[]},{level:3,title:"41.聊聊线程同步和互斥？（补充）",slug:"_41-聊聊线程同步和互斥-补充",link:"#_41-聊聊线程同步和互斥-补充",children:[]},{level:3,title:"42.聊聊悲观锁和乐观锁？（补充）",slug:"_42-聊聊悲观锁和乐观锁-补充",link:"#_42-聊聊悲观锁和乐观锁-补充",children:[]}]},{level:2,title:"并发工具类",slug:"并发工具类",link:"#并发工具类",children:[{level:3,title:"43.CountDownLatch 了解吗？",slug:"_43-countdownlatch-了解吗",link:"#_43-countdownlatch-了解吗",children:[]},{level:3,title:"44.CyclicBarrier 了解吗？",slug:"_44-cyclicbarrier-了解吗",link:"#_44-cyclicbarrier-了解吗",children:[]},{level:3,title:"45.CyclicBarrier 和 CountDownLatch 有什么区别？",slug:"_45-cyclicbarrier-和-countdownlatch-有什么区别",link:"#_45-cyclicbarrier-和-countdownlatch-有什么区别",children:[]},{level:3,title:"46.Semaphore 了解吗？",slug:"_46-semaphore-了解吗",link:"#_46-semaphore-了解吗",children:[]},{level:3,title:"47.Exchanger 了解吗？",slug:"_47-exchanger-了解吗",link:"#_47-exchanger-了解吗",children:[]},{level:3,title:"🌟48.能说一下 ConcurrentHashMap 的实现吗？（补充）",slug:"🌟48-能说一下-concurrenthashmap-的实现吗-补充",link:"#🌟48-能说一下-concurrenthashmap-的实现吗-补充",children:[]},{level:3,title:"49.ConcurrentHashMap 怎么保证可见性？（补充）",slug:"_49-concurrenthashmap-怎么保证可见性-补充",link:"#_49-concurrenthashmap-怎么保证可见性-补充",children:[]},{level:3,title:"50.为什么 ConcurrentHashMap 比 Hashtable 效率高（补充）",slug:"_50-为什么-concurrenthashmap-比-hashtable-效率高-补充",link:"#_50-为什么-concurrenthashmap-比-hashtable-效率高-补充",children:[]},{level:3,title:"51.能说一下 CopyOnWriteArrayList 的实现原理吗？（补充）",slug:"_51-能说一下-copyonwritearraylist-的实现原理吗-补充",link:"#_51-能说一下-copyonwritearraylist-的实现原理吗-补充",children:[]},{level:3,title:"52. 能说一下 BlockingQueue 吗？（补充）",slug:"_52-能说一下-blockingqueue-吗-补充",link:"#_52-能说一下-blockingqueue-吗-补充",children:[]}]},{level:2,title:"线程池",slug:"线程池",link:"#线程池",children:[{level:3,title:"🌟53.什么是线程池？",slug:"🌟53-什么是线程池",link:"#🌟53-什么是线程池",children:[]},{level:3,title:"54.你在项目中有用到线程池吗？",slug:"_54-你在项目中有用到线程池吗",link:"#_54-你在项目中有用到线程池吗",children:[]},{level:3,title:"55.说一下线程池的工作流程？",slug:"_55-说一下线程池的工作流程",link:"#_55-说一下线程池的工作流程",children:[]},{level:3,title:"🌟56.线程池的主要参数有哪些？",slug:"🌟56-线程池的主要参数有哪些",link:"#🌟56-线程池的主要参数有哪些",children:[]},{level:3,title:"🌟57.线程池的拒绝策略有哪些？",slug:"🌟57-线程池的拒绝策略有哪些",link:"#🌟57-线程池的拒绝策略有哪些",children:[]},{level:3,title:"58.线程池有哪几种阻塞队列？",slug:"_58-线程池有哪几种阻塞队列",link:"#_58-线程池有哪几种阻塞队列",children:[]},{level:3,title:"59.线程池提交 execute 和 submit 有什么区别？",slug:"_59-线程池提交-execute-和-submit-有什么区别",link:"#_59-线程池提交-execute-和-submit-有什么区别",children:[]},{level:3,title:"60.线程池怎么关闭知道吗？",slug:"_60-线程池怎么关闭知道吗",link:"#_60-线程池怎么关闭知道吗",children:[]},{level:3,title:"61.线程池的线程数应该怎么配置？",slug:"_61-线程池的线程数应该怎么配置",link:"#_61-线程池的线程数应该怎么配置",children:[]},{level:3,title:"62.有哪几种常见的线程池？",slug:"_62-有哪几种常见的线程池",link:"#_62-有哪几种常见的线程池",children:[]},{level:3,title:"63.能说一下四种常见线程池的原理吗？",slug:"_63-能说一下四种常见线程池的原理吗",link:"#_63-能说一下四种常见线程池的原理吗",children:[]},{level:3,title:"64.线程池异常怎么处理知道吗？",slug:"_64-线程池异常怎么处理知道吗",link:"#_64-线程池异常怎么处理知道吗",children:[]},{level:3,title:"65.能说一下线程池有几种状态吗？",slug:"_65-能说一下线程池有几种状态吗",link:"#_65-能说一下线程池有几种状态吗",children:[]},{level:3,title:"66.线程池如何实现参数的动态修改？",slug:"_66-线程池如何实现参数的动态修改",link:"#_66-线程池如何实现参数的动态修改",children:[]},{level:3,title:"67.线程池调优了解吗？（补充）",slug:"_67-线程池调优了解吗-补充",link:"#_67-线程池调优了解吗-补充",children:[]},{level:3,title:"68.线程池在使用的时候需要注意什么？（补充）",slug:"_68-线程池在使用的时候需要注意什么-补充",link:"#_68-线程池在使用的时候需要注意什么-补充",children:[]},{level:3,title:"69.你能设计实现一个线程池吗？",slug:"_69-你能设计实现一个线程池吗",link:"#_69-你能设计实现一个线程池吗",children:[]},{level:3,title:"70.线程池执行中断电了应该怎么处理？",slug:"_70-线程池执行中断电了应该怎么处理",link:"#_70-线程池执行中断电了应该怎么处理",children:[]}]},{level:2,title:"并发容器和框架",slug:"并发容器和框架",link:"#并发容器和框架",children:[{level:3,title:"71.Fork/Join 框架了解吗？",slug:"_71-fork-join-框架了解吗",link:"#_71-fork-join-框架了解吗",children:[]}]}],path:"/Interview/sanfene/javathread.html",pathLocale:"/",extraFields:[]},{title:"JVM面试题，54道Java虚拟机八股文（2.3万字113张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"一、引言",slug:"一、引言",link:"#一、引言",children:[{level:3,title:"1.什么是 JVM?",slug:"_1-什么是-jvm",link:"#_1-什么是-jvm",children:[]},{level:3,title:"2.说说 JVM 的组织架构（补充）",slug:"_2-说说-jvm-的组织架构-补充",link:"#_2-说说-jvm-的组织架构-补充",children:[]}]},{level:2,title:"二、内存管理",slug:"二、内存管理",link:"#二、内存管理",children:[{level:3,title:"3.能说一下 JVM 的内存区域吗？",slug:"_3-能说一下-jvm-的内存区域吗",link:"#_3-能说一下-jvm-的内存区域吗",children:[]},{level:3,title:"4.说一下 JDK 1.6、1.7、1.8 内存区域的变化？",slug:"_4-说一下-jdk-1-6、1-7、1-8-内存区域的变化",link:"#_4-说一下-jdk-1-6、1-7、1-8-内存区域的变化",children:[]},{level:3,title:"5.为什么使用元空间替代永久代？",slug:"_5-为什么使用元空间替代永久代",link:"#_5-为什么使用元空间替代永久代",children:[]},{level:3,title:"6.对象创建的过程了解吗？",slug:"_6-对象创建的过程了解吗",link:"#_6-对象创建的过程了解吗",children:[]},{level:3,title:"7.堆内存是如何分配的？",slug:"_7-堆内存是如何分配的",link:"#_7-堆内存是如何分配的",children:[]},{level:3,title:"8.new 对象时，堆会发生抢占吗？",slug:"_8-new-对象时-堆会发生抢占吗",link:"#_8-new-对象时-堆会发生抢占吗",children:[]},{level:3,title:"9.能说一下对象的内存布局吗？",slug:"_9-能说一下对象的内存布局吗",link:"#_9-能说一下对象的内存布局吗",children:[]},{level:3,title:"10.JVM 怎么访问对象的？",slug:"_10-jvm-怎么访问对象的",link:"#_10-jvm-怎么访问对象的",children:[]},{level:3,title:"11.说一下对象有哪几种引用？",slug:"_11-说一下对象有哪几种引用",link:"#_11-说一下对象有哪几种引用",children:[]},{level:3,title:"12.Java 堆的内存分区了解吗？",slug:"_12-java-堆的内存分区了解吗",link:"#_12-java-堆的内存分区了解吗",children:[]},{level:3,title:"13.说一下新生代的区域划分？",slug:"_13-说一下新生代的区域划分",link:"#_13-说一下新生代的区域划分",children:[]},{level:3,title:"14.对象什么时候会进入老年代？",slug:"_14-对象什么时候会进入老年代",link:"#_14-对象什么时候会进入老年代",children:[]},{level:3,title:"15.STW 了解吗？",slug:"_15-stw-了解吗",link:"#_15-stw-了解吗",children:[]},{level:3,title:"16.对象一定分配在堆中吗？",slug:"_16-对象一定分配在堆中吗",link:"#_16-对象一定分配在堆中吗",children:[]},{level:3,title:"17.内存溢出和内存泄漏了解吗？",slug:"_17-内存溢出和内存泄漏了解吗",link:"#_17-内存溢出和内存泄漏了解吗",children:[]},{level:3,title:"18.能手写内存溢出的例子吗？",slug:"_18-能手写内存溢出的例子吗",link:"#_18-能手写内存溢出的例子吗",children:[]},{level:3,title:"19.内存泄漏可能由哪些原因导致呢？",slug:"_19-内存泄漏可能由哪些原因导致呢",link:"#_19-内存泄漏可能由哪些原因导致呢",children:[]},{level:3,title:"20.有没有处理过内存泄漏问题？",slug:"_20-有没有处理过内存泄漏问题",link:"#_20-有没有处理过内存泄漏问题",children:[]},{level:3,title:"21.有没有处理过内存溢出问题？",slug:"_21-有没有处理过内存溢出问题",link:"#_21-有没有处理过内存溢出问题",children:[]},{level:3,title:"22.什么情况下会发生栈溢出？（补充）",slug:"_22-什么情况下会发生栈溢出-补充",link:"#_22-什么情况下会发生栈溢出-补充",children:[]}]},{level:2,title:"三、垃圾收集",slug:"三、垃圾收集",link:"#三、垃圾收集",children:[{level:3,title:"23.讲讲 JVM 的垃圾回收机制（补充）",slug:"_23-讲讲-jvm-的垃圾回收机制-补充",link:"#_23-讲讲-jvm-的垃圾回收机制-补充",children:[]},{level:3,title:"24.如何判断对象仍然存活？",slug:"_24-如何判断对象仍然存活",link:"#_24-如何判断对象仍然存活",children:[]},{level:3,title:"25.Java 中可作为 GC Roots 的引用有哪几种？",slug:"_25-java-中可作为-gc-roots-的引用有哪几种",link:"#_25-java-中可作为-gc-roots-的引用有哪几种",children:[]},{level:3,title:"26.finalize()方法了解吗？",slug:"_26-finalize-方法了解吗",link:"#_26-finalize-方法了解吗",children:[]},{level:3,title:"27.垃圾收集算法了解吗？",slug:"_27-垃圾收集算法了解吗",link:"#_27-垃圾收集算法了解吗",children:[]},{level:3,title:"28.Minor GC、Major GC、Mixed GC、Full GC 都是什么意思？",slug:"_28-minor-gc、major-gc、mixed-gc、full-gc-都是什么意思",link:"#_28-minor-gc、major-gc、mixed-gc、full-gc-都是什么意思",children:[]},{level:3,title:"29.Young GC 什么时候触发？",slug:"_29-young-gc-什么时候触发",link:"#_29-young-gc-什么时候触发",children:[]},{level:3,title:"30.什么时候会触发 Full GC？",slug:"_30-什么时候会触发-full-gc",link:"#_30-什么时候会触发-full-gc",children:[]},{level:3,title:"31.知道哪些垃圾收集器？",slug:"_31-知道哪些垃圾收集器",link:"#_31-知道哪些垃圾收集器",children:[]},{level:3,title:"32.能详细说一下 CMS 的垃圾收集过程吗？",slug:"_32-能详细说一下-cms-的垃圾收集过程吗",link:"#_32-能详细说一下-cms-的垃圾收集过程吗",children:[]},{level:3,title:"33.G1 垃圾收集器了解吗？",slug:"_33-g1-垃圾收集器了解吗",link:"#_33-g1-垃圾收集器了解吗",children:[]},{level:3,title:"34.有了 CMS，为什么还要引入 G1？",slug:"_34-有了-cms-为什么还要引入-g1",link:"#_34-有了-cms-为什么还要引入-g1",children:[]},{level:3,title:"35.你们线上用的什么垃圾收集器？",slug:"_35-你们线上用的什么垃圾收集器",link:"#_35-你们线上用的什么垃圾收集器",children:[]},{level:3,title:"36.垃圾收集器应该如何选择？",slug:"_36-垃圾收集器应该如何选择",link:"#_36-垃圾收集器应该如何选择",children:[]}]},{level:2,title:"四、JVM 调优",slug:"四、jvm-调优",link:"#四、jvm-调优",children:[{level:3,title:"37.用过哪些性能监控的命令行工具？",slug:"_37-用过哪些性能监控的命令行工具",link:"#_37-用过哪些性能监控的命令行工具",children:[]},{level:3,title:"38.了解哪些可视化的性能监控工具？",slug:"_38-了解哪些可视化的性能监控工具",link:"#_38-了解哪些可视化的性能监控工具",children:[]},{level:3,title:"39.JVM 的常见参数配置知道哪些？",slug:"_39-jvm-的常见参数配置知道哪些",link:"#_39-jvm-的常见参数配置知道哪些",children:[]},{level:3,title:"40.做过 JVM 调优吗？",slug:"_40-做过-jvm-调优吗",link:"#_40-做过-jvm-调优吗",children:[]},{level:3,title:"41.CPU 占用过高怎么排查？",slug:"_41-cpu-占用过高怎么排查",link:"#_41-cpu-占用过高怎么排查",children:[]},{level:3,title:"42.内存飙高问题怎么排查？",slug:"_42-内存飙高问题怎么排查",link:"#_42-内存飙高问题怎么排查",children:[]},{level:3,title:"43.频繁 minor gc 怎么办？",slug:"_43-频繁-minor-gc-怎么办",link:"#_43-频繁-minor-gc-怎么办",children:[]},{level:3,title:"44.频繁 Full GC 怎么办？",slug:"_44-频繁-full-gc-怎么办",link:"#_44-频繁-full-gc-怎么办",children:[]}]},{level:2,title:"五、类加载机制",slug:"五、类加载机制",link:"#五、类加载机制",children:[{level:3,title:"45.了解类的加载机制吗？（补充）",slug:"_45-了解类的加载机制吗-补充",link:"#_45-了解类的加载机制吗-补充",children:[]},{level:3,title:"46.类加载器有哪些？",slug:"_46-类加载器有哪些",link:"#_46-类加载器有哪些",children:[]},{level:3,title:"47.能说一下类的生命周期吗？",slug:"_47-能说一下类的生命周期吗",link:"#_47-能说一下类的生命周期吗",children:[]},{level:3,title:"48.类装载的过程知道吗？",slug:"_48-类装载的过程知道吗",link:"#_48-类装载的过程知道吗",children:[]},{level:3,title:"49.什么是双亲委派模型？",slug:"_49-什么是双亲委派模型",link:"#_49-什么是双亲委派模型",children:[]},{level:3,title:"49.为什么要用双亲委派模型？",slug:"_49-为什么要用双亲委派模型",link:"#_49-为什么要用双亲委派模型",children:[]},{level:3,title:"50.如何破坏双亲委派机制？",slug:"_50-如何破坏双亲委派机制",link:"#_50-如何破坏双亲委派机制",children:[]},{level:3,title:"51.有哪些破坏双亲委派模型的典型例子？",slug:"_51-有哪些破坏双亲委派模型的典型例子",link:"#_51-有哪些破坏双亲委派模型的典型例子",children:[]},{level:3,title:"52.Tomcat 的类加载机制了解吗？",slug:"_52-tomcat-的类加载机制了解吗",link:"#_52-tomcat-的类加载机制了解吗",children:[]},{level:3,title:"53.你觉得应该怎么实现一个热部署功能？",slug:"_53-你觉得应该怎么实现一个热部署功能",link:"#_53-你觉得应该怎么实现一个热部署功能",children:[]},{level:3,title:"54.说说解释执行和编译执行的区别（补充）",slug:"_54-说说解释执行和编译执行的区别-补充",link:"#_54-说说解释执行和编译执行的区别-补充",children:[]}]}],path:"/Interview/sanfene/jvm.html",pathLocale:"/",extraFields:[]},{title:"Linux面试题，1道Linux八股文（1万字2张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"1. Linux 常用命令",slug:"_1-linux-常用命令",link:"#_1-linux-常用命令",children:[{level:3,title:"文件操作的命令有哪些？",slug:"文件操作的命令有哪些",link:"#文件操作的命令有哪些",children:[]},{level:3,title:"系统管理的命令有哪些？",slug:"系统管理的命令有哪些",link:"#系统管理的命令有哪些",children:[]},{level:3,title:"网络管理的命令有哪些？",slug:"网络管理的命令有哪些",link:"#网络管理的命令有哪些",children:[]},{level:3,title:"压缩和解压的命令有哪些？",slug:"压缩和解压的命令有哪些",link:"#压缩和解压的命令有哪些",children:[]},{level:3,title:"查找文件的命令有哪些？",slug:"查找文件的命令有哪些",link:"#查找文件的命令有哪些",children:[]}]},{level:2,title:"2. Linux 系统管理",slug:"_2-linux-系统管理",link:"#_2-linux-系统管理",children:[{level:3,title:"用户和用户组有什么区别？",slug:"用户和用户组有什么区别",link:"#用户和用户组有什么区别",children:[]},{level:3,title:"如何用linux命令去查找某个qps?",slug:"如何用linux命令去查找某个qps",link:"#如何用linux命令去查找某个qps",children:[]}]},{level:2,title:"3. Git 常用命令",slug:"_3-git-常用命令",link:"#_3-git-常用命令",children:[{level:3,title:"Git 常用命令有哪些？",slug:"git-常用命令有哪些",link:"#git-常用命令有哪些",children:[]}]}],path:"/Interview/sanfene/linux.html",pathLocale:"/",extraFields:[]},{title:"MyBatis面试题，23道MyBatis八股文（6千字30张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1. 说说什么是 MyBatis?",slug:"_1-说说什么是-mybatis",link:"#_1-说说什么是-mybatis",children:[]},{level:3,title:"2. Hibernate 和 MyBatis 有什么区别？",slug:"_2-hibernate-和-mybatis-有什么区别",link:"#_2-hibernate-和-mybatis-有什么区别",children:[]},{level:3,title:"3. MyBatis 使用过程？生命周期？",slug:"_3-mybatis-使用过程-生命周期",link:"#_3-mybatis-使用过程-生命周期",children:[]},{level:3,title:"4. 在 mapper 中如何传递多个参数？",slug:"_4-在-mapper-中如何传递多个参数",link:"#_4-在-mapper-中如何传递多个参数",children:[]},{level:3,title:"5. 实体类属性名和表中字段名不一样 ，怎么办?",slug:"_5-实体类属性名和表中字段名不一样-怎么办",link:"#_5-实体类属性名和表中字段名不一样-怎么办",children:[]},{level:3,title:"6. Mybatis 是否可以映射 Enum 枚举类？",slug:"_6-mybatis-是否可以映射-enum-枚举类",link:"#_6-mybatis-是否可以映射-enum-枚举类",children:[]},{level:3,title:"7. #{}和${}的区别?",slug:"_7-和-的区别",link:"#_7-和-的区别",children:[]},{level:3,title:"8. 模糊查询 like 语句该怎么写?",slug:"_8-模糊查询-like-语句该怎么写",link:"#_8-模糊查询-like-语句该怎么写",children:[]},{level:3,title:"9. Mybatis 能执行一对一、一对多的关联查询吗？",slug:"_9-mybatis-能执行一对一、一对多的关联查询吗",link:"#_9-mybatis-能执行一对一、一对多的关联查询吗",children:[]},{level:3,title:"10. Mybatis 是否支持延迟加载？原理？",slug:"_10-mybatis-是否支持延迟加载-原理",link:"#_10-mybatis-是否支持延迟加载-原理",children:[]},{level:3,title:"11. 如何获取生成的主键?",slug:"_11-如何获取生成的主键",link:"#_11-如何获取生成的主键",children:[]},{level:3,title:"12. MyBatis 支持动态 SQL 吗？",slug:"_12-mybatis-支持动态-sql-吗",link:"#_12-mybatis-支持动态-sql-吗",children:[]},{level:3,title:"13. MyBatis 如何执行批量操作？",slug:"_13-mybatis-如何执行批量操作",link:"#_13-mybatis-如何执行批量操作",children:[]},{level:3,title:"14. 说说 Mybatis 的一级、二级缓存？",slug:"_14-说说-mybatis-的一级、二级缓存",link:"#_14-说说-mybatis-的一级、二级缓存",children:[]}]},{level:2,title:"原理",slug:"原理",link:"#原理",children:[{level:3,title:"15. 能说说 MyBatis 的工作原理吗？",slug:"_15-能说说-mybatis-的工作原理吗",link:"#_15-能说说-mybatis-的工作原理吗",children:[]},{level:3,title:"16. MyBatis 的功能架构是什么样的？",slug:"_16-mybatis-的功能架构是什么样的",link:"#_16-mybatis-的功能架构是什么样的",children:[]},{level:3,title:"17. 为什么 Mapper 接口不需要实现类？",slug:"_17-为什么-mapper-接口不需要实现类",link:"#_17-为什么-mapper-接口不需要实现类",children:[]},{level:3,title:"18.Mybatis 都有哪些 Executor 执行器？",slug:"_18-mybatis-都有哪些-executor-执行器",link:"#_18-mybatis-都有哪些-executor-执行器",children:[]}]},{level:2,title:"插件",slug:"插件",link:"#插件",children:[{level:3,title:"19. 说说 Mybatis 的插件运行原理，如何编写一个插件？",slug:"_19-说说-mybatis-的插件运行原理-如何编写一个插件",link:"#_19-说说-mybatis-的插件运行原理-如何编写一个插件",children:[]},{level:3,title:"20. MyBatis 是如何进行分页的？分页插件的原理是什么？",slug:"_20-mybatis-是如何进行分页的-分页插件的原理是什么",link:"#_20-mybatis-是如何进行分页的-分页插件的原理是什么",children:[]}]},{level:2,title:"补充",slug:"补充",link:"#补充",children:[{level:3,title:"21.说说 JDBC 的执行步骤？",slug:"_21-说说-jdbc-的执行步骤",link:"#_21-说说-jdbc-的执行步骤",children:[]},{level:3,title:"22.创建连接拿到的是什么对象？",slug:"_22-创建连接拿到的是什么对象",link:"#_22-创建连接拿到的是什么对象",children:[]},{level:3,title:"23.Statement 与 PreparedStatement 的区别",slug:"_23-statement-与-preparedstatement-的区别",link:"#_23-statement-与-preparedstatement-的区别",children:[]},{level:3,title:"24. 什么是 SQL 注入？如何防止 SQL 注入？",slug:"_24-什么是-sql-注入-如何防止-sql-注入",link:"#_24-什么是-sql-注入-如何防止-sql-注入",children:[]}]}],path:"/Interview/sanfene/mybatis.html",pathLocale:"/",extraFields:[]},{title:"MySQL面试题，84道MySQL八股文（4.4万字101张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"MySQL 基础",slug:"mysql-基础",link:"#mysql-基础",children:[{level:3,title:"🌟0.什么是 MySQL？",slug:"🌟0-什么是-mysql",link:"#🌟0-什么是-mysql",children:[]},{level:3,title:"1.两张表怎么进行连接？",slug:"_1-两张表怎么进行连接",link:"#_1-两张表怎么进行连接",children:[]},{level:3,title:"2.内连接、左连接、右连接有什么区别？",slug:"_2-内连接、左连接、右连接有什么区别",link:"#_2-内连接、左连接、右连接有什么区别",children:[]},{level:3,title:"3.说一下数据库的三大范式？",slug:"_3-说一下数据库的三大范式",link:"#_3-说一下数据库的三大范式",children:[]},{level:3,title:"4.varchar 与 char 的区别？",slug:"_4-varchar-与-char-的区别",link:"#_4-varchar-与-char-的区别",children:[]},{level:3,title:"5.blob 和 text 有什么区别？",slug:"_5-blob-和-text-有什么区别",link:"#_5-blob-和-text-有什么区别",children:[]},{level:3,title:"6.DATETIME 和 TIMESTAMP 有什么区别？",slug:"_6-datetime-和-timestamp-有什么区别",link:"#_6-datetime-和-timestamp-有什么区别",children:[]},{level:3,title:"7.in 和 exists 的区别？",slug:"_7-in-和-exists-的区别",link:"#_7-in-和-exists-的区别",children:[]},{level:3,title:"8.记录货币用什么类型比较好？",slug:"_8-记录货币用什么类型比较好",link:"#_8-记录货币用什么类型比较好",children:[]},{level:3,title:"9.怎么存储 emoji?",slug:"_9-怎么存储-emoji",link:"#_9-怎么存储-emoji",children:[]},{level:3,title:"10.drop、delete 与 truncate 的区别？",slug:"_10-drop、delete-与-truncate-的区别",link:"#_10-drop、delete-与-truncate-的区别",children:[]},{level:3,title:"11.UNION 与 UNION ALL 的区别？",slug:"_11-union-与-union-all-的区别",link:"#_11-union-与-union-all-的区别",children:[]},{level:3,title:"12.count(1)、count(*) 与 count(列名) 的区别？",slug:"_12-count-1-、count-与-count-列名-的区别",link:"#_12-count-1-、count-与-count-列名-的区别",children:[]},{level:3,title:"13.SQL 查询语句的执行顺序了解吗？",slug:"_13-sql-查询语句的执行顺序了解吗",link:"#_13-sql-查询语句的执行顺序了解吗",children:[]},{level:3,title:"14.介绍一下 MySQL 的常用命令（补充）",slug:"_14-介绍一下-mysql-的常用命令-补充",link:"#_14-介绍一下-mysql-的常用命令-补充",children:[]},{level:3,title:"15.MySQL bin 目录下的可执行文件了解吗（补充）",slug:"_15-mysql-bin-目录下的可执行文件了解吗-补充",link:"#_15-mysql-bin-目录下的可执行文件了解吗-补充",children:[]},{level:3,title:"16.MySQL 第 3-10 条记录怎么查？（补充）",slug:"_16-mysql-第-3-10-条记录怎么查-补充",link:"#_16-mysql-第-3-10-条记录怎么查-补充",children:[]},{level:3,title:"17.用过哪些 MySQL 函数？（补充）",slug:"_17-用过哪些-mysql-函数-补充",link:"#_17-用过哪些-mysql-函数-补充",children:[]},{level:3,title:"18.说说 SQL 的隐式数据类型转换？（补充）",slug:"_18-说说-sql-的隐式数据类型转换-补充",link:"#_18-说说-sql-的隐式数据类型转换-补充",children:[]},{level:3,title:"19. 说说 SQL 的语法树解析？（补充）",slug:"_19-说说-sql-的语法树解析-补充",link:"#_19-说说-sql-的语法树解析-补充",children:[]}]},{level:2,title:"数据库架构",slug:"数据库架构",link:"#数据库架构",children:[{level:3,title:"20.说说 MySQL 的基础架构？",slug:"_20-说说-mysql-的基础架构",link:"#_20-说说-mysql-的基础架构",children:[]},{level:3,title:"21.一条查询语句是如何执行的？",slug:"_21-一条查询语句是如何执行的",link:"#_21-一条查询语句是如何执行的",children:[]},{level:3,title:"22.一条更新语句是如何执行的？",slug:"_22-一条更新语句是如何执行的",link:"#_22-一条更新语句是如何执行的",children:[]},{level:3,title:"23.说说 MySQL 的段区页行（补充）",slug:"_23-说说-mysql-的段区页行-补充",link:"#_23-说说-mysql-的段区页行-补充",children:[]}]},{level:2,title:"存储引擎",slug:"存储引擎",link:"#存储引擎",children:[{level:3,title:"24.MySQL 有哪些常见存储引擎？",slug:"_24-mysql-有哪些常见存储引擎",link:"#_24-mysql-有哪些常见存储引擎",children:[]},{level:3,title:"25.存储引擎应该怎么选择？",slug:"_25-存储引擎应该怎么选择",link:"#_25-存储引擎应该怎么选择",children:[]},{level:3,title:"26.InnoDB 和 MyISAM 主要有什么区别？",slug:"_26-innodb-和-myisam-主要有什么区别",link:"#_26-innodb-和-myisam-主要有什么区别",children:[]},{level:3,title:"27. InnoDB 的 Buffer Pool了解吗？（补充）",slug:"_27-innodb-的-buffer-pool了解吗-补充",link:"#_27-innodb-的-buffer-pool了解吗-补充",children:[]}]},{level:2,title:"日志",slug:"日志",link:"#日志",children:[{level:3,title:"28.MySQL 日志文件有哪些？",slug:"_28-mysql-日志文件有哪些",link:"#_28-mysql-日志文件有哪些",children:[]},{level:3,title:"29.binlog 和 redo log 有什么区别？",slug:"_29-binlog-和-redo-log-有什么区别",link:"#_29-binlog-和-redo-log-有什么区别",children:[]},{level:3,title:"30.为什么要两阶段提交呢？",slug:"_30-为什么要两阶段提交呢",link:"#_30-为什么要两阶段提交呢",children:[]},{level:3,title:"31.redo log 的写入过程了解吗？",slug:"_31-redo-log-的写入过程了解吗",link:"#_31-redo-log-的写入过程了解吗",children:[]}]},{level:2,title:"SQL 优化",slug:"sql-优化",link:"#sql-优化",children:[{level:3,title:"🌟32.什么是慢 SQL？",slug:"🌟32-什么是慢-sql",link:"#🌟32-什么是慢-sql",children:[]},{level:3,title:"🌟33.你知道哪些方法来优化 SQL？",slug:"🌟33-你知道哪些方法来优化-sql",link:"#🌟33-你知道哪些方法来优化-sql",children:[]},{level:3,title:"34.怎么看执行计划 explain，如何理解其中各个字段的含义？",slug:"_34-怎么看执行计划-explain-如何理解其中各个字段的含义",link:"#_34-怎么看执行计划-explain-如何理解其中各个字段的含义",children:[]}]},{level:2,title:"索引",slug:"索引",link:"#索引",children:[{level:3,title:"35.为什么使用索引会加快查询？",slug:"_35-为什么使用索引会加快查询",link:"#_35-为什么使用索引会加快查询",children:[]},{level:3,title:"36.能简单说一下索引的分类吗？",slug:"_36-能简单说一下索引的分类吗",link:"#_36-能简单说一下索引的分类吗",children:[]},{level:3,title:"37.创建索引有哪些注意点？",slug:"_37-创建索引有哪些注意点",link:"#_37-创建索引有哪些注意点",children:[]},{level:3,title:"38.索引哪些情况下会失效呢？",slug:"_38-索引哪些情况下会失效呢",link:"#_38-索引哪些情况下会失效呢",children:[]},{level:3,title:"39.索引不适合哪些场景呢？",slug:"_39-索引不适合哪些场景呢",link:"#_39-索引不适合哪些场景呢",children:[]},{level:3,title:"40.索引是不是建的越多越好？",slug:"_40-索引是不是建的越多越好",link:"#_40-索引是不是建的越多越好",children:[]},{level:3,title:"41.为什么 InnoDB 要使用 B+树作为索引？",slug:"_41-为什么-innodb-要使用-b-树作为索引",link:"#_41-为什么-innodb-要使用-b-树作为索引",children:[]},{level:3,title:"42.一棵 B+树能存储多少条数据呢？",slug:"_42-一棵-b-树能存储多少条数据呢",link:"#_42-一棵-b-树能存储多少条数据呢",children:[]},{level:3,title:"43.为什么不用普通二叉树？",slug:"_43-为什么不用普通二叉树",link:"#_43-为什么不用普通二叉树",children:[]},{level:3,title:"44.为什么用 B+ 树而不用 B 树呢？",slug:"_44-为什么用-b-树而不用-b-树呢",link:"#_44-为什么用-b-树而不用-b-树呢",children:[]},{level:3,title:"45.Hash 索引和 B+ 树索引区别是什么？",slug:"_45-hash-索引和-b-树索引区别是什么",link:"#_45-hash-索引和-b-树索引区别是什么",children:[]},{level:3,title:"46.聚簇索引与非聚簇索引的区别？",slug:"_46-聚簇索引与非聚簇索引的区别",link:"#_46-聚簇索引与非聚簇索引的区别",children:[]},{level:3,title:"47.回表了解吗？",slug:"_47-回表了解吗",link:"#_47-回表了解吗",children:[]},{level:3,title:"48.联合索引了解吗？（补充）",slug:"_48-联合索引了解吗-补充",link:"#_48-联合索引了解吗-补充",children:[]},{level:3,title:"49.覆盖索引了解吗？",slug:"_49-覆盖索引了解吗",link:"#_49-覆盖索引了解吗",children:[]},{level:3,title:"50.什么是最左前缀原则？",slug:"_50-什么是最左前缀原则",link:"#_50-什么是最左前缀原则",children:[]},{level:3,title:"51.什么是索引下推优化？",slug:"_51-什么是索引下推优化",link:"#_51-什么是索引下推优化",children:[]},{level:3,title:"52.如何查看是否用到了索引？（补充）",slug:"_52-如何查看是否用到了索引-补充",link:"#_52-如何查看是否用到了索引-补充",children:[]}]},{level:2,title:"锁",slug:"锁",link:"#锁",children:[{level:3,title:"53.MySQL 中有哪几种锁，列举一下？",slug:"_53-mysql-中有哪几种锁-列举一下",link:"#_53-mysql-中有哪几种锁-列举一下",children:[]},{level:3,title:"54.全局锁和表级锁了解吗？（补充）",slug:"_54-全局锁和表级锁了解吗-补充",link:"#_54-全局锁和表级锁了解吗-补充",children:[]},{level:3,title:"55.说说 MySQL 的行锁？",slug:"_55-说说-mysql-的行锁",link:"#_55-说说-mysql-的行锁",children:[]},{level:3,title:"85. 间隙锁了解吗？（补充）",slug:"_85-间隙锁了解吗-补充",link:"#_85-间隙锁了解吗-补充",children:[]},{level:3,title:"56.意向锁是什么知道吗？",slug:"_56-意向锁是什么知道吗",link:"#_56-意向锁是什么知道吗",children:[]},{level:3,title:"57.MySQL 的乐观锁和悲观锁了解吗？",slug:"_57-mysql-的乐观锁和悲观锁了解吗",link:"#_57-mysql-的乐观锁和悲观锁了解吗",children:[]},{level:3,title:"58.遇到过死锁问题吗，你是如何解决的？",slug:"_58-遇到过死锁问题吗-你是如何解决的",link:"#_58-遇到过死锁问题吗-你是如何解决的",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"59.MySQL 事务的四大特性说一下？",slug:"_59-mysql-事务的四大特性说一下",link:"#_59-mysql-事务的四大特性说一下",children:[]},{level:3,title:"60.ACID 靠什么保证的呢？",slug:"_60-acid-靠什么保证的呢",link:"#_60-acid-靠什么保证的呢",children:[]},{level:3,title:"61.事务的隔离级别有哪些？",slug:"_61-事务的隔离级别有哪些",link:"#_61-事务的隔离级别有哪些",children:[]},{level:3,title:"62.什么是脏读、不可重复读、幻读呢？",slug:"_62-什么是脏读、不可重复读、幻读呢",link:"#_62-什么是脏读、不可重复读、幻读呢",children:[]},{level:3,title:"63.事务的隔离级别是如何实现的？",slug:"_63-事务的隔离级别是如何实现的",link:"#_63-事务的隔离级别是如何实现的",children:[]},{level:3,title:"64.MVCC 了解吗？怎么实现的？",slug:"_64-mvcc-了解吗-怎么实现的",link:"#_64-mvcc-了解吗-怎么实现的",children:[]}]},{level:2,title:"高可用/性能",slug:"高可用-性能",link:"#高可用-性能",children:[{level:3,title:"65.数据库读写分离了解吗？",slug:"_65-数据库读写分离了解吗",link:"#_65-数据库读写分离了解吗",children:[]},{level:3,title:"66.读写分离的分配怎么实现呢？",slug:"_66-读写分离的分配怎么实现呢",link:"#_66-读写分离的分配怎么实现呢",children:[]},{level:3,title:"67.主从复制原理了解吗？",slug:"_67-主从复制原理了解吗",link:"#_67-主从复制原理了解吗",children:[]},{level:3,title:"68.主从同步延迟怎么处理？",slug:"_68-主从同步延迟怎么处理",link:"#_68-主从同步延迟怎么处理",children:[]},{level:3,title:"69.你们一般是怎么分库的呢？",slug:"_69-你们一般是怎么分库的呢",link:"#_69-你们一般是怎么分库的呢",children:[]},{level:3,title:"70.那你们是怎么分表的？",slug:"_70-那你们是怎么分表的",link:"#_70-那你们是怎么分表的",children:[]},{level:3,title:"71.分片策略有哪几种？",slug:"_71-分片策略有哪几种",link:"#_71-分片策略有哪几种",children:[]},{level:3,title:"72.不停机扩容怎么实现？",slug:"_72-不停机扩容怎么实现",link:"#_72-不停机扩容怎么实现",children:[]},{level:3,title:"73.怎么分库分表？",slug:"_73-怎么分库分表",link:"#_73-怎么分库分表",children:[]},{level:3,title:"74.你觉得分库分表会带来什么问题呢？",slug:"_74-你觉得分库分表会带来什么问题呢",link:"#_74-你觉得分库分表会带来什么问题呢",children:[]}]},{level:2,title:"运维",slug:"运维",link:"#运维",children:[{level:3,title:"75.百万级别以上的数据如何删除？",slug:"_75-百万级别以上的数据如何删除",link:"#_75-百万级别以上的数据如何删除",children:[]},{level:3,title:"76.百万千万级大表如何添加字段？",slug:"_76-百万千万级大表如何添加字段",link:"#_76-百万千万级大表如何添加字段",children:[]},{level:3,title:"77.MySQL cpu 飙升的话，要怎么处理呢？",slug:"_77-mysql-cpu-飙升的话-要怎么处理呢",link:"#_77-mysql-cpu-飙升的话-要怎么处理呢",children:[]}]},{level:2,title:"SQL 题",slug:"sql-题",link:"#sql-题",children:[{level:3,title:"78.一张表：id，name，age，sex，class，sql 语句：所有年龄为 18 的人的名字？找到每个班年龄大于 18 有多少人？找到每个班年龄排前两名的人？（补充）",slug:"_78-一张表-id-name-age-sex-class-sql-语句-所有年龄为-18-的人的名字-找到每个班年龄大于-18-有多少人-找到每个班年龄排前两名的人-补充",link:"#_78-一张表-id-name-age-sex-class-sql-语句-所有年龄为-18-的人的名字-找到每个班年龄大于-18-有多少人-找到每个班年龄排前两名的人-补充",children:[]},{level:3,title:"79.有一个查询需求，MySQL 中有两个表，一个表 1000W 数据，另一个表只有几千数据，要做一个关联查询，如何优化",slug:"_79-有一个查询需求-mysql-中有两个表-一个表-1000w-数据-另一个表只有几千数据-要做一个关联查询-如何优化",link:"#_79-有一个查询需求-mysql-中有两个表-一个表-1000w-数据-另一个表只有几千数据-要做一个关联查询-如何优化",children:[]},{level:3,title:"80.新建一个表结构，创建索引，将百万或千万级的数据使用 insert 导入该表，新建一个表结构，将百万或千万级的数据使用 isnert 导入该表，再创建索引，这两种效率哪个高呢？或者说用时短呢？",slug:"_80-新建一个表结构-创建索引-将百万或千万级的数据使用-insert-导入该表-新建一个表结构-将百万或千万级的数据使用-isnert-导入该表-再创建索引-这两种效率哪个高呢-或者说用时短呢",link:"#_80-新建一个表结构-创建索引-将百万或千万级的数据使用-insert-导入该表-新建一个表结构-将百万或千万级的数据使用-isnert-导入该表-再创建索引-这两种效率哪个高呢-或者说用时短呢",children:[]},{level:3,title:"81.什么是深分页，select * from tbn limit 1000000000 这个有什么问题，如果表大或者表小分别什么问题",slug:"_81-什么是深分页-select-from-tbn-limit-1000000000-这个有什么问题-如果表大或者表小分别什么问题",link:"#_81-什么是深分页-select-from-tbn-limit-1000000000-这个有什么问题-如果表大或者表小分别什么问题",children:[]},{level:3,title:"82.一个表（name, sex,age,id），select age,id,name from tblname where name='paicoding';怎么建索引",slug:"_82-一个表-name-sex-age-id-select-age-id-name-from-tblname-where-name-paicoding-怎么建索引",link:"#_82-一个表-name-sex-age-id-select-age-id-name-from-tblname-where-name-paicoding-怎么建索引",children:[]},{level:3,title:"83.SQL 题：一个学生成绩表，字段有学生姓名、班级、成绩，求各班前十名",slug:"_83-sql-题-一个学生成绩表-字段有学生姓名、班级、成绩-求各班前十名",link:"#_83-sql-题-一个学生成绩表-字段有学生姓名、班级、成绩-求各班前十名",children:[]}]}],path:"/Interview/sanfene/mysql.html",pathLocale:"/",extraFields:[]},{title:"Netty面试题，62道Netty八股文（1万字1张手绘图），面渣逆袭必看👍",headers:[{level:3,title:"01、说说 Netty 的原理和流程",slug:"_01、说说-netty-的原理和流程",link:"#_01、说说-netty-的原理和流程",children:[]}],path:"/Interview/sanfene/netty.html",pathLocale:"/",extraFields:[]},{title:"计算机网络面试题，63道计算机网络八股文（2.2万字80张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1.说下计算机网络体系结构",slug:"_1-说下计算机网络体系结构",link:"#_1-说下计算机网络体系结构",children:[]},{level:3,title:"2.说一下每一层对应的网络协议有哪些？",slug:"_2-说一下每一层对应的网络协议有哪些",link:"#_2-说一下每一层对应的网络协议有哪些",children:[]},{level:3,title:"3.那么数据在各层之间是怎么传输的呢？",slug:"_3-那么数据在各层之间是怎么传输的呢",link:"#_3-那么数据在各层之间是怎么传输的呢",children:[]}]},{level:2,title:"网络综合",slug:"网络综合",link:"#网络综合",children:[{level:3,title:"4.从浏览器地址栏输入 url 到显示网页的过程了解吗？",slug:"_4-从浏览器地址栏输入-url-到显示网页的过程了解吗",link:"#_4-从浏览器地址栏输入-url-到显示网页的过程了解吗",children:[]},{level:3,title:"5.说说 DNS 的解析过程？",slug:"_5-说说-dns-的解析过程",link:"#_5-说说-dns-的解析过程",children:[]},{level:3,title:"6.说说 WebSocket 与 Socket 的区别？",slug:"_6-说说-websocket-与-socket-的区别",link:"#_6-说说-websocket-与-socket-的区别",children:[]},{level:3,title:"7.说一下你了解的端口及对应的服务？",slug:"_7-说一下你了解的端口及对应的服务",link:"#_7-说一下你了解的端口及对应的服务",children:[]},{level:3,title:"8.平常有抓包吗（补充）？",slug:"_8-平常有抓包吗-补充",link:"#_8-平常有抓包吗-补充",children:[]}]},{level:2,title:"HTTP",slug:"http",link:"#http",children:[{level:3,title:"8.说说 HTTP 常用的状态码及其含义？",slug:"_8-说说-http-常用的状态码及其含义",link:"#_8-说说-http-常用的状态码及其含义",children:[]},{level:3,title:"9.HTTP 有哪些请求方式？",slug:"_9-http-有哪些请求方式",link:"#_9-http-有哪些请求方式",children:[]},{level:3,title:"10.说⼀下 GET 和 POST 的区别？",slug:"_10-说一下-get-和-post-的区别",link:"#_10-说一下-get-和-post-的区别",children:[]},{level:3,title:"11.GET 的长度限制是多少？",slug:"_11-get-的长度限制是多少",link:"#_11-get-的长度限制是多少",children:[]},{level:3,title:"12.HTTP 请求的过程与原理？",slug:"_12-http-请求的过程与原理",link:"#_12-http-请求的过程与原理",children:[]},{level:3,title:"13.说一下 HTTP 的报文结构？",slug:"_13-说一下-http-的报文结构",link:"#_13-说一下-http-的报文结构",children:[]},{level:3,title:"14.URI 和 URL 有什么区别?",slug:"_14-uri-和-url-有什么区别",link:"#_14-uri-和-url-有什么区别",children:[]},{level:3,title:"15.说下 HTTP1.0，1.1，2.0 的区别？",slug:"_15-说下-http1-0-1-1-2-0-的区别",link:"#_15-说下-http1-0-1-1-2-0-的区别",children:[]},{level:3,title:"16.HTTP/3 了解吗？",slug:"_16-http-3-了解吗",link:"#_16-http-3-了解吗",children:[]},{level:3,title:"17.HTTP 长连接了解吗？",slug:"_17-http-长连接了解吗",link:"#_17-http-长连接了解吗",children:[]},{level:3,title:"18.说说 HTTP 与 HTTPS 有哪些区别？",slug:"_18-说说-http-与-https-有哪些区别",link:"#_18-说说-http-与-https-有哪些区别",children:[]},{level:3,title:"19.为什么要用 HTTPS？",slug:"_19-为什么要用-https",link:"#_19-为什么要用-https",children:[]},{level:3,title:"20.HTTPS是怎么建立连接的？",slug:"_20-https是怎么建立连接的",link:"#_20-https是怎么建立连接的",children:[]},{level:3,title:"21.客户端怎么去校验证书的合法性？",slug:"_21-客户端怎么去校验证书的合法性",link:"#_21-客户端怎么去校验证书的合法性",children:[]},{level:3,title:"22.如何理解 HTTP 协议是无状态的？",slug:"_22-如何理解-http-协议是无状态的",link:"#_22-如何理解-http-协议是无状态的",children:[]},{level:3,title:"23.说说 Session 和 Cookie 有什么联系和区别?",slug:"_23-说说-session-和-cookie-有什么联系和区别",link:"#_23-说说-session-和-cookie-有什么联系和区别",children:[]}]},{level:2,title:"TCP",slug:"tcp",link:"#tcp",children:[{level:3,title:"24.详细说一下 TCP 的三次握手机制",slug:"_24-详细说一下-tcp-的三次握手机制",link:"#_24-详细说一下-tcp-的三次握手机制",children:[]},{level:3,title:"25.TCP 握手为什么是三次，为什么不能是两次？不能是四次？",slug:"_25-tcp-握手为什么是三次-为什么不能是两次-不能是四次",link:"#_25-tcp-握手为什么是三次-为什么不能是两次-不能是四次",children:[]},{level:3,title:"26.三次握手中每一次没收到报文会发生什么情况？",slug:"_26-三次握手中每一次没收到报文会发生什么情况",link:"#_26-三次握手中每一次没收到报文会发生什么情况",children:[]},{level:3,title:"27.第二次握手传回了 ACK，为什么还要传回 SYN？",slug:"_27-第二次握手传回了-ack-为什么还要传回-syn",link:"#_27-第二次握手传回了-ack-为什么还要传回-syn",children:[]},{level:3,title:"28.第 3 次握手可以携带数据吗？",slug:"_28-第-3-次握手可以携带数据吗",link:"#_28-第-3-次握手可以携带数据吗",children:[]},{level:3,title:"29.了解 TCP 半连接状态吗？",slug:"_29-了解-tcp-半连接状态吗",link:"#_29-了解-tcp-半连接状态吗",children:[]},{level:3,title:"30.说说 TCP 四次挥手的过程？",slug:"_30-说说-tcp-四次挥手的过程",link:"#_30-说说-tcp-四次挥手的过程",children:[]},{level:3,title:"31.TCP 挥手为什么需要四次呢？",slug:"_31-tcp-挥手为什么需要四次呢",link:"#_31-tcp-挥手为什么需要四次呢",children:[]},{level:3,title:"32.TCP 四次挥手过程中，为什么需要等待 2MSL, 才进入 CLOSED 关闭状态？",slug:"_32-tcp-四次挥手过程中-为什么需要等待-2msl-才进入-closed-关闭状态",link:"#_32-tcp-四次挥手过程中-为什么需要等待-2msl-才进入-closed-关闭状态",children:[]},{level:3,title:"33.保活计时器有什么用？",slug:"_33-保活计时器有什么用",link:"#_33-保活计时器有什么用",children:[]},{level:3,title:"34.CLOSE-WAIT 和 TIME-WAIT 的状态和意义？",slug:"_34-close-wait-和-time-wait-的状态和意义",link:"#_34-close-wait-和-time-wait-的状态和意义",children:[]},{level:3,title:"35.TIME_WAIT 状态过多会导致什么问题？怎么解决？",slug:"_35-time-wait-状态过多会导致什么问题-怎么解决",link:"#_35-time-wait-状态过多会导致什么问题-怎么解决",children:[]},{level:3,title:"36.说说 TCP 报文头部的格式？",slug:"_36-说说-tcp-报文头部的格式",link:"#_36-说说-tcp-报文头部的格式",children:[]},{level:3,title:"37.TCP 为什么可靠？",slug:"_37-tcp-为什么可靠",link:"#_37-tcp-为什么可靠",children:[]},{level:3,title:"38.说说 TCP 的流量控制？",slug:"_38-说说-tcp-的流量控制",link:"#_38-说说-tcp-的流量控制",children:[]},{level:3,title:"39.详细说说 TCP 的滑动窗口？",slug:"_39-详细说说-tcp-的滑动窗口",link:"#_39-详细说说-tcp-的滑动窗口",children:[]},{level:3,title:"40.了解 Nagle 算法和延迟确认吗？",slug:"_40-了解-nagle-算法和延迟确认吗",link:"#_40-了解-nagle-算法和延迟确认吗",children:[]},{level:3,title:"41.说说 TCP 的拥塞控制？",slug:"_41-说说-tcp-的拥塞控制",link:"#_41-说说-tcp-的拥塞控制",children:[]},{level:3,title:"42.说说 TCP 的重传机制？",slug:"_42-说说-tcp-的重传机制",link:"#_42-说说-tcp-的重传机制",children:[]},{level:3,title:"43.说说 TCP 的粘包和拆包？",slug:"_43-说说-tcp-的粘包和拆包",link:"#_43-说说-tcp-的粘包和拆包",children:[]},{level:3,title:"63.一个TCP连接可以发送多少次HTTP请求?（补充）",slug:"_63-一个tcp连接可以发送多少次http请求-补充",link:"#_63-一个tcp连接可以发送多少次http请求-补充",children:[]}]},{level:2,title:"UDP",slug:"udp",link:"#udp",children:[{level:3,title:"44.说说 TCP 和 UDP 的区别？",slug:"_44-说说-tcp-和-udp-的区别",link:"#_44-说说-tcp-和-udp-的区别",children:[]},{level:3,title:"45.为什么 QQ 采用 UDP 协议？",slug:"_45-为什么-qq-采用-udp-协议",link:"#_45-为什么-qq-采用-udp-协议",children:[]},{level:3,title:"46.UDP 协议为什么不可靠？",slug:"_46-udp-协议为什么不可靠",link:"#_46-udp-协议为什么不可靠",children:[]},{level:3,title:"47.DNS 为什么要用 UDP?",slug:"_47-dns-为什么要用-udp",link:"#_47-dns-为什么要用-udp",children:[]}]},{level:2,title:"IP",slug:"ip",link:"#ip",children:[{level:3,title:"48.IP 协议的定义和作用？",slug:"_48-ip-协议的定义和作用",link:"#_48-ip-协议的定义和作用",children:[]},{level:3,title:"49.IP 地址有哪些分类？",slug:"_49-ip-地址有哪些分类",link:"#_49-ip-地址有哪些分类",children:[]},{level:3,title:"50.域名和 IP 的关系？一个 IP 可以对应多个域名吗？",slug:"_50-域名和-ip-的关系-一个-ip-可以对应多个域名吗",link:"#_50-域名和-ip-的关系-一个-ip-可以对应多个域名吗",children:[]},{level:3,title:"51.IPV4 地址不够如何解决？",slug:"_51-ipv4-地址不够如何解决",link:"#_51-ipv4-地址不够如何解决",children:[]},{level:3,title:"52.说下 ARP 协议的工作过程？",slug:"_52-说下-arp-协议的工作过程",link:"#_52-说下-arp-协议的工作过程",children:[]},{level:3,title:"53.为什么既有 IP 地址，又有 MAC 地址？",slug:"_53-为什么既有-ip-地址-又有-mac-地址",link:"#_53-为什么既有-ip-地址-又有-mac-地址",children:[]},{level:3,title:"54.ICMP 协议的功能？",slug:"_54-icmp-协议的功能",link:"#_54-icmp-协议的功能",children:[]},{level:3,title:"55.说下 ping 的原理？",slug:"_55-说下-ping-的原理",link:"#_55-说下-ping-的原理",children:[]}]},{level:2,title:"网络安全",slug:"网络安全",link:"#网络安全",children:[{level:3,title:"56.说说有哪些安全攻击？",slug:"_56-说说有哪些安全攻击",link:"#_56-说说有哪些安全攻击",children:[]},{level:3,title:"57.DNS 劫持了解吗？",slug:"_57-dns-劫持了解吗",link:"#_57-dns-劫持了解吗",children:[]},{level:3,title:"58.什么是 CSRF 攻击？如何避免？",slug:"_58-什么是-csrf-攻击-如何避免",link:"#_58-什么是-csrf-攻击-如何避免",children:[]},{level:3,title:"59.什么是 DoS、DDoS、DRDoS 攻击？",slug:"_59-什么是-dos、ddos、drdos-攻击",link:"#_59-什么是-dos、ddos、drdos-攻击",children:[]},{level:3,title:"60.什么是 XSS 攻击，如何避免?",slug:"_60-什么是-xss-攻击-如何避免",link:"#_60-什么是-xss-攻击-如何避免",children:[]},{level:3,title:"61.对称加密与非对称加密有什么区别？",slug:"_61-对称加密与非对称加密有什么区别",link:"#_61-对称加密与非对称加密有什么区别",children:[]},{level:3,title:"62.RSA 和 AES 算法有什么区别？",slug:"_62-rsa-和-aes-算法有什么区别",link:"#_62-rsa-和-aes-算法有什么区别",children:[]}]}],path:"/Interview/sanfene/network.html",pathLocale:"/",extraFields:[]},{title:"面渣逆袭必看，面试题八股文Java基础、Java 集合框架、Java 并发编程、JVM、Spring、Redis、MyBatis、MySQL、操作系统、计算机网络、RocketMQ、分布式、微服务、设计模式、Linux👍",headers:[{level:2,title:"内容体系全面",slug:"内容体系全面",link:"#内容体系全面",children:[]},{level:2,title:"图文并貌，深入浅出",slug:"图文并貌-深入浅出",link:"#图文并貌-深入浅出",children:[]},{level:2,title:"持续迭代，不断完善",slug:"持续迭代-不断完善",link:"#持续迭代-不断完善",children:[]},{level:2,title:"在线版阅读",slug:"在线版阅读",link:"#在线版阅读",children:[]},{level:2,title:"PDF 介绍",slug:"pdf-介绍",link:"#pdf-介绍",children:[]}],path:"/Interview/sanfene/nixi.html",pathLocale:"/",extraFields:[]},{title:"操作系统面试题，34道操作系统八股文（1万字51张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"引论",slug:"引论",link:"#引论",children:[{level:3,title:"01、什么是操作系统？",slug:"_01、什么是操作系统",link:"#_01、什么是操作系统",children:[]},{level:3,title:"02、操作系统主要有哪些功能？",slug:"_02、操作系统主要有哪些功能",link:"#_02、操作系统主要有哪些功能",children:[]}]},{level:2,title:"操作系统结构",slug:"操作系统结构",link:"#操作系统结构",children:[{level:3,title:"03、什么是内核？",slug:"_03、什么是内核",link:"#_03、什么是内核",children:[]},{level:3,title:"04、什么是用户态和内核态？",slug:"_04、什么是用户态和内核态",link:"#_04、什么是用户态和内核态",children:[]},{level:3,title:"05、用户态和内核态是如何切换的？",slug:"_05、用户态和内核态是如何切换的",link:"#_05、用户态和内核态是如何切换的",children:[]}]},{level:2,title:"进程和线程",slug:"进程和线程",link:"#进程和线程",children:[{level:3,title:"06、并行和并发有什么区别？",slug:"_06、并行和并发有什么区别",link:"#_06、并行和并发有什么区别",children:[]},{level:3,title:"07、什么是进程上下文切换？",slug:"_07、什么是进程上下文切换",link:"#_07、什么是进程上下文切换",children:[]},{level:3,title:"08、进程有哪些状态？",slug:"_08、进程有哪些状态",link:"#_08、进程有哪些状态",children:[]},{level:3,title:"09、什么是僵尸进程？",slug:"_09、什么是僵尸进程",link:"#_09、什么是僵尸进程",children:[]},{level:3,title:"10、什么是孤儿进程？",slug:"_10、什么是孤儿进程",link:"#_10、什么是孤儿进程",children:[]},{level:3,title:"11、进程有哪些调度算法？",slug:"_11、进程有哪些调度算法",link:"#_11、进程有哪些调度算法",children:[]},{level:3,title:"12、进程间通信有哪些方式？",slug:"_12、进程间通信有哪些方式",link:"#_12、进程间通信有哪些方式",children:[]},{level:3,title:"13、进程和线程的联系和区别？",slug:"_13、进程和线程的联系和区别",link:"#_13、进程和线程的联系和区别",children:[]},{level:3,title:"14、线程上下文切换了解吗？",slug:"_14、线程上下文切换了解吗",link:"#_14、线程上下文切换了解吗",children:[]},{level:3,title:"15、线程有哪些实现方式？",slug:"_15、线程有哪些实现方式",link:"#_15、线程有哪些实现方式",children:[]},{level:3,title:"16、线程间如何同步？",slug:"_16、线程间如何同步",link:"#_16、线程间如何同步",children:[]},{level:3,title:"17、什么是死锁？",slug:"_17、什么是死锁",link:"#_17、什么是死锁",children:[]},{level:3,title:"18、死锁产生有哪些条件？",slug:"_18、死锁产生有哪些条件",link:"#_18、死锁产生有哪些条件",children:[]},{level:3,title:"19、如何避免死锁呢？",slug:"_19、如何避免死锁呢",link:"#_19、如何避免死锁呢",children:[]},{level:3,title:"20、活锁和饥饿锁了解吗？",slug:"_20、活锁和饥饿锁了解吗",link:"#_20、活锁和饥饿锁了解吗",children:[]}]},{level:2,title:"内存管理",slug:"内存管理",link:"#内存管理",children:[{level:3,title:"21、物理内存和虚拟内存有什么区别？",slug:"_21、物理内存和虚拟内存有什么区别",link:"#_21、物理内存和虚拟内存有什么区别",children:[]},{level:3,title:"22、什么是内存分段？",slug:"_22、什么是内存分段",link:"#_22、什么是内存分段",children:[]},{level:3,title:"23、什么是内存分页？",slug:"_23、什么是内存分页",link:"#_23、什么是内存分页",children:[]},{level:3,title:"24、多级页表知道吗？",slug:"_24、多级页表知道吗",link:"#_24、多级页表知道吗",children:[]},{level:3,title:"25、什么是快表？",slug:"_25、什么是快表",link:"#_25、什么是快表",children:[]},{level:3,title:"26、分页和分段有什么区别？",slug:"_26、分页和分段有什么区别",link:"#_26、分页和分段有什么区别",children:[]},{level:3,title:"27、什么是交换空间？",slug:"_27、什么是交换空间",link:"#_27、什么是交换空间",children:[]},{level:3,title:"33、什么是缺页中断？（补充）",slug:"_33、什么是缺页中断-补充",link:"#_33、什么是缺页中断-补充",children:[]},{level:3,title:"28、页面置换算法有哪些？",slug:"_28、页面置换算法有哪些",link:"#_28、页面置换算法有哪些",children:[]}]},{level:2,title:"文件",slug:"文件",link:"#文件",children:[{level:3,title:"29、硬链接和软链接有什么区别？",slug:"_29、硬链接和软链接有什么区别",link:"#_29、硬链接和软链接有什么区别",children:[]}]},{level:2,title:"IO",slug:"io",link:"#io",children:[{level:3,title:"30、零拷贝了解吗？",slug:"_30、零拷贝了解吗",link:"#_30、零拷贝了解吗",children:[]},{level:3,title:"31、聊聊阻塞与⾮阻塞 IO、 同步与异步 IO？",slug:"_31、聊聊阻塞与非阻塞-io、-同步与异步-io",link:"#_31、聊聊阻塞与非阻塞-io、-同步与异步-io",children:[]},{level:3,title:"32、详细讲一讲 I/O 多路复用？",slug:"_32、详细讲一讲-i-o-多路复用",link:"#_32、详细讲一讲-i-o-多路复用",children:[]},{level:3,title:"34.普通内存比一般的机械硬盘快多少？（补充）",slug:"_34-普通内存比一般的机械硬盘快多少-补充",link:"#_34-普通内存比一般的机械硬盘快多少-补充",children:[]}]}],path:"/Interview/sanfene/os.html",pathLocale:"/",extraFields:[]},{title:"Redis面试题，57道Redis八股文（1.9万字97张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1.说说什么是 Redis?",slug:"_1-说说什么是-redis",link:"#_1-说说什么是-redis",children:[]},{level:3,title:"2.Redis 可以用来干什么？",slug:"_2-redis-可以用来干什么",link:"#_2-redis-可以用来干什么",children:[]},{level:3,title:"3.Redis 有哪些数据类型？",slug:"_3-redis-有哪些数据类型",link:"#_3-redis-有哪些数据类型",children:[]},{level:3,title:"4.Redis 为什么快呢？",slug:"_4-redis-为什么快呢",link:"#_4-redis-为什么快呢",children:[]},{level:3,title:"5.能说一下 I/O 多路复用吗？",slug:"_5-能说一下-i-o-多路复用吗",link:"#_5-能说一下-i-o-多路复用吗",children:[]},{level:3,title:"6. Redis 为什么早期选择单线程？",slug:"_6-redis-为什么早期选择单线程",link:"#_6-redis-为什么早期选择单线程",children:[]},{level:3,title:"7.Redis 6.0 使用多线程是怎么回事?",slug:"_7-redis-6-0-使用多线程是怎么回事",link:"#_7-redis-6-0-使用多线程是怎么回事",children:[]},{level:3,title:"8.说说 Redis 常用命令（补充）",slug:"_8-说说-redis-常用命令-补充",link:"#_8-说说-redis-常用命令-补充",children:[]},{level:3,title:"9.单线程 Redis 的 QPS 是多少？(补充)",slug:"_9-单线程-redis-的-qps-是多少-补充",link:"#_9-单线程-redis-的-qps-是多少-补充",children:[]}]},{level:2,title:"持久化",slug:"持久化",link:"#持久化",children:[{level:3,title:"10.Redis 持久化⽅式有哪些？有什么区别？",slug:"_10-redis-持久化方式有哪些-有什么区别",link:"#_10-redis-持久化方式有哪些-有什么区别",children:[]},{level:3,title:"11.RDB 和 AOF 各自有什么优缺点？",slug:"_11-rdb-和-aof-各自有什么优缺点",link:"#_11-rdb-和-aof-各自有什么优缺点",children:[]},{level:3,title:"12.RDB 和 AOF 如何选择？",slug:"_12-rdb-和-aof-如何选择",link:"#_12-rdb-和-aof-如何选择",children:[]},{level:3,title:"13.Redis 的数据恢复？",slug:"_13-redis-的数据恢复",link:"#_13-redis-的数据恢复",children:[]},{level:3,title:"14.Redis 4.0 的混合持久化了解吗？",slug:"_14-redis-4-0-的混合持久化了解吗",link:"#_14-redis-4-0-的混合持久化了解吗",children:[]}]},{level:2,title:"高可用",slug:"高可用",link:"#高可用",children:[{level:3,title:"15.主从复制了解吗？",slug:"_15-主从复制了解吗",link:"#_15-主从复制了解吗",children:[]},{level:3,title:"16.Redis 主从有几种常见的拓扑结构？",slug:"_16-redis-主从有几种常见的拓扑结构",link:"#_16-redis-主从有几种常见的拓扑结构",children:[]},{level:3,title:"17.Redis 的主从复制原理了解吗？",slug:"_17-redis-的主从复制原理了解吗",link:"#_17-redis-的主从复制原理了解吗",children:[]},{level:3,title:"18.说说主从数据同步的方式？",slug:"_18-说说主从数据同步的方式",link:"#_18-说说主从数据同步的方式",children:[]},{level:3,title:"19.主从复制存在哪些问题呢？",slug:"_19-主从复制存在哪些问题呢",link:"#_19-主从复制存在哪些问题呢",children:[]},{level:3,title:"20.Redis 哨兵了解吗？",slug:"_20-redis-哨兵了解吗",link:"#_20-redis-哨兵了解吗",children:[]},{level:3,title:"21.Redis 哨兵实现原理知道吗？",slug:"_21-redis-哨兵实现原理知道吗",link:"#_21-redis-哨兵实现原理知道吗",children:[]},{level:3,title:"22.领导者 Sentinel 节点选举了解吗？",slug:"_22-领导者-sentinel-节点选举了解吗",link:"#_22-领导者-sentinel-节点选举了解吗",children:[]},{level:3,title:"23.新的主节点是怎样被挑选出来的？",slug:"_23-新的主节点是怎样被挑选出来的",link:"#_23-新的主节点是怎样被挑选出来的",children:[]},{level:3,title:"24.Redis 集群了解吗？",slug:"_24-redis-集群了解吗",link:"#_24-redis-集群了解吗",children:[]},{level:3,title:"25.Redis Cluster了解吗？（补充）",slug:"_25-redis-cluster了解吗-补充",link:"#_25-redis-cluster了解吗-补充",children:[]},{level:3,title:"26.集群中数据如何分区？",slug:"_26-集群中数据如何分区",link:"#_26-集群中数据如何分区",children:[]},{level:3,title:"27.能说说 Redis 集群的原理吗？",slug:"_27-能说说-redis-集群的原理吗",link:"#_27-能说说-redis-集群的原理吗",children:[]},{level:3,title:"28.说说集群的伸缩？",slug:"_28-说说集群的伸缩",link:"#_28-说说集群的伸缩",children:[]}]},{level:2,title:"缓存设计",slug:"缓存设计",link:"#缓存设计",children:[{level:3,title:"29.缓存击穿、缓存穿透、缓存雪崩了解吗？",slug:"_29-缓存击穿、缓存穿透、缓存雪崩了解吗",link:"#_29-缓存击穿、缓存穿透、缓存雪崩了解吗",children:[]},{level:3,title:"30.能说说布隆过滤器吗？",slug:"_30-能说说布隆过滤器吗",link:"#_30-能说说布隆过滤器吗",children:[]},{level:3,title:"31.如何保证缓存和数据库的数据⼀致性？",slug:"_31-如何保证缓存和数据库的数据一致性",link:"#_31-如何保证缓存和数据库的数据一致性",children:[]},{level:3,title:"32.如何保证本地缓存和分布式缓存的一致？",slug:"_32-如何保证本地缓存和分布式缓存的一致",link:"#_32-如何保证本地缓存和分布式缓存的一致",children:[]},{level:3,title:"33.怎么处理热 key？",slug:"_33-怎么处理热-key",link:"#_33-怎么处理热-key",children:[]},{level:3,title:"34.缓存预热怎么做呢？",slug:"_34-缓存预热怎么做呢",link:"#_34-缓存预热怎么做呢",children:[]},{level:3,title:"35.热点 key 重建？问题？解决？",slug:"_35-热点-key-重建-问题-解决",link:"#_35-热点-key-重建-问题-解决",children:[]},{level:3,title:"36.无底洞问题吗？如何解决？",slug:"_36-无底洞问题吗-如何解决",link:"#_36-无底洞问题吗-如何解决",children:[]}]},{level:2,title:"Redis 运维",slug:"redis-运维",link:"#redis-运维",children:[{level:3,title:"37.Redis 报内存不足怎么处理？",slug:"_37-redis-报内存不足怎么处理",link:"#_37-redis-报内存不足怎么处理",children:[]},{level:3,title:"38.Redis key 过期策略有哪些？",slug:"_38-redis-key-过期策略有哪些",link:"#_38-redis-key-过期策略有哪些",children:[]},{level:3,title:"39.Redis 有哪些内存淘汰策略？",slug:"_39-redis-有哪些内存淘汰策略",link:"#_39-redis-有哪些内存淘汰策略",children:[]},{level:3,title:"40.Redis 阻塞？怎么解决？",slug:"_40-redis-阻塞-怎么解决",link:"#_40-redis-阻塞-怎么解决",children:[]},{level:3,title:"41.大 key 问题了解吗？",slug:"_41-大-key-问题了解吗",link:"#_41-大-key-问题了解吗",children:[]},{level:3,title:"42.Redis 常见性能问题和解决方案？",slug:"_42-redis-常见性能问题和解决方案",link:"#_42-redis-常见性能问题和解决方案",children:[]}]},{level:2,title:"Redis 应用",slug:"redis-应用",link:"#redis-应用",children:[{level:3,title:"43.使用 Redis 如何实现异步队列？",slug:"_43-使用-redis-如何实现异步队列",link:"#_43-使用-redis-如何实现异步队列",children:[]},{level:3,title:"44.Redis 如何实现延时队列?",slug:"_44-redis-如何实现延时队列",link:"#_44-redis-如何实现延时队列",children:[]},{level:3,title:"45.Redis 支持事务吗？",slug:"_45-redis-支持事务吗",link:"#_45-redis-支持事务吗",children:[]},{level:3,title:"46.有 Lua 脚本操作 Redis 的经验吗？",slug:"_46-有-lua-脚本操作-redis-的经验吗",link:"#_46-有-lua-脚本操作-redis-的经验吗",children:[]},{level:3,title:"47.Redis 的管道Pipeline了解吗？",slug:"_47-redis-的管道pipeline了解吗",link:"#_47-redis-的管道pipeline了解吗",children:[]},{level:3,title:"48.Redis 实现分布式锁了解吗？",slug:"_48-redis-实现分布式锁了解吗",link:"#_48-redis-实现分布式锁了解吗",children:[]}]},{level:2,title:"底层结构",slug:"底层结构",link:"#底层结构",children:[{level:3,title:"49.说说 Redis 底层数据结构？",slug:"_49-说说-redis-底层数据结构",link:"#_49-说说-redis-底层数据结构",children:[]},{level:3,title:"50.Redis 的 SDS 和 C 中字符串相比有什么优势？",slug:"_50-redis-的-sds-和-c-中字符串相比有什么优势",link:"#_50-redis-的-sds-和-c-中字符串相比有什么优势",children:[]},{level:3,title:"51.字典是如何实现的？Rehash 了解吗？",slug:"_51-字典是如何实现的-rehash-了解吗",link:"#_51-字典是如何实现的-rehash-了解吗",children:[]},{level:3,title:"52.跳表是如何实现的？原理？",slug:"_52-跳表是如何实现的-原理",link:"#_52-跳表是如何实现的-原理",children:[]},{level:3,title:"53.压缩列表了解吗？",slug:"_53-压缩列表了解吗",link:"#_53-压缩列表了解吗",children:[]},{level:3,title:"54.快速列表 quicklist 了解吗？",slug:"_54-快速列表-quicklist-了解吗",link:"#_54-快速列表-quicklist-了解吗",children:[]}]},{level:2,title:"补充",slug:"补充",link:"#补充",children:[{level:3,title:"55.假如 Redis 里面有 1 亿个 key，其中有 10w 个 key 是以某个固定的已知的前缀开头的，如何将它们全部找出来？",slug:"_55-假如-redis-里面有-1-亿个-key-其中有-10w-个-key-是以某个固定的已知的前缀开头的-如何将它们全部找出来",link:"#_55-假如-redis-里面有-1-亿个-key-其中有-10w-个-key-是以某个固定的已知的前缀开头的-如何将它们全部找出来",children:[]},{level:3,title:"56.Redis 的秒杀场景下扮演了什么角色？（补充）",slug:"_56-redis-的秒杀场景下扮演了什么角色-补充",link:"#_56-redis-的秒杀场景下扮演了什么角色-补充",children:[]},{level:3,title:"57. 客户端宕机后 Redis 服务端如何感知到？",slug:"_57-客户端宕机后-redis-服务端如何感知到",link:"#_57-客户端宕机后-redis-服务端如何感知到",children:[]}]}],path:"/Interview/sanfene/redis.html",pathLocale:"/",extraFields:[]},{title:"消息队列面试题之RocketMQ篇，23道RocketMQ八股文（1.1万字45张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1.为什么要使用消息队列呢？",slug:"_1-为什么要使用消息队列呢",link:"#_1-为什么要使用消息队列呢",children:[]},{level:3,title:"2.为什么要选择 RocketMQ?",slug:"_2-为什么要选择-rocketmq",link:"#_2-为什么要选择-rocketmq",children:[]},{level:3,title:"3.RocketMQ 有什么优缺点？",slug:"_3-rocketmq-有什么优缺点",link:"#_3-rocketmq-有什么优缺点",children:[]},{level:3,title:"4.消息队列有哪些消息模型？",slug:"_4-消息队列有哪些消息模型",link:"#_4-消息队列有哪些消息模型",children:[]},{level:3,title:"5.那 RocketMQ 的消息模型呢？",slug:"_5-那-rocketmq-的消息模型呢",link:"#_5-那-rocketmq-的消息模型呢",children:[]},{level:3,title:"6.消息的消费模式了解吗？",slug:"_6-消息的消费模式了解吗",link:"#_6-消息的消费模式了解吗",children:[]},{level:3,title:"7.RoctetMQ 基本架构了解吗？",slug:"_7-roctetmq-基本架构了解吗",link:"#_7-roctetmq-基本架构了解吗",children:[]},{level:3,title:"8.那能介绍一下这四部分吗？",slug:"_8-那能介绍一下这四部分吗",link:"#_8-那能介绍一下这四部分吗",children:[]}]},{level:2,title:"进阶",slug:"进阶",link:"#进阶",children:[{level:3,title:"9.如何保证消息的可用性/可靠性/不丢失呢？",slug:"_9-如何保证消息的可用性-可靠性-不丢失呢",link:"#_9-如何保证消息的可用性-可靠性-不丢失呢",children:[]},{level:3,title:"10.如何处理消息重复的问题呢？",slug:"_10-如何处理消息重复的问题呢",link:"#_10-如何处理消息重复的问题呢",children:[]},{level:3,title:"11.怎么处理消息积压？",slug:"_11-怎么处理消息积压",link:"#_11-怎么处理消息积压",children:[]},{level:3,title:"12.顺序消息如何实现？",slug:"_12-顺序消息如何实现",link:"#_12-顺序消息如何实现",children:[]},{level:3,title:"13.如何实现消息过滤？",slug:"_13-如何实现消息过滤",link:"#_13-如何实现消息过滤",children:[]},{level:3,title:"14.延时消息了解吗？",slug:"_14-延时消息了解吗",link:"#_14-延时消息了解吗",children:[]},{level:3,title:"15.怎么实现分布式消息事务的？半消息？",slug:"_15-怎么实现分布式消息事务的-半消息",link:"#_15-怎么实现分布式消息事务的-半消息",children:[]},{level:3,title:"16.死信队列知道吗？",slug:"_16-死信队列知道吗",link:"#_16-死信队列知道吗",children:[]},{level:3,title:"17.如何保证 RocketMQ 的高可用？",slug:"_17-如何保证-rocketmq-的高可用",link:"#_17-如何保证-rocketmq-的高可用",children:[]}]},{level:2,title:"原理",slug:"原理",link:"#原理",children:[{level:3,title:"18.说一下 RocketMQ 的整体工作流程？",slug:"_18-说一下-rocketmq-的整体工作流程",link:"#_18-说一下-rocketmq-的整体工作流程",children:[]},{level:3,title:"19.为什么 RocketMQ 不使用 Zookeeper 作为注册中心呢？",slug:"_19-为什么-rocketmq-不使用-zookeeper-作为注册中心呢",link:"#_19-为什么-rocketmq-不使用-zookeeper-作为注册中心呢",children:[]},{level:3,title:"20.Broker 是怎么保存数据的呢？",slug:"_20-broker-是怎么保存数据的呢",link:"#_20-broker-是怎么保存数据的呢",children:[]},{level:3,title:"21.说说 RocketMQ 怎么对文件进行读写的？",slug:"_21-说说-rocketmq-怎么对文件进行读写的",link:"#_21-说说-rocketmq-怎么对文件进行读写的",children:[]},{level:3,title:"22.消息刷盘怎么实现的呢？",slug:"_22-消息刷盘怎么实现的呢",link:"#_22-消息刷盘怎么实现的呢",children:[]},{level:3,title:"23.能说下 RocketMQ 的负载均衡是如何实现的？",slug:"_23-能说下-rocketmq-的负载均衡是如何实现的",link:"#_23-能说下-rocketmq-的负载均衡是如何实现的",children:[]},{level:3,title:"24.RocketMQ 消息长轮询了解吗？",slug:"_24-rocketmq-消息长轮询了解吗",link:"#_24-rocketmq-消息长轮询了解吗",children:[]}]}],path:"/Interview/sanfene/rocketmq.html",pathLocale:"/",extraFields:[]},{title:"设计模式面试题，5道设计模式八股文（3000字10张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"01、什么是责任链模式？",slug:"_01、什么是责任链模式",link:"#_01、什么是责任链模式",children:[{level:3,title:"基本概念",slug:"基本概念",link:"#基本概念",children:[]},{level:3,title:"工作流程",slug:"工作流程",link:"#工作流程",children:[]},{level:3,title:"应用场景",slug:"应用场景",link:"#应用场景",children:[]},{level:3,title:"优缺点",slug:"优缺点",link:"#优缺点",children:[]},{level:3,title:"实现示例",slug:"实现示例",link:"#实现示例",children:[]}]},{level:2,title:"02、什么是工厂模式？",slug:"_02、什么是工厂模式",link:"#_02、什么是工厂模式",children:[{level:3,title:"工厂模式的主要类型",slug:"工厂模式的主要类型",link:"#工厂模式的主要类型",children:[]},{level:3,title:"应用场景",slug:"应用场景-1",link:"#应用场景-1",children:[]}]},{level:2,title:"03、什么是单例模式？",slug:"_03、什么是单例模式",link:"#_03、什么是单例模式",children:[{level:3,title:"实现单例模式的关键点？",slug:"实现单例模式的关键点",link:"#实现单例模式的关键点",children:[]},{level:3,title:"常见的单例模式实现？",slug:"常见的单例模式实现",link:"#常见的单例模式实现",children:[]},{level:3,title:"单例模式的好处有哪些？",slug:"单例模式的好处有哪些",link:"#单例模式的好处有哪些",children:[]},{level:3,title:"单例模式有几种实现方式？",slug:"单例模式有几种实现方式",link:"#单例模式有几种实现方式",children:[]}]},{level:2,title:"04、了解哪些设计模式？",slug:"_04、了解哪些设计模式",link:"#_04、了解哪些设计模式",children:[]},{level:2,title:"05、什么是策略模式？",slug:"_05、什么是策略模式",link:"#_05、什么是策略模式",children:[]}],path:"/Interview/sanfene/shejimoshi.html",pathLocale:"/",extraFields:[]},{title:"Spring面试题，41道Spring八股文（1.3万字63张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"基础",slug:"基础",link:"#基础",children:[{level:3,title:"1.Spring 是什么？特性？有哪些模块？",slug:"_1-spring-是什么-特性-有哪些模块",link:"#_1-spring-是什么-特性-有哪些模块",children:[]},{level:3,title:"2.Spring 有哪些模块呢？",slug:"_2-spring-有哪些模块呢",link:"#_2-spring-有哪些模块呢",children:[]},{level:3,title:"3.Spring 有哪些常用注解呢？",slug:"_3-spring-有哪些常用注解呢",link:"#_3-spring-有哪些常用注解呢",children:[]},{level:3,title:"4.Spring 中应用了哪些设计模式呢？",slug:"_4-spring-中应用了哪些设计模式呢",link:"#_4-spring-中应用了哪些设计模式呢",children:[]},{level:3,title:"39.Spring 容器、Web 容器之间的区别？（补充）",slug:"_39-spring-容器、web-容器之间的区别-补充",link:"#_39-spring-容器、web-容器之间的区别-补充",children:[]}]},{level:2,title:"IoC",slug:"ioc",link:"#ioc",children:[{level:3,title:"5.说一说什么是 IoC、DI？",slug:"_5-说一说什么是-ioc、di",link:"#_5-说一说什么是-ioc、di",children:[]},{level:3,title:"6.能简单说一下 Spring IoC 的实现机制吗？",slug:"_6-能简单说一下-spring-ioc-的实现机制吗",link:"#_6-能简单说一下-spring-ioc-的实现机制吗",children:[]},{level:3,title:"7.说说 BeanFactory 和 ApplicantContext?",slug:"_7-说说-beanfactory-和-applicantcontext",link:"#_7-说说-beanfactory-和-applicantcontext",children:[]},{level:3,title:"8.你知道 Spring 容器启动阶段会干什么吗？",slug:"_8-你知道-spring-容器启动阶段会干什么吗",link:"#_8-你知道-spring-容器启动阶段会干什么吗",children:[]},{level:3,title:"9.你是怎么理解 Bean 的？",slug:"_9-你是怎么理解-bean-的",link:"#_9-你是怎么理解-bean-的",children:[]},{level:3,title:"10.能说一下 Bean 的生命周期吗？",slug:"_10-能说一下-bean-的生命周期吗",link:"#_10-能说一下-bean-的生命周期吗",children:[]},{level:3,title:"11.为什么 IDEA 不推荐使用 @Autowired 注解注入 Bean？",slug:"_11-为什么-idea-不推荐使用-autowired-注解注入-bean",link:"#_11-为什么-idea-不推荐使用-autowired-注解注入-bean",children:[]},{level:3,title:"12.Spring 有哪些自动装配的方式？",slug:"_12-spring-有哪些自动装配的方式",link:"#_12-spring-有哪些自动装配的方式",children:[]},{level:3,title:"13.Bean 的作用域有哪些?",slug:"_13-bean-的作用域有哪些",link:"#_13-bean-的作用域有哪些",children:[]},{level:3,title:"14.Spring 中的单例 Bean 会存在线程安全问题吗？",slug:"_14-spring-中的单例-bean-会存在线程安全问题吗",link:"#_14-spring-中的单例-bean-会存在线程安全问题吗",children:[]},{level:3,title:"15.说说循环依赖?",slug:"_15-说说循环依赖",link:"#_15-说说循环依赖",children:[]},{level:3,title:"16.Spring 怎么解决循环依赖呢？",slug:"_16-spring-怎么解决循环依赖呢",link:"#_16-spring-怎么解决循环依赖呢",children:[]},{level:3,title:"17.为什么要三级缓存？⼆级不⾏吗？",slug:"_17-为什么要三级缓存-二级不行吗",link:"#_17-为什么要三级缓存-二级不行吗",children:[]},{level:3,title:"18.@Autowired 的实现原理？",slug:"_18-autowired-的实现原理",link:"#_18-autowired-的实现原理",children:[]}]},{level:2,title:"AOP",slug:"aop",link:"#aop",children:[{level:3,title:"19.说说什么是 AOP？",slug:"_19-说说什么是-aop",link:"#_19-说说什么是-aop",children:[]},{level:3,title:"20.AOP的使用场景有哪些？",slug:"_20-aop的使用场景有哪些",link:"#_20-aop的使用场景有哪些",children:[]},{level:3,title:"21.说说 JDK 动态代理和 CGLIB 代理？",slug:"_21-说说-jdk-动态代理和-cglib-代理",link:"#_21-说说-jdk-动态代理和-cglib-代理",children:[]},{level:3,title:"22.说说 Spring AOP 和 AspectJ AOP 区别?",slug:"_22-说说-spring-aop-和-aspectj-aop-区别",link:"#_22-说说-spring-aop-和-aspectj-aop-区别",children:[]},{level:3,title:"40.说说 AOP 和反射的区别？（补充）",slug:"_40-说说-aop-和反射的区别-补充",link:"#_40-说说-aop-和反射的区别-补充",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"23.Spring 事务的种类？",slug:"_23-spring-事务的种类",link:"#_23-spring-事务的种类",children:[]},{level:3,title:"24.说说 Spring 的事务隔离级别？",slug:"_24-说说-spring-的事务隔离级别",link:"#_24-说说-spring-的事务隔离级别",children:[]},{level:3,title:"25.Spring 的事务传播机制？",slug:"_25-spring-的事务传播机制",link:"#_25-spring-的事务传播机制",children:[]},{level:3,title:"26.声明式事务实现原理了解吗？",slug:"_26-声明式事务实现原理了解吗",link:"#_26-声明式事务实现原理了解吗",children:[]},{level:3,title:"27.声明式事务在哪些情况下会失效？",slug:"_27-声明式事务在哪些情况下会失效",link:"#_27-声明式事务在哪些情况下会失效",children:[]}]},{level:2,title:"MVC",slug:"mvc",link:"#mvc",children:[{level:3,title:"28.Spring MVC 的核心组件？",slug:"_28-spring-mvc-的核心组件",link:"#_28-spring-mvc-的核心组件",children:[]},{level:3,title:"29.Spring MVC 的工作流程？",slug:"_29-spring-mvc-的工作流程",link:"#_29-spring-mvc-的工作流程",children:[]},{level:3,title:"30.SpringMVC Restful 风格的接口的流程是什么样的呢？",slug:"_30-springmvc-restful-风格的接口的流程是什么样的呢",link:"#_30-springmvc-restful-风格的接口的流程是什么样的呢",children:[]}]},{level:2,title:"Spring Boot",slug:"spring-boot",link:"#spring-boot",children:[{level:3,title:"31.介绍一下 SpringBoot，有哪些优点？",slug:"_31-介绍一下-springboot-有哪些优点",link:"#_31-介绍一下-springboot-有哪些优点",children:[]},{level:3,title:"32.SpringBoot 自动配置原理了解吗？",slug:"_32-springboot-自动配置原理了解吗",link:"#_32-springboot-自动配置原理了解吗",children:[]},{level:3,title:"33.如何自定义一个 SpringBoot Srarter?",slug:"_33-如何自定义一个-springboot-srarter",link:"#_33-如何自定义一个-springboot-srarter",children:[]},{level:3,title:"34.Spring Boot 启动原理了解吗？",slug:"_34-spring-boot-启动原理了解吗",link:"#_34-spring-boot-启动原理了解吗",children:[]},{level:3,title:"36.SpringBoot 和 SpringMVC 的区别？（补充）",slug:"_36-springboot-和-springmvc-的区别-补充",link:"#_36-springboot-和-springmvc-的区别-补充",children:[]},{level:3,title:"38.Spring Boot 和 Spring 有什么区别？（补充）",slug:"_38-spring-boot-和-spring-有什么区别-补充",link:"#_38-spring-boot-和-spring-有什么区别-补充",children:[]}]},{level:2,title:"Spring Cloud",slug:"spring-cloud",link:"#spring-cloud",children:[{level:3,title:"35.对 SpringCloud 了解多少？",slug:"_35-对-springcloud-了解多少",link:"#_35-对-springcloud-了解多少",children:[]}]},{level:2,title:"补充",slug:"补充",link:"#补充",children:[{level:3,title:"37.SpringTask 了解吗？",slug:"_37-springtask-了解吗",link:"#_37-springtask-了解吗",children:[]},{level:3,title:"41.Spring Cache 了解吗？",slug:"_41-spring-cache-了解吗",link:"#_41-spring-cache-了解吗",children:[]}]}],path:"/Interview/sanfene/spring.html",pathLocale:"/",extraFields:[]},{title:"微服务面试题（Dubbo、Spring Cloud），33道微服务八股文（1.4万字33张手绘图），面渣逆袭必看👍",headers:[{level:2,title:"概览",slug:"概览",link:"#概览",children:[{level:3,title:"1.什么是微服务？",slug:"_1-什么是微服务",link:"#_1-什么是微服务",children:[]},{level:3,title:"2.微服务带来了哪些挑战？",slug:"_2-微服务带来了哪些挑战",link:"#_2-微服务带来了哪些挑战",children:[]},{level:3,title:"3.现在有哪些流行的微服务解决方案？",slug:"_3-现在有哪些流行的微服务解决方案",link:"#_3-现在有哪些流行的微服务解决方案",children:[]},{level:3,title:"4.说下微服务有哪些组件？",slug:"_4-说下微服务有哪些组件",link:"#_4-说下微服务有哪些组件",children:[]}]},{level:2,title:"注册中心",slug:"注册中心",link:"#注册中心",children:[{level:3,title:"5.注册中心是用来干什么的？",slug:"_5-注册中心是用来干什么的",link:"#_5-注册中心是用来干什么的",children:[]},{level:3,title:"6.SpringCloud 可以选择哪些注册中心？",slug:"_6-springcloud-可以选择哪些注册中心",link:"#_6-springcloud-可以选择哪些注册中心",children:[]},{level:3,title:"7.说下 Eureka、ZooKeeper、Nacos 的区别？",slug:"_7-说下-eureka、zookeeper、nacos-的区别",link:"#_7-说下-eureka、zookeeper、nacos-的区别",children:[]},{level:3,title:"8.Eureka 实现原理了解吗？",slug:"_8-eureka-实现原理了解吗",link:"#_8-eureka-实现原理了解吗",children:[]},{level:3,title:"9.Eureka Server 怎么保证高可用？",slug:"_9-eureka-server-怎么保证高可用",link:"#_9-eureka-server-怎么保证高可用",children:[]}]},{level:2,title:"配置中心",slug:"配置中心",link:"#配置中心",children:[{level:3,title:"10.为什么微服务需要配置中心？",slug:"_10-为什么微服务需要配置中心",link:"#_10-为什么微服务需要配置中心",children:[]},{level:3,title:"11.SpringCloud 可以选择哪些配置中心？",slug:"_11-springcloud-可以选择哪些配置中心",link:"#_11-springcloud-可以选择哪些配置中心",children:[]},{level:3,title:"12.Nacos 配置中心的原理了解吗？",slug:"_12-nacos-配置中心的原理了解吗",link:"#_12-nacos-配置中心的原理了解吗",children:[]},{level:3,title:"13.Nacos 配置中心长轮询机制？",slug:"_13-nacos-配置中心长轮询机制",link:"#_13-nacos-配置中心长轮询机制",children:[]}]},{level:2,title:"远程调用",slug:"远程调用",link:"#远程调用",children:[{level:3,title:"14.能说下 HTTP 和 RPC 的区别吗？",slug:"_14-能说下-http-和-rpc-的区别吗",link:"#_14-能说下-http-和-rpc-的区别吗",children:[]},{level:3,title:"15.那 Feign 和 Dubbo 的区别呢？",slug:"_15-那-feign-和-dubbo-的区别呢",link:"#_15-那-feign-和-dubbo-的区别呢",children:[]},{level:3,title:"16.说一下 Fegin?",slug:"_16-说一下-fegin",link:"#_16-说一下-fegin",children:[]},{level:3,title:"17.为什么 Feign 第一次调用耗时很长？",slug:"_17-为什么-feign-第一次调用耗时很长",link:"#_17-为什么-feign-第一次调用耗时很长",children:[]},{level:3,title:"18.Feign 怎么实现认证传递？",slug:"_18-feign-怎么实现认证传递",link:"#_18-feign-怎么实现认证传递",children:[]},{level:3,title:"19.Fegin 怎么做负载均衡？Ribbon?",slug:"_19-fegin-怎么做负载均衡-ribbon",link:"#_19-fegin-怎么做负载均衡-ribbon",children:[]},{level:3,title:"20.说说有哪些负载均衡算法？",slug:"_20-说说有哪些负载均衡算法",link:"#_20-说说有哪些负载均衡算法",children:[]}]},{level:2,title:"服务容灾",slug:"服务容灾",link:"#服务容灾",children:[{level:3,title:"21.什么是服务雪崩？",slug:"_21-什么是服务雪崩",link:"#_21-什么是服务雪崩",children:[]},{level:3,title:"22.什么是服务熔断？什么是服务降级？",slug:"_22-什么是服务熔断-什么是服务降级",link:"#_22-什么是服务熔断-什么是服务降级",children:[]},{level:3,title:"23.Hystrix 怎么实现服务容错？",slug:"_23-hystrix-怎么实现服务容错",link:"#_23-hystrix-怎么实现服务容错",children:[]},{level:3,title:"24.Sentinel 怎么实现限流的？",slug:"_24-sentinel-怎么实现限流的",link:"#_24-sentinel-怎么实现限流的",children:[]}]},{level:2,title:"服务网关",slug:"服务网关",link:"#服务网关",children:[{level:3,title:"25.什么是 API 网关？",slug:"_25-什么是-api-网关",link:"#_25-什么是-api-网关",children:[]},{level:3,title:"26.SpringCloud 可以选择哪些 API 网关？",slug:"_26-springcloud-可以选择哪些-api-网关",link:"#_26-springcloud-可以选择哪些-api-网关",children:[]},{level:3,title:"27.Spring Cloud Gateway 核心概念？",slug:"_27-spring-cloud-gateway-核心概念",link:"#_27-spring-cloud-gateway-核心概念",children:[]}]},{level:2,title:"链路追踪",slug:"链路追踪",link:"#链路追踪",children:[{level:3,title:"28.为什么要用微服务链路追踪？",slug:"_28-为什么要用微服务链路追踪",link:"#_28-为什么要用微服务链路追踪",children:[]},{level:3,title:"29.SpringCloud 可以选择哪些微服务链路追踪方案？",slug:"_29-springcloud-可以选择哪些微服务链路追踪方案",link:"#_29-springcloud-可以选择哪些微服务链路追踪方案",children:[]}]},{level:2,title:"分布式事务",slug:"分布式事务",link:"#分布式事务",children:[{level:3,title:"30.Seata 支持哪些模式的分布式事务？",slug:"_30-seata-支持哪些模式的分布式事务",link:"#_30-seata-支持哪些模式的分布式事务",children:[]},{level:3,title:"31.了解 Seata 的实现原理吗？",slug:"_31-了解-seata-的实现原理吗",link:"#_31-了解-seata-的实现原理吗",children:[]}]},{level:2,title:"服务监控",slug:"服务监控",link:"#服务监控",children:[{level:3,title:"32.你们的服务怎么做监控和告警？",slug:"_32-你们的服务怎么做监控和告警",link:"#_32-你们的服务怎么做监控和告警",children:[]},{level:3,title:"33.你们的服务怎么做日志收集？",slug:"_33-你们的服务怎么做日志收集",link:"#_33-你们的服务怎么做日志收集",children:[]}]}],path:"/Interview/sanfene/weifuwu.html",pathLocale:"/",extraFields:[]},{title:"面试答题卡",headers:[],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/",pathLocale:"/",extraFields:[]},{title:"1. 程序计数器",headers:[{level:2,title:"1.1 定义",slug:"_1-1-定义",link:"#_1-1-定义",children:[]},{level:2,title:"1.2 作用",slug:"_1-2-作用",link:"#_1-2-作用",children:[]},{level:2,title:"1.3 特点",slug:"_1-3-特点",link:"#_1-3-特点",children:[]},{level:2,title:"1.4 内存结构",slug:"_1-4-内存结构",link:"#_1-4-内存结构",children:[]},{level:2,title:"1.5 线程切换",slug:"_1-5-线程切换",link:"#_1-5-线程切换",children:[]},{level:2,title:"1.6 异常情况",slug:"_1-6-异常情况",link:"#_1-6-异常情况",children:[]}],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.1%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8.html",pathLocale:"/",extraFields:[]},{title:"2. 虚拟机栈",headers:[{level:2,title:"2.1 定义",slug:"_2-1-定义",link:"#_2-1-定义",children:[]},{level:2,title:"2.2 内存结构",slug:"_2-2-内存结构",link:"#_2-2-内存结构",children:[]},{level:2,title:"2.3 线程切换",slug:"_2-3-线程切换",link:"#_2-3-线程切换",children:[]},{level:2,title:"2.4 异常情况",slug:"_2-4-异常情况",link:"#_2-4-异常情况",children:[]},{level:2,title:"2.5 问题辨析",slug:"_2-5-问题辨析",link:"#_2-5-问题辨析",children:[]},{level:2,title:"2.6 栈内存溢出",slug:"_2-6-栈内存溢出",link:"#_2-6-栈内存溢出",children:[]},{level:2,title:"2.7 线程运行诊断",slug:"_2-7-线程运行诊断",link:"#_2-7-线程运行诊断",children:[]}],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html",pathLocale:"/",extraFields:[]},{title:"3. 本地方法栈",headers:[{level:2,title:"3.1 作用",slug:"_3-1-作用",link:"#_3-1-作用",children:[]},{level:2,title:"3.2 与 Java 虚拟机栈的区别",slug:"_3-2-与-java-虚拟机栈的区别",link:"#_3-2-与-java-虚拟机栈的区别",children:[]},{level:2,title:"3.3 栈帧结构",slug:"_3-3-栈帧结构",link:"#_3-3-栈帧结构",children:[]},{level:2,title:"3.4 栈大小限制",slug:"_3-4-栈大小限制",link:"#_3-4-栈大小限制",children:[]},{level:2,title:"3.5 安全性考虑",slug:"_3-5-安全性考虑",link:"#_3-5-安全性考虑",children:[]}],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.3%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88.html",pathLocale:"/",extraFields:[]},{title:"4. 堆",headers:[{level:2,title:"4.1 定义",slug:"_4-1-定义",link:"#_4-1-定义",children:[]},{level:2,title:"4.2 堆内存溢出",slug:"_4-2-堆内存溢出",link:"#_4-2-堆内存溢出",children:[]}],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.4%E5%A0%86.html",pathLocale:"/",extraFields:[]},{title:"5 方法区",headers:[{level:2,title:"5.1 定义",slug:"_5-1-定义",link:"#_5-1-定义",children:[]},{level:2,title:"5.2 特点",slug:"_5-2-特点",link:"#_5-2-特点",children:[]},{level:2,title:"5.3 内存溢出",slug:"_5-3-内存溢出",link:"#_5-3-内存溢出",children:[]},{level:2,title:"5.4 诊断工具",slug:"_5-4-诊断工具",link:"#_5-4-诊断工具",children:[]},{level:2,title:"5.5 常量池",slug:"_5-5-常量池",link:"#_5-5-常量池",children:[{level:3,title:"1. 字面量的实例",slug:"_1-字面量的实例",link:"#_1-字面量的实例",children:[]},{level:3,title:"2. 符号引用的实例",slug:"_2-符号引用的实例",link:"#_2-符号引用的实例",children:[]}]},{level:2,title:"5.6 StringTable：字符串常量池",slug:"_5-6-stringtable-字符串常量池",link:"#_5-6-stringtable-字符串常量池",children:[{level:3,title:"1. 字符串常量池（StringTable）",slug:"_1-字符串常量池-stringtable",link:"#_1-字符串常量池-stringtable",children:[]},{level:3,title:"2. 字符串拼接的机制",slug:"_2-字符串拼接的机制",link:"#_2-字符串拼接的机制",children:[]},{level:3,title:"3. intern() 方法的作用",slug:"_3-intern-方法的作用",link:"#_3-intern-方法的作用",children:[]},{level:3,title:"4. StringTable 的位置",slug:"_4-stringtable-的位置",link:"#_4-stringtable-的位置",children:[]},{level:3,title:"5. StringTable 垃圾回收",slug:"_5-stringtable-垃圾回收",link:"#_5-stringtable-垃圾回收",children:[]},{level:3,title:"6. StringTable 性能调优",slug:"_6-stringtable-性能调优",link:"#_6-stringtable-性能调优",children:[]},{level:3,title:"7. 总结",slug:"_7-总结",link:"#_7-总结",children:[]}]}],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.5%E6%96%B9%E6%B3%95%E5%8C%BA.html",pathLocale:"/",extraFields:[]},{title:"6.直接内存",headers:[{level:2,title:"6.1 什么是直接内存？",slug:"_6-1-什么是直接内存",link:"#_6-1-什么是直接内存",children:[{level:3,title:"6.1.1 直接内存的定义",slug:"_6-1-1-直接内存的定义",link:"#_6-1-1-直接内存的定义",children:[]},{level:3,title:"6.1.2 直接内存的特点",slug:"_6-1-2-直接内存的特点",link:"#_6-1-2-直接内存的特点",children:[]}]},{level:2,title:"6.2 为什么要使用直接内存？",slug:"_6-2-为什么要使用直接内存",link:"#_6-2-为什么要使用直接内存",children:[{level:3,title:"6.2.1 文件读写的常规流程",slug:"_6-2-1-文件读写的常规流程",link:"#_6-2-1-文件读写的常规流程",children:[]},{level:3,title:"6.2.2 使用直接内存的改进",slug:"_6-2-2-使用直接内存的改进",link:"#_6-2-2-使用直接内存的改进",children:[]}]},{level:2,title:"6.3 直接内存的回收机制",slug:"_6-3-直接内存的回收机制",link:"#_6-3-直接内存的回收机制",children:[{level:3,title:"6.3.1 基于 Unsafe 的内存分配和释放",slug:"_6-3-1-基于-unsafe-的内存分配和释放",link:"#_6-3-1-基于-unsafe-的内存分配和释放",children:[]},{level:3,title:"6.3.2 ByteBuffer 的实现",slug:"_6-3-2-bytebuffer-的实现",link:"#_6-3-2-bytebuffer-的实现",children:[]},{level:3,title:"6.3.3 Cleaner 的作用",slug:"_6-3-3-cleaner-的作用",link:"#_6-3-3-cleaner-的作用",children:[]},{level:3,title:"6.3.4 显式调用 GC 的限制",slug:"_6-3-4-显式调用-gc-的限制",link:"#_6-3-4-显式调用-gc-的限制",children:[]}]},{level:2,title:"6.4 直接内存的管理注意事项",slug:"_6-4-直接内存的管理注意事项",link:"#_6-4-直接内存的管理注意事项",children:[{level:3,title:"6.4.1 内存泄漏风险",slug:"_6-4-1-内存泄漏风险",link:"#_6-4-1-内存泄漏风险",children:[]},{level:3,title:"6.4.2 内存大小限制",slug:"_6-4-2-内存大小限制",link:"#_6-4-2-内存大小限制",children:[]},{level:3,title:"6.4.3 调优建议",slug:"_6-4-3-调优建议",link:"#_6-4-3-调优建议",children:[]}]},{level:2,title:"6.5 总结",slug:"_6-5-总结",link:"#_6-5-总结",children:[{level:3,title:"6.5.1 优点",slug:"_6-5-1-优点",link:"#_6-5-1-优点",children:[]},{level:3,title:"6.5.2 缺点",slug:"_6-5-2-缺点",link:"#_6-5-2-缺点",children:[]},{level:3,title:"6.5.3 关键机制",slug:"_6-5-3-关键机制",link:"#_6-5-3-关键机制",children:[]}]}],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/2.6%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98.html",pathLocale:"/",extraFields:[]},{title:"Java Stream API",headers:[{level:2,title:"归约(Reduction)",slug:"归约-reduction",link:"#归约-reduction",children:[{level:3,title:"收集（Collect）操作",slug:"收集-collect-操作",link:"#收集-collect-操作",children:[]},{level:3,title:"Collectors.toMap 方法",slug:"collectors-tomap-方法",link:"#collectors-tomap-方法",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]},{level:2,title:"分组(Grouping)",slug:"分组-grouping",link:"#分组-grouping",children:[]},{level:2,title:"排序（Sorting）",slug:"排序-sorting",link:"#排序-sorting",children:[]}],path:"/Java/Java8%E7%89%B9%E6%80%A7/Java%20Stream%20API.html",pathLocale:"/",extraFields:[]},{title:"函数式接口",headers:[],path:"/Java/Java8%E7%89%B9%E6%80%A7/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html",pathLocale:"/",extraFields:[]},{title:"深入理解 Java 8 新特性：从核心到实践",headers:[],path:"/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%208%20%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E4%BB%8E%E6%A0%B8%E5%BF%83%E5%88%B0%E5%AE%9E%E8%B7%B5.html",pathLocale:"/",extraFields:[]},{title:"深入理解 Java Collector",headers:[],path:"/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Collector.html",pathLocale:"/",extraFields:[]},{title:"optional类",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"一、Optional 的引入背景",slug:"一、optional-的引入背景",link:"#一、optional-的引入背景",children:[]},{level:2,title:"二、创建 Optional 对象的几种方式",slug:"二、创建-optional-对象的几种方式",link:"#二、创建-optional-对象的几种方式",children:[]},{level:2,title:"三、Optional 的常用方法",slug:"三、optional-的常用方法",link:"#三、optional-的常用方法",children:[]},{level:2,title:"四、Optional 的最佳实践",slug:"四、optional-的最佳实践",link:"#四、optional-的最佳实践",children:[]},{level:2,title:"五、总结",slug:"五、总结",link:"#五、总结",children:[]}],path:"/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20Optional%20%E7%B1%BB.html",pathLocale:"/",extraFields:[]},{title:"深入理解 Java 中的默认方法和静态方法",headers:[],path:"/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Java%20%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95.html",pathLocale:"/",extraFields:[]},{title:"深入理解 Stream API",headers:[],path:"/Java/Java8%E7%89%B9%E6%80%A7/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20Stream%20API.html",pathLocale:"/",extraFields:[]},{title:"Java中重写 toString",headers:[{level:3,title:"1. 为什么要重写 toString() 方法",slug:"_1-为什么要重写-tostring-方法",link:"#_1-为什么要重写-tostring-方法",children:[]},{level:3,title:"2. 如何重写 toString() 方法",slug:"_2-如何重写-tostring-方法",link:"#_2-如何重写-tostring-方法",children:[]},{level:3,title:"3. 最佳实践",slug:"_3-最佳实践",link:"#_3-最佳实践",children:[]},{level:3,title:"4. toString() 的常见用途",slug:"_4-tostring-的常见用途",link:"#_4-tostring-的常见用途",children:[]},{level:3,title:"5. 注意事项",slug:"_5-注意事项",link:"#_5-注意事项",children:[]}],path:"/Java/String/Java%E4%B8%AD%E9%87%8D%E5%86%99toString.html",pathLocale:"/",extraFields:[]},{title:"isNotEmpty和isNotBlank",headers:[{level:2,title:"主要区别",slug:"主要区别",link:"#主要区别",children:[]}],path:"/Java/String/isNotEmpty%E5%92%8CisNotBlank.html",pathLocale:"/",extraFields:[]},{title:"equals与等号",headers:[{level:2,title:"概述",slug:"概述",link:"#概述",children:[]},{level:2,title:"基本数据类型和引用数据类型",slug:"基本数据类型和引用数据类型",link:"#基本数据类型和引用数据类型",children:[]},{level:2,title:"用法",slug:"用法",link:"#用法",children:[]}],path:"/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/equals%E4%B8%8E%E7%AD%89%E5%8F%B7.html",pathLocale:"/",extraFields:[]},{title:"BeanUtil",headers:[{level:2,title:"将 Java 对象转换为 Map",slug:"将-java-对象转换为-map",link:"#将-java-对象转换为-map",children:[{level:3,title:"解释代码的执行过程：",slug:"解释代码的执行过程",link:"#解释代码的执行过程",children:[]}]}],path:"/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/BeanUtil.html",pathLocale:"/",extraFields:[]},{title:"Java常用工具包",headers:[{level:2,title:"Hutool",slug:"hutool",link:"#hutool",children:[]}],path:"/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/Java%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8C%85.html",pathLocale:"/",extraFields:[]},{title:"try-with-resources",headers:[{level:3,title:"1. 使用 try-with-resources",slug:"_1-使用-try-with-resources",link:"#_1-使用-try-with-resources",children:[]},{level:3,title:"解释：",slug:"解释",link:"#解释",children:[]},{level:3,title:"2. 不使用 try-with-resources",slug:"_2-不使用-try-with-resources",link:"#_2-不使用-try-with-resources",children:[]},{level:3,title:"解释：",slug:"解释-1",link:"#解释-1",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E5%BC%82%E5%B8%B8/try-with-resources%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD%E8%B5%84%E6%BA%90.html",pathLocale:"/",extraFields:[]},{title:"Java 中引用类型在内存中的存储方式",headers:[{level:2,title:"🧠 一、什么是引用类型？",slug:"🧠-一、什么是引用类型",link:"#🧠-一、什么是引用类型",children:[]},{level:2,title:"🧩 二、Java 内存结构简要回顾",slug:"🧩-二、java-内存结构简要回顾",link:"#🧩-二、java-内存结构简要回顾",children:[]},{level:2,title:"📦 三、引用类型是如何存储的？",slug:"📦-三、引用类型是如何存储的",link:"#📦-三、引用类型是如何存储的",children:[{level:3,title:"存储过程是这样的：",slug:"存储过程是这样的",link:"#存储过程是这样的",children:[]},{level:3,title:"✅ 内存示意图：",slug:"✅-内存示意图",link:"#✅-内存示意图",children:[]}]},{level:2,title:"🧹 四、和垃圾回收有什么关系？",slug:"🧹-四、和垃圾回收有什么关系",link:"#🧹-四、和垃圾回收有什么关系",children:[]},{level:2,title:"🔍 小结",slug:"🔍-小结",link:"#🔍-小结",children:[]}],path:"/Java/%E9%9A%8F%E7%AC%94/Java%20%E4%B8%AD%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"Java 的引用传递机制，以及四种引用类型对 GC 的影响",headers:[{level:2,title:"🌀 一、Java 是值传递还是引用传递？",slug:"🌀-一、java-是值传递还是引用传递",link:"#🌀-一、java-是值传递还是引用传递",children:[{level:3,title:"👇 区分关键：",slug:"👇-区分关键",link:"#👇-区分关键",children:[]},{level:3,title:"✍️ 示例说明：",slug:"✍️-示例说明",link:"#✍️-示例说明",children:[]}]},{level:2,title:"🌪️ 二、Java 中的四种引用类型（JDK 1.2 引入）",slug:"🌪️-二、java-中的四种引用类型-jdk-1-2-引入",link:"#🌪️-二、java-中的四种引用类型-jdk-1-2-引入",children:[{level:3,title:"✅ 强引用（Strong Reference）—— 默认的引用类型",slug:"✅-强引用-strong-reference-——-默认的引用类型",link:"#✅-强引用-strong-reference-——-默认的引用类型",children:[]},{level:3,title:"✅ 软引用（Soft Reference）",slug:"✅-软引用-soft-reference",link:"#✅-软引用-soft-reference",children:[]},{level:3,title:"✅ 弱引用（Weak Reference）",slug:"✅-弱引用-weak-reference",link:"#✅-弱引用-weak-reference",children:[]},{level:3,title:"✅ 虚引用（Phantom Reference）",slug:"✅-虚引用-phantom-reference",link:"#✅-虚引用-phantom-reference",children:[]}]},{level:2,title:"🚀 三、GC Roots 的判定标准（决定对象是否存活）",slug:"🚀-三、gc-roots-的判定标准-决定对象是否存活",link:"#🚀-三、gc-roots-的判定标准-决定对象是否存活",children:[]},{level:2,title:"🧠 总结图示（引用强度对 GC 的影响）",slug:"🧠-总结图示-引用强度对-gc-的影响",link:"#🧠-总结图示-引用强度对-gc-的影响",children:[]},{level:2,title:"📌 实战应用建议",slug:"📌-实战应用建议",link:"#📌-实战应用建议",children:[]}],path:"/Java/%E9%9A%8F%E7%AC%94/Java%20%E7%9A%84%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6.html",pathLocale:"/",extraFields:[]},{title:"1.序列化与反序列化",headers:[],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",pathLocale:"/",extraFields:[]},{title:"1.补充-FST框架使用实例",headers:[{level:3,title:"1. 配置与依赖",slug:"_1-配置与依赖",link:"#_1-配置与依赖",children:[]},{level:3,title:"2. 缓存系统中的应用",slug:"_2-缓存系统中的应用",link:"#_2-缓存系统中的应用",children:[]},{level:3,title:"3. 持久化存储应用",slug:"_3-持久化存储应用",link:"#_3-持久化存储应用",children:[]},{level:3,title:"4. 网络通信中的应用",slug:"_4-网络通信中的应用",link:"#_4-网络通信中的应用",children:[]},{level:3,title:"5. 性能调优",slug:"_5-性能调优",link:"#_5-性能调优",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"10.Java内部类及作用",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"什么是Java内部类",slug:"什么是java内部类",link:"#什么是java内部类",children:[]},{level:3,title:"内部类的种类",slug:"内部类的种类",link:"#内部类的种类",children:[]},{level:3,title:"内部类的作用",slug:"内部类的作用",link:"#内部类的作用",children:[]},{level:3,title:"帮助理解记忆的总结",slug:"帮助理解记忆的总结",link:"#帮助理解记忆的总结",children:[]},{level:3,title:"小技巧记忆",slug:"小技巧记忆",link:"#小技巧记忆",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"11.Java8新特性",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"记忆要点",slug:"记忆要点",link:"#记忆要点",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",pathLocale:"/",extraFields:[]},{title:"12.JDK和JRE之间的区别",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"记忆要点",slug:"记忆要点",link:"#记忆要点",children:[]},{level:3,title:"扩展",slug:"扩展",link:"#扩展",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"13.使用过哪些JDK开发工具",headers:[],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html",pathLocale:"/",extraFields:[]},{title:"14.Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"1. == 操作符",slug:"_1-操作符",link:"#_1-操作符",children:[]},{level:3,title:"2. equals() 方法",slug:"_2-equals-方法",link:"#_2-equals-方法",children:[]},{level:3,title:"3. hashCode() 方法",slug:"_3-hashcode-方法",link:"#_3-hashcode-方法",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html",pathLocale:"/",extraFields:[]},{title:"15.hashCode() 和equals() 之间的关系",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"1. 基本关系",slug:"_1-基本关系",link:"#_1-基本关系",children:[]},{level:3,title:"2. equals() 与 hashCode() 关系的具体要求",slug:"_2-equals-与-hashcode-关系的具体要求",link:"#_2-equals-与-hashcode-关系的具体要求",children:[]},{level:3,title:"3. 使用场景：哈希数据结构",slug:"_3-使用场景-哈希数据结构",link:"#_3-使用场景-哈希数据结构",children:[]},{level:3,title:"4. 重写 hashCode() 和 equals() 方法时的考虑",slug:"_4-重写-hashcode-和-equals-方法时的考虑",link:"#_4-重写-hashcode-和-equals-方法时的考虑",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html",pathLocale:"/",extraFields:[]},{title:"16.什么是Java中的动态代理？",headers:[{level:3,title:"工作原理：",slug:"工作原理",link:"#工作原理",children:[]},{level:3,title:"使用步骤：",slug:"使用步骤",link:"#使用步骤",children:[]},{level:3,title:"示例：",slug:"示例",link:"#示例",children:[]},{level:3,title:"输出：",slug:"输出",link:"#输出",children:[]},{level:3,title:"解释：",slug:"解释",link:"#解释",children:[]},{level:3,title:"应用场景：",slug:"应用场景",link:"#应用场景",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"17.JDK动态代理和CGLIB动态代理有什么区别",headers:[{level:3,title:"1. Java动态代理",slug:"_1-java动态代理",link:"#_1-java动态代理",children:[]},{level:3,title:"2. CGLIB动态代理",slug:"_2-cglib动态代理",link:"#_2-cglib动态代理",children:[]},{level:3,title:"Java动态代理与CGLIB的对比",slug:"java动态代理与cglib的对比",link:"#java动态代理与cglib的对比",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"2.什么是 Java 中的不可变类",headers:[],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",pathLocale:"/",extraFields:[]},{title:"3.Java 中 Exception 和 Error 有什么区别？",headers:[],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"3.扩展-异常处理注意点",headers:[{level:3,title:"2. 尽量避免吞掉异常",slug:"_2-尽量避免吞掉异常",link:"#_2-尽量避免吞掉异常",children:[]},{level:3,title:"3. 使用 finally 块来清理资源",slug:"_3-使用-finally-块来清理资源",link:"#_3-使用-finally-块来清理资源",children:[]},{level:3,title:"4. 避免过度使用异常控制流",slug:"_4-避免过度使用异常控制流",link:"#_4-避免过度使用异常控制流",children:[]},{level:3,title:"5. 使用 try-with-resources 自动关闭资源",slug:"_5-使用-try-with-resources-自动关闭资源",link:"#_5-使用-try-with-resources-自动关闭资源",children:[]},{level:3,title:"6. 避免过度嵌套的异常捕获",slug:"_6-避免过度嵌套的异常捕获",link:"#_6-避免过度嵌套的异常捕获",children:[]},{level:3,title:"7. 重新抛出异常时提供有用的上下文信息",slug:"_7-重新抛出异常时提供有用的上下文信息",link:"#_7-重新抛出异常时提供有用的上下文信息",children:[]},{level:3,title:"8. 考虑异常的性能开销",slug:"_8-考虑异常的性能开销",link:"#_8-考虑异常的性能开销",children:[]},{level:3,title:"9. 异常的语义要清晰",slug:"_9-异常的语义要清晰",link:"#_9-异常的语义要清晰",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html",pathLocale:"/",extraFields:[]},{title:"4.Java的优势",headers:[{level:3,title:"1. 平台无关性（跨平台性）",slug:"_1-平台无关性-跨平台性",link:"#_1-平台无关性-跨平台性",children:[]},{level:3,title:"2. 面向对象编程",slug:"_2-面向对象编程",link:"#_2-面向对象编程",children:[]},{level:3,title:"3. 丰富的标准库与生态系统",slug:"_3-丰富的标准库与生态系统",link:"#_3-丰富的标准库与生态系统",children:[]},{level:3,title:"4. 高性能",slug:"_4-高性能",link:"#_4-高性能",children:[]},{level:3,title:"5. 多线程支持",slug:"_5-多线程支持",link:"#_5-多线程支持",children:[]},{level:3,title:"6. 安全性",slug:"_6-安全性",link:"#_6-安全性",children:[]},{level:3,title:"7. 自动垃圾回收",slug:"_7-自动垃圾回收",link:"#_7-自动垃圾回收",children:[]},{level:3,title:"8. 企业级应用支持",slug:"_8-企业级应用支持",link:"#_8-企业级应用支持",children:[]},{level:3,title:"9. 良好的开发工具支持",slug:"_9-良好的开发工具支持",link:"#_9-良好的开发工具支持",children:[]},{level:3,title:"10. 广泛的应用领域",slug:"_10-广泛的应用领域",link:"#_10-广泛的应用领域",children:[]},{level:3,title:"11. 与其他语言的互操作性",slug:"_11-与其他语言的互操作性",link:"#_11-与其他语言的互操作性",children:[]},{level:3,title:"12. 开源社区和支持",slug:"_12-开源社区和支持",link:"#_12-开源社区和支持",children:[]},{level:3,title:"13. 移动开发",slug:"_13-移动开发",link:"#_13-移动开发",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html",pathLocale:"/",extraFields:[]},{title:"5.什么是Java的多态",headers:[{level:3,title:"多态的类型",slug:"多态的类型",link:"#多态的类型",children:[]},{level:3,title:"多态的优势",slug:"多态的优势",link:"#多态的优势",children:[]},{level:3,title:"多态的实现机制",slug:"多态的实现机制",link:"#多态的实现机制",children:[]},{level:3,title:"结论",slug:"结论",link:"#结论",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html",pathLocale:"/",extraFields:[]},{title:"6.Java中的参数传递是按值还是按引用",headers:[{level:3,title:"1. 基本类型参数：",slug:"_1-基本类型参数",link:"#_1-基本类型参数",children:[]},{level:3,title:"2. 引用类型参数：",slug:"_2-引用类型参数",link:"#_2-引用类型参数",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"7.Java 不支持多重继承",headers:[{level:3,title:"菱形继承问题：",slug:"菱形继承问题",link:"#菱形继承问题",children:[]},{level:3,title:"Java 的解决方式：",slug:"java-的解决方式",link:"#java-的解决方式",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",pathLocale:"/",extraFields:[]},{title:"7.为什么Java不支持多重继承",headers:[{level:3,title:"1. 避免菱形继承问题",slug:"_1-避免菱形继承问题",link:"#_1-避免菱形继承问题",children:[]},{level:3,title:"3. 接口的引入",slug:"_3-接口的引入",link:"#_3-接口的引入",children:[]},{level:3,title:"4. 提高安全性",slug:"_4-提高安全性",link:"#_4-提高安全性",children:[]},{level:3,title:"5. 性能和可维护性",slug:"_5-性能和可维护性",link:"#_5-性能和可维护性",children:[]},{level:3,title:"扩展知识",slug:"扩展知识",link:"#扩展知识",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",pathLocale:"/",extraFields:[]},{title:"8.面向过程和面向对象的区别",headers:[{level:3,title:"0. A",slug:"_0-a",link:"#_0-a",children:[]},{level:3,title:"1. 编程范式的不同",slug:"_1-编程范式的不同",link:"#_1-编程范式的不同",children:[]},{level:3,title:"2. 代码结构的不同",slug:"_2-代码结构的不同",link:"#_2-代码结构的不同",children:[]},{level:3,title:"3. 数据和功能的组织",slug:"_3-数据和功能的组织",link:"#_3-数据和功能的组织",children:[]},{level:3,title:"4. 扩展性和维护性",slug:"_4-扩展性和维护性",link:"#_4-扩展性和维护性",children:[]},{level:3,title:"5. 适用场景",slug:"_5-适用场景",link:"#_5-适用场景",children:[]},{level:3,title:"示例对比：",slug:"示例对比",link:"#示例对比",children:[]},{level:3,title:"总结记忆点",slug:"总结记忆点",link:"#总结记忆点",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"9.Java方法重载和重写之间的区别",headers:[{level:3,title:"0. A",slug:"_0-a",link:"#_0-a",children:[]},{level:3,title:"1. 方法重载（Overloading）",slug:"_1-方法重载-overloading",link:"#_1-方法重载-overloading",children:[]},{level:3,title:"2. 方法重写（Overriding）",slug:"_2-方法重写-overriding",link:"#_2-方法重写-overriding",children:[]},{level:3,title:"3. 总结：",slug:"_3-总结",link:"#_3-总结",children:[]},{level:3,title:"4. 扩展",slug:"_4-扩展",link:"#_4-扩展",children:[]}],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"实战章节：在Linux上部署各类软件",headers:[{level:2,title:"为什么学习各类软件在Linux上的部署",slug:"为什么学习各类软件在linux上的部署",link:"#为什么学习各类软件在linux上的部署",children:[{level:3,title:"学习目标",slug:"学习目标",link:"#学习目标",children:[]}]},{level:2,title:"为什么不使用PPT而是使用文档进行授课",slug:"为什么不使用ppt而是使用文档进行授课",link:"#为什么不使用ppt而是使用文档进行授课",children:[]},{level:2,title:"前置要求",slug:"前置要求",link:"#前置要求",children:[]},{level:2,title:"注意",slug:"注意",link:"#注意",children:[]},{level:2,title:"简介",slug:"简介",link:"#简介",children:[]},{level:2,title:"注意",slug:"注意-1",link:"#注意-1",children:[]},{level:2,title:"MySQL5.7版本在CentOS系统安装",slug:"mysql5-7版本在centos系统安装",link:"#mysql5-7版本在centos系统安装",children:[{level:3,title:"安装",slug:"安装",link:"#安装",children:[]},{level:3,title:"配置",slug:"配置",link:"#配置",children:[]}]},{level:2,title:"MySQL8.0版本在CentOS系统安装",slug:"mysql8-0版本在centos系统安装",link:"#mysql8-0版本在centos系统安装",children:[{level:3,title:"安装",slug:"安装-1",link:"#安装-1",children:[]},{level:3,title:"配置",slug:"配置-1",link:"#配置-1",children:[]}]},{level:2,title:"MySQL5.7版本在Ubuntu（WSL环境）系统安装",slug:"mysql5-7版本在ubuntu-wsl环境-系统安装",link:"#mysql5-7版本在ubuntu-wsl环境-系统安装",children:[{level:3,title:"安装",slug:"安装-2",link:"#安装-2",children:[]}]},{level:2,title:"MySQL8.0版本在Ubuntu（WSL环境）系统安装",slug:"mysql8-0版本在ubuntu-wsl环境-系统安装",link:"#mysql8-0版本在ubuntu-wsl环境-系统安装",children:[{level:3,title:"安装",slug:"安装-3",link:"#安装-3",children:[]}]},{level:2,title:"简介",slug:"简介-1",link:"#简介-1",children:[]},{level:2,title:"安装",slug:"安装-4",link:"#安装-4",children:[{level:3,title:"安装JDK环境",slug:"安装jdk环境",link:"#安装jdk环境",children:[]},{level:3,title:"解压并部署Tomcat",slug:"解压并部署tomcat",link:"#解压并部署tomcat",children:[]}]},{level:2,title:"简介",slug:"简介-2",link:"#简介-2",children:[]},{level:2,title:"安装",slug:"安装-5",link:"#安装-5",children:[]},{level:2,title:"简介",slug:"简介-3",link:"#简介-3",children:[]},{level:2,title:"安装",slug:"安装-6",link:"#安装-6",children:[]},{level:2,title:"简介",slug:"简介-4",link:"#简介-4",children:[]},{level:2,title:"安装",slug:"安装-7",link:"#安装-7",children:[]},{level:2,title:"简介",slug:"简介-5",link:"#简介-5",children:[]},{level:2,title:"安装",slug:"安装-8",link:"#安装-8",children:[]},{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:2,title:"部署",slug:"部署",link:"#部署",children:[{level:3,title:"配置多台Linux虚拟机",slug:"配置多台linux虚拟机",link:"#配置多台linux虚拟机",children:[]},{level:3,title:"准备主机名映射",slug:"准备主机名映射",link:"#准备主机名映射",children:[]},{level:3,title:"配置SSH免密登录",slug:"配置ssh免密登录",link:"#配置ssh免密登录",children:[]},{level:3,title:"配置JDK环境",slug:"配置jdk环境",link:"#配置jdk环境",children:[]},{level:3,title:"关闭防火墙和SELinux",slug:"关闭防火墙和selinux",link:"#关闭防火墙和selinux",children:[]},{level:3,title:"添加快照",slug:"添加快照",link:"#添加快照",children:[]}]},{level:2,title:"补充命令 - scp",slug:"补充命令-scp",link:"#补充命令-scp",children:[]},{level:2,title:"简介",slug:"简介-7",link:"#简介-7",children:[]},{level:2,title:"安装",slug:"安装-9",link:"#安装-9",children:[]},{level:2,title:"简介",slug:"简介-8",link:"#简介-8",children:[]},{level:2,title:"安装",slug:"安装-10",link:"#安装-10",children:[]},{level:2,title:"测试Kafka能否正常使用",slug:"测试kafka能否正常使用",link:"#测试kafka能否正常使用",children:[]},{level:2,title:"简介",slug:"简介-9",link:"#简介-9",children:[{level:3,title:"前置要求",slug:"前置要求-1",link:"#前置要求-1",children:[]},{level:3,title:"Hadoop集群角色",slug:"hadoop集群角色",link:"#hadoop集群角色",children:[]},{level:3,title:"角色和节点分配",slug:"角色和节点分配",link:"#角色和节点分配",children:[]}]},{level:2,title:"安装",slug:"安装-11",link:"#安装-11",children:[{level:3,title:"调整虚拟机内存",slug:"调整虚拟机内存",link:"#调整虚拟机内存",children:[]},{level:3,title:"Zookeeper集群部署",slug:"zookeeper集群部署",link:"#zookeeper集群部署",children:[]},{level:3,title:"Hadoop集群部署",slug:"hadoop集群部署",link:"#hadoop集群部署",children:[]}]},{level:2,title:"简介",slug:"简介-10",link:"#简介-10",children:[]},{level:2,title:"安装",slug:"安装-12",link:"#安装-12",children:[]},{level:2,title:"注意",slug:"注意-2",link:"#注意-2",children:[]},{level:2,title:"简介",slug:"简介-11",link:"#简介-11",children:[]},{level:2,title:"安装",slug:"安装-13",link:"#安装-13",children:[]},{level:2,title:"注意",slug:"注意-3",link:"#注意-3",children:[]},{level:2,title:"简介",slug:"简介-12",link:"#简介-12",children:[]},{level:2,title:"安装",slug:"安装-14",link:"#安装-14",children:[]},{level:2,title:"简介",slug:"简介-13",link:"#简介-13",children:[]},{level:2,title:"安装",slug:"安装-15",link:"#安装-15",children:[{level:3,title:"安装前准备 - Mysql",slug:"安装前准备-mysql",link:"#安装前准备-mysql",children:[]},{level:3,title:"安装Zabbix Server 和 Zabbix Agent",slug:"安装zabbix-server-和-zabbix-agent",link:"#安装zabbix-server-和-zabbix-agent",children:[]},{level:3,title:"配置zabbix 前端（WEB UI）",slug:"配置zabbix-前端-web-ui",link:"#配置zabbix-前端-web-ui",children:[]}]},{level:2,title:"简介",slug:"简介-14",link:"#简介-14",children:[]},{level:2,title:"安装",slug:"安装-16",link:"#安装-16",children:[{level:3,title:"部署形式",slug:"部署形式",link:"#部署形式",children:[]},{level:3,title:"安装",slug:"安装-17",link:"#安装-17",children:[]},{level:3,title:"配置说明",slug:"配置说明",link:"#配置说明",children:[]},{level:3,title:"开始配置",slug:"开始配置",link:"#开始配置",children:[]},{level:3,title:"启动",slug:"启动",link:"#启动",children:[]}]},{level:2,title:"安装",slug:"安装-18",link:"#安装-18",children:[{level:3,title:"在线安装",slug:"在线安装",link:"#在线安装",children:[]}]},{level:2,title:"配置",slug:"配置-2",link:"#配置-2",children:[]},{level:2,title:"启动 NFS 服务",slug:"启动-nfs-服务",link:"#启动-nfs-服务",children:[]},{level:2,title:"配置防火墙（如果启用了防火墙）",slug:"配置防火墙-如果启用了防火墙",link:"#配置防火墙-如果启用了防火墙",children:[]},{level:2,title:"在客户端挂载 NFS 共享目录",slug:"在客户端挂载-nfs-共享目录",link:"#在客户端挂载-nfs-共享目录",children:[]},{level:2,title:"自动挂载（可选）",slug:"自动挂载-可选",link:"#自动挂载-可选",children:[]},{level:2,title:"验证 NFS 安装",slug:"验证-nfs-安装",link:"#验证-nfs-安装",children:[]},{level:2,title:"安装",slug:"安装-19",link:"#安装-19",children:[{level:3,title:"1. 准备工作",slug:"_1-准备工作",link:"#_1-准备工作",children:[]},{level:3,title:"2. 下载和解压 Nexus 安装包",slug:"_2-下载和解压-nexus-安装包",link:"#_2-下载和解压-nexus-安装包",children:[]},{level:3,title:"3. 移动到目标目录（可选）",slug:"_3-移动到目标目录-可选",link:"#_3-移动到目标目录-可选",children:[]}]},{level:2,title:"配置",slug:"配置-3",link:"#配置-3",children:[{level:3,title:"4. 创建一个 Nexus 用户（可选）",slug:"_4-创建一个-nexus-用户-可选",link:"#_4-创建一个-nexus-用户-可选",children:[]},{level:3,title:"5. 配置 Nexus 端口（可选）",slug:"_5-配置-nexus-端口-可选",link:"#_5-配置-nexus-端口-可选",children:[]},{level:3,title:"6. 修改 JVM 内存设置",slug:"_6-修改-jvm-内存设置",link:"#_6-修改-jvm-内存设置",children:[]}]},{level:2,title:"启动",slug:"启动-1",link:"#启动-1",children:[{level:3,title:"7. 启动 Nexus",slug:"_7-启动-nexus",link:"#_7-启动-nexus",children:[]},{level:3,title:"8. 配置 Nexus 为后台服务（可选）",slug:"_8-配置-nexus-为后台服务-可选",link:"#_8-配置-nexus-为后台服务-可选",children:[]},{level:3,title:"9. 访问 Nexus",slug:"_9-访问-nexus",link:"#_9-访问-nexus",children:[]},{level:3,title:"10. 初始登录",slug:"_10-初始登录",link:"#_10-初始登录",children:[]}]},{level:2,title:"停止",slug:"停止",link:"#停止",children:[]}],path:"/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85.html",pathLocale:"/",extraFields:[]},{title:"Linux基础命令",headers:[{level:2,title:"Linux的目录结构",slug:"linux的目录结构",link:"#linux的目录结构",children:[]},{level:2,title:"ls命令",slug:"ls命令",link:"#ls命令",children:[{level:3,title:"隐藏文件、文件夹",slug:"隐藏文件、文件夹",link:"#隐藏文件、文件夹",children:[]}]},{level:2,title:"pwd命令",slug:"pwd命令",link:"#pwd命令",children:[]},{level:2,title:"cd命令",slug:"cd命令",link:"#cd命令",children:[]},{level:2,title:"HOME目录",slug:"home目录",link:"#home目录",children:[]},{level:2,title:"相对路径、绝对路径",slug:"相对路径、绝对路径",link:"#相对路径、绝对路径",children:[]},{level:2,title:"特殊路径符",slug:"特殊路径符",link:"#特殊路径符",children:[]},{level:2,title:"mkdir命令",slug:"mkdir命令",link:"#mkdir命令",children:[]},{level:2,title:"touch命令",slug:"touch命令",link:"#touch命令",children:[]},{level:2,title:"cat命令",slug:"cat命令",link:"#cat命令",children:[]},{level:2,title:"more命令",slug:"more命令",link:"#more命令",children:[]},{level:2,title:"cp命令",slug:"cp命令",link:"#cp命令",children:[]},{level:2,title:"mv命令",slug:"mv命令",link:"#mv命令",children:[]},{level:2,title:"rm命令",slug:"rm命令",link:"#rm命令",children:[]},{level:2,title:"which命令",slug:"which命令",link:"#which命令",children:[]},{level:2,title:"find命令",slug:"find命令",link:"#find命令",children:[]},{level:2,title:"grep命令",slug:"grep命令",link:"#grep命令",children:[]},{level:2,title:"wc命令",slug:"wc命令",link:"#wc命令",children:[]},{level:2,title:"管道符|",slug:"管道符",link:"#管道符",children:[]},{level:2,title:"echo命令",slug:"echo命令",link:"#echo命令",children:[]},{level:2,title:"反引号",slug:"反引号",link:"#反引号",children:[]},{level:2,title:"tail命令",slug:"tail命令",link:"#tail命令",children:[]},{level:2,title:"head命令",slug:"head命令",link:"#head命令",children:[]},{level:2,title:"重定向符",slug:"重定向符",link:"#重定向符",children:[]},{level:2,title:"vi编辑器",slug:"vi编辑器",link:"#vi编辑器",children:[{level:3,title:"命令模式快捷键",slug:"命令模式快捷键",link:"#命令模式快捷键",children:[]},{level:3,title:"底线命令快捷键",slug:"底线命令快捷键",link:"#底线命令快捷键",children:[]}]},{level:2,title:"命令的选项",slug:"命令的选项",link:"#命令的选项",children:[{level:3,title:"查看命令的帮助",slug:"查看命令的帮助",link:"#查看命令的帮助",children:[]},{level:3,title:"查看命令的详细手册",slug:"查看命令的详细手册",link:"#查看命令的详细手册",children:[]}]},{level:2,title:"软件安装",slug:"软件安装",link:"#软件安装",children:[]},{level:2,title:"systemctl",slug:"systemctl",link:"#systemctl",children:[]},{level:2,title:"软链接",slug:"软链接",link:"#软链接",children:[]},{level:2,title:"日期",slug:"日期",link:"#日期",children:[]},{level:2,title:"时区",slug:"时区",link:"#时区",children:[]},{level:2,title:"ntp",slug:"ntp",link:"#ntp",children:[]},{level:2,title:"ip地址",slug:"ip地址",link:"#ip地址",children:[]},{level:2,title:"主机名",slug:"主机名",link:"#主机名",children:[]},{level:2,title:"配置VMware固定IP",slug:"配置vmware固定ip",link:"#配置vmware固定ip",children:[]},{level:2,title:"ps命令",slug:"ps命令",link:"#ps命令",children:[]},{level:2,title:"kill命令",slug:"kill命令",link:"#kill命令",children:[]},{level:2,title:"nmap命令",slug:"nmap命令",link:"#nmap命令",children:[]},{level:2,title:"netstat命令",slug:"netstat命令",link:"#netstat命令",children:[]},{level:2,title:"ping命令",slug:"ping命令",link:"#ping命令",children:[]},{level:2,title:"wget命令",slug:"wget命令",link:"#wget命令",children:[]},{level:2,title:"curl命令",slug:"curl命令",link:"#curl命令",children:[]},{level:2,title:"top命令",slug:"top命令",link:"#top命令",children:[]},{level:2,title:"df命令",slug:"df命令",link:"#df命令",children:[]},{level:2,title:"iostat命令",slug:"iostat命令",link:"#iostat命令",children:[]},{level:2,title:"sar命令",slug:"sar命令",link:"#sar命令",children:[]},{level:2,title:"环境变量",slug:"环境变量",link:"#环境变量",children:[{level:3,title:"PATH变量",slug:"path变量",link:"#path变量",children:[]}]},{level:2,title:"$符号",slug:"符号",link:"#符号",children:[]},{level:2,title:"压缩解压",slug:"压缩解压",link:"#压缩解压",children:[{level:3,title:"压缩",slug:"压缩",link:"#压缩",children:[]},{level:3,title:"解压",slug:"解压",link:"#解压",children:[]}]},{level:2,title:"su命令",slug:"su命令",link:"#su命令",children:[]},{level:2,title:"sudo命令",slug:"sudo命令",link:"#sudo命令",children:[]},{level:2,title:"chmod命令",slug:"chmod命令",link:"#chmod命令",children:[]},{level:2,title:"chown命令",slug:"chown命令",link:"#chown命令",children:[]},{level:2,title:"用户组管理",slug:"用户组管理",link:"#用户组管理",children:[]},{level:2,title:"用户管理",slug:"用户管理",link:"#用户管理",children:[]},{level:2,title:"genenv命令",slug:"genenv命令",link:"#genenv命令",children:[]},{level:2,title:"env命令",slug:"env命令",link:"#env命令",children:[]}],path:"/Linux/0.%E7%AC%94%E8%AE%B0/Linux%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"安装 V2Ray",slug:"安装-v2ray",link:"#安装-v2ray",children:[]},{level:2,title:"香港",slug:"香港",link:"#香港",children:[]}],path:"/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/V2ray%E5%AE%89%E8%A3%85.html",pathLocale:"/",extraFields:[]},{title:"Linux 支持的主要架构",headers:[{level:3,title:"结论",slug:"结论",link:"#结论",children:[]}],path:"/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/%E4%B8%BB%E8%A6%81%E6%9E%B6%E6%9E%84.html",pathLocale:"/",extraFields:[]},{title:"systemctl 命令的常见用法",headers:[{level:3,title:"1. 启动和停止服务",slug:"_1-启动和停止服务",link:"#_1-启动和停止服务",children:[]},{level:3,title:"2. 重启和重载服务",slug:"_2-重启和重载服务",link:"#_2-重启和重载服务",children:[]},{level:3,title:"3. 查看服务状态",slug:"_3-查看服务状态",link:"#_3-查看服务状态",children:[]},{level:3,title:"4. 启用和禁用服务",slug:"_4-启用和禁用服务",link:"#_4-启用和禁用服务",children:[]},{level:3,title:"5. 重载 Systemd 配置文件",slug:"_5-重载-systemd-配置文件",link:"#_5-重载-systemd-配置文件",children:[]},{level:3,title:"6. 重置失败状态信息",slug:"_6-重置失败状态信息",link:"#_6-重置失败状态信息",children:[]},{level:3,title:"结语",slug:"结语",link:"#结语",children:[]}],path:"/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/systemctl.html",pathLocale:"/",extraFields:[]},{title:"reset-failed",headers:[],path:"/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/reset-failed.html",pathLocale:"/",extraFields:[]},{title:"软硬链接",headers:[{level:3,title:"1. 软链接（Symbolic Link）",slug:"_1-软链接-symbolic-link",link:"#_1-软链接-symbolic-link",children:[]},{level:3,title:"2. 硬链接（Hard Link）",slug:"_2-硬链接-hard-link",link:"#_2-硬链接-hard-link",children:[]},{level:3,title:"软链接与硬链接的比较",slug:"软链接与硬链接的比较",link:"#软链接与硬链接的比较",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5.html",pathLocale:"/",extraFields:[]},{title:"单用户模式重置root密码",headers:[{level:3,title:"",slug:"",link:"#",children:[]},{level:3,title:"2、看到如下界面后，往下拉",slug:"_2、看到如下界面后-往下拉",link:"#_2、看到如下界面后-往下拉",children:[]},{level:3,title:"",slug:"-1",link:"#-1",children:[]},{level:3,title:"3、在如下截图的位置，添加“rw single init=/bin/bash”，添加后按“Ctrl + x”引导系统。",slug:"_3、在如下截图的位置-添加-rw-single-init-bin-bash-添加后按-ctrl-x-引导系统。",link:"#_3、在如下截图的位置-添加-rw-single-init-bin-bash-添加后按-ctrl-x-引导系统。",children:[]},{level:3,title:"",slug:"-2",link:"#-2",children:[]},{level:3,title:"4、输入“passwd”重置root密码",slug:"_4、输入-passwd-重置root密码",link:"#_4、输入-passwd-重置root密码",children:[]},{level:3,title:"",slug:"-3",link:"#-3",children:[]},{level:3,title:"5、运行命令“exec /sbin/init”来正常启动系统，需要输入修改后的root密码。",slug:"_5、运行命令-exec-sbin-init-来正常启动系统-需要输入修改后的root密码。",link:"#_5、运行命令-exec-sbin-init-来正常启动系统-需要输入修改后的root密码。",children:[]},{level:3,title:"",slug:"-4",link:"#-4",children:[]},{level:3,title:"6、进入系统后，输入命令“reboot”重启系统。",slug:"_6、进入系统后-输入命令-reboot-重启系统。",link:"#_6、进入系统后-输入命令-reboot-重启系统。",children:[]}],path:"/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81.html",pathLocale:"/",extraFields:[]},{title:"界面切换",headers:[],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Ubuntu%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E5%88%87%E6%8D%A2.html",pathLocale:"/",extraFields:[]},{title:"daemon-reload",headers:[],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/daemon-reload.html",pathLocale:"/",extraFields:[]},{title:"init命令详解",headers:[{level:2,title:"概述",slug:"概述",link:"#概述",children:[]},{level:2,title:"参数",slug:"参数",link:"#参数",children:[]},{level:2,title:"开机默认级别设置",slug:"开机默认级别设置",link:"#开机默认级别设置",children:[{level:3,title:"centos",slug:"centos",link:"#centos",children:[]},{level:3,title:"ubuntu",slug:"ubuntu",link:"#ubuntu",children:[]}]}],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/init%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"rc.local",headers:[],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/rc.local.html",pathLocale:"/",extraFields:[]},{title:"查看系统配置",headers:[{level:3,title:"1. 查看 CPU 信息",slug:"_1-查看-cpu-信息",link:"#_1-查看-cpu-信息",children:[]},{level:3,title:"2. 查看内存信息",slug:"_2-查看内存信息",link:"#_2-查看内存信息",children:[]},{level:3,title:"3. 查看磁盘信息",slug:"_3-查看磁盘信息",link:"#_3-查看磁盘信息",children:[]},{level:3,title:"4. 查看网络信息",slug:"_4-查看网络信息",link:"#_4-查看网络信息",children:[]},{level:3,title:"5. 查看系统版本和发行版信息",slug:"_5-查看系统版本和发行版信息",link:"#_5-查看系统版本和发行版信息",children:[]},{level:3,title:"6. 查看设备架构",slug:"_6-查看设备架构",link:"#_6-查看设备架构",children:[]},{level:3,title:"7. 查看 GPU 信息",slug:"_7-查看-gpu-信息",link:"#_7-查看-gpu-信息",children:[]},{level:3,title:"8. 查看所有硬件信息",slug:"_8-查看所有硬件信息",link:"#_8-查看所有硬件信息",children:[]},{level:3,title:"总结表格",slug:"总结表格",link:"#总结表格",children:[]}],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE.html",pathLocale:"/",extraFields:[]},{title:"查询安装位置",headers:[{level:3,title:"1. 使用 which 命令（适用于可执行文件）",slug:"_1-使用-which-命令-适用于可执行文件",link:"#_1-使用-which-命令-适用于可执行文件",children:[]},{level:3,title:"2. 使用 whereis 命令",slug:"_2-使用-whereis-命令",link:"#_2-使用-whereis-命令",children:[]},{level:3,title:"3. 查看进程的路径（适用于已运行的进程）",slug:"_3-查看进程的路径-适用于已运行的进程",link:"#_3-查看进程的路径-适用于已运行的进程",children:[]},{level:3,title:"4. 使用 readlink 命令（查看符号链接的实际路径）",slug:"_4-使用-readlink-命令-查看符号链接的实际路径",link:"#_4-使用-readlink-命令-查看符号链接的实际路径",children:[]},{level:3,title:"5. 通过 lsof 命令查找进程文件路径",slug:"_5-通过-lsof-命令查找进程文件路径",link:"#_5-通过-lsof-命令查找进程文件路径",children:[]},{level:3,title:"6. 查看进程的 /proc 目录（Linux 系统特有）",slug:"_6-查看进程的-proc-目录-linux-系统特有",link:"#_6-查看进程的-proc-目录-linux-系统特有",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/%E6%9F%A5%E8%AF%A2%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE.html",pathLocale:"/",extraFields:[]},{title:"更换yum国内源",headers:[],path:"/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/%E4%BF%AE%E6%94%B9yum%E6%BA%90.html",pathLocale:"/",extraFields:[]},{title:"关闭端口占用进程",headers:[{level:3,title:"1. 查找使用 8080 端口的进程",slug:"_1-查找使用-8080-端口的进程",link:"#_1-查找使用-8080-端口的进程",children:[]},{level:3,title:"2. 结束进程",slug:"_2-结束进程",link:"#_2-结束进程",children:[]},{level:3,title:"注意：",slug:"注意",link:"#注意",children:[]}],path:"/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E8%BF%9B%E7%A8%8B.html",pathLocale:"/",extraFields:[]},{title:"dos2unix换行符清理",headers:[{level:3,title:"主要特点：",slug:"主要特点",link:"#主要特点",children:[]},{level:3,title:"安装和使用：",slug:"安装和使用",link:"#安装和使用",children:[]},{level:3,title:"适用场景：",slug:"适用场景",link:"#适用场景",children:[]}],path:"/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/dos2unix%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%B8%85%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"硬盘挂载",headers:[{level:3,title:"1. 确认硬盘设备信息",slug:"_1-确认硬盘设备信息",link:"#_1-确认硬盘设备信息",children:[]},{level:3,title:"2. 创建分区和文件系统（如果需要）",slug:"_2-创建分区和文件系统-如果需要",link:"#_2-创建分区和文件系统-如果需要",children:[]},{level:3,title:"3. 创建挂载点",slug:"_3-创建挂载点",link:"#_3-创建挂载点",children:[]},{level:3,title:"4. 挂载硬盘",slug:"_4-挂载硬盘",link:"#_4-挂载硬盘",children:[]},{level:3,title:"5. 配置开机自动挂载（可选）",slug:"_5-配置开机自动挂载-可选",link:"#_5-配置开机自动挂载-可选",children:[]},{level:3,title:"6. 卸载硬盘（可选）",slug:"_6-卸载硬盘-可选",link:"#_6-卸载硬盘-可选",children:[]},{level:3,title:"常用工具",slug:"常用工具",link:"#常用工具",children:[]}],path:"/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD.html",pathLocale:"/",extraFields:[]},{title:"Kafka 发送和接收消息",headers:[{level:3,title:"假设",slug:"假设",link:"#假设",children:[]},{level:3,title:"步骤 1：在服务器 A 上启动 Kafka 生产者",slug:"步骤-1-在服务器-a-上启动-kafka-生产者",link:"#步骤-1-在服务器-a-上启动-kafka-生产者",children:[]},{level:3,title:"步骤 2：在服务器 B 上启动 Kafka 消费者",slug:"步骤-2-在服务器-b-上启动-kafka-消费者",link:"#步骤-2-在服务器-b-上启动-kafka-消费者",children:[]},{level:3,title:"注意事项",slug:"注意事项",link:"#注意事项",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/MQ/Kafka/%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6demo.html",pathLocale:"/",extraFields:[]},{title:"RabbitMQ 是什么？架构是怎么样的？",headers:[{level:2,title:"Queue 是什么",slug:"queue-是什么",link:"#queue-是什么",children:[]},{level:2,title:"Exchange 是什么",slug:"exchange-是什么",link:"#exchange-是什么",children:[]},{level:2,title:"RabbitMQ 是什么",slug:"rabbitmq-是什么",link:"#rabbitmq-是什么",children:[]},{level:2,title:"优先级队列是什么",slug:"优先级队列是什么",link:"#优先级队列是什么",children:[]},{level:2,title:"RabbitMQ 集群",slug:"rabbitmq-集群",link:"#rabbitmq-集群",children:[{level:3,title:"普通集群模式",slug:"普通集群模式",link:"#普通集群模式",children:[]},{level:3,title:"镜像队列集群",slug:"镜像队列集群",link:"#镜像队列集群",children:[]},{level:3,title:"Quorum 队列集群",slug:"quorum-队列集群",link:"#quorum-队列集群",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/MQ/RabbitMQ/%E4%BB%80%E4%B9%88%E6%98%AFRabbitMQ.html",pathLocale:"/",extraFields:[]},{title:"逻辑删除",headers:[{level:2,title:"原理",slug:"原理",link:"#原理",children:[]},{level:2,title:"使用方法",slug:"使用方法",link:"#使用方法",children:[{level:3,title:"步骤 1: 配置全局逻辑删除属性",slug:"步骤-1-配置全局逻辑删除属性",link:"#步骤-1-配置全局逻辑删除属性",children:[]},{level:3,title:"步骤 2: 在实体类中使用 @TableLogic 注解",slug:"步骤-2-在实体类中使用-tablelogic-注解",link:"#步骤-2-在实体类中使用-tablelogic-注解",children:[]}]}],path:"/Mybatis/Mybatis/%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4.html",pathLocale:"/",extraFields:[]},{title:"MybatisPlus笔记",headers:[{level:2,title:"1.1.环境准备",slug:"_1-1-环境准备",link:"#_1-1-环境准备",children:[]},{level:2,title:"1.2.快速开始",slug:"_1-2-快速开始",link:"#_1-2-快速开始",children:[{level:3,title:"1.2.1引入依赖",slug:"_1-2-1引入依赖",link:"#_1-2-1引入依赖",children:[]},{level:3,title:"1.2.2.定义Mapper",slug:"_1-2-2-定义mapper",link:"#_1-2-2-定义mapper",children:[]},{level:3,title:"1.2.3.测试",slug:"_1-2-3-测试",link:"#_1-2-3-测试",children:[]}]},{level:2,title:"1.3.常见注解",slug:"_1-3-常见注解",link:"#_1-3-常见注解",children:[{level:3,title:"1.3.1.@TableName",slug:"_1-3-1-tablename",link:"#_1-3-1-tablename",children:[]},{level:3,title:"1.3.2.@TableId",slug:"_1-3-2-tableid",link:"#_1-3-2-tableid",children:[]},{level:3,title:"1.3.3.@TableField",slug:"_1-3-3-tablefield",link:"#_1-3-3-tablefield",children:[]}]},{level:2,title:"1.4.常见配置",slug:"_1-4-常见配置",link:"#_1-4-常见配置",children:[]},{level:2,title:"2.1.条件构造器",slug:"_2-1-条件构造器",link:"#_2-1-条件构造器",children:[{level:3,title:"2.1.1.QueryWrapper",slug:"_2-1-1-querywrapper",link:"#_2-1-1-querywrapper",children:[]},{level:3,title:"2.1.2.UpdateWrapper",slug:"_2-1-2-updatewrapper",link:"#_2-1-2-updatewrapper",children:[]},{level:3,title:"2.1.3.LambdaQueryWrapper",slug:"_2-1-3-lambdaquerywrapper",link:"#_2-1-3-lambdaquerywrapper",children:[]}]},{level:2,title:"2.2.自定义SQL",slug:"_2-2-自定义sql",link:"#_2-2-自定义sql",children:[{level:3,title:"2.2.1.基本用法",slug:"_2-2-1-基本用法",link:"#_2-2-1-基本用法",children:[]},{level:3,title:"2.2.2.多表关联",slug:"_2-2-2-多表关联",link:"#_2-2-2-多表关联",children:[]}]},{level:2,title:"2.3.Service接口",slug:"_2-3-service接口",link:"#_2-3-service接口",children:[{level:3,title:"2.3.1.CRUD",slug:"_2-3-1-crud",link:"#_2-3-1-crud",children:[]},{level:3,title:"2.3.2.基本用法",slug:"_2-3-2-基本用法",link:"#_2-3-2-基本用法",children:[]},{level:3,title:"2.3.3.Lambda",slug:"_2-3-3-lambda",link:"#_2-3-3-lambda",children:[]},{level:3,title:"2.3.4.批量新增",slug:"_2-3-4-批量新增",link:"#_2-3-4-批量新增",children:[]}]},{level:2,title:"3.1.代码生成",slug:"_3-1-代码生成",link:"#_3-1-代码生成",children:[{level:3,title:"3.1.1.安装插件",slug:"_3-1-1-安装插件",link:"#_3-1-1-安装插件",children:[]},{level:3,title:"3.1.2.使用",slug:"_3-1-2-使用",link:"#_3-1-2-使用",children:[]}]},{level:2,title:"3.2.静态工具",slug:"_3-2-静态工具",link:"#_3-2-静态工具",children:[]},{level:2,title:"3.3.逻辑删除",slug:"_3-3-逻辑删除",link:"#_3-3-逻辑删除",children:[]},{level:2,title:"3.3.通用枚举",slug:"_3-3-通用枚举",link:"#_3-3-通用枚举",children:[{level:3,title:"3.3.1.定义枚举",slug:"_3-3-1-定义枚举",link:"#_3-3-1-定义枚举",children:[]},{level:3,title:"3.3.2.配置枚举处理器",slug:"_3-3-2-配置枚举处理器",link:"#_3-3-2-配置枚举处理器",children:[]},{level:3,title:"3.3.3.测试",slug:"_3-3-3-测试",link:"#_3-3-3-测试",children:[]}]},{level:2,title:"3.4.JSON类型处理器",slug:"_3-4-json类型处理器",link:"#_3-4-json类型处理器",children:[{level:3,title:"3.4.1.定义实体",slug:"_3-4-1-定义实体",link:"#_3-4-1-定义实体",children:[]},{level:3,title:"3.4.2.使用类型处理器",slug:"_3-4-2-使用类型处理器",link:"#_3-4-2-使用类型处理器",children:[]}]},{level:2,title:"3.5.配置加密（选学）",slug:"_3-5-配置加密-选学",link:"#_3-5-配置加密-选学",children:[{level:3,title:"3.5.1.生成秘钥",slug:"_3-5-1-生成秘钥",link:"#_3-5-1-生成秘钥",children:[]},{level:3,title:"3.5.2.修改配置",slug:"_3-5-2-修改配置",link:"#_3-5-2-修改配置",children:[]},{level:3,title:"3.5.3.测试",slug:"_3-5-3-测试",link:"#_3-5-3-测试",children:[]}]},{level:2,title:"4.1.分页插件",slug:"_4-1-分页插件",link:"#_4-1-分页插件",children:[{level:3,title:"4.1.1.配置分页插件",slug:"_4-1-1-配置分页插件",link:"#_4-1-1-配置分页插件",children:[]},{level:3,title:"4.1.2.分页API",slug:"_4-1-2-分页api",link:"#_4-1-2-分页api",children:[]}]},{level:2,title:"4.2.通用分页实体",slug:"_4-2-通用分页实体",link:"#_4-2-通用分页实体",children:[{level:3,title:"4.2.1.实体",slug:"_4-2-1-实体",link:"#_4-2-1-实体",children:[]},{level:3,title:"4.2.2.开发接口",slug:"_4-2-2-开发接口",link:"#_4-2-2-开发接口",children:[]},{level:3,title:"4.2.3.改造PageQuery实体",slug:"_4-2-3-改造pagequery实体",link:"#_4-2-3-改造pagequery实体",children:[]},{level:3,title:"4.2.4.改造PageDTO实体",slug:"_4-2-4-改造pagedto实体",link:"#_4-2-4-改造pagedto实体",children:[]}]}],path:"/Mybatis/Mybatis%20Plus/Mybatis%20Plus%E7%AC%94%E8%AE%B0.html",pathLocale:"/",extraFields:[]},{title:"QueryWrapper vs LambdaQueryWrapper",headers:[{level:3,title:"QueryWrapper",slug:"querywrapper",link:"#querywrapper",children:[]},{level:3,title:"LambdaQueryWrapper",slug:"lambdaquerywrapper",link:"#lambdaquerywrapper",children:[]},{level:3,title:"选择合适的查询条件构造器",slug:"选择合适的查询条件构造器",link:"#选择合适的查询条件构造器",children:[]}],path:"/Mybatis/Mybatis%20Plus/QueryWrapper%20vs%20LambdaQueryWrapper.html",pathLocale:"/",extraFields:[]},{title:'queryWrapper.apply("1=1")',headers:[],path:"/Mybatis/Mybatis%20Plus/queryWrapper%E8%87%AA%E5%AE%9A%E4%B9%89SQL.html",pathLocale:"/",extraFields:[]},{title:"this.page()",headers:[{level:3,title:"this.page() 的常用用法",slug:"this-page-的常用用法",link:"#this-page-的常用用法",children:[]},{level:3,title:"示例代码",slug:"示例代码",link:"#示例代码",children:[]},{level:3,title:"分页对象的常用方法",slug:"分页对象的常用方法",link:"#分页对象的常用方法",children:[]},{level:3,title:"高级用法",slug:"高级用法",link:"#高级用法",children:[]},{level:3,title:"适用场景",slug:"适用场景",link:"#适用场景",children:[]},{level:3,title:"注意事项",slug:"注意事项",link:"#注意事项",children:[]}],path:"/Mybatis/Mybatis%20Plus/this.page().html",pathLocale:"/",extraFields:[]},{title:"where 1=1",headers:[],path:"/Mybatis/Mybatis%20Plus/where%201_1.html",pathLocale:"/",extraFields:[]},{title:"wrapper.and()",headers:[{level:3,title:"and 的基本用法",slug:"and-的基本用法",link:"#and-的基本用法",children:[]},{level:3,title:"and 的常见场景",slug:"and-的常见场景",link:"#and-的常见场景",children:[]},{level:3,title:"注意事项",slug:"注意事项",link:"#注意事项",children:[]}],path:"/Mybatis/Mybatis%20Plus/wrapper.and().html",pathLocale:"/",extraFields:[]},{title:"动态构建查询条件",headers:[],path:"/Mybatis/Mybatis%20Plus/%E5%8A%A8%E6%80%81%E6%9E%84%E5%BB%BA%E6%9F%A5%E8%AF%A2%E6%9D%A1%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"新分页插件",headers:[{level:3,title:"Step1 引入依赖",slug:"step1-引入依赖",link:"#step1-引入依赖",children:[]},{level:3,title:"step2 新建配置类",slug:"step2-新建配置类",link:"#step2-新建配置类",children:[]},{level:3,title:"step3 使用",slug:"step3-使用",link:"#step3-使用",children:[]}],path:"/Mybatis/Mybatis%20Plus/%E6%96%B0%E7%89%88%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"API",headers:[{level:3,title:"scheduleAtFixedRate",slug:"scheduleatfixedrate",link:"#scheduleatfixedrate",children:[]}],path:"/Netty/API/API.html",pathLocale:"/",extraFields:[]},{title:"ExecutorService",headers:[{level:3,title:"主要方法",slug:"主要方法",link:"#主要方法",children:[]},{level:3,title:"继承自 Executor 接口的方法",slug:"继承自-executor-接口的方法",link:"#继承自-executor-接口的方法",children:[]},{level:3,title:"线程池的特点",slug:"线程池的特点",link:"#线程池的特点",children:[]},{level:3,title:"常用实现类",slug:"常用实现类",link:"#常用实现类",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Netty/API/ExecutorService.html",pathLocale:"/",extraFields:[]},{title:"Python序章",headers:[],path:"/Python/%E5%9F%BA%E7%A1%80/0.%E5%89%8D%E8%A8%80.html",pathLocale:"/",extraFields:[]},{title:"YouTube 视频示例",headers:[],path:"/Python/%E5%9F%BA%E7%A1%80/video.html",pathLocale:"/",extraFields:[]},{title:"核心数据类型",headers:[{level:2,title:"字符串String",slug:"字符串string",link:"#字符串string",children:[]},{level:2,title:"列表List",slug:"列表list",link:"#列表list",children:[]},{level:2,title:"元组Tuple",slug:"元组tuple",link:"#元组tuple",children:[]},{level:2,title:"字典Dict",slug:"字典dict",link:"#字典dict",children:[]},{level:2,title:"集合Set",slug:"集合set",link:"#集合set",children:[]}],path:"/Python/%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",pathLocale:"/",extraFields:[]},{title:"爬取豆瓣电影250",headers:[],path:"/Python/%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B.html",pathLocale:"/",extraFields:[]},{title:"Maven高级",headers:[{level:2,title:"1，分模块开发",slug:"_1-分模块开发",link:"#_1-分模块开发",children:[{level:3,title:"1.1 分模块开发设计",slug:"_1-1-分模块开发设计",link:"#_1-1-分模块开发设计",children:[]},{level:3,title:"1.2 分模块开发实现",slug:"_1-2-分模块开发实现",link:"#_1-2-分模块开发实现",children:[]}]},{level:2,title:"2，依赖管理",slug:"_2-依赖管理",link:"#_2-依赖管理",children:[{level:3,title:"2.1 依赖传递与冲突问题",slug:"_2-1-依赖传递与冲突问题",link:"#_2-1-依赖传递与冲突问题",children:[]},{level:3,title:"2.2 可选依赖和排除依赖",slug:"_2-2-可选依赖和排除依赖",link:"#_2-2-可选依赖和排除依赖",children:[]}]},{level:2,title:"3，聚合和继承",slug:"_3-聚合和继承",link:"#_3-聚合和继承",children:[{level:3,title:"3.1 聚合",slug:"_3-1-聚合",link:"#_3-1-聚合",children:[]},{level:3,title:"3.2 继承",slug:"_3-2-继承",link:"#_3-2-继承",children:[]},{level:3,title:"3.3 聚合与继承的区别",slug:"_3-3-聚合与继承的区别",link:"#_3-3-聚合与继承的区别",children:[]}]},{level:2,title:"4，属性",slug:"_4-属性",link:"#_4-属性",children:[{level:3,title:"4.1 属性",slug:"_4-1-属性",link:"#_4-1-属性",children:[]},{level:3,title:"4.2 配置文件加载属性",slug:"_4-2-配置文件加载属性",link:"#_4-2-配置文件加载属性",children:[]},{level:3,title:"4.3 版本管理",slug:"_4-3-版本管理",link:"#_4-3-版本管理",children:[]}]},{level:2,title:"5，多环境配置与应用",slug:"_5-多环境配置与应用",link:"#_5-多环境配置与应用",children:[{level:3,title:"5.1 多环境开发",slug:"_5-1-多环境开发",link:"#_5-1-多环境开发",children:[]},{level:3,title:"5.2 跳过测试",slug:"_5-2-跳过测试",link:"#_5-2-跳过测试",children:[]}]},{level:2,title:"6，私服",slug:"_6-私服",link:"#_6-私服",children:[{level:3,title:"6.1 私服简介",slug:"_6-1-私服简介",link:"#_6-1-私服简介",children:[]},{level:3,title:"6.2 私服安装",slug:"_6-2-私服安装",link:"#_6-2-私服安装",children:[]},{level:3,title:"6.3 私服仓库分类",slug:"_6-3-私服仓库分类",link:"#_6-3-私服仓库分类",children:[]},{level:3,title:"6.4 本地仓库访问私服配置",slug:"_6-4-本地仓库访问私服配置",link:"#_6-4-本地仓库访问私服配置",children:[]},{level:3,title:"6.5 私服资源上传与下载",slug:"_6-5-私服资源上传与下载",link:"#_6-5-私服资源上传与下载",children:[]}]}],path:"/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/Maven%E9%AB%98%E7%BA%A7.html",pathLocale:"/",extraFields:[]},{title:"附件1：POM文件总体配置说明",headers:[{level:2,title:"localRepository",slug:"localrepository",link:"#localrepository",children:[]},{level:2,title:"interactiveMode",slug:"interactivemode",link:"#interactivemode",children:[]},{level:2,title:"usePluginRegistry",slug:"usepluginregistry",link:"#usepluginregistry",children:[]},{level:2,title:"offline",slug:"offline",link:"#offline",children:[]},{level:2,title:"pluginGroups",slug:"plugingroups",link:"#plugingroups",children:[]},{level:2,title:"proxies",slug:"proxies",link:"#proxies",children:[]},{level:2,title:"servers",slug:"servers",link:"#servers",children:[]},{level:2,title:"mirrors",slug:"mirrors",link:"#mirrors",children:[]},{level:2,title:"profiles",slug:"profiles",link:"#profiles",children:[]},{level:2,title:"Activation",slug:"activation",link:"#activation",children:[]},{level:2,title:"Repositories",slug:"repositories",link:"#repositories",children:[]},{level:2,title:"activeProfiles",slug:"activeprofiles",link:"#activeprofiles",children:[]}],path:"/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/POM%E6%96%87%E4%BB%B6%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html",pathLocale:"/",extraFields:[]},{title:"SpringBoot",headers:[{level:2,title:"1，SpringBoot简介",slug:"_1-springboot简介",link:"#_1-springboot简介",children:[{level:3,title:"1.1  SpringBoot快速入门",slug:"_1-1-springboot快速入门",link:"#_1-1-springboot快速入门",children:[]},{level:3,title:"1.2  SpringBoot概述",slug:"_1-2-springboot概述",link:"#_1-2-springboot概述",children:[]}]},{level:2,title:"2，配置文件",slug:"_2-配置文件",link:"#_2-配置文件",children:[{level:3,title:"2.1  配置文件格式",slug:"_2-1-配置文件格式",link:"#_2-1-配置文件格式",children:[]},{level:3,title:"2.2  yaml格式",slug:"_2-2-yaml格式",link:"#_2-2-yaml格式",children:[]},{level:3,title:"2.3  yaml配置文件数据读取",slug:"_2-3-yaml配置文件数据读取",link:"#_2-3-yaml配置文件数据读取",children:[]},{level:3,title:"2.4  多环境配置",slug:"_2-4-多环境配置",link:"#_2-4-多环境配置",children:[]},{level:3,title:"2.5  配置文件分类",slug:"_2-5-配置文件分类",link:"#_2-5-配置文件分类",children:[]}]},{level:2,title:"3，SpringBoot整合junit",slug:"_3-springboot整合junit",link:"#_3-springboot整合junit",children:[{level:3,title:"3.1  环境准备",slug:"_3-1-环境准备",link:"#_3-1-环境准备",children:[]},{level:3,title:"3.2  编写测试类",slug:"_3-2-编写测试类",link:"#_3-2-编写测试类",children:[]}]},{level:2,title:"4，SpringBoot整合mybatis",slug:"_4-springboot整合mybatis",link:"#_4-springboot整合mybatis",children:[{level:3,title:"4.1  回顾Spring整合Mybatis",slug:"_4-1-回顾spring整合mybatis",link:"#_4-1-回顾spring整合mybatis",children:[]},{level:3,title:"4.2  SpringBoot整合mybatis",slug:"_4-2-springboot整合mybatis",link:"#_4-2-springboot整合mybatis",children:[]}]},{level:2,title:"5，案例",slug:"_5-案例",link:"#_5-案例",children:[{level:3,title:"5.1  创建工程",slug:"_5-1-创建工程",link:"#_5-1-创建工程",children:[]},{level:3,title:"5.2  代码拷贝",slug:"_5-2-代码拷贝",link:"#_5-2-代码拷贝",children:[]},{level:3,title:"5.3  配置文件",slug:"_5-3-配置文件",link:"#_5-3-配置文件",children:[]},{level:3,title:"5.4  静态资源",slug:"_5-4-静态资源",link:"#_5-4-静态资源",children:[]}]}],path:"/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/SpringBoot.html",pathLocale:"/",extraFields:[]},{title:"MyBatisPlus",headers:[{level:2,title:"1，MyBatisPlus入门案例与简介",slug:"_1-mybatisplus入门案例与简介",link:"#_1-mybatisplus入门案例与简介",children:[{level:3,title:"1.1 入门案例",slug:"_1-1-入门案例",link:"#_1-1-入门案例",children:[]},{level:3,title:"1.2 MybatisPlus简介",slug:"_1-2-mybatisplus简介",link:"#_1-2-mybatisplus简介",children:[]}]},{level:2,title:"2，标准数据层开发",slug:"_2-标准数据层开发",link:"#_2-标准数据层开发",children:[{level:3,title:"2.1 标准CRUD使用",slug:"_2-1-标准crud使用",link:"#_2-1-标准crud使用",children:[]},{level:3,title:"2.2 新增",slug:"_2-2-新增",link:"#_2-2-新增",children:[]},{level:3,title:"2.3 删除",slug:"_2-3-删除",link:"#_2-3-删除",children:[]},{level:3,title:"2.4 修改",slug:"_2-4-修改",link:"#_2-4-修改",children:[]},{level:3,title:"2.5 根据ID查询",slug:"_2-5-根据id查询",link:"#_2-5-根据id查询",children:[]},{level:3,title:"2.6 查询所有",slug:"_2-6-查询所有",link:"#_2-6-查询所有",children:[]},{level:3,title:"2.7 Lombok",slug:"_2-7-lombok",link:"#_2-7-lombok",children:[]},{level:3,title:"2.8 分页功能",slug:"_2-8-分页功能",link:"#_2-8-分页功能",children:[]}]},{level:2,title:"3，DQL编程控制",slug:"_3-dql编程控制",link:"#_3-dql编程控制",children:[{level:3,title:"3.1 条件查询",slug:"_3-1-条件查询",link:"#_3-1-条件查询",children:[]},{level:3,title:"3.2 查询投影",slug:"_3-2-查询投影",link:"#_3-2-查询投影",children:[]},{level:3,title:"3.3 查询条件",slug:"_3-3-查询条件",link:"#_3-3-查询条件",children:[]},{level:3,title:"3.4 映射匹配兼容性",slug:"_3-4-映射匹配兼容性",link:"#_3-4-映射匹配兼容性",children:[]}]},{level:2,title:"4，DML编程控制",slug:"_4-dml编程控制",link:"#_4-dml编程控制",children:[{level:3,title:"4.1 id生成策略控制",slug:"_4-1-id生成策略控制",link:"#_4-1-id生成策略控制",children:[]},{level:3,title:"4.2 多记录操作",slug:"_4-2-多记录操作",link:"#_4-2-多记录操作",children:[]},{level:3,title:"4.3 逻辑删除",slug:"_4-3-逻辑删除",link:"#_4-3-逻辑删除",children:[]},{level:3,title:"4.4 乐观锁",slug:"_4-4-乐观锁",link:"#_4-4-乐观锁",children:[]}]},{level:2,title:"5，快速开发",slug:"_5-快速开发",link:"#_5-快速开发",children:[{level:3,title:"5.1 代码生成器原理分析",slug:"_5-1-代码生成器原理分析",link:"#_5-1-代码生成器原理分析",children:[]},{level:3,title:"5.2 代码生成器实现",slug:"_5-2-代码生成器实现",link:"#_5-2-代码生成器实现",children:[]},{level:3,title:"5.3 MP中Service的CRUD",slug:"_5-3-mp中service的crud",link:"#_5-3-mp中service的crud",children:[]}]}],path:"/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/MyBatisPlus.html",pathLocale:"/",extraFields:[]},{title:"生命周期注解",headers:[{level:3,title:"1. @BeforeEach",slug:"_1-beforeeach",link:"#_1-beforeeach",children:[]},{level:3,title:"2. @AfterEach",slug:"_2-aftereach",link:"#_2-aftereach",children:[]},{level:3,title:"3. @BeforeAll",slug:"_3-beforeall",link:"#_3-beforeall",children:[]},{level:3,title:"4. @AfterAll",slug:"_4-afterall",link:"#_4-afterall",children:[]},{level:3,title:"5. @Test",slug:"_5-test",link:"#_5-test",children:[]},{level:3,title:"生命周期执行顺序：",slug:"生命周期执行顺序",link:"#生命周期执行顺序",children:[]},{level:3,title:"示例",slug:"示例",link:"#示例",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Spring/Junit/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B3%A8%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"@ControllerAdvice",headers:[{level:2,title:"1. 概述",slug:"_1-概述",link:"#_1-概述",children:[{level:3,title:"实现",slug:"实现",link:"#实现",children:[]}]},{level:2,title:"2. 作用",slug:"_2-作用",link:"#_2-作用",children:[]},{level:2,title:"3. 使用",slug:"_3-使用",link:"#_3-使用",children:[{level:3,title:"3.1 @ExceptionHandler 实现全局异常处理",slug:"_3-1-exceptionhandler-实现全局异常处理",link:"#_3-1-exceptionhandler-实现全局异常处理",children:[]},{level:3,title:"3.2 预设全局数据",slug:"_3-2-预设全局数据",link:"#_3-2-预设全局数据",children:[]},{level:3,title:"3.3 请求参数预处理",slug:"_3-3-请求参数预处理",link:"#_3-3-请求参数预处理",children:[]}]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/@ControllerAdvice.html",pathLocale:"/",extraFields:[]},{title:"@EnableTransactionManagement 使用指南",headers:[{level:2,title:"1. 什么是 @EnableTransactionManagement",slug:"_1-什么是-enabletransactionmanagement",link:"#_1-什么是-enabletransactionmanagement",children:[]},{level:2,title:"2. 基本用法",slug:"_2-基本用法",link:"#_2-基本用法",children:[{level:3,title:"2.1 添加依赖",slug:"_2-1-添加依赖",link:"#_2-1-添加依赖",children:[]},{level:3,title:"2.2 配置 @EnableTransactionManagement",slug:"_2-2-配置-enabletransactionmanagement",link:"#_2-2-配置-enabletransactionmanagement",children:[]},{level:3,title:"2.3 使用 @Transactional",slug:"_2-3-使用-transactional",link:"#_2-3-使用-transactional",children:[]}]},{level:2,title:"3. @EnableTransactionManagement 的放置位置",slug:"_3-enabletransactionmanagement-的放置位置",link:"#_3-enabletransactionmanagement-的放置位置",children:[{level:3,title:"3.1 主配置类",slug:"_3-1-主配置类",link:"#_3-1-主配置类",children:[]},{level:3,title:"3.2 单独的事务配置类",slug:"_3-2-单独的事务配置类",link:"#_3-2-单独的事务配置类",children:[]},{level:3,title:"3.3 模块化配置",slug:"_3-3-模块化配置",link:"#_3-3-模块化配置",children:[]}]},{level:2,title:"4. 工作原理",slug:"_4-工作原理",link:"#_4-工作原理",children:[]},{level:2,title:"5. 推荐实践",slug:"_5-推荐实践",link:"#_5-推荐实践",children:[]},{level:2,title:"6. 注意事项",slug:"_6-注意事项",link:"#_6-注意事项",children:[]},{level:2,title:"7. 总结",slug:"_7-总结",link:"#_7-总结",children:[]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/@EnableTransactionManagement.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:3,title:"主要功能：",slug:"主要功能",link:"#主要功能",children:[]},{level:3,title:"使用场景：",slug:"使用场景",link:"#使用场景",children:[]},{level:3,title:"主要属性：",slug:"主要属性",link:"#主要属性",children:[]},{level:3,title:"例子：",slug:"例子",link:"#例子",children:[]},{level:3,title:"其他常见属性：",slug:"其他常见属性",link:"#其他常见属性",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/@FeignClient.html",pathLocale:"/",extraFields:[]},{title:"@InitBinder",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"概述",slug:"概述",link:"#概述",children:[]},{level:2,title:"作用",slug:"作用",link:"#作用",children:[]},{level:2,title:"对比@RequestBody",slug:"对比-requestbody",link:"#对比-requestbody",children:[{level:3,title:"1. 概念和作用",slug:"_1-概念和作用",link:"#_1-概念和作用",children:[]},{level:3,title:"2. 数据来源",slug:"_2-数据来源",link:"#_2-数据来源",children:[]},{level:3,title:"3. 工作机制",slug:"_3-工作机制",link:"#_3-工作机制",children:[]},{level:3,title:"4. 适用场景",slug:"_4-适用场景",link:"#_4-适用场景",children:[]},{level:3,title:"5. 示例对比",slug:"_5-示例对比",link:"#_5-示例对比",children:[]},{level:3,title:"6. 两者能否结合使用？",slug:"_6-两者能否结合使用",link:"#_6-两者能否结合使用",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/@InitBinder.html",pathLocale:"/",extraFields:[]},{title:"@JsonFormat",headers:[{level:3,title:"主要功能：",slug:"主要功能",link:"#主要功能",children:[]},{level:3,title:"常用属性：",slug:"常用属性",link:"#常用属性",children:[]},{level:3,title:"示例：",slug:"示例",link:"#示例",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/@JsonFormat.html",pathLocale:"/",extraFields:[]},{title:"@JsonInclude",headers:[],path:"/Spring/%E6%B3%A8%E8%A7%A3/@JsonInclude.html",pathLocale:"/",extraFields:[]},{title:"@ResponseBody",headers:[{level:3,title:"1. 实现",slug:"_1-实现",link:"#_1-实现",children:[]},{level:3,title:"2. 作用",slug:"_2-作用",link:"#_2-作用",children:[]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/@ResponseBody.html",pathLocale:"/",extraFields:[]},{title:"元注解",headers:[{level:2,title:"1. @Target",slug:"_1-target",link:"#_1-target",children:[{level:3,title:"1.1 使用范围枚举",slug:"_1-1-使用范围枚举",link:"#_1-1-使用范围枚举",children:[]},{level:3,title:"1.2 使用实例",slug:"_1-2-使用实例",link:"#_1-2-使用实例",children:[]}]},{level:2,title:"2. @Retention",slug:"_2-retention",link:"#_2-retention",children:[{level:3,title:"2.1 生命周期枚举",slug:"_2-1-生命周期枚举",link:"#_2-1-生命周期枚举",children:[]},{level:3,title:"2.2 使用实例",slug:"_2-2-使用实例",link:"#_2-2-使用实例",children:[]}]},{level:2,title:"3. @Documented",slug:"_3-documented",link:"#_3-documented",children:[{level:3,title:"使用实例",slug:"使用实例",link:"#使用实例",children:[]}]},{level:2,title:"4.@Inherited",slug:"_4-inherited",link:"#_4-inherited",children:[{level:3,title:"使用实例",slug:"使用实例-1",link:"#使用实例-1",children:[]}]},{level:2,title:"5. @Repeatable",slug:"_5-repeatable",link:"#_5-repeatable",children:[]},{level:2,title:"6. 自定义注解",slug:"_6-自定义注解",link:"#_6-自定义注解",children:[{level:3,title:"6.1 @intertface",slug:"_6-1-intertface",link:"#_6-1-intertface",children:[]},{level:3,title:"6.2 自定义",slug:"_6-2-自定义",link:"#_6-2-自定义",children:[]}]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/%E5%85%83%E6%B3%A8%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"注解@RequestMapping、@PostMapping、@GetMapping",headers:[{level:2,title:"@RequestMapping注解",slug:"requestmapping注解",link:"#requestmapping注解",children:[]},{level:2,title:"@PostMapping注解",slug:"postmapping注解",link:"#postmapping注解",children:[]},{level:2,title:"@GetMapping注解",slug:"getmapping注解",link:"#getmapping注解",children:[]},{level:2,title:"示例",slug:"示例",link:"#示例",children:[]}],path:"/Spring/%E6%B3%A8%E8%A7%A3/%E6%B3%A8%E8%A7%A3@RequestMapping%E3%80%81@PostMapping%E3%80%81@GetMapping.html",pathLocale:"/",extraFields:[]},{title:"阿里云oss使用记录",headers:[{level:2,title:"原生SDK使用",slug:"原生sdk使用",link:"#原生sdk使用",children:[]},{level:2,title:"SpringCloud Alibaba-OSS",slug:"springcloud-alibaba-oss",link:"#springcloud-alibaba-oss",children:[]}],path:"/SpringCloud/Alibaba-OSS/%E9%98%BF%E9%87%8C%E4%BA%91oss%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html",pathLocale:"/",extraFields:[]},{title:"事务ACID原则",headers:[],path:"/SpringCloud/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1ACID%E5%8E%9F%E5%88%99.html",pathLocale:"/",extraFields:[]},{title:"SpringCloud高级篇",headers:[{level:2,title:"Sentinel教程",slug:"sentinel教程",link:"#sentinel教程",children:[]},{level:2,title:"Jmeter教程",slug:"jmeter教程",link:"#jmeter教程",children:[]},{level:2,title:"bug",slug:"bug",link:"#bug",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/",pathLocale:"/",extraFields:[]},{title:"Hibernate Validator",headers:[{level:2,title:"概述",slug:"概述",link:"#概述",children:[]},{level:2,title:"常用注解",slug:"常用注解",link:"#常用注解",children:[]}],path:"/SpringMVC/%E6%A0%A1%E9%AA%8C/Hibernate%20Validator.html",pathLocale:"/",extraFields:[]},{title:"JSR303数字校验",headers:[{level:2,title:"1.引入依赖",slug:"_1-引入依赖",link:"#_1-引入依赖",children:[]},{level:2,title:"2.实体类添加注解",slug:"_2-实体类添加注解",link:"#_2-实体类添加注解",children:[]},{level:2,title:"3.controller参数添加@Valid注解",slug:"_3-controller参数添加-valid注解",link:"#_3-controller参数添加-valid注解",children:[]},{level:2,title:"*4.规范返回结果",slug:"_4-规范返回结果",link:"#_4-规范返回结果",children:[]},{level:2,title:"5.使用postman测试接口",slug:"_5-使用postman测试接口",link:"#_5-使用postman测试接口",children:[]}],path:"/SpringMVC/%E6%A0%A1%E9%AA%8C/JSR303%E6%95%B0%E5%AD%97%E6%A0%A1%E9%AA%8C.html",pathLocale:"/",extraFields:[]},{title:"SpringMVC",headers:[],path:"/SpringMVC/%E6%A0%A1%E9%AA%8C/",pathLocale:"/",extraFields:[]},{title:"自定义校验注解",headers:[{level:3,title:"1. 自定义校验注解的核心概念",slug:"_1-自定义校验注解的核心概念",link:"#_1-自定义校验注解的核心概念",children:[]},{level:3,title:"2. 自定义校验注解的组成部分",slug:"_2-自定义校验注解的组成部分",link:"#_2-自定义校验注解的组成部分",children:[]},{level:3,title:"3. 实现步骤",slug:"_3-实现步骤",link:"#_3-实现步骤",children:[]},{level:3,title:"4. 常见扩展功能",slug:"_4-常见扩展功能",link:"#_4-常见扩展功能",children:[]},{level:3,title:"5. 优点与适用场景",slug:"_5-优点与适用场景",link:"#_5-优点与适用场景",children:[]},{level:3,title:"6. 总结",slug:"_6-总结",link:"#_6-总结",children:[]}],path:"/SpringMVC/%E6%A0%A1%E9%AA%8C/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C.html",pathLocale:"/",extraFields:[]},{title:"删除最近一次提推送",headers:[{level:3,title:"1. 撤销本地提交并保留更改（如果你希望保留修改内容在工作目录中）",slug:"_1-撤销本地提交并保留更改-如果你希望保留修改内容在工作目录中",link:"#_1-撤销本地提交并保留更改-如果你希望保留修改内容在工作目录中",children:[]},{level:3,title:"2. 撤销本地提交并丢弃更改（如果你希望完全撤销提交和更改）",slug:"_2-撤销本地提交并丢弃更改-如果你希望完全撤销提交和更改",link:"#_2-撤销本地提交并丢弃更改-如果你希望完全撤销提交和更改",children:[]},{level:3,title:"3. 强制推送到远程仓库",slug:"_3-强制推送到远程仓库",link:"#_3-强制推送到远程仓库",children:[]},{level:3,title:"注意事项：",slug:"注意事项",link:"#注意事项",children:[]}],path:"/VCS/Git/%E5%88%A0%E9%99%A4%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E6%8E%A8%E9%80%81.html",pathLocale:"/",extraFields:[]},{title:"忽略.idea文件夹",headers:[],path:"/VCS/Git/%E5%BF%BD%E7%95%A5idea%E6%96%87%E4%BB%B6%E5%A4%B9.html",pathLocale:"/",extraFields:[]},{title:"本地项目推送至远程库",headers:[{level:3,title:"1. 在 Git 创建一个远程库",slug:"_1-在-git-创建一个远程库",link:"#_1-在-git-创建一个远程库",children:[]},{level:3,title:"2. 打开本地项目",slug:"_2-打开本地项目",link:"#_2-打开本地项目",children:[]},{level:3,title:"3. 初始化 Git 仓库（如果没有初始化的话）",slug:"_3-初始化-git-仓库-如果没有初始化的话",link:"#_3-初始化-git-仓库-如果没有初始化的话",children:[]},{level:3,title:"4. 配置 Git（如果还没有配置过）",slug:"_4-配置-git-如果还没有配置过",link:"#_4-配置-git-如果还没有配置过",children:[]},{level:3,title:"5. 将文件添加到 Git",slug:"_5-将文件添加到-git",link:"#_5-将文件添加到-git",children:[]},{level:3,title:"6. 提交文件",slug:"_6-提交文件",link:"#_6-提交文件",children:[]},{level:3,title:"7. 连接远程仓库",slug:"_7-连接远程仓库",link:"#_7-连接远程仓库",children:[]},{level:3,title:"8. 推送到远程仓库",slug:"_8-推送到远程仓库",link:"#_8-推送到远程仓库",children:[]},{level:3,title:"9. 使用 IDEA 自带的 Git 工具（可选）",slug:"_9-使用-idea-自带的-git-工具-可选",link:"#_9-使用-idea-自带的-git-工具-可选",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/VCS/Git/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E8%87%B3%E8%BF%9C%E7%A8%8B%E5%BA%93.html",pathLocale:"/",extraFields:[]},{title:"npm更换镜像源",headers:[],path:"/%E5%89%8D%E7%AB%AF/node/npm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",pathLocale:"/",extraFields:[]},{title:"nvm更换镜像源",headers:[],path:"/%E5%89%8D%E7%AB%AF/node/nvm%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.html",pathLocale:"/",extraFields:[]},{title:"socket 到底是什么？",headers:[{level:2,title:"socket 的概念",slug:"socket-的概念",link:"#socket-的概念",children:[]},{level:2,title:"socket 的使用场景",slug:"socket-的使用场景",link:"#socket-的使用场景",children:[]},{level:2,title:"socket 的设计",slug:"socket-的设计",link:"#socket-的设计",children:[{level:3,title:"sock 是什么",slug:"sock-是什么",link:"#sock-是什么",children:[]},{level:3,title:"基于各种 sock 实现网络传输功能",slug:"基于各种-sock-实现网络传输功能",link:"#基于各种-sock-实现网络传输功能",children:[]},{level:3,title:"提供 socket 层",slug:"提供-socket-层",link:"#提供-socket-层",children:[]}]},{level:2,title:"socket 如何实现网络通信",slug:"socket-如何实现网络通信",link:"#socket-如何实现网络通信",children:[{level:3,title:"建立连接",slug:"建立连接",link:"#建立连接",children:[]},{level:3,title:"数据传输",slug:"数据传输",link:"#数据传输",children:[]}]},{level:2,title:'sock 怎么实现"继承"',slug:"sock-怎么实现-继承",link:"#sock-怎么实现-继承",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/socket%E6%98%AF%E4%BB%80%E4%B9%88.html",pathLocale:"/",extraFields:[]},{title:"适配器模式（Adapter Pattern）",headers:[],path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"前端工程打包部署至 Nginx",headers:[{level:2,title:"1. 项目打包",slug:"_1-项目打包",link:"#_1-项目打包",children:[]},{level:2,title:"2. 上传打包文件",slug:"_2-上传打包文件",link:"#_2-上传打包文件",children:[]},{level:2,title:"3. 配置 Nginx",slug:"_3-配置-nginx",link:"#_3-配置-nginx",children:[]},{level:2,title:"2. 重新运行容器，并挂载前端文件",slug:"_2-重新运行容器-并挂载前端文件",link:"#_2-重新运行容器-并挂载前端文件",children:[]}],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2.html",pathLocale:"/",extraFields:[]},{title:"谷粒商城",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/",pathLocale:"/",extraFields:[]},{title:"关闭eslint检查",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E5%85%B3%E9%97%ADeslint%E6%A3%80%E6%9F%A5.html",pathLocale:"/",extraFields:[]},{title:"视频教程",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",pathLocale:"/",extraFields:[]},{title:"cors跨域访问",headers:[{level:2,title:"什么是跨域",slug:"什么是跨域",link:"#什么是跨域",children:[]},{level:2,title:"为什么有跨域问题",slug:"为什么有跨域问题",link:"#为什么有跨域问题",children:[]},{level:2,title:"cors",slug:"cors",link:"#cors",children:[]}],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E8%B7%A8%E5%9F%9F.html",pathLocale:"/",extraFields:[]},{title:"MyCat-web安装文档",headers:[{level:2,title:"安装Zookeeper",slug:"安装zookeeper",link:"#安装zookeeper",children:[]},{level:2,title:"安装Mycat-web",slug:"安装mycat-web",link:"#安装mycat-web",children:[]}],path:"/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat-web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html",pathLocale:"/",extraFields:[]},{title:"MyCat安装文档",headers:[{level:2,title:"JDK安装",slug:"jdk安装",link:"#jdk安装",children:[{level:3,title:"1. 上传安装包",slug:"_1-上传安装包",link:"#_1-上传安装包",children:[]},{level:3,title:"2. 解压安装包",slug:"_2-解压安装包",link:"#_2-解压安装包",children:[]},{level:3,title:"3. 配置环境变量",slug:"_3-配置环境变量",link:"#_3-配置环境变量",children:[]},{level:3,title:"4. 重新加载profile文件",slug:"_4-重新加载profile文件",link:"#_4-重新加载profile文件",children:[]},{level:3,title:"5. 检查安装是否成功",slug:"_5-检查安装是否成功",link:"#_5-检查安装是否成功",children:[]}]},{level:2,title:"MyCat安装",slug:"mycat安装",link:"#mycat安装",children:[{level:3,title:"1. 上传Mycat压缩包到服务器",slug:"_1-上传mycat压缩包到服务器",link:"#_1-上传mycat压缩包到服务器",children:[]},{level:3,title:"2. 解压MyCat的压缩包",slug:"_2-解压mycat的压缩包",link:"#_2-解压mycat的压缩包",children:[]}]}],path:"/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.html",pathLocale:"/",extraFields:[]},{title:"rule.xml配置文件",headers:[{level:2,title:"最终配置",slug:"最终配置",link:"#最终配置",children:[]}],path:"/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/rule.html",pathLocale:"/",extraFields:[]},{title:"MyCat配置文件schema.xml",headers:[{level:2,title:"自动分片",slug:"自动分片",link:"#自动分片",children:[]},{level:2,title:"垂直分片",slug:"垂直分片",link:"#垂直分片",children:[]},{level:2,title:"水平分片",slug:"水平分片",link:"#水平分片",children:[]},{level:2,title:"分片规则",slug:"分片规则",link:"#分片规则",children:[]},{level:2,title:"最终配置",slug:"最终配置",link:"#最终配置",children:[]}],path:"/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/schema.html",pathLocale:"/",extraFields:[]},{title:"MyCat配置文件server.xml",headers:[{level:2,title:"最终配置",slug:"最终配置",link:"#最终配置",children:[]}],path:"/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/server.html",pathLocale:"/",extraFields:[]},{title:"UNION 和 UNION ALL",headers:[{level:2,title:"1. 去重",slug:"_1-去重",link:"#_1-去重",children:[]},{level:2,title:"2. 性能",slug:"_2-性能",link:"#_2-性能",children:[]},{level:2,title:"3. 使用场景",slug:"_3-使用场景",link:"#_3-使用场景",children:[{level:3,title:"示例",slug:"示例",link:"#示例",children:[]},{level:3,title:"使用 UNION：",slug:"使用-union",link:"#使用-union",children:[]},{level:3,title:"使用 UNION ALL：",slug:"使用-union-all",link:"#使用-union-all",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/union%E5%92%8CunionAll.html",pathLocale:"/",extraFields:[]},{title:"MySQL卸载-Linux版",headers:[{level:2,title:"MySQL卸载-Linux版",slug:"mysql卸载-linux版-1",link:"#mysql卸载-linux版-1",children:[]}],path:"/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/MySQL%E5%8D%B8%E8%BD%BD-Linux.html",pathLocale:"/",extraFields:[]},{title:"MySQL卸载文档-Windows版",headers:[{level:3,title:"1. 停止MySQL服务",slug:"_1-停止mysql服务",link:"#_1-停止mysql服务",children:[]},{level:3,title:"2. 卸载MySQL相关组件",slug:"_2-卸载mysql相关组件",link:"#_2-卸载mysql相关组件",children:[]},{level:3,title:"3. 删除MySQL安装目录",slug:"_3-删除mysql安装目录",link:"#_3-删除mysql安装目录",children:[]},{level:3,title:"4. 删除MySQL数据目录",slug:"_4-删除mysql数据目录",link:"#_4-删除mysql数据目录",children:[]},{level:3,title:"5. 再次打开服务，查看是否有MySQL卸载残留",slug:"_5-再次打开服务-查看是否有mysql卸载残留",link:"#_5-再次打开服务-查看是否有mysql卸载残留",children:[]}],path:"/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows%E7%89%88.html",pathLocale:"/",extraFields:[]},{title:"MySQL学习笔记",headers:[{level:2,title:"通用语法及分类",slug:"通用语法及分类",link:"#通用语法及分类",children:[{level:3,title:"DDL（数据定义语言）",slug:"ddl-数据定义语言",link:"#ddl-数据定义语言",children:[]},{level:3,title:"DML（数据操作语言）",slug:"dml-数据操作语言",link:"#dml-数据操作语言",children:[]},{level:3,title:"DQL（数据查询语言）",slug:"dql-数据查询语言",link:"#dql-数据查询语言",children:[]},{level:3,title:"DCL",slug:"dcl",link:"#dcl",children:[]}]},{level:2,title:"函数",slug:"函数",link:"#函数",children:[{level:3,title:"字符串函数",slug:"字符串函数",link:"#字符串函数",children:[]},{level:3,title:"数值函数",slug:"数值函数",link:"#数值函数",children:[]},{level:3,title:"日期函数",slug:"日期函数",link:"#日期函数",children:[]},{level:3,title:"流程函数",slug:"流程函数",link:"#流程函数",children:[]}]},{level:2,title:"约束",slug:"约束",link:"#约束",children:[{level:3,title:"常用约束",slug:"常用约束",link:"#常用约束",children:[]},{level:3,title:"外键约束",slug:"外键约束",link:"#外键约束",children:[]}]},{level:2,title:"多表查询",slug:"多表查询",link:"#多表查询",children:[{level:3,title:"多表关系",slug:"多表关系",link:"#多表关系",children:[]},{level:3,title:"查询",slug:"查询",link:"#查询",children:[]},{level:3,title:"内连接查询",slug:"内连接查询",link:"#内连接查询",children:[]},{level:3,title:"外连接查询",slug:"外连接查询",link:"#外连接查询",children:[]},{level:3,title:"自连接查询",slug:"自连接查询",link:"#自连接查询",children:[]},{level:3,title:"联合查询 union, union all",slug:"联合查询-union-union-all",link:"#联合查询-union-union-all",children:[]},{level:3,title:"子查询",slug:"子查询",link:"#子查询",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"四大特性ACID",slug:"四大特性acid",link:"#四大特性acid",children:[]},{level:3,title:"并发事务",slug:"并发事务",link:"#并发事务",children:[]}]},{level:2,title:"2.1 存储引擎",slug:"_2-1-存储引擎",link:"#_2-1-存储引擎",children:[{level:3,title:"2.1.1 InnoDB",slug:"_2-1-1-innodb",link:"#_2-1-1-innodb",children:[]},{level:3,title:"2.1.2 MyISAM",slug:"_2-1-2-myisam",link:"#_2-1-2-myisam",children:[]},{level:3,title:"2.1.3 Memory",slug:"_2-1-3-memory",link:"#_2-1-3-memory",children:[]},{level:3,title:"2.1.4 存储引擎特点",slug:"_2-1-4-存储引擎特点",link:"#_2-1-4-存储引擎特点",children:[]},{level:3,title:"2.1.5 存储引擎的选择",slug:"_2-1-5-存储引擎的选择",link:"#_2-1-5-存储引擎的选择",children:[]}]},{level:2,title:"2.2 索引",slug:"_2-2-索引",link:"#_2-2-索引",children:[{level:3,title:"2.2.1 索引结构",slug:"_2-2-1-索引结构",link:"#_2-2-1-索引结构",children:[]},{level:3,title:"2.2.2 索引分类",slug:"_2-2-2-索引分类",link:"#_2-2-2-索引分类",children:[]},{level:3,title:"2.2.3 语法",slug:"_2-2-3-语法",link:"#_2-2-3-语法",children:[]},{level:3,title:"2.2.4 SQL性能分析",slug:"_2-2-4-sql性能分析",link:"#_2-2-4-sql性能分析",children:[]},{level:3,title:"2.2.5 使用规则",slug:"_2-2-5-使用规则",link:"#_2-2-5-使用规则",children:[]},{level:3,title:"2.2.6 设计原则",slug:"_2-2-6-设计原则",link:"#_2-2-6-设计原则",children:[]}]},{level:2,title:"2.3 SQL 优化",slug:"_2-3-sql-优化",link:"#_2-3-sql-优化",children:[{level:3,title:"2.3.1 插入数据",slug:"_2-3-1-插入数据",link:"#_2-3-1-插入数据",children:[]},{level:3,title:"2.3.2 主键优化",slug:"_2-3-2-主键优化",link:"#_2-3-2-主键优化",children:[]},{level:3,title:"2.3.3 order by优化",slug:"_2-3-3-order-by优化",link:"#_2-3-3-order-by优化",children:[]},{level:3,title:"2.3.4 group by优化",slug:"_2-3-4-group-by优化",link:"#_2-3-4-group-by优化",children:[]},{level:3,title:"2.3.5 limit优化",slug:"_2-3-5-limit优化",link:"#_2-3-5-limit优化",children:[]},{level:3,title:"2.3.6 count优化",slug:"_2-3-6-count优化",link:"#_2-3-6-count优化",children:[]},{level:3,title:"2.3.7 update优化（避免行锁升级为表锁）",slug:"_2-3-7-update优化-避免行锁升级为表锁",link:"#_2-3-7-update优化-避免行锁升级为表锁",children:[]}]},{level:2,title:"2.4 视图/存储过程/触发器",slug:"_2-4-视图-存储过程-触发器",link:"#_2-4-视图-存储过程-触发器",children:[{level:3,title:"2.4.1 视图",slug:"_2-4-1-视图",link:"#_2-4-1-视图",children:[]},{level:3,title:"2.4.2 存储过程",slug:"_2-4-2-存储过程",link:"#_2-4-2-存储过程",children:[]},{level:3,title:"2.4.3 存储函数：",slug:"_2-4-3-存储函数",link:"#_2-4-3-存储函数",children:[]},{level:3,title:"2.4.4 触发器",slug:"_2-4-4-触发器",link:"#_2-4-4-触发器",children:[]}]},{level:2,title:"锁",slug:"锁",link:"#锁",children:[{level:3,title:"全局锁",slug:"全局锁",link:"#全局锁",children:[]},{level:3,title:"表级锁",slug:"表级锁",link:"#表级锁",children:[]},{level:3,title:"行级锁",slug:"行级锁",link:"#行级锁",children:[]}]},{level:2,title:"InnoDB引擎",slug:"innodb引擎",link:"#innodb引擎",children:[{level:3,title:"逻辑存储结构",slug:"逻辑存储结构",link:"#逻辑存储结构",children:[]},{level:3,title:"架构",slug:"架构",link:"#架构",children:[]},{level:3,title:"事务原理",slug:"事务原理",link:"#事务原理",children:[]},{level:3,title:"MVCC",slug:"mvcc",link:"#mvcc",children:[]}]},{level:2,title:"MySQL管理",slug:"mysql管理",link:"#mysql管理",children:[{level:3,title:"系统数据库介绍",slug:"系统数据库介绍",link:"#系统数据库介绍",children:[]},{level:3,title:"常用工具",slug:"常用工具",link:"#常用工具",children:[]}]},{level:2,title:"日志",slug:"日志",link:"#日志",children:[{level:3,title:"错误日志",slug:"错误日志",link:"#错误日志",children:[]},{level:3,title:"二进制日志",slug:"二进制日志",link:"#二进制日志",children:[]},{level:3,title:"查询日志",slug:"查询日志",link:"#查询日志",children:[]},{level:3,title:"慢查询日志",slug:"慢查询日志-1",link:"#慢查询日志-1",children:[]}]},{level:2,title:"主从复制",slug:"主从复制",link:"#主从复制",children:[{level:3,title:"原理",slug:"原理",link:"#原理",children:[]},{level:3,title:"搭建实现",slug:"搭建实现",link:"#搭建实现",children:[]}]},{level:2,title:"分库分表",slug:"分库分表",link:"#分库分表",children:[{level:3,title:"介绍",slug:"介绍-1",link:"#介绍-1",children:[]},{level:3,title:"Mycat概述",slug:"mycat概述",link:"#mycat概述",children:[]},{level:3,title:"Mycat入门",slug:"mycat入门",link:"#mycat入门",children:[]},{level:3,title:"Mycat配置",slug:"mycat配置",link:"#mycat配置",children:[]},{level:3,title:"Mycat分片",slug:"mycat分片",link:"#mycat分片",children:[]},{level:3,title:"Mycat管理及监控",slug:"mycat管理及监控",link:"#mycat管理及监控",children:[]}]},{level:2,title:"读写分离",slug:"读写分离",link:"#读写分离",children:[{level:3,title:"介绍",slug:"介绍-2",link:"#介绍-2",children:[]},{level:3,title:"一主一从读写分离",slug:"一主一从读写分离",link:"#一主一从读写分离",children:[]},{level:3,title:"双主双从",slug:"双主双从",link:"#双主双从",children:[]},{level:3,title:"双主双从读写分离",slug:"双主双从读写分离",link:"#双主双从读写分离",children:[]}]},{level:2,title:"整型",slug:"整型",link:"#整型",children:[]},{level:2,title:"浮点型",slug:"浮点型",link:"#浮点型",children:[]},{level:2,title:"日期和时间",slug:"日期和时间",link:"#日期和时间",children:[]},{level:2,title:"字符串",slug:"字符串",link:"#字符串",children:[]},{level:2,title:"二进制类型",slug:"二进制类型",link:"#二进制类型",children:[]}],path:"/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html",pathLocale:"/",extraFields:[]},{title:"MySQL 数据库授权管理指南",headers:[{level:2,title:"常见权限类型：",slug:"常见权限类型",link:"#常见权限类型",children:[]},{level:2,title:"示例操作：",slug:"示例操作",link:"#示例操作",children:[]},{level:2,title:"安全性考虑",slug:"安全性考虑",link:"#安全性考虑",children:[]}],path:"/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"数据库安全配置",headers:[{level:2,title:"关闭root远程登录",slug:"关闭root远程登录",link:"#关闭root远程登录",children:[]},{level:2,title:"创建新用户限制权限",slug:"创建新用户限制权限",link:"#创建新用户限制权限",children:[]},{level:2,title:"指定 IP 地址白名单",slug:"指定-ip-地址白名单",link:"#指定-ip-地址白名单",children:[]},{level:2,title:"登录错误限制",slug:"登录错误限制",link:"#登录错误限制",children:[]}],path:"/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE.html",pathLocale:"/",extraFields:[]},{title:"数据库的隔离级别",headers:[{level:3,title:"1. 读未提交 (Read Uncommitted)",slug:"_1-读未提交-read-uncommitted",link:"#_1-读未提交-read-uncommitted",children:[]},{level:3,title:"2. 读已提交 (Read Committed)",slug:"_2-读已提交-read-committed",link:"#_2-读已提交-read-committed",children:[]},{level:3,title:"3. 可重复读 (Repeatable Read)",slug:"_3-可重复读-repeatable-read",link:"#_3-可重复读-repeatable-read",children:[]},{level:3,title:"4. 串行化 (Serializable)",slug:"_4-串行化-serializable",link:"#_4-串行化-serializable",children:[]},{level:3,title:"总结表格",slug:"总结表格",link:"#总结表格",children:[]},{level:3,title:"选择隔离级别时的权衡：",slug:"选择隔离级别时的权衡",link:"#选择隔离级别时的权衡",children:[]}],path:"/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"MySQL8.0使用Yum或docker安装",headers:[{level:2,title:"普通安装",slug:"普通安装",link:"#普通安装",children:[{level:3,title:"获取源安装包",slug:"获取源安装包",link:"#获取源安装包",children:[]},{level:3,title:"安装MySQL源",slug:"安装mysql源",link:"#安装mysql源",children:[]},{level:3,title:"指定版本安装",slug:"指定版本安装",link:"#指定版本安装",children:[]},{level:3,title:"启动及配置",slug:"启动及配置",link:"#启动及配置",children:[]},{level:3,title:"设置密码策略（可使用简单密码）",slug:"设置密码策略-可使用简单密码",link:"#设置密码策略-可使用简单密码",children:[]},{level:3,title:"设置开机自动启动",slug:"设置开机自动启动",link:"#设置开机自动启动",children:[]},{level:3,title:"允许远程登录",slug:"允许远程登录",link:"#允许远程登录",children:[]}]},{level:2,title:"Docker安装",slug:"docker安装",link:"#docker安装",children:[{level:3,title:"拉取MySQL 8.0镜像：",slug:"拉取mysql-8-0镜像",link:"#拉取mysql-8-0镜像",children:[]},{level:3,title:"创建并运行MySQL容器并映射数据目录：",slug:"创建并运行mysql容器并映射数据目录",link:"#创建并运行mysql容器并映射数据目录",children:[]},{level:3,title:"连接到MySQL容器：",slug:"连接到mysql容器",link:"#连接到mysql容器",children:[]},{level:3,title:"管理MySQL容器：",slug:"管理mysql容器",link:"#管理mysql容器",children:[]}]}],path:"/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux-yum%E5%8F%8Adocker%E5%AE%89%E8%A3%85.html",pathLocale:"/",extraFields:[]},{title:"MySQL8.0.26-Linux版离线安装",headers:[{level:2,title:"MySQL8.0.26-Linux版离线安装",slug:"mysql8-0-26-linux版离线安装-1",link:"#mysql8-0-26-linux版离线安装-1",children:[{level:3,title:"1. 准备一台Linux服务器",slug:"_1-准备一台linux服务器",link:"#_1-准备一台linux服务器",children:[]},{level:3,title:"2. 下载Linux版MySQL安装包",slug:"_2-下载linux版mysql安装包",link:"#_2-下载linux版mysql安装包",children:[]},{level:3,title:"3. 上传MySQL安装包",slug:"_3-上传mysql安装包",link:"#_3-上传mysql安装包",children:[]},{level:3,title:"4. 创建目录,并解压",slug:"_4-创建目录-并解压",link:"#_4-创建目录-并解压",children:[]},{level:3,title:"5. 安装mysql的安装包",slug:"_5-安装mysql的安装包",link:"#_5-安装mysql的安装包",children:[]},{level:3,title:"6. 启动MySQL服务",slug:"_6-启动mysql服务",link:"#_6-启动mysql服务",children:[]},{level:3,title:"7. 查询自动生成的root用户密码",slug:"_7-查询自动生成的root用户密码",link:"#_7-查询自动生成的root用户密码",children:[]},{level:3,title:"8. 修改root用户密码",slug:"_8-修改root用户密码",link:"#_8-修改root用户密码",children:[]},{level:3,title:"9. 创建用户",slug:"_9-创建用户",link:"#_9-创建用户",children:[]},{level:3,title:"10. 并给root用户分配权限",slug:"_10-并给root用户分配权限",link:"#_10-并给root用户分配权限",children:[]},{level:3,title:"11. 重新连接MySQL",slug:"_11-重新连接mysql",link:"#_11-重新连接mysql",children:[]},{level:3,title:"12. 通过DataGrip远程连接MySQL",slug:"_12-通过datagrip远程连接mysql",link:"#_12-通过datagrip远程连接mysql",children:[]}]}],path:"/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/MySQL-Linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85.html",pathLocale:"/",extraFields:[]},{title:"MySQL安装",headers:[{level:3,title:"1. 安装",slug:"_1-安装",link:"#_1-安装",children:[]},{level:3,title:"2. 配置",slug:"_2-配置",link:"#_2-配置",children:[]}],path:"/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/MySQL%E5%AE%89%E8%A3%85.html",pathLocale:"/",extraFields:[]},{title:"mysql 是什么？架构是怎么样的？",headers:[{level:2,title:"什么是 mysql",slug:"什么是-mysql",link:"#什么是-mysql",children:[]},{level:2,title:"数据页",slug:"数据页",link:"#数据页",children:[]},{level:2,title:"索引",slug:"索引",link:"#索引",children:[]},{level:2,title:"Buffer Pool",slug:"buffer-pool",link:"#buffer-pool",children:[]},{level:2,title:"自适应 hash 索引",slug:"自适应-hash-索引",link:"#自适应-hash-索引",children:[]},{level:2,title:"Change Buffer",slug:"change-buffer",link:"#change-buffer",children:[]},{level:2,title:"Undo Log",slug:"undo-log",link:"#undo-log",children:[]},{level:2,title:"Redo Log",slug:"redo-log",link:"#redo-log",children:[]},{level:2,title:"Innodb 是什么",slug:"innodb-是什么",link:"#innodb-是什么",children:[]},{level:2,title:"Server 层是什么",slug:"server-层是什么",link:"#server-层是什么",children:[]},{level:2,title:"binlog 是什么",slug:"binlog-是什么",link:"#binlog-是什么",children:[]},{level:2,title:"Mysql 主从架构",slug:"mysql-主从架构",link:"#mysql-主从架构",children:[]},{level:2,title:"数据库查询更新流程",slug:"数据库查询更新流程",link:"#数据库查询更新流程",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"文章推荐：",slug:"文章推荐",link:"#文章推荐",children:[]}],path:"/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/mysql%E6%98%AF%E4%BB%80%E4%B9%88_%E6%9E%B6%E6%9E%84%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84.html",pathLocale:"/",extraFields:[]},{title:"Navicat连接mysql报错",headers:[{level:2,title:"1. 检查网络",slug:"_1-检查网络",link:"#_1-检查网络",children:[]},{level:2,title:"2. 检查用户组权限",slug:"_2-检查用户组权限",link:"#_2-检查用户组权限",children:[]},{level:2,title:"3. 检查CentOS防火墙",slug:"_3-检查centos防火墙",link:"#_3-检查centos防火墙",children:[]}],path:"/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/Navicat%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99.html",pathLocale:"/",extraFields:[]},{title:"caching_sha2_password无法加载",headers:[],path:"/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/caching_sha2_password%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD.html",pathLocale:"/",extraFields:[]},{title:"mysql -uroot -p报错",headers:[],path:"/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/mysql-uroot-p%E6%8A%A5%E9%94%99.html",pathLocale:"/",extraFields:[]},{title:"DCL语句演示",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/DCL%E8%AF%AD%E5%8F%A5%E6%BC%94%E7%A4%BA.html",pathLocale:"/",extraFields:[]},{title:"MySQL数据类型",headers:[{level:2,title:"数值类型",slug:"数值类型",link:"#数值类型",children:[]},{level:2,title:"字符串类型",slug:"字符串类型",link:"#字符串类型",children:[]},{level:2,title:"日期类型",slug:"日期类型",link:"#日期类型",children:[]}],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",pathLocale:"/",extraFields:[]},{title:"事务操作演示",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%E6%BC%94%E7%A4%BA.html",pathLocale:"/",extraFields:[]},{title:"函数",headers:[{level:3,title:"1. 字符串函数",slug:"_1-字符串函数",link:"#_1-字符串函数",children:[]},{level:3,title:"2. 数学函数",slug:"_2-数学函数",link:"#_2-数学函数",children:[]},{level:3,title:"3. 日期和时间函数",slug:"_3-日期和时间函数",link:"#_3-日期和时间函数",children:[]},{level:3,title:"4. 聚合函数",slug:"_4-聚合函数",link:"#_4-聚合函数",children:[]},{level:3,title:"5. 条件函数",slug:"_5-条件函数",link:"#_5-条件函数",children:[]},{level:3,title:"6. 类型转换函数",slug:"_6-类型转换函数",link:"#_6-类型转换函数",children:[]},{level:3,title:"7. 信息函数",slug:"_7-信息函数",link:"#_7-信息函数",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0.html",pathLocale:"/",extraFields:[]},{title:"函数演示",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0%E6%BC%94%E7%A4%BA.html",pathLocale:"/",extraFields:[]},{title:"多表查询案例演示",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA.html",pathLocale:"/",extraFields:[]},{title:"多表查询演示",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%BC%94%E7%A4%BA.html",pathLocale:"/",extraFields:[]},{title:"数据控制语言（DCL）",headers:[{level:3,title:"1. CREATE USER",slug:"_1-create-user",link:"#_1-create-user",children:[]},{level:3,title:"2. DROP USER",slug:"_2-drop-user",link:"#_2-drop-user",children:[]},{level:3,title:"3. GRANT",slug:"_3-grant",link:"#_3-grant",children:[]},{level:3,title:"4. REVOKE",slug:"_4-revoke",link:"#_4-revoke",children:[]},{level:3,title:"5. SHOW GRANTS",slug:"_5-show-grants",link:"#_5-show-grants",children:[]},{level:3,title:"6. SET PASSWORD",slug:"_6-set-password",link:"#_6-set-password",children:[]},{level:3,title:"7. ALTER USER",slug:"_7-alter-user",link:"#_7-alter-user",children:[]},{level:3,title:"8.FLUSH PRIVILEGES",slug:"_8-flush-privileges",link:"#_8-flush-privileges",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80DCL.html",pathLocale:"/",extraFields:[]},{title:"1.基础篇",headers:[{level:2,title:"1.1 通用语法及分类",slug:"_1-1-通用语法及分类",link:"#_1-1-通用语法及分类",children:[{level:3,title:"DDL（数据定义语言）",slug:"ddl-数据定义语言",link:"#ddl-数据定义语言",children:[]},{level:3,title:"DML（数据操作语言）",slug:"dml-数据操作语言",link:"#dml-数据操作语言",children:[]},{level:3,title:"DQL（数据查询语言）",slug:"dql-数据查询语言",link:"#dql-数据查询语言",children:[]},{level:3,title:"DCL",slug:"dcl",link:"#dcl",children:[]}]},{level:2,title:"1.2 函数",slug:"_1-2-函数",link:"#_1-2-函数",children:[{level:3,title:"字符串函数",slug:"字符串函数",link:"#字符串函数",children:[]},{level:3,title:"数值函数",slug:"数值函数",link:"#数值函数",children:[]},{level:3,title:"日期函数",slug:"日期函数",link:"#日期函数",children:[]},{level:3,title:"流程函数",slug:"流程函数",link:"#流程函数",children:[]}]},{level:2,title:"1.3 约束",slug:"_1-3-约束",link:"#_1-3-约束",children:[{level:3,title:"常用约束",slug:"常用约束",link:"#常用约束",children:[]},{level:3,title:"外键约束",slug:"外键约束",link:"#外键约束",children:[]}]},{level:2,title:"1.4 多表查询",slug:"_1-4-多表查询",link:"#_1-4-多表查询",children:[{level:3,title:"多表关系",slug:"多表关系",link:"#多表关系",children:[]},{level:3,title:"查询",slug:"查询",link:"#查询",children:[]},{level:3,title:"内连接查询",slug:"内连接查询",link:"#内连接查询",children:[]},{level:3,title:"外连接查询",slug:"外连接查询",link:"#外连接查询",children:[]},{level:3,title:"自连接查询",slug:"自连接查询",link:"#自连接查询",children:[]},{level:3,title:"联合查询 union, union all",slug:"联合查询-union-union-all",link:"#联合查询-union-union-all",children:[]},{level:3,title:"子查询",slug:"子查询",link:"#子查询",children:[]}]},{level:2,title:"1.5 事务",slug:"_1-5-事务",link:"#_1-5-事务",children:[{level:3,title:"四大特性ACID",slug:"四大特性acid",link:"#四大特性acid",children:[]},{level:3,title:"并发事务",slug:"并发事务",link:"#并发事务",children:[]}]}],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"约束及多表关系演示",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/%E7%BA%A6%E6%9D%9F%E5%8F%8A%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E6%BC%94%E7%A4%BA.html",pathLocale:"/",extraFields:[]},{title:"闪回-flashback",headers:[{level:3,title:"1. 简介",slug:"_1-简介",link:"#_1-简介",children:[]},{level:3,title:"2. 闪回原理",slug:"_2-闪回原理",link:"#_2-闪回原理",children:[]}],path:"/Database/MySQL/%E5%B7%A5%E5%85%B7/%E9%97%AA%E5%9B%9E-flashback.html",pathLocale:"/",extraFields:[]},{title:"MyCat系统配置信息含义",headers:[],path:"/Database/MySQL/%E8%BF%90%E7%BB%B4/MyCat%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E5%90%AB%E4%B9%89.html",pathLocale:"/",extraFields:[]},{title:"运维篇",headers:[{level:2,title:"日志",slug:"日志",link:"#日志",children:[{level:3,title:"错误日志",slug:"错误日志",link:"#错误日志",children:[]},{level:3,title:"二进制日志",slug:"二进制日志",link:"#二进制日志",children:[]},{level:3,title:"查询日志",slug:"查询日志",link:"#查询日志",children:[]},{level:3,title:"慢查询日志",slug:"慢查询日志",link:"#慢查询日志",children:[]}]},{level:2,title:"主从复制",slug:"主从复制",link:"#主从复制",children:[{level:3,title:"原理",slug:"原理",link:"#原理",children:[]},{level:3,title:"搭建实现",slug:"搭建实现",link:"#搭建实现",children:[]}]},{level:2,title:"分库分表",slug:"分库分表",link:"#分库分表",children:[{level:3,title:"介绍",slug:"介绍-1",link:"#介绍-1",children:[]},{level:3,title:"Mycat概述",slug:"mycat概述",link:"#mycat概述",children:[]},{level:3,title:"Mycat入门",slug:"mycat入门",link:"#mycat入门",children:[]},{level:3,title:"Mycat配置",slug:"mycat配置",link:"#mycat配置",children:[]},{level:3,title:"Mycat分片",slug:"mycat分片",link:"#mycat分片",children:[]},{level:3,title:"Mycat管理及监控",slug:"mycat管理及监控",link:"#mycat管理及监控",children:[]}]},{level:2,title:"读写分离",slug:"读写分离",link:"#读写分离",children:[{level:3,title:"介绍",slug:"介绍-2",link:"#介绍-2",children:[]},{level:3,title:"一主一从读写分离",slug:"一主一从读写分离",link:"#一主一从读写分离",children:[]},{level:3,title:"双主双从",slug:"双主双从",link:"#双主双从",children:[]},{level:3,title:"双主双从读写分离",slug:"双主双从读写分离",link:"#双主双从读写分离",children:[]}]}],path:"/Database/MySQL/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"1.为什么InnoDB存储引擎选择使用B+tree索引结构？",headers:[{level:3,title:"",slug:"",link:"#",children:[]}],path:"/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html",pathLocale:"/",extraFields:[]},{title:"1.什么情况下会出现读取记录的事务id比创建readview的事务id大",headers:[{level:3,title:"1. 提交的事务的 ID 大于当前事务 ID",slug:"_1-提交的事务的-id-大于当前事务-id",link:"#_1-提交的事务的-id-大于当前事务-id",children:[]},{level:3,title:"2. 跨事务读取（Dirty Read）",slug:"_2-跨事务读取-dirty-read",link:"#_2-跨事务读取-dirty-read",children:[]},{level:3,title:"3. 事务 ID 回绕（Wraparound）",slug:"_3-事务-id-回绕-wraparound",link:"#_3-事务-id-回绕-wraparound",children:[]},{level:3,title:"4. 快照读视图的行为",slug:"_4-快照读视图的行为",link:"#_4-快照读视图的行为",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%87%BA%E7%8E%B0%E8%AF%BB%E5%8F%96%E8%AE%B0%E5%BD%95%E7%9A%84%E4%BA%8B%E5%8A%A1id%E6%AF%94%E5%88%9B%E5%BB%BAreadview%E7%9A%84%E4%BA%8B%E5%8A%A1id%E5%A4%A7.html",pathLocale:"/",extraFields:[]},{title:"2.进阶篇",headers:[{level:2,title:"2.1 存储引擎",slug:"_2-1-存储引擎",link:"#_2-1-存储引擎",children:[{level:3,title:"2.1.1 InnoDB",slug:"_2-1-1-innodb",link:"#_2-1-1-innodb",children:[]},{level:3,title:"2.1.2 MyISAM",slug:"_2-1-2-myisam",link:"#_2-1-2-myisam",children:[]},{level:3,title:"2.1.3 Memory",slug:"_2-1-3-memory",link:"#_2-1-3-memory",children:[]},{level:3,title:"2.1.4 存储引擎特点",slug:"_2-1-4-存储引擎特点",link:"#_2-1-4-存储引擎特点",children:[]},{level:3,title:"2.1.5 存储引擎的选择",slug:"_2-1-5-存储引擎的选择",link:"#_2-1-5-存储引擎的选择",children:[]}]},{level:2,title:"2.2 索引",slug:"_2-2-索引",link:"#_2-2-索引",children:[{level:3,title:"2.2.1 索引结构",slug:"_2-2-1-索引结构",link:"#_2-2-1-索引结构",children:[]},{level:3,title:"2.2.2 索引分类",slug:"_2-2-2-索引分类",link:"#_2-2-2-索引分类",children:[]},{level:3,title:"2.2.3 语法",slug:"_2-2-3-语法",link:"#_2-2-3-语法",children:[]},{level:3,title:"2.2.4 SQL性能分析",slug:"_2-2-4-sql性能分析",link:"#_2-2-4-sql性能分析",children:[]},{level:3,title:"2.2.5 使用规则",slug:"_2-2-5-使用规则",link:"#_2-2-5-使用规则",children:[]},{level:3,title:"2.2.6 设计原则",slug:"_2-2-6-设计原则",link:"#_2-2-6-设计原则",children:[]}]},{level:2,title:"2.3 SQL 优化",slug:"_2-3-sql-优化",link:"#_2-3-sql-优化",children:[{level:3,title:"2.3.1 插入数据",slug:"_2-3-1-插入数据",link:"#_2-3-1-插入数据",children:[]},{level:3,title:"2.3.2 主键优化",slug:"_2-3-2-主键优化",link:"#_2-3-2-主键优化",children:[]},{level:3,title:"2.3.3 order by优化",slug:"_2-3-3-order-by优化",link:"#_2-3-3-order-by优化",children:[]},{level:3,title:"2.3.4 group by优化",slug:"_2-3-4-group-by优化",link:"#_2-3-4-group-by优化",children:[]},{level:3,title:"2.3.5 limit优化",slug:"_2-3-5-limit优化",link:"#_2-3-5-limit优化",children:[]},{level:3,title:"2.3.6 count优化",slug:"_2-3-6-count优化",link:"#_2-3-6-count优化",children:[]},{level:3,title:"2.3.7 update优化（避免行锁升级为表锁）",slug:"_2-3-7-update优化-避免行锁升级为表锁",link:"#_2-3-7-update优化-避免行锁升级为表锁",children:[]}]},{level:2,title:"2.4 视图/存储过程/触发器",slug:"_2-4-视图-存储过程-触发器",link:"#_2-4-视图-存储过程-触发器",children:[{level:3,title:"2.4.1 视图",slug:"_2-4-1-视图",link:"#_2-4-1-视图",children:[]},{level:3,title:"2.4.2 存储过程",slug:"_2-4-2-存储过程",link:"#_2-4-2-存储过程",children:[]},{level:3,title:"2.4.3 存储函数：",slug:"_2-4-3-存储函数",link:"#_2-4-3-存储函数",children:[]},{level:3,title:"2.4.4 触发器",slug:"_2-4-4-触发器",link:"#_2-4-4-触发器",children:[]}]},{level:2,title:"2.5 锁",slug:"_2-5-锁",link:"#_2-5-锁",children:[{level:3,title:"2.5.1 全局锁",slug:"_2-5-1-全局锁",link:"#_2-5-1-全局锁",children:[]},{level:3,title:"2.5.2 表级锁",slug:"_2-5-2-表级锁",link:"#_2-5-2-表级锁",children:[]},{level:3,title:"2.5.3 行级锁",slug:"_2-5-3-行级锁",link:"#_2-5-3-行级锁",children:[]}]},{level:2,title:"2.6 InnoDB引擎",slug:"_2-6-innodb引擎",link:"#_2-6-innodb引擎",children:[{level:3,title:"2.6.1 逻辑存储结构",slug:"_2-6-1-逻辑存储结构",link:"#_2-6-1-逻辑存储结构",children:[]},{level:3,title:"2.6.2 架构",slug:"_2-6-2-架构",link:"#_2-6-2-架构",children:[]},{level:3,title:"2.6.3 事务原理",slug:"_2-6-3-事务原理",link:"#_2-6-3-事务原理",children:[]},{level:3,title:"2.6.4 MVCC",slug:"_2-6-4-mvcc",link:"#_2-6-4-mvcc",children:[]}]},{level:2,title:"2.7 MySQL管理",slug:"_2-7-mysql管理",link:"#_2-7-mysql管理",children:[{level:3,title:"2.7.1 系统数据库介绍",slug:"_2-7-1-系统数据库介绍",link:"#_2-7-1-系统数据库介绍",children:[]},{level:3,title:"2.7.2 常用工具",slug:"_2-7-2-常用工具",link:"#_2-7-2-常用工具",children:[]}]}],path:"/Database/MySQL/%E8%BF%9B%E9%98%B6/%E7%AC%94%E8%AE%B0-%E8%BF%9B%E9%98%B6%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"基础篇Redis",headers:[{level:2,title:"开篇导读",slug:"开篇导读",link:"#开篇导读",children:[]},{level:2,title:"1.Redis简单介绍",slug:"_1-redis简单介绍",link:"#_1-redis简单介绍",children:[]},{level:2,title:"2.课程目录",slug:"_2-课程目录",link:"#_2-课程目录",children:[]},{level:2,title:"3.初始Redis",slug:"_3-初始redis",link:"#_3-初始redis",children:[{level:3,title:"3.1.认识NoSQL",slug:"_3-1-认识nosql",link:"#_3-1-认识nosql",children:[]},{level:3,title:"3.2.认识Redis",slug:"_3-2-认识redis",link:"#_3-2-认识redis",children:[]},{level:3,title:"3.3.安装Redis",slug:"_3-3-安装redis",link:"#_3-3-安装redis",children:[]},{level:3,title:"3.4.Redis桌面客户端",slug:"_3-4-redis桌面客户端",link:"#_3-4-redis桌面客户端",children:[]}]},{level:2,title:"4.Redis常见命令",slug:"_4-redis常见命令",link:"#_4-redis常见命令",children:[{level:3,title:"4.1 Redis数据结构介绍",slug:"_4-1-redis数据结构介绍",link:"#_4-1-redis数据结构介绍",children:[]},{level:3,title:"4.2 Redis 通用命令",slug:"_4-2-redis-通用命令",link:"#_4-2-redis-通用命令",children:[]},{level:3,title:"4.3 Redis命令-String命令",slug:"_4-3-redis命令-string命令",link:"#_4-3-redis命令-string命令",children:[]},{level:3,title:"4.4 Redis命令-Key的层级结构",slug:"_4-4-redis命令-key的层级结构",link:"#_4-4-redis命令-key的层级结构",children:[]},{level:3,title:"4.5 Redis命令-Hash命令",slug:"_4-5-redis命令-hash命令",link:"#_4-5-redis命令-hash命令",children:[]},{level:3,title:"4.6 Redis命令-List命令",slug:"_4-6-redis命令-list命令",link:"#_4-6-redis命令-list命令",children:[]},{level:3,title:"4.7 Redis命令-Set命令",slug:"_4-7-redis命令-set命令",link:"#_4-7-redis命令-set命令",children:[]},{level:3,title:"4.8 Redis命令-SortedSet类型",slug:"_4-8-redis命令-sortedset类型",link:"#_4-8-redis命令-sortedset类型",children:[]}]},{level:2,title:"5.Redis的Java客户端-Jedis",slug:"_5-redis的java客户端-jedis",link:"#_5-redis的java客户端-jedis",children:[{level:3,title:"5.1 Jedis快速入门",slug:"_5-1-jedis快速入门",link:"#_5-1-jedis快速入门",children:[]},{level:3,title:"5.2 Jedis连接池",slug:"_5-2-jedis连接池",link:"#_5-2-jedis连接池",children:[]}]},{level:2,title:"6.Redis的Java客户端-SpringDataRedis",slug:"_6-redis的java客户端-springdataredis",link:"#_6-redis的java客户端-springdataredis",children:[{level:3,title:"6.1.快速入门",slug:"_6-1-快速入门",link:"#_6-1-快速入门",children:[]},{level:3,title:"6.2 .数据序列化器",slug:"_6-2-数据序列化器",link:"#_6-2-数据序列化器",children:[]},{level:3,title:"6.3 StringRedisTemplate",slug:"_6-3-stringredistemplate",link:"#_6-3-stringredistemplate",children:[]},{level:3,title:"6.4 Hash结构操作",slug:"_6-4-hash结构操作",link:"#_6-4-hash结构操作",children:[]}]}],path:"/Database/Redis/1.%E5%85%A5%E9%97%A8/Redis%E5%9F%BA%E7%A1%80%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"实战篇Redis",headers:[{level:2,title:"开篇导读",slug:"开篇导读",link:"#开篇导读",children:[]},{level:2,title:"1、短信登录",slug:"_1、短信登录",link:"#_1、短信登录",children:[{level:3,title:"1.1、导入黑马点评项目",slug:"_1-1、导入黑马点评项目",link:"#_1-1、导入黑马点评项目",children:[]},{level:3,title:"1.2 、基于Session实现登录流程",slug:"_1-2-、基于session实现登录流程",link:"#_1-2-、基于session实现登录流程",children:[]},{level:3,title:"1.3 、实现发送短信验证码功能",slug:"_1-3-、实现发送短信验证码功能",link:"#_1-3-、实现发送短信验证码功能",children:[]},{level:3,title:"1.4、实现登录拦截功能",slug:"_1-4、实现登录拦截功能",link:"#_1-4、实现登录拦截功能",children:[]},{level:3,title:"1.5、隐藏用户敏感信息",slug:"_1-5、隐藏用户敏感信息",link:"#_1-5、隐藏用户敏感信息",children:[]},{level:3,title:"1.6、session共享问题",slug:"_1-6、session共享问题",link:"#_1-6、session共享问题",children:[]},{level:3,title:"1.7 Redis代替session的业务流程",slug:"_1-7-redis代替session的业务流程",link:"#_1-7-redis代替session的业务流程",children:[]},{level:3,title:"1.8 基于Redis实现短信登录",slug:"_1-8-基于redis实现短信登录",link:"#_1-8-基于redis实现短信登录",children:[]},{level:3,title:"1.9 解决状态登录刷新问题",slug:"_1-9-解决状态登录刷新问题",link:"#_1-9-解决状态登录刷新问题",children:[]}]},{level:2,title:"2、商户查询缓存",slug:"_2、商户查询缓存",link:"#_2、商户查询缓存",children:[{level:3,title:"2.1 什么是缓存?",slug:"_2-1-什么是缓存",link:"#_2-1-什么是缓存",children:[]},{level:3,title:"2.2 添加商户缓存",slug:"_2-2-添加商户缓存",link:"#_2-2-添加商户缓存",children:[]},{level:3,title:"2.3 缓存更新策略",slug:"_2-3-缓存更新策略",link:"#_2-3-缓存更新策略",children:[]},{level:3,title:"2.4 实现商铺和缓存与数据库双写一致",slug:"_2-4-实现商铺和缓存与数据库双写一致",link:"#_2-4-实现商铺和缓存与数据库双写一致",children:[]},{level:3,title:"2.5 缓存穿透问题的解决思路",slug:"_2-5-缓存穿透问题的解决思路",link:"#_2-5-缓存穿透问题的解决思路",children:[]},{level:3,title:"2.6 编码解决商品查询的缓存穿透问题：",slug:"_2-6-编码解决商品查询的缓存穿透问题",link:"#_2-6-编码解决商品查询的缓存穿透问题",children:[]},{level:3,title:"2.7 缓存雪崩问题及解决思路",slug:"_2-7-缓存雪崩问题及解决思路",link:"#_2-7-缓存雪崩问题及解决思路",children:[]},{level:3,title:"2.8 缓存击穿问题及解决思路",slug:"_2-8-缓存击穿问题及解决思路",link:"#_2-8-缓存击穿问题及解决思路",children:[]},{level:3,title:"2.9 利用互斥锁解决缓存击穿问题",slug:"_2-9-利用互斥锁解决缓存击穿问题",link:"#_2-9-利用互斥锁解决缓存击穿问题",children:[]},{level:3,title:"3.0 、利用逻辑过期解决缓存击穿问题",slug:"_3-0-、利用逻辑过期解决缓存击穿问题",link:"#_3-0-、利用逻辑过期解决缓存击穿问题",children:[]},{level:3,title:"3.1、封装Redis工具类",slug:"_3-1、封装redis工具类",link:"#_3-1、封装redis工具类",children:[]}]},{level:2,title:"3、优惠卷秒杀",slug:"_3、优惠卷秒杀",link:"#_3、优惠卷秒杀",children:[{level:3,title:"3.1 -全局唯一ID",slug:"_3-1-全局唯一id",link:"#_3-1-全局唯一id",children:[]},{level:3,title:"3.2 -Redis实现全局唯一Id",slug:"_3-2-redis实现全局唯一id",link:"#_3-2-redis实现全局唯一id",children:[]},{level:3,title:"3.3 添加优惠卷",slug:"_3-3-添加优惠卷",link:"#_3-3-添加优惠卷",children:[]},{level:3,title:"3.4 实现秒杀下单",slug:"_3-4-实现秒杀下单",link:"#_3-4-实现秒杀下单",children:[]},{level:3,title:"3.5 库存超卖问题分析",slug:"_3-5-库存超卖问题分析",link:"#_3-5-库存超卖问题分析",children:[]},{level:3,title:"3.6 乐观锁解决超卖问题",slug:"_3-6-乐观锁解决超卖问题",link:"#_3-6-乐观锁解决超卖问题",children:[]},{level:3,title:"3.6 优惠券秒杀-一人一单",slug:"_3-6-优惠券秒杀-一人一单",link:"#_3-6-优惠券秒杀-一人一单",children:[]},{level:3,title:"3.7 集群环境下的并发问题",slug:"_3-7-集群环境下的并发问题",link:"#_3-7-集群环境下的并发问题",children:[]}]},{level:2,title:"4、分布式锁",slug:"_4、分布式锁",link:"#_4、分布式锁",children:[{level:3,title:"4.1 、基本原理和实现方式对比",slug:"_4-1-、基本原理和实现方式对比",link:"#_4-1-、基本原理和实现方式对比",children:[]},{level:3,title:"4.2 、Redis分布式锁的实现核心思路",slug:"_4-2-、redis分布式锁的实现核心思路",link:"#_4-2-、redis分布式锁的实现核心思路",children:[]},{level:3,title:"4.3 实现分布式锁版本一",slug:"_4-3-实现分布式锁版本一",link:"#_4-3-实现分布式锁版本一",children:[]},{level:3,title:"4.4 Redis分布式锁误删情况说明",slug:"_4-4-redis分布式锁误删情况说明",link:"#_4-4-redis分布式锁误删情况说明",children:[]},{level:3,title:"4.5 解决Redis分布式锁误删问题",slug:"_4-5-解决redis分布式锁误删问题",link:"#_4-5-解决redis分布式锁误删问题",children:[]},{level:3,title:"4.6 分布式锁的原子性问题",slug:"_4-6-分布式锁的原子性问题",link:"#_4-6-分布式锁的原子性问题",children:[]},{level:3,title:"4.7 Lua脚本解决多条命令原子性问题",slug:"_4-7-lua脚本解决多条命令原子性问题",link:"#_4-7-lua脚本解决多条命令原子性问题",children:[]},{level:3,title:"4.8 利用Java代码调用Lua脚本改造分布式锁",slug:"_4-8-利用java代码调用lua脚本改造分布式锁",link:"#_4-8-利用java代码调用lua脚本改造分布式锁",children:[]}]},{level:2,title:"5、分布式锁-redission",slug:"_5、分布式锁-redission",link:"#_5、分布式锁-redission",children:[{level:3,title:"5.1 分布式锁-redission功能介绍",slug:"_5-1-分布式锁-redission功能介绍",link:"#_5-1-分布式锁-redission功能介绍",children:[]},{level:3,title:"5.2 分布式锁-Redission快速入门",slug:"_5-2-分布式锁-redission快速入门",link:"#_5-2-分布式锁-redission快速入门",children:[]},{level:3,title:"5.3 分布式锁-redission可重入锁原理",slug:"_5-3-分布式锁-redission可重入锁原理",link:"#_5-3-分布式锁-redission可重入锁原理",children:[]},{level:3,title:"5.4 分布式锁-redission锁重试和WatchDog机制",slug:"_5-4-分布式锁-redission锁重试和watchdog机制",link:"#_5-4-分布式锁-redission锁重试和watchdog机制",children:[]},{level:3,title:"5.5 分布式锁-redission锁的MutiLock原理",slug:"_5-5-分布式锁-redission锁的mutilock原理",link:"#_5-5-分布式锁-redission锁的mutilock原理",children:[]}]},{level:2,title:"6、秒杀优化",slug:"_6、秒杀优化",link:"#_6、秒杀优化",children:[{level:3,title:"6.1 秒杀优化-异步秒杀思路",slug:"_6-1-秒杀优化-异步秒杀思路",link:"#_6-1-秒杀优化-异步秒杀思路",children:[]},{level:3,title:"6.2 秒杀优化-Redis完成秒杀资格判断",slug:"_6-2-秒杀优化-redis完成秒杀资格判断",link:"#_6-2-秒杀优化-redis完成秒杀资格判断",children:[]},{level:3,title:"6.3 秒杀优化-基于阻塞队列实现秒杀优化",slug:"_6-3-秒杀优化-基于阻塞队列实现秒杀优化",link:"#_6-3-秒杀优化-基于阻塞队列实现秒杀优化",children:[]}]},{level:2,title:"7、Redis消息队列",slug:"_7、redis消息队列",link:"#_7、redis消息队列",children:[{level:3,title:"7.1 Redis消息队列-认识消息队列",slug:"_7-1-redis消息队列-认识消息队列",link:"#_7-1-redis消息队列-认识消息队列",children:[]},{level:3,title:"7.2 Redis消息队列-基于List实现消息队列",slug:"_7-2-redis消息队列-基于list实现消息队列",link:"#_7-2-redis消息队列-基于list实现消息队列",children:[]},{level:3,title:"7.3 Redis消息队列-基于PubSub的消息队列",slug:"_7-3-redis消息队列-基于pubsub的消息队列",link:"#_7-3-redis消息队列-基于pubsub的消息队列",children:[]},{level:3,title:"7.4 Redis消息队列-基于Stream的消息队列",slug:"_7-4-redis消息队列-基于stream的消息队列",link:"#_7-4-redis消息队列-基于stream的消息队列",children:[]},{level:3,title:"7.5 Redis消息队列-基于Stream的消息队列-消费者组",slug:"_7-5-redis消息队列-基于stream的消息队列-消费者组",link:"#_7-5-redis消息队列-基于stream的消息队列-消费者组",children:[]},{level:3,title:"7.6 基于Redis的Stream结构作为消息队列，实现异步秒杀下单",slug:"_7-6-基于redis的stream结构作为消息队列-实现异步秒杀下单",link:"#_7-6-基于redis的stream结构作为消息队列-实现异步秒杀下单",children:[]}]},{level:2,title:"8、达人探店",slug:"_8、达人探店",link:"#_8、达人探店",children:[{level:3,title:"8.1、达人探店-发布探店笔记",slug:"_8-1、达人探店-发布探店笔记",link:"#_8-1、达人探店-发布探店笔记",children:[]},{level:3,title:"8.2 达人探店-查看探店笔记",slug:"_8-2-达人探店-查看探店笔记",link:"#_8-2-达人探店-查看探店笔记",children:[]},{level:3,title:"8.3 达人探店-点赞功能",slug:"_8-3-达人探店-点赞功能",link:"#_8-3-达人探店-点赞功能",children:[]},{level:3,title:"8.4 达人探店-点赞排行榜",slug:"_8-4-达人探店-点赞排行榜",link:"#_8-4-达人探店-点赞排行榜",children:[]}]},{level:2,title:"9、好友关注",slug:"_9、好友关注",link:"#_9、好友关注",children:[{level:3,title:"9.1 好友关注-关注和取消关注",slug:"_9-1-好友关注-关注和取消关注",link:"#_9-1-好友关注-关注和取消关注",children:[]},{level:3,title:"9.2 好友关注-共同关注",slug:"_9-2-好友关注-共同关注",link:"#_9-2-好友关注-共同关注",children:[]},{level:3,title:"9.3 好友关注-Feed流实现方案",slug:"_9-3-好友关注-feed流实现方案",link:"#_9-3-好友关注-feed流实现方案",children:[]},{level:3,title:"9.4 好友关注-推送到粉丝收件箱",slug:"_9-4-好友关注-推送到粉丝收件箱",link:"#_9-4-好友关注-推送到粉丝收件箱",children:[]},{level:3,title:"9.5好友关注-实现分页查询收邮箱",slug:"_9-5好友关注-实现分页查询收邮箱",link:"#_9-5好友关注-实现分页查询收邮箱",children:[]}]},{level:2,title:"10、附近商户",slug:"_10、附近商户",link:"#_10、附近商户",children:[{level:3,title:"10.1、附近商户-GEO数据结构的基本用法",slug:"_10-1、附近商户-geo数据结构的基本用法",link:"#_10-1、附近商户-geo数据结构的基本用法",children:[]},{level:3,title:"10.2、 附近商户-导入店铺数据到GEO",slug:"_10-2、-附近商户-导入店铺数据到geo",link:"#_10-2、-附近商户-导入店铺数据到geo",children:[]},{level:3,title:"10.3 附近商户-实现附近商户功能",slug:"_10-3-附近商户-实现附近商户功能",link:"#_10-3-附近商户-实现附近商户功能",children:[]}]},{level:2,title:"11、用户签到",slug:"_11、用户签到",link:"#_11、用户签到",children:[]},{level:2,title:"12、UV统计",slug:"_12、uv统计",link:"#_12、uv统计",children:[{level:3,title:"12.1 、UV统计-HyperLogLog",slug:"_12-1-、uv统计-hyperloglog",link:"#_12-1-、uv统计-hyperloglog",children:[]},{level:3,title:"12.2 UV统计-测试百万数据的统计",slug:"_12-2-uv统计-测试百万数据的统计",link:"#_12-2-uv统计-测试百万数据的统计",children:[]}]}],path:"/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87-%E5%9C%A8%E7%BA%BF.html",pathLocale:"/",extraFields:[]},{title:"实战篇Redis",headers:[{level:2,title:"开篇导读",slug:"开篇导读",link:"#开篇导读",children:[]},{level:2,title:"1、短信登录",slug:"_1、短信登录",link:"#_1、短信登录",children:[{level:3,title:"1.1、导入黑马点评项目",slug:"_1-1、导入黑马点评项目",link:"#_1-1、导入黑马点评项目",children:[]},{level:3,title:"1.2 、基于Session实现登录流程",slug:"_1-2-、基于session实现登录流程",link:"#_1-2-、基于session实现登录流程",children:[]},{level:3,title:"1.3 、实现发送短信验证码功能",slug:"_1-3-、实现发送短信验证码功能",link:"#_1-3-、实现发送短信验证码功能",children:[]},{level:3,title:"1.4、实现登录拦截功能",slug:"_1-4、实现登录拦截功能",link:"#_1-4、实现登录拦截功能",children:[]},{level:3,title:"1.5、隐藏用户敏感信息",slug:"_1-5、隐藏用户敏感信息",link:"#_1-5、隐藏用户敏感信息",children:[]},{level:3,title:"1.6、session共享问题",slug:"_1-6、session共享问题",link:"#_1-6、session共享问题",children:[]},{level:3,title:"1.7 Redis代替session的业务流程",slug:"_1-7-redis代替session的业务流程",link:"#_1-7-redis代替session的业务流程",children:[]},{level:3,title:"1.8 基于Redis实现短信登录",slug:"_1-8-基于redis实现短信登录",link:"#_1-8-基于redis实现短信登录",children:[]},{level:3,title:"1.9 解决状态登录刷新问题",slug:"_1-9-解决状态登录刷新问题",link:"#_1-9-解决状态登录刷新问题",children:[]}]},{level:2,title:"2、商户查询缓存",slug:"_2、商户查询缓存",link:"#_2、商户查询缓存",children:[{level:3,title:"2.1 什么是缓存?",slug:"_2-1-什么是缓存",link:"#_2-1-什么是缓存",children:[]},{level:3,title:"2.2 添加商户缓存",slug:"_2-2-添加商户缓存",link:"#_2-2-添加商户缓存",children:[]},{level:3,title:"2.3 缓存更新策略",slug:"_2-3-缓存更新策略",link:"#_2-3-缓存更新策略",children:[]},{level:3,title:"2.4 实现商铺和缓存与数据库双写一致",slug:"_2-4-实现商铺和缓存与数据库双写一致",link:"#_2-4-实现商铺和缓存与数据库双写一致",children:[]},{level:3,title:"2.5 缓存穿透问题的解决思路",slug:"_2-5-缓存穿透问题的解决思路",link:"#_2-5-缓存穿透问题的解决思路",children:[]},{level:3,title:"2.6 编码解决商品查询的缓存穿透问题：",slug:"_2-6-编码解决商品查询的缓存穿透问题",link:"#_2-6-编码解决商品查询的缓存穿透问题",children:[]},{level:3,title:"2.7 缓存雪崩问题及解决思路",slug:"_2-7-缓存雪崩问题及解决思路",link:"#_2-7-缓存雪崩问题及解决思路",children:[]},{level:3,title:"2.8 缓存击穿问题及解决思路",slug:"_2-8-缓存击穿问题及解决思路",link:"#_2-8-缓存击穿问题及解决思路",children:[]},{level:3,title:"2.9 利用互斥锁解决缓存击穿问题",slug:"_2-9-利用互斥锁解决缓存击穿问题",link:"#_2-9-利用互斥锁解决缓存击穿问题",children:[]},{level:3,title:"3.0 、利用逻辑过期解决缓存击穿问题",slug:"_3-0-、利用逻辑过期解决缓存击穿问题",link:"#_3-0-、利用逻辑过期解决缓存击穿问题",children:[]},{level:3,title:"3.1、封装Redis工具类",slug:"_3-1、封装redis工具类",link:"#_3-1、封装redis工具类",children:[]}]},{level:2,title:"3、优惠卷秒杀",slug:"_3、优惠卷秒杀",link:"#_3、优惠卷秒杀",children:[{level:3,title:"3.1 -全局唯一ID",slug:"_3-1-全局唯一id",link:"#_3-1-全局唯一id",children:[]},{level:3,title:"3.2 -Redis实现全局唯一Id",slug:"_3-2-redis实现全局唯一id",link:"#_3-2-redis实现全局唯一id",children:[]},{level:3,title:"3.3 添加优惠卷",slug:"_3-3-添加优惠卷",link:"#_3-3-添加优惠卷",children:[]},{level:3,title:"3.4 实现秒杀下单",slug:"_3-4-实现秒杀下单",link:"#_3-4-实现秒杀下单",children:[]},{level:3,title:"3.5 库存超卖问题分析",slug:"_3-5-库存超卖问题分析",link:"#_3-5-库存超卖问题分析",children:[]},{level:3,title:"3.6 乐观锁解决超卖问题",slug:"_3-6-乐观锁解决超卖问题",link:"#_3-6-乐观锁解决超卖问题",children:[]},{level:3,title:"3.6 优惠券秒杀-一人一单",slug:"_3-6-优惠券秒杀-一人一单",link:"#_3-6-优惠券秒杀-一人一单",children:[]},{level:3,title:"3.7 集群环境下的并发问题",slug:"_3-7-集群环境下的并发问题",link:"#_3-7-集群环境下的并发问题",children:[]}]},{level:2,title:"4、分布式锁",slug:"_4、分布式锁",link:"#_4、分布式锁",children:[{level:3,title:"4.1 、基本原理和实现方式对比",slug:"_4-1-、基本原理和实现方式对比",link:"#_4-1-、基本原理和实现方式对比",children:[]},{level:3,title:"4.2 、Redis分布式锁的实现核心思路",slug:"_4-2-、redis分布式锁的实现核心思路",link:"#_4-2-、redis分布式锁的实现核心思路",children:[]},{level:3,title:"4.3 实现分布式锁版本一",slug:"_4-3-实现分布式锁版本一",link:"#_4-3-实现分布式锁版本一",children:[]},{level:3,title:"4.4 Redis分布式锁误删情况说明",slug:"_4-4-redis分布式锁误删情况说明",link:"#_4-4-redis分布式锁误删情况说明",children:[]},{level:3,title:"4.5 解决Redis分布式锁误删问题",slug:"_4-5-解决redis分布式锁误删问题",link:"#_4-5-解决redis分布式锁误删问题",children:[]},{level:3,title:"4.6 分布式锁的原子性问题",slug:"_4-6-分布式锁的原子性问题",link:"#_4-6-分布式锁的原子性问题",children:[]},{level:3,title:"4.7 Lua脚本解决多条命令原子性问题",slug:"_4-7-lua脚本解决多条命令原子性问题",link:"#_4-7-lua脚本解决多条命令原子性问题",children:[]},{level:3,title:"4.8 利用Java代码调用Lua脚本改造分布式锁",slug:"_4-8-利用java代码调用lua脚本改造分布式锁",link:"#_4-8-利用java代码调用lua脚本改造分布式锁",children:[]}]},{level:2,title:"5、分布式锁-redission",slug:"_5、分布式锁-redission",link:"#_5、分布式锁-redission",children:[{level:3,title:"5.1 分布式锁-redission功能介绍",slug:"_5-1-分布式锁-redission功能介绍",link:"#_5-1-分布式锁-redission功能介绍",children:[]},{level:3,title:"5.2 分布式锁-Redission快速入门",slug:"_5-2-分布式锁-redission快速入门",link:"#_5-2-分布式锁-redission快速入门",children:[]},{level:3,title:"5.3 分布式锁-redission可重入锁原理",slug:"_5-3-分布式锁-redission可重入锁原理",link:"#_5-3-分布式锁-redission可重入锁原理",children:[]},{level:3,title:"5.4 分布式锁-redission锁重试和WatchDog机制",slug:"_5-4-分布式锁-redission锁重试和watchdog机制",link:"#_5-4-分布式锁-redission锁重试和watchdog机制",children:[]},{level:3,title:"5.5 分布式锁-redission锁的MutiLock原理",slug:"_5-5-分布式锁-redission锁的mutilock原理",link:"#_5-5-分布式锁-redission锁的mutilock原理",children:[]}]},{level:2,title:"6、秒杀优化",slug:"_6、秒杀优化",link:"#_6、秒杀优化",children:[{level:3,title:"6.1 秒杀优化-异步秒杀思路",slug:"_6-1-秒杀优化-异步秒杀思路",link:"#_6-1-秒杀优化-异步秒杀思路",children:[]},{level:3,title:"6.2 秒杀优化-Redis完成秒杀资格判断",slug:"_6-2-秒杀优化-redis完成秒杀资格判断",link:"#_6-2-秒杀优化-redis完成秒杀资格判断",children:[]},{level:3,title:"6.3 秒杀优化-基于阻塞队列实现秒杀优化",slug:"_6-3-秒杀优化-基于阻塞队列实现秒杀优化",link:"#_6-3-秒杀优化-基于阻塞队列实现秒杀优化",children:[]}]},{level:2,title:"7、Redis消息队列",slug:"_7、redis消息队列",link:"#_7、redis消息队列",children:[{level:3,title:"7.1 Redis消息队列-认识消息队列",slug:"_7-1-redis消息队列-认识消息队列",link:"#_7-1-redis消息队列-认识消息队列",children:[]},{level:3,title:"7.2 Redis消息队列-基于List实现消息队列",slug:"_7-2-redis消息队列-基于list实现消息队列",link:"#_7-2-redis消息队列-基于list实现消息队列",children:[]},{level:3,title:"7.3 Redis消息队列-基于PubSub的消息队列",slug:"_7-3-redis消息队列-基于pubsub的消息队列",link:"#_7-3-redis消息队列-基于pubsub的消息队列",children:[]},{level:3,title:"7.4 Redis消息队列-基于Stream的消息队列",slug:"_7-4-redis消息队列-基于stream的消息队列",link:"#_7-4-redis消息队列-基于stream的消息队列",children:[]},{level:3,title:"7.5 Redis消息队列-基于Stream的消息队列-消费者组",slug:"_7-5-redis消息队列-基于stream的消息队列-消费者组",link:"#_7-5-redis消息队列-基于stream的消息队列-消费者组",children:[]},{level:3,title:"创建消费者组：",slug:"创建消费者组",link:"#创建消费者组",children:[]},{level:3,title:"7.6 基于Redis的Stream结构作为消息队列，实现异步秒杀下单",slug:"_7-6-基于redis的stream结构作为消息队列-实现异步秒杀下单",link:"#_7-6-基于redis的stream结构作为消息队列-实现异步秒杀下单",children:[]}]},{level:2,title:"8、达人探店",slug:"_8、达人探店",link:"#_8、达人探店",children:[{level:3,title:"8.1、达人探店-发布探店笔记",slug:"_8-1、达人探店-发布探店笔记",link:"#_8-1、达人探店-发布探店笔记",children:[]},{level:3,title:"8.2 达人探店-查看探店笔记",slug:"_8-2-达人探店-查看探店笔记",link:"#_8-2-达人探店-查看探店笔记",children:[]},{level:3,title:"8.3 达人探店-点赞功能",slug:"_8-3-达人探店-点赞功能",link:"#_8-3-达人探店-点赞功能",children:[]},{level:3,title:"8.4 达人探店-点赞排行榜",slug:"_8-4-达人探店-点赞排行榜",link:"#_8-4-达人探店-点赞排行榜",children:[]}]},{level:2,title:"9、好友关注",slug:"_9、好友关注",link:"#_9、好友关注",children:[{level:3,title:"9.1 好友关注-关注和取消关注",slug:"_9-1-好友关注-关注和取消关注",link:"#_9-1-好友关注-关注和取消关注",children:[]},{level:3,title:"9.2 好友关注-共同关注",slug:"_9-2-好友关注-共同关注",link:"#_9-2-好友关注-共同关注",children:[]},{level:3,title:"9.3 好友关注-Feed流实现方案",slug:"_9-3-好友关注-feed流实现方案",link:"#_9-3-好友关注-feed流实现方案",children:[]},{level:3,title:"9.4 好友关注-推送到粉丝收件箱",slug:"_9-4-好友关注-推送到粉丝收件箱",link:"#_9-4-好友关注-推送到粉丝收件箱",children:[]},{level:3,title:"9.5好友关注-实现分页查询收邮箱",slug:"_9-5好友关注-实现分页查询收邮箱",link:"#_9-5好友关注-实现分页查询收邮箱",children:[]}]},{level:2,title:"10、附近商户",slug:"_10、附近商户",link:"#_10、附近商户",children:[{level:3,title:"10.1、附近商户-GEO数据结构的基本用法",slug:"_10-1、附近商户-geo数据结构的基本用法",link:"#_10-1、附近商户-geo数据结构的基本用法",children:[]},{level:3,title:"10.2、 附近商户-导入店铺数据到GEO",slug:"_10-2、-附近商户-导入店铺数据到geo",link:"#_10-2、-附近商户-导入店铺数据到geo",children:[]},{level:3,title:"10.3 附近商户-实现附近商户功能",slug:"_10-3-附近商户-实现附近商户功能",link:"#_10-3-附近商户-实现附近商户功能",children:[]}]},{level:2,title:"11、用户签到",slug:"_11、用户签到",link:"#_11、用户签到",children:[]},{level:2,title:"12、UV统计",slug:"_12、uv统计",link:"#_12、uv统计",children:[{level:3,title:"12.1 、UV统计-HyperLogLog",slug:"_12-1-、uv统计-hyperloglog",link:"#_12-1-、uv统计-hyperloglog",children:[]},{level:3,title:"12.2 UV统计-测试百万数据的统计",slug:"_12-2-uv统计-测试百万数据的统计",link:"#_12-2-uv统计-测试百万数据的统计",children:[]}]}],path:"/Database/Redis/2.%E5%AE%9E%E6%88%98/Redis%E5%AE%9E%E6%88%98%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"Pending List",headers:[{level:3,title:"关键特点：",slug:"关键特点",link:"#关键特点",children:[]},{level:3,title:"使用场景：",slug:"使用场景",link:"#使用场景",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Database/Redis/2.%E5%AE%9E%E6%88%98/pending-list.html",pathLocale:"/",extraFields:[]},{title:"Redis原理篇",headers:[{level:2,title:"1、原理篇-Redis数据结构",slug:"_1、原理篇-redis数据结构",link:"#_1、原理篇-redis数据结构",children:[{level:3,title:"1.1 Redis数据结构-动态字符串",slug:"_1-1-redis数据结构-动态字符串",link:"#_1-1-redis数据结构-动态字符串",children:[]},{level:3,title:"1.2 Redis数据结构-intset",slug:"_1-2-redis数据结构-intset",link:"#_1-2-redis数据结构-intset",children:[]},{level:3,title:"1.3 Redis数据结构-Dict",slug:"_1-3-redis数据结构-dict",link:"#_1-3-redis数据结构-dict",children:[]},{level:3,title:"1.4 Redis数据结构-ZipList",slug:"_1-4-redis数据结构-ziplist",link:"#_1-4-redis数据结构-ziplist",children:[]},{level:3,title:"1.5 Redis数据结构-ZipList的连锁更新问题",slug:"_1-5-redis数据结构-ziplist的连锁更新问题",link:"#_1-5-redis数据结构-ziplist的连锁更新问题",children:[]},{level:3,title:"1.6 Redis数据结构-QuickList",slug:"_1-6-redis数据结构-quicklist",link:"#_1-6-redis数据结构-quicklist",children:[]},{level:3,title:"1.7 Redis数据结构-RedisObject",slug:"_1-7-redis数据结构-redisobject",link:"#_1-7-redis数据结构-redisobject",children:[]},{level:3,title:"1.8 Redis数据结构-String",slug:"_1-8-redis数据结构-string",link:"#_1-8-redis数据结构-string",children:[]},{level:3,title:"1.9 Redis数据结构-List",slug:"_1-9-redis数据结构-list",link:"#_1-9-redis数据结构-list",children:[]},{level:3,title:"2.0 Redis数据结构-Set结构",slug:"_2-0-redis数据结构-set结构",link:"#_2-0-redis数据结构-set结构",children:[]},{level:3,title:"2.1、Redis数据结构-ZSET",slug:"_2-1、redis数据结构-zset",link:"#_2-1、redis数据结构-zset",children:[]},{level:3,title:"2.2 、Redis数据结构-Hash",slug:"_2-2-、redis数据结构-hash",link:"#_2-2-、redis数据结构-hash",children:[]}]},{level:2,title:"2、原理篇-Redis网络模型",slug:"_2、原理篇-redis网络模型",link:"#_2、原理篇-redis网络模型",children:[{level:3,title:"2.1 用户空间和内核态空间",slug:"_2-1-用户空间和内核态空间",link:"#_2-1-用户空间和内核态空间",children:[]},{level:3,title:"2.2.网络模型-阻塞IO",slug:"_2-2-网络模型-阻塞io",link:"#_2-2-网络模型-阻塞io",children:[]},{level:3,title:"2.3 网络模型-非阻塞IO",slug:"_2-3-网络模型-非阻塞io",link:"#_2-3-网络模型-非阻塞io",children:[]},{level:3,title:"2.4 网络模型-IO多路复用",slug:"_2-4-网络模型-io多路复用",link:"#_2-4-网络模型-io多路复用",children:[]},{level:3,title:"2.5 网络模型-IO多路复用-select方式",slug:"_2-5-网络模型-io多路复用-select方式",link:"#_2-5-网络模型-io多路复用-select方式",children:[]},{level:3,title:"2.6 网络模型-IO多路复用模型-poll模式",slug:"_2-6-网络模型-io多路复用模型-poll模式",link:"#_2-6-网络模型-io多路复用模型-poll模式",children:[]},{level:3,title:"2.7 网络模型-IO多路复用模型-epoll函数",slug:"_2-7-网络模型-io多路复用模型-epoll函数",link:"#_2-7-网络模型-io多路复用模型-epoll函数",children:[]},{level:3,title:"2.8、网络模型-epoll中的ET和LT",slug:"_2-8、网络模型-epoll中的et和lt",link:"#_2-8、网络模型-epoll中的et和lt",children:[]},{level:3,title:"2.9 网络模型-基于epoll的服务器端流程",slug:"_2-9-网络模型-基于epoll的服务器端流程",link:"#_2-9-网络模型-基于epoll的服务器端流程",children:[]},{level:3,title:"3.0 、网络模型-信号驱动",slug:"_3-0-、网络模型-信号驱动",link:"#_3-0-、网络模型-信号驱动",children:[]},{level:3,title:"3.1 、网络模型-Redis是单线程的吗？为什么使用单线程",slug:"_3-1-、网络模型-redis是单线程的吗-为什么使用单线程",link:"#_3-1-、网络模型-redis是单线程的吗-为什么使用单线程",children:[]},{level:3,title:"3.2 、Redis的单线程模型-Redis单线程和多线程网络模型变更",slug:"_3-2-、redis的单线程模型-redis单线程和多线程网络模型变更",link:"#_3-2-、redis的单线程模型-redis单线程和多线程网络模型变更",children:[]}]},{level:2,title:"3、Redis通信协议-RESP协议",slug:"_3、redis通信协议-resp协议",link:"#_3、redis通信协议-resp协议",children:[{level:3,title:"3.1、Redis通信协议-基于Socket自定义Redis的客户端",slug:"_3-1、redis通信协议-基于socket自定义redis的客户端",link:"#_3-1、redis通信协议-基于socket自定义redis的客户端",children:[]},{level:3,title:"3.2、Redis内存回收-过期key处理",slug:"_3-2、redis内存回收-过期key处理",link:"#_3-2、redis内存回收-过期key处理",children:[]},{level:3,title:"3.3 Redis内存回收-内存淘汰策略",slug:"_3-3-redis内存回收-内存淘汰策略",link:"#_3-3-redis内存回收-内存淘汰策略",children:[]}]},{level:2,title:"4、结束语",slug:"_4、结束语",link:"#_4、结束语",children:[]}],path:"/Database/Redis/4.%E5%8E%9F%E7%90%86/%E5%8E%9F%E7%90%86%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"1.序列化与反序列化",headers:[],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/1.%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html",pathLocale:"/",extraFields:[]},{title:"1.补充-FST框架使用实例",headers:[{level:3,title:"1. 配置与依赖",slug:"_1-配置与依赖",link:"#_1-配置与依赖",children:[]},{level:3,title:"2. 缓存系统中的应用",slug:"_2-缓存系统中的应用",link:"#_2-缓存系统中的应用",children:[]},{level:3,title:"3. 持久化存储应用",slug:"_3-持久化存储应用",link:"#_3-持久化存储应用",children:[]},{level:3,title:"4. 网络通信中的应用",slug:"_4-网络通信中的应用",link:"#_4-网络通信中的应用",children:[]},{level:3,title:"5. 性能调优",slug:"_5-性能调优",link:"#_5-性能调优",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/1.%E8%A1%A5%E5%85%85-%20FST%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"10.Java内部类及作用",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"什么是Java内部类",slug:"什么是java内部类",link:"#什么是java内部类",children:[]},{level:3,title:"内部类的种类",slug:"内部类的种类",link:"#内部类的种类",children:[]},{level:3,title:"内部类的作用",slug:"内部类的作用",link:"#内部类的作用",children:[]},{level:3,title:"帮助理解记忆的总结",slug:"帮助理解记忆的总结",link:"#帮助理解记忆的总结",children:[]},{level:3,title:"小技巧记忆",slug:"小技巧记忆",link:"#小技巧记忆",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/10.Java%E5%86%85%E9%83%A8%E7%B1%BB%E5%8F%8A%E4%BD%9C%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"11.Java8新特性",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"记忆要点",slug:"记忆要点",link:"#记忆要点",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/11.Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",pathLocale:"/",extraFields:[]},{title:"12.JDK和JRE之间的区别",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"记忆要点",slug:"记忆要点",link:"#记忆要点",children:[]},{level:3,title:"扩展",slug:"扩展",link:"#扩展",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/12.JDK%E5%92%8CJRE%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"13.使用过哪些JDK开发工具",headers:[],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/13.%E4%BD%A0%E4%BD%BF%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9BJDK%E5%B7%A5%E5%85%B7.html",pathLocale:"/",extraFields:[]},{title:"14.Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"1. == 操作符",slug:"_1-操作符",link:"#_1-操作符",children:[]},{level:3,title:"2. equals() 方法",slug:"_2-equals-方法",link:"#_2-equals-方法",children:[]},{level:3,title:"3. hashCode() 方法",slug:"_3-hashcode-方法",link:"#_3-hashcode-方法",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html",pathLocale:"/",extraFields:[]},{title:"15.hashCode() 和equals() 之间的关系",headers:[{level:3,title:"口述稿",slug:"口述稿",link:"#口述稿",children:[]},{level:3,title:"1. 基本关系",slug:"_1-基本关系",link:"#_1-基本关系",children:[]},{level:3,title:"2. equals() 与 hashCode() 关系的具体要求",slug:"_2-equals-与-hashcode-关系的具体要求",link:"#_2-equals-与-hashcode-关系的具体要求",children:[]},{level:3,title:"3. 使用场景：哈希数据结构",slug:"_3-使用场景-哈希数据结构",link:"#_3-使用场景-哈希数据结构",children:[]},{level:3,title:"4. 重写 hashCode() 和 equals() 方法时的考虑",slug:"_4-重写-hashcode-和-equals-方法时的考虑",link:"#_4-重写-hashcode-和-equals-方法时的考虑",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/15.Java%E4%B8%AD%E7%9A%84hashCode%E5%92%8Cequals%E6%96%B9%E6%B3%95%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB.html",pathLocale:"/",extraFields:[]},{title:"16.什么是Java中的动态代理？",headers:[{level:3,title:"工作原理：",slug:"工作原理",link:"#工作原理",children:[]},{level:3,title:"使用步骤：",slug:"使用步骤",link:"#使用步骤",children:[]},{level:3,title:"示例：",slug:"示例",link:"#示例",children:[]},{level:3,title:"输出：",slug:"输出",link:"#输出",children:[]},{level:3,title:"解释：",slug:"解释",link:"#解释",children:[]},{level:3,title:"应用场景：",slug:"应用场景",link:"#应用场景",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/16.%E4%BB%80%E4%B9%88%E6%98%AFJava%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"17.JDK动态代理和CGLIB动态代理有什么区别",headers:[{level:3,title:"1. Java动态代理",slug:"_1-java动态代理",link:"#_1-java动态代理",children:[]},{level:3,title:"2. CGLIB动态代理",slug:"_2-cglib动态代理",link:"#_2-cglib动态代理",children:[]},{level:3,title:"Java动态代理与CGLIB的对比",slug:"java动态代理与cglib的对比",link:"#java动态代理与cglib的对比",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/17.JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8CCGLIB%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"接口和抽象类有什么区别",headers:[],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/18.%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"2.什么是 Java 中的不可变类",headers:[],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/2.%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB.html",pathLocale:"/",extraFields:[]},{title:"3.Java 中 Exception 和 Error 有什么区别？",headers:[],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/3.Exception%E5%92%8CError%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"3.扩展-异常处理注意点",headers:[{level:3,title:"2. 尽量避免吞掉异常",slug:"_2-尽量避免吞掉异常",link:"#_2-尽量避免吞掉异常",children:[]},{level:3,title:"3. 使用 finally 块来清理资源",slug:"_3-使用-finally-块来清理资源",link:"#_3-使用-finally-块来清理资源",children:[]},{level:3,title:"4. 避免过度使用异常控制流",slug:"_4-避免过度使用异常控制流",link:"#_4-避免过度使用异常控制流",children:[]},{level:3,title:"5. 使用 try-with-resources 自动关闭资源",slug:"_5-使用-try-with-resources-自动关闭资源",link:"#_5-使用-try-with-resources-自动关闭资源",children:[]},{level:3,title:"6. 避免过度嵌套的异常捕获",slug:"_6-避免过度嵌套的异常捕获",link:"#_6-避免过度嵌套的异常捕获",children:[]},{level:3,title:"7. 重新抛出异常时提供有用的上下文信息",slug:"_7-重新抛出异常时提供有用的上下文信息",link:"#_7-重新抛出异常时提供有用的上下文信息",children:[]},{level:3,title:"8. 考虑异常的性能开销",slug:"_8-考虑异常的性能开销",link:"#_8-考虑异常的性能开销",children:[]},{level:3,title:"9. 异常的语义要清晰",slug:"_9-异常的语义要清晰",link:"#_9-异常的语义要清晰",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/3.%E6%89%A9%E5%B1%95-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%B3%A8%E6%84%8F%E7%82%B9.html",pathLocale:"/",extraFields:[]},{title:"4.Java的优势",headers:[{level:3,title:"1. 平台无关性（跨平台性）",slug:"_1-平台无关性-跨平台性",link:"#_1-平台无关性-跨平台性",children:[]},{level:3,title:"2. 面向对象编程",slug:"_2-面向对象编程",link:"#_2-面向对象编程",children:[]},{level:3,title:"3. 丰富的标准库与生态系统",slug:"_3-丰富的标准库与生态系统",link:"#_3-丰富的标准库与生态系统",children:[]},{level:3,title:"4. 高性能",slug:"_4-高性能",link:"#_4-高性能",children:[]},{level:3,title:"5. 多线程支持",slug:"_5-多线程支持",link:"#_5-多线程支持",children:[]},{level:3,title:"6. 安全性",slug:"_6-安全性",link:"#_6-安全性",children:[]},{level:3,title:"7. 自动垃圾回收",slug:"_7-自动垃圾回收",link:"#_7-自动垃圾回收",children:[]},{level:3,title:"8. 企业级应用支持",slug:"_8-企业级应用支持",link:"#_8-企业级应用支持",children:[]},{level:3,title:"9. 良好的开发工具支持",slug:"_9-良好的开发工具支持",link:"#_9-良好的开发工具支持",children:[]},{level:3,title:"10. 广泛的应用领域",slug:"_10-广泛的应用领域",link:"#_10-广泛的应用领域",children:[]},{level:3,title:"11. 与其他语言的互操作性",slug:"_11-与其他语言的互操作性",link:"#_11-与其他语言的互操作性",children:[]},{level:3,title:"12. 开源社区和支持",slug:"_12-开源社区和支持",link:"#_12-开源社区和支持",children:[]},{level:3,title:"13. 移动开发",slug:"_13-移动开发",link:"#_13-移动开发",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/4.Java%E7%9A%84%E4%BC%98%E5%8A%BF.html",pathLocale:"/",extraFields:[]},{title:"5.什么是Java的多态",headers:[{level:3,title:"多态的类型",slug:"多态的类型",link:"#多态的类型",children:[]},{level:3,title:"多态的优势",slug:"多态的优势",link:"#多态的优势",children:[]},{level:3,title:"多态的实现机制",slug:"多态的实现机制",link:"#多态的实现机制",children:[]},{level:3,title:"结论",slug:"结论",link:"#结论",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/5.%E4%BB%80%E4%B9%88%E6%98%AFJava%E7%9A%84%E5%A4%9A%E6%80%81.html",pathLocale:"/",extraFields:[]},{title:"6.Java中的参数传递是按值还是按引用",headers:[{level:3,title:"1. 基本类型参数：",slug:"_1-基本类型参数",link:"#_1-基本类型参数",children:[]},{level:3,title:"2. 引用类型参数：",slug:"_2-引用类型参数",link:"#_2-引用类型参数",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/6.Java%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%98%AF%E6%8C%89%E5%80%BC%E8%BF%98%E6%98%AF%E6%8C%89%E5%BC%95%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"7.Java 不支持多重继承",headers:[{level:3,title:"菱形继承问题：",slug:"菱形继承问题",link:"#菱形继承问题",children:[]},{level:3,title:"Java 的解决方式：",slug:"java-的解决方式",link:"#java-的解决方式",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/7.Java%20%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",pathLocale:"/",extraFields:[]},{title:"7.为什么Java不支持多重继承",headers:[{level:3,title:"1. 避免菱形继承问题",slug:"_1-避免菱形继承问题",link:"#_1-避免菱形继承问题",children:[]},{level:3,title:"3. 接口的引入",slug:"_3-接口的引入",link:"#_3-接口的引入",children:[]},{level:3,title:"4. 提高安全性",slug:"_4-提高安全性",link:"#_4-提高安全性",children:[]},{level:3,title:"5. 性能和可维护性",slug:"_5-性能和可维护性",link:"#_5-性能和可维护性",children:[]},{level:3,title:"扩展知识",slug:"扩展知识",link:"#扩展知识",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/7.Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF.html",pathLocale:"/",extraFields:[]},{title:"8.面向过程和面向对象的区别",headers:[{level:3,title:"0. A",slug:"_0-a",link:"#_0-a",children:[]},{level:3,title:"1. 编程范式的不同",slug:"_1-编程范式的不同",link:"#_1-编程范式的不同",children:[]},{level:3,title:"2. 代码结构的不同",slug:"_2-代码结构的不同",link:"#_2-代码结构的不同",children:[]},{level:3,title:"3. 数据和功能的组织",slug:"_3-数据和功能的组织",link:"#_3-数据和功能的组织",children:[]},{level:3,title:"4. 扩展性和维护性",slug:"_4-扩展性和维护性",link:"#_4-扩展性和维护性",children:[]},{level:3,title:"5. 适用场景",slug:"_5-适用场景",link:"#_5-适用场景",children:[]},{level:3,title:"示例对比：",slug:"示例对比",link:"#示例对比",children:[]},{level:3,title:"总结记忆点",slug:"总结记忆点",link:"#总结记忆点",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/8.Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"9.Java方法重载和重写之间的区别",headers:[{level:3,title:"0. A",slug:"_0-a",link:"#_0-a",children:[]},{level:3,title:"1. 方法重载（Overloading）",slug:"_1-方法重载-overloading",link:"#_1-方法重载-overloading",children:[]},{level:3,title:"2. 方法重写（Overriding）",slug:"_2-方法重写-overriding",link:"#_2-方法重写-overriding",children:[]},{level:3,title:"3. 总结：",slug:"_3-总结",link:"#_3-总结",children:[]},{level:3,title:"4. 扩展",slug:"_4-扩展",link:"#_4-扩展",children:[]}],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/9.Java%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"1.Java中String、StringBuffer和StringBuilder的区别是什么？",headers:[{level:2,title:"1)String",slug:"_1-string",link:"#_1-string",children:[]},{level:2,title:"2)StringBuffer",slug:"_2-stringbuffer",link:"#_2-stringbuffer",children:[]},{level:2,title:"3)StringBuilder",slug:"_3-stringbuilder",link:"#_3-stringbuilder",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Interview/Java/02%E4%B8%AD%E7%AD%89/1.Java%E4%B8%ADString%E3%80%81StringBuffer%E5%92%8CStringBuilder%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"2.Java中volatile关键字的作用是什么？",headers:[{level:3,title:"1. 确保变量的可见性",slug:"_1-确保变量的可见性",link:"#_1-确保变量的可见性",children:[]},{level:3,title:"2. 禁止指令重排",slug:"_2-禁止指令重排",link:"#_2-禁止指令重排",children:[]}],path:"/Interview/Java/02%E4%B8%AD%E7%AD%89/2.Java%E4%B8%ADvolatile%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"Java基础面试题",headers:[{level:2,title:"概念",slug:"概念",link:"#概念",children:[{level:3,title:"1.说一下Java的特点",slug:"_1-说一下java的特点",link:"#_1-说一下java的特点",children:[]},{level:3,title:"2.Java 的优势和劣势是什么？",slug:"_2-java-的优势和劣势是什么",link:"#_2-java-的优势和劣势是什么",children:[]},{level:3,title:"3.Java为什么是跨平台的？",slug:"_3-java为什么是跨平台的",link:"#_3-java为什么是跨平台的",children:[]},{level:3,title:"4. JVM、JDK、JRE三者关系？",slug:"_4-jvm、jdk、jre三者关系",link:"#_4-jvm、jdk、jre三者关系",children:[]},{level:3,title:"5. 为什么Java解释和编译都有？",slug:"_5-为什么java解释和编译都有",link:"#_5-为什么java解释和编译都有",children:[]},{level:3,title:"6.JVM是什么",slug:"_6-jvm是什么",link:"#_6-jvm是什么",children:[]},{level:3,title:"7.编译型语言和解释型语言的区别？",slug:"_7-编译型语言和解释型语言的区别",link:"#_7-编译型语言和解释型语言的区别",children:[]},{level:3,title:"8.Python和Java的区别：",slug:"_8-python和java的区别",link:"#_8-python和java的区别",children:[]}]},{level:2,title:"数据类型",slug:"数据类型",link:"#数据类型",children:[{level:3,title:"1.八种基本的数据类型",slug:"_1-八种基本的数据类型",link:"#_1-八种基本的数据类型",children:[]},{level:3,title:"2.int和long是多少位，多少字节的？",slug:"_2-int和long是多少位-多少字节的",link:"#_2-int和long是多少位-多少字节的",children:[]},{level:3,title:"3. long和int可以互转吗？",slug:"_3-long和int可以互转吗",link:"#_3-long和int可以互转吗",children:[]},{level:3,title:"4.数据类型转换方式你知道哪些？",slug:"_4-数据类型转换方式你知道哪些",link:"#_4-数据类型转换方式你知道哪些",children:[]},{level:3,title:"5.类型互转会出现什么问题吗？",slug:"_5-类型互转会出现什么问题吗",link:"#_5-类型互转会出现什么问题吗",children:[]},{level:3,title:"6.为什么用bigDecimal不用double?",slug:"_6-为什么用bigdecimal不用double",link:"#_6-为什么用bigdecimal不用double",children:[]},{level:3,title:"7.装箱和拆箱是什么？",slug:"_7-装箱和拆箱是什么",link:"#_7-装箱和拆箱是什么",children:[]},{level:3,title:"8.Java为什么要有Integer?",slug:"_8-java为什么要有integer",link:"#_8-java为什么要有integer",children:[]},{level:3,title:"9.Integer相比int有什么优点？",slug:"_9-integer相比int有什么优点",link:"#_9-integer相比int有什么优点",children:[]},{level:3,title:"10.那为什么还要保留int类型？",slug:"_10-那为什么还要保留int类型",link:"#_10-那为什么还要保留int类型",children:[]},{level:3,title:"11.说一下integer的缓存",slug:"_11-说一下integer的缓存",link:"#_11-说一下integer的缓存",children:[]}]},{level:2,title:"面向对象",slug:"面向对象",link:"#面向对象",children:[{level:3,title:"1.怎么理解面向对象？简单说说封装继承多态",slug:"_1-怎么理解面向对象-简单说说封装继承多态",link:"#_1-怎么理解面向对象-简单说说封装继承多态",children:[]},{level:3,title:"2.多态体现在哪几个方面？",slug:"_2-多态体现在哪几个方面",link:"#_2-多态体现在哪几个方面",children:[]},{level:3,title:"3.多态解决了什么问题？",slug:"_3-多态解决了什么问题",link:"#_3-多态解决了什么问题",children:[]},{level:3,title:"4.面向对象的设计原则你知道有哪些吗？",slug:"_4-面向对象的设计原则你知道有哪些吗",link:"#_4-面向对象的设计原则你知道有哪些吗",children:[]},{level:3,title:"5.重载与重写有什么区别？",slug:"_5-重载与重写有什么区别",link:"#_5-重载与重写有什么区别",children:[]},{level:3,title:"6.抽象类和普通类区别？",slug:"_6-抽象类和普通类区别",link:"#_6-抽象类和普通类区别",children:[]},{level:3,title:"7.Java抽象类和接口的区别是什么？",slug:"_7-java抽象类和接口的区别是什么",link:"#_7-java抽象类和接口的区别是什么",children:[]},{level:3,title:"8.抽象类能加final修饰吗？",slug:"_8-抽象类能加final修饰吗",link:"#_8-抽象类能加final修饰吗",children:[]},{level:3,title:"9.接口里面可以定义哪些方法？",slug:"_9-接口里面可以定义哪些方法",link:"#_9-接口里面可以定义哪些方法",children:[]},{level:3,title:"10.抽象类可以被实例化吗？",slug:"_10-抽象类可以被实例化吗",link:"#_10-抽象类可以被实例化吗",children:[]},{level:3,title:"11.接口可以包含构造函数吗？",slug:"_11-接口可以包含构造函数吗",link:"#_11-接口可以包含构造函数吗",children:[]},{level:3,title:"12.解释ava中的静态变量和静态方法",slug:"_12-解释ava中的静态变量和静态方法",link:"#_12-解释ava中的静态变量和静态方法",children:[]},{level:3,title:"13.非静态内部类和静态内部类的区别？",slug:"_13-非静态内部类和静态内部类的区别",link:"#_13-非静态内部类和静态内部类的区别",children:[]},{level:3,title:"14.非静态内部类可以直接访问外部方法，编译器是怎么做到的？",slug:"_14-非静态内部类可以直接访问外部方法-编译器是怎么做到的",link:"#_14-非静态内部类可以直接访问外部方法-编译器是怎么做到的",children:[]}]},{level:2,title:"关键字",slug:"关键字",link:"#关键字",children:[{level:3,title:"1.Java中final作用是什么？",slug:"_1-java中final作用是什么",link:"#_1-java中final作用是什么",children:[]}]},{level:2,title:"深拷贝和浅拷贝",slug:"深拷贝和浅拷贝",link:"#深拷贝和浅拷贝",children:[{level:3,title:"1.深拷贝和浅拷贝的区别？",slug:"_1-深拷贝和浅拷贝的区别",link:"#_1-深拷贝和浅拷贝的区别",children:[]},{level:3,title:"2.Java 中的深拷贝实现方式?",slug:"_2-java-中的深拷贝实现方式",link:"#_2-java-中的深拷贝实现方式",children:[]}]},{level:2,title:"泛型",slug:"泛型",link:"#泛型",children:[{level:3,title:"1.什么是泛型？",slug:"_1-什么是泛型",link:"#_1-什么是泛型",children:[]}]},{level:2,title:"对象",slug:"对象",link:"#对象",children:[]}],path:"/Interview/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87/1.Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"RabbitMQ  面试题",headers:[{level:2,title:"RabbitMQ routing 路由模式",slug:"rabbitmq-routing-路由模式",link:"#rabbitmq-routing-路由模式",children:[]},{level:2,title:"消息怎么路由？",slug:"消息怎么路由",link:"#消息怎么路由",children:[]},{level:2,title:"RabbitMQ publish/subscribe 发布订阅(共享资源)",slug:"rabbitmq-publish-subscribe-发布订阅-共享资源",link:"#rabbitmq-publish-subscribe-发布订阅-共享资源",children:[]},{level:2,title:"能够在地理上分开的不同数据中心使用  RabbitMQ cluster  么？",slug:"能够在地理上分开的不同数据中心使用-rabbitmq-cluster-么",link:"#能够在地理上分开的不同数据中心使用-rabbitmq-cluster-么",children:[]},{level:2,title:"RabbitMQ 有那些基本概念？",slug:"rabbitmq-有那些基本概念",link:"#rabbitmq-有那些基本概念",children:[]},{level:2,title:"什么情况下会出现  blackholed  问题？",slug:"什么情况下会出现-blackholed-问题",link:"#什么情况下会出现-blackholed-问题",children:[]},{level:2,title:"什么是消费者 Consumer?",slug:"什么是消费者-consumer",link:"#什么是消费者-consumer",children:[]},{level:2,title:"消息如何分发？",slug:"消息如何分发",link:"#消息如何分发",children:[]},{level:2,title:"Basic.Reject  的用法是什么？",slug:"basic-reject-的用法是什么",link:"#basic-reject-的用法是什么",children:[]},{level:2,title:"什么是 Binding 绑定？",slug:"什么是-binding-绑定",link:"#什么是-binding-绑定",children:[]}],path:"/Interview/MQ/RabbitMQ/RabbitMQ%E9%9D%A2%E8%AF%95%E9%A2%98.html",pathLocale:"/",extraFields:[]},{title:"☕Java面试答题卡：Java 中的深拷贝实现方式",headers:[{level:2,title:"❓面试题目：",slug:"❓面试题目",link:"#❓面试题目",children:[]},{level:2,title:"✅ 答题要点：",slug:"✅-答题要点",link:"#✅-答题要点",children:[{level:3,title:"1. 手动拷贝（推荐做法，最清晰）",slug:"_1-手动拷贝-推荐做法-最清晰",link:"#_1-手动拷贝-推荐做法-最清晰",children:[]},{level:3,title:"2. 实现 Cloneable 接口 + 重写 clone() 方法",slug:"_2-实现-cloneable-接口-重写-clone-方法",link:"#_2-实现-cloneable-接口-重写-clone-方法",children:[]},{level:3,title:"3. 通过序列化（适合对象较复杂时）",slug:"_3-通过序列化-适合对象较复杂时",link:"#_3-通过序列化-适合对象较复杂时",children:[]},{level:3,title:"4. 使用第三方库",slug:"_4-使用第三方库",link:"#_4-使用第三方库",children:[]}]},{level:2,title:"📌 小结对比",slug:"📌-小结对比",link:"#📌-小结对比",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java%20%E4%B8%AD%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"☕Java 面试答题卡：Java 多态 + 设计模式",headers:[{level:2,title:"1️⃣ 多态基础概念",slug:"_1️⃣-多态基础概念",link:"#_1️⃣-多态基础概念",children:[]},{level:2,title:"2️⃣ 多态与常见设计模式",slug:"_2️⃣-多态与常见设计模式",link:"#_2️⃣-多态与常见设计模式",children:[]},{level:2,title:"3️⃣ 多态在 Spring 中的应用场景",slug:"_3️⃣-多态在-spring-中的应用场景",link:"#_3️⃣-多态在-spring-中的应用场景",children:[]},{level:2,title:"4️⃣ 面试答题模板",slug:"_4️⃣-面试答题模板",link:"#_4️⃣-面试答题模板",children:[{level:3,title:"常规结构：概念 + 问题 + 示例 + 总结",slug:"常规结构-概念-问题-示例-总结",link:"#常规结构-概念-问题-示例-总结",children:[]},{level:3,title:"结尾总结句式：",slug:"结尾总结句式",link:"#结尾总结句式",children:[]}]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/Java_%E5%A4%9A%E6%80%81_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"☕Java 面试答题卡：设计原则反例 —— 里氏替换原则（LSP）",headers:[{level:2,title:"🧠 原则简介",slug:"🧠-原则简介",link:"#🧠-原则简介",children:[]},{level:2,title:"❌ 经典反例：正方形继承矩形",slug:"❌-经典反例-正方形继承矩形",link:"#❌-经典反例-正方形继承矩形",children:[{level:3,title:"代码示例：",slug:"代码示例",link:"#代码示例",children:[]},{level:3,title:"🚨 问题分析：",slug:"🚨-问题分析",link:"#🚨-问题分析",children:[]}]},{level:2,title:"✅ 正确做法（组合优于继承）",slug:"✅-正确做法-组合优于继承",link:"#✅-正确做法-组合优于继承",children:[]},{level:2,title:"🗣 面试总结句式",slug:"🗣-面试总结句式",link:"#🗣-面试总结句式",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/LSP%20%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E5%8F%8D%E4%BE%8B.html",pathLocale:"/",extraFields:[]},{title:"☕Java 面试答题卡：依赖倒置原则（DIP）",headers:[{level:2,title:"🧠 原则简介",slug:"🧠-原则简介",link:"#🧠-原则简介",children:[]},{level:2,title:"❌ 反例：高层模块依赖低层模块实现",slug:"❌-反例-高层模块依赖低层模块实现",link:"#❌-反例-高层模块依赖低层模块实现",children:[]},{level:2,title:"✅ 正确做法：依赖抽象，使用接口和依赖注入",slug:"✅-正确做法-依赖抽象-使用接口和依赖注入",link:"#✅-正确做法-依赖抽象-使用接口和依赖注入",children:[]},{level:2,title:"🔗 依赖倒置原则的好处",slug:"🔗-依赖倒置原则的好处",link:"#🔗-依赖倒置原则的好处",children:[]},{level:2,title:"🗣 面试总结句式",slug:"🗣-面试总结句式",link:"#🗣-面试总结句式",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99%EF%BC%88DIP%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"☕Java面试答题卡：单一职责原则（SRP）",headers:[{level:2,title:"🧠 原则简介",slug:"🧠-原则简介",link:"#🧠-原则简介",children:[]},{level:2,title:"❌ 反例：职责混乱的类",slug:"❌-反例-职责混乱的类",link:"#❌-反例-职责混乱的类",children:[]},{level:2,title:"✅ 正确做法：拆分职责",slug:"✅-正确做法-拆分职责",link:"#✅-正确做法-拆分职责",children:[]},{level:2,title:"🔗 单一职责原则的好处",slug:"🔗-单一职责原则的好处",link:"#🔗-单一职责原则的好处",children:[]},{level:2,title:"🗣 面试总结句式",slug:"🗣-面试总结句式",link:"#🗣-面试总结句式",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99%EF%BC%88SRP%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"☕Java 面试答题卡：开放封闭原则（OCP）",headers:[{level:2,title:"🧠 原则简介",slug:"🧠-原则简介",link:"#🧠-原则简介",children:[]},{level:2,title:"❌ 反例：修改已有代码实现新功能",slug:"❌-反例-修改已有代码实现新功能",link:"#❌-反例-修改已有代码实现新功能",children:[]},{level:2,title:"✅ 正确做法：通过继承和多态实现扩展",slug:"✅-正确做法-通过继承和多态实现扩展",link:"#✅-正确做法-通过继承和多态实现扩展",children:[]},{level:2,title:"🔗 开放封闭原则的好处",slug:"🔗-开放封闭原则的好处",link:"#🔗-开放封闭原则的好处",children:[]},{level:2,title:"🗣 面试总结句式",slug:"🗣-面试总结句式",link:"#🗣-面试总结句式",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%88OCP%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"☕Java 面试答题卡：接口隔离原则（ISP）",headers:[{level:2,title:"🧠 原则简介",slug:"🧠-原则简介",link:"#🧠-原则简介",children:[]},{level:2,title:"❌ 反例：胖接口导致问题",slug:"❌-反例-胖接口导致问题",link:"#❌-反例-胖接口导致问题",children:[]},{level:2,title:"✅ 正确做法：拆分接口",slug:"✅-正确做法-拆分接口",link:"#✅-正确做法-拆分接口",children:[]},{level:2,title:"🔗 依赖注入与接口隔离",slug:"🔗-依赖注入与接口隔离",link:"#🔗-依赖注入与接口隔离",children:[]},{level:2,title:"🗣 面试总结句式",slug:"🗣-面试总结句式",link:"#🗣-面试总结句式",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99%EF%BC%88ISP%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"☕Java 面试答题卡：最少知识原则（LoD）",headers:[{level:2,title:"🧠 原则简介",slug:"🧠-原则简介",link:"#🧠-原则简介",children:[]},{level:2,title:"❌ 反例：违反最少知识原则",slug:"❌-反例-违反最少知识原则",link:"#❌-反例-违反最少知识原则",children:[]},{level:2,title:"✅ 正确做法：遵循最少知识原则",slug:"✅-正确做法-遵循最少知识原则",link:"#✅-正确做法-遵循最少知识原则",children:[]},{level:2,title:"🔗 LoD 的好处",slug:"🔗-lod-的好处",link:"#🔗-lod-的好处",children:[]},{level:2,title:"🗣 面试总结句式",slug:"🗣-面试总结句式",link:"#🗣-面试总结句式",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E6%9C%80%E5%B0%91%E7%9F%A5%E8%AF%86%E5%8E%9F%E5%88%99%EF%BC%88LoD%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"☕Java面试答题卡：面向对象设计原则（SOLID 及相关）",headers:[{level:2,title:"1. 单一职责原则（SRP）",slug:"_1-单一职责原则-srp",link:"#_1-单一职责原则-srp",children:[]},{level:2,title:"2. 开放封闭原则（OCP）",slug:"_2-开放封闭原则-ocp",link:"#_2-开放封闭原则-ocp",children:[]},{level:2,title:"3. 里氏替换原则（LSP）",slug:"_3-里氏替换原则-lsp",link:"#_3-里氏替换原则-lsp",children:[]},{level:2,title:"4. 接口隔离原则（ISP）",slug:"_4-接口隔离原则-isp",link:"#_4-接口隔离原则-isp",children:[]},{level:2,title:"5. 依赖倒置原则（DIP）",slug:"_5-依赖倒置原则-dip",link:"#_5-依赖倒置原则-dip",children:[]},{level:2,title:"6. 最少知识原则（LoD）",slug:"_6-最少知识原则-lod",link:"#_6-最少知识原则-lod",children:[]},{level:2,title:"7. 合成复用原则（CRP）",slug:"_7-合成复用原则-crp",link:"#_7-合成复用原则-crp",children:[]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%EF%BC%88SOLID%20%E5%8F%8A%E7%9B%B8%E5%85%B3%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"🐧Linux面试答题卡：Linux 中的两种链接方式",slug:"🐧linux面试答题卡-linux-中的两种链接方式",link:"#🐧linux面试答题卡-linux-中的两种链接方式",children:[]},{level:2,title:"❓面试题目：",slug:"❓面试题目",link:"#❓面试题目",children:[{level:3,title:"✅ 答题要点：",slug:"✅-答题要点",link:"#✅-答题要点",children:[]}]}],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/Linux%20%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5.html",pathLocale:"/",extraFields:[]},{title:"基础篇",headers:[{level:2,title:"1. 二分查找",slug:"_1-二分查找",link:"#_1-二分查找",children:[]},{level:2,title:"2. 冒泡排序",slug:"_2-冒泡排序",link:"#_2-冒泡排序",children:[]},{level:2,title:"3. 选择排序",slug:"_3-选择排序",link:"#_3-选择排序",children:[]},{level:2,title:"4. 插入排序",slug:"_4-插入排序",link:"#_4-插入排序",children:[]},{level:2,title:"5. 希尔排序",slug:"_5-希尔排序",link:"#_5-希尔排序",children:[]},{level:2,title:"6. 快速排序",slug:"_6-快速排序",link:"#_6-快速排序",children:[]},{level:2,title:"7. ArrayList",slug:"_7-arraylist",link:"#_7-arraylist",children:[]},{level:2,title:"8. Iterator",slug:"_8-iterator",link:"#_8-iterator",children:[]},{level:2,title:"9. LinkedList",slug:"_9-linkedlist",link:"#_9-linkedlist",children:[]},{level:2,title:"10. HashMap",slug:"_10-hashmap",link:"#_10-hashmap",children:[{level:3,title:"1）基本数据结构",slug:"_1-基本数据结构",link:"#_1-基本数据结构",children:[]},{level:3,title:"2）树化与退化",slug:"_2-树化与退化",link:"#_2-树化与退化",children:[]},{level:3,title:"3）索引计算",slug:"_3-索引计算",link:"#_3-索引计算",children:[]},{level:3,title:"4）put 与扩容",slug:"_4-put-与扩容",link:"#_4-put-与扩容",children:[]},{level:3,title:"5）并发问题",slug:"_5-并发问题",link:"#_5-并发问题",children:[]},{level:3,title:"6）key 的设计",slug:"_6-key-的设计",link:"#_6-key-的设计",children:[]}]},{level:2,title:"11. 单例模式",slug:"_11-单例模式",link:"#_11-单例模式",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%9F%BA%E7%A1%80%E7%AF%87%E8%AE%B2%E4%B9%89.html",pathLocale:"/",extraFields:[]},{title:"并发篇",headers:[{level:2,title:"1. 线程状态",slug:"_1-线程状态",link:"#_1-线程状态",children:[]},{level:2,title:"2. 线程池",slug:"_2-线程池",link:"#_2-线程池",children:[]},{level:2,title:"3. wait vs sleep",slug:"_3-wait-vs-sleep",link:"#_3-wait-vs-sleep",children:[]},{level:2,title:"4. lock vs synchronized",slug:"_4-lock-vs-synchronized",link:"#_4-lock-vs-synchronized",children:[]},{level:2,title:"5. volatile",slug:"_5-volatile",link:"#_5-volatile",children:[]},{level:2,title:"6. 悲观锁 vs 乐观锁",slug:"_6-悲观锁-vs-乐观锁",link:"#_6-悲观锁-vs-乐观锁",children:[]},{level:2,title:"7. Hashtable vs ConcurrentHashMap",slug:"_7-hashtable-vs-concurrenthashmap",link:"#_7-hashtable-vs-concurrenthashmap",children:[]},{level:2,title:"8. ThreadLocal",slug:"_8-threadlocal",link:"#_8-threadlocal",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/%E5%B9%B6%E5%8F%91%E7%AF%87%E8%AE%B2%E4%B9%89.html",pathLocale:"/",extraFields:[]},{title:"虚拟机篇",headers:[{level:2,title:"1. JVM 内存结构",slug:"_1-jvm-内存结构",link:"#_1-jvm-内存结构",children:[]},{level:2,title:"2. JVM 内存参数",slug:"_2-jvm-内存参数",link:"#_2-jvm-内存参数",children:[]},{level:2,title:"3. JVM 垃圾回收",slug:"_3-jvm-垃圾回收",link:"#_3-jvm-垃圾回收",children:[]},{level:2,title:"4. 内存溢出",slug:"_4-内存溢出",link:"#_4-内存溢出",children:[]},{level:2,title:"5. 类加载",slug:"_5-类加载",link:"#_5-类加载",children:[]},{level:2,title:"6. 四种引用",slug:"_6-四种引用",link:"#_6-四种引用",children:[]},{level:2,title:"7. finalize",slug:"_7-finalize",link:"#_7-finalize",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AF%87%E8%AE%B2%E4%B9%89.html",pathLocale:"/",extraFields:[]},{title:"框架篇",headers:[{level:2,title:"1. Spring refresh 流程",slug:"_1-spring-refresh-流程",link:"#_1-spring-refresh-流程",children:[]},{level:2,title:"2. Spring bean 生命周期",slug:"_2-spring-bean-生命周期",link:"#_2-spring-bean-生命周期",children:[]},{level:2,title:"3. Spring bean 循环依赖",slug:"_3-spring-bean-循环依赖",link:"#_3-spring-bean-循环依赖",children:[{level:3,title:"解决 set 循环依赖的原理",slug:"解决-set-循环依赖的原理",link:"#解决-set-循环依赖的原理",children:[]}]},{level:2,title:"4. Spring 事务失效",slug:"_4-spring-事务失效",link:"#_4-spring-事务失效",children:[]},{level:2,title:"5. Spring MVC 执行流程",slug:"_5-spring-mvc-执行流程",link:"#_5-spring-mvc-执行流程",children:[]},{level:2,title:"6. Spring 注解",slug:"_6-spring-注解",link:"#_6-spring-注解",children:[]},{level:2,title:"7. SpringBoot 自动配置原理",slug:"_7-springboot-自动配置原理",link:"#_7-springboot-自动配置原理",children:[]},{level:2,title:"8. Spring 中的设计模式",slug:"_8-spring-中的设计模式",link:"#_8-spring-中的设计模式",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/%E6%A1%86%E6%9E%B6%E7%AF%87%E8%AE%B2%E4%B9%89.html",pathLocale:"/",extraFields:[]},{title:"08并发编程",headers:[{level:2,title:"线程的基础知识",slug:"线程的基础知识",link:"#线程的基础知识",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"面向对象进阶",headers:[{level:2,title:"今日内容",slug:"今日内容",link:"#今日内容",children:[]},{level:2,title:"教学目标",slug:"教学目标",link:"#教学目标",children:[]},{level:2,title:"1.1 概述",slug:"_1-1-概述",link:"#_1-1-概述",children:[{level:3,title:"1.1.1 抽象类引入",slug:"_1-1-1-抽象类引入",link:"#_1-1-1-抽象类引入",children:[]}]},{level:2,title:"1.2 abstract使用格式",slug:"_1-2-abstract使用格式",link:"#_1-2-abstract使用格式",children:[{level:3,title:"1.2.1 抽象方法",slug:"_1-2-1-抽象方法",link:"#_1-2-1-抽象方法",children:[]},{level:3,title:"1.2.2 抽象类",slug:"_1-2-2-抽象类",link:"#_1-2-2-抽象类",children:[]},{level:3,title:"1.2.3 抽象类的使用",slug:"_1-2-3-抽象类的使用",link:"#_1-2-3-抽象类的使用",children:[]}]},{level:2,title:"1.3 抽象类的特征",slug:"_1-3-抽象类的特征",link:"#_1-3-抽象类的特征",children:[]},{level:2,title:"1.4 抽象类的细节",slug:"_1-4-抽象类的细节",link:"#_1-4-抽象类的细节",children:[]},{level:2,title:"1.5 抽象类存在的意义",slug:"_1-5-抽象类存在的意义",link:"#_1-5-抽象类存在的意义",children:[]},{level:2,title:"2.1 概述",slug:"_2-1-概述",link:"#_2-1-概述",children:[]},{level:2,title:"2.2 定义格式",slug:"_2-2-定义格式",link:"#_2-2-定义格式",children:[]},{level:2,title:"2.3 接口成分的特点",slug:"_2-3-接口成分的特点",link:"#_2-3-接口成分的特点",children:[{level:3,title:"2.3.1.抽象方法",slug:"_2-3-1-抽象方法",link:"#_2-3-1-抽象方法",children:[]},{level:3,title:"2.3.2 常量",slug:"_2-3-2-常量",link:"#_2-3-2-常量",children:[]},{level:3,title:"2.3.3 案例演示",slug:"_2-3-3-案例演示",link:"#_2-3-3-案例演示",children:[]}]},{level:2,title:"2.4 基本的实现",slug:"_2-4-基本的实现",link:"#_2-4-基本的实现",children:[{level:3,title:"2.4.1 实现接口的概述",slug:"_2-4-1-实现接口的概述",link:"#_2-4-1-实现接口的概述",children:[]},{level:3,title:"2.4.2 实现接口的格式",slug:"_2-4-2-实现接口的格式",link:"#_2-4-2-实现接口的格式",children:[]},{level:3,title:"2.4.3 类实现接口的要求和意义",slug:"_2-4-3-类实现接口的要求和意义",link:"#_2-4-3-类实现接口的要求和意义",children:[]},{level:3,title:"2.4.4  类与接口基本实现案例",slug:"_2-4-4-类与接口基本实现案例",link:"#_2-4-4-类与接口基本实现案例",children:[]},{level:3,title:"2.4.5 类与接口的多实现案例",slug:"_2-4-5-类与接口的多实现案例",link:"#_2-4-5-类与接口的多实现案例",children:[]}]},{level:2,title:"2.5 接口与接口的多继承",slug:"_2-5-接口与接口的多继承",link:"#_2-5-接口与接口的多继承",children:[]},{level:2,title:"2.6扩展：接口的细节",slug:"_2-6扩展-接口的细节",link:"#_2-6扩展-接口的细节",children:[]},{level:2,title:"3.1 概述",slug:"_3-1-概述",link:"#_3-1-概述",children:[{level:3,title:"3.1.1 什么是内部类",slug:"_3-1-1-什么是内部类",link:"#_3-1-1-什么是内部类",children:[]},{level:3,title:"3.1.2 什么时候使用内部类",slug:"_3-1-2-什么时候使用内部类",link:"#_3-1-2-什么时候使用内部类",children:[]}]},{level:2,title:"3.2 内部类的分类",slug:"_3-2-内部类的分类",link:"#_3-2-内部类的分类",children:[]},{level:2,title:"3.3 成员内部类",slug:"_3-3-成员内部类",link:"#_3-3-成员内部类",children:[]},{level:2,title:"3.4 成员内部类的细节",slug:"_3-4-成员内部类的细节",link:"#_3-4-成员内部类的细节",children:[]},{level:2,title:"3.5 成员内部类面试题",slug:"_3-5-成员内部类面试题",link:"#_3-5-成员内部类面试题",children:[]},{level:2,title:"3.6 成员内部类内存图",slug:"_3-6-成员内部类内存图",link:"#_3-6-成员内部类内存图",children:[]},{level:2,title:"3.7 静态内部类",slug:"_3-7-静态内部类",link:"#_3-7-静态内部类",children:[]},{level:2,title:"3.8 局部内部类",slug:"_3-8-局部内部类",link:"#_3-8-局部内部类",children:[]},{level:2,title:"3.9 匿名内部类【重点】",slug:"_3-9-匿名内部类【重点】",link:"#_3-9-匿名内部类【重点】",children:[{level:3,title:"3.9.1 概述",slug:"_3-9-1-概述",link:"#_3-9-1-概述",children:[]},{level:3,title:"3.9.2 格式",slug:"_3-9-2-格式",link:"#_3-9-2-格式",children:[]},{level:3,title:"3.9.2 什么时候用到匿名内部类",slug:"_3-9-2-什么时候用到匿名内部类",link:"#_3-9-2-什么时候用到匿名内部类",children:[]},{level:3,title:"3.9.3 匿名内部类前提和格式",slug:"_3-9-3-匿名内部类前提和格式",link:"#_3-9-3-匿名内部类前提和格式",children:[]},{level:3,title:"3.9.4 使用方式",slug:"_3-9-4-使用方式",link:"#_3-9-4-使用方式",children:[]},{level:3,title:"3.9.5 匿名内部类的特点",slug:"_3-9-5-匿名内部类的特点",link:"#_3-9-5-匿名内部类的特点",children:[]},{level:3,title:"3.9.6 匿名内部类的使用场景",slug:"_3-9-6-匿名内部类的使用场景",link:"#_3-9-6-匿名内部类的使用场景",children:[]}]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html",pathLocale:"/",extraFields:[]},{title:"课堂笔记",headers:[{level:2,title:"1.抽象类的作用是什么样的？",slug:"_1-抽象类的作用是什么样的",link:"#_1-抽象类的作用是什么样的",children:[]},{level:2,title:"2.抽象类和抽象方法的格式？",slug:"_2-抽象类和抽象方法的格式",link:"#_2-抽象类和抽象方法的格式",children:[]},{level:2,title:"3.继承抽象类有哪些要注意？",slug:"_3-继承抽象类有哪些要注意",link:"#_3-继承抽象类有哪些要注意",children:[]},{level:2,title:"4.接口和类之间的关系",slug:"_4-接口和类之间的关系",link:"#_4-接口和类之间的关系",children:[{level:3,title:"5.默认方法",slug:"_5-默认方法",link:"#_5-默认方法",children:[]},{level:3,title:"6.静态方法",slug:"_6-静态方法",link:"#_6-静态方法",children:[]},{level:3,title:"7.Java接口在不同JDK版本中的发展历程",slug:"_7-java接口在不同jdk版本中的发展历程",link:"#_7-java接口在不同jdk版本中的发展历程",children:[]},{level:3,title:"8.使用适配器模式",slug:"_8-使用适配器模式",link:"#_8-使用适配器模式",children:[]}]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html",pathLocale:"/",extraFields:[]},{title:"1.Collection集合",headers:[{level:2,title:"1.1数组和集合的区别【理解】",slug:"_1-1数组和集合的区别【理解】",link:"#_1-1数组和集合的区别【理解】",children:[]},{level:2,title:"1.2集合类体系结构【理解】",slug:"_1-2集合类体系结构【理解】",link:"#_1-2集合类体系结构【理解】",children:[]},{level:2,title:"1.3Collection 集合概述和使用【应用】",slug:"_1-3collection-集合概述和使用【应用】",link:"#_1-3collection-集合概述和使用【应用】",children:[]},{level:2,title:"1.4Collection集合的遍历",slug:"_1-4collection集合的遍历",link:"#_1-4collection集合的遍历",children:[]},{level:2,title:"1.4.1 迭代器遍历",slug:"_1-4-1-迭代器遍历",link:"#_1-4-1-迭代器遍历",children:[]},{level:2,title:"1.4.2 增强for",slug:"_1-4-2-增强for",link:"#_1-4-2-增强for",children:[]},{level:2,title:"1.4.3 lambda表达式",slug:"_1-4-3-lambda表达式",link:"#_1-4-3-lambda表达式",children:[]},{level:2,title:"2.1List集合的概述和特点【记忆】",slug:"_2-1list集合的概述和特点【记忆】",link:"#_2-1list集合的概述和特点【记忆】",children:[]},{level:2,title:"2.2List集合的特有方法【应用】",slug:"_2-2list集合的特有方法【应用】",link:"#_2-2list集合的特有方法【应用】",children:[]},{level:2,title:"2.3List集合的五种遍历方式【应用】",slug:"_2-3list集合的五种遍历方式【应用】",link:"#_2-3list集合的五种遍历方式【应用】",children:[]},{level:2,title:"2.4 细节点注意：",slug:"_2-4-细节点注意",link:"#_2-4-细节点注意",children:[]},{level:2,title:"3.1数据结构之栈和队列【记忆】",slug:"_3-1数据结构之栈和队列【记忆】",link:"#_3-1数据结构之栈和队列【记忆】",children:[]},{level:2,title:"3.2数据结构之数组和链表【记忆】",slug:"_3-2数据结构之数组和链表【记忆】",link:"#_3-2数据结构之数组和链表【记忆】",children:[]},{level:2,title:"4.1List集合子类的特点【记忆】",slug:"_4-1list集合子类的特点【记忆】",link:"#_4-1list集合子类的特点【记忆】",children:[]},{level:2,title:"4.2LinkedList集合的特有功能【应用】",slug:"_4-2linkedlist集合的特有功能【应用】",link:"#_4-2linkedlist集合的特有功能【应用】",children:[]},{level:2,title:"5.1 ArrayList源码分析：",slug:"_5-1-arraylist源码分析",link:"#_5-1-arraylist源码分析",children:[]},{level:2,title:"5.2 LinkedList源码分析：",slug:"_5-2-linkedlist源码分析",link:"#_5-2-linkedlist源码分析",children:[]},{level:2,title:"5.3 迭代器源码分析：",slug:"_5-3-迭代器源码分析",link:"#_5-3-迭代器源码分析",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/%E9%9B%86%E5%90%8801.html",pathLocale:"/",extraFields:[]},{title:"1.泛型",headers:[{level:2,title:"1.1泛型概述",slug:"_1-1泛型概述",link:"#_1-1泛型概述",children:[]},{level:2,title:"2.1Set集合概述和特点【应用】",slug:"_2-1set集合概述和特点【应用】",link:"#_2-1set集合概述和特点【应用】",children:[]},{level:2,title:"2.2Set集合的使用【应用】",slug:"_2-2set集合的使用【应用】",link:"#_2-2set集合的使用【应用】",children:[]},{level:2,title:"3.1TreeSet集合概述和特点【应用】",slug:"_3-1treeset集合概述和特点【应用】",link:"#_3-1treeset集合概述和特点【应用】",children:[]},{level:2,title:"3.2TreeSet集合基本使用【应用】",slug:"_3-2treeset集合基本使用【应用】",link:"#_3-2treeset集合基本使用【应用】",children:[]},{level:2,title:"3.3自然排序Comparable的使用【应用】",slug:"_3-3自然排序comparable的使用【应用】",link:"#_3-3自然排序comparable的使用【应用】",children:[]},{level:2,title:"3.4比较器排序Comparator的使用【应用】",slug:"_3-4比较器排序comparator的使用【应用】",link:"#_3-4比较器排序comparator的使用【应用】",children:[]},{level:2,title:"3.5两种比较方式总结【理解】",slug:"_3-5两种比较方式总结【理解】",link:"#_3-5两种比较方式总结【理解】",children:[]},{level:2,title:"4.1二叉树【理解】",slug:"_4-1二叉树【理解】",link:"#_4-1二叉树【理解】",children:[]},{level:2,title:"4.2二叉查找树【理解】",slug:"_4-2二叉查找树【理解】",link:"#_4-2二叉查找树【理解】",children:[]},{level:2,title:"4.3平衡二叉树【理解】",slug:"_4-3平衡二叉树【理解】",link:"#_4-3平衡二叉树【理解】",children:[]},{level:2,title:"4.3红黑树【理解】",slug:"_4-3红黑树【理解】",link:"#_4-3红黑树【理解】",children:[]},{level:2,title:"5.1HashSet集合概述和特点【应用】",slug:"_5-1hashset集合概述和特点【应用】",link:"#_5-1hashset集合概述和特点【应用】",children:[]},{level:2,title:"5.2HashSet集合的基本应用【应用】",slug:"_5-2hashset集合的基本应用【应用】",link:"#_5-2hashset集合的基本应用【应用】",children:[]},{level:2,title:"5.3哈希值【理解】",slug:"_5-3哈希值【理解】",link:"#_5-3哈希值【理解】",children:[]},{level:2,title:"5.4哈希表结构【理解】",slug:"_5-4哈希表结构【理解】",link:"#_5-4哈希表结构【理解】",children:[]},{level:2,title:"5.5HashSet集合存储学生对象并遍历【应用】",slug:"_5-5hashset集合存储学生对象并遍历【应用】",link:"#_5-5hashset集合存储学生对象并遍历【应用】",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html",pathLocale:"/",extraFields:[]},{title:"1.不可变集合",headers:[{level:2,title:"1.1 什么是不可变集合",slug:"_1-1-什么是不可变集合",link:"#_1-1-什么是不可变集合",children:[]},{level:2,title:"1.2 使用场景",slug:"_1-2-使用场景",link:"#_1-2-使用场景",children:[]},{level:2,title:"1.3 不可变集合分类",slug:"_1-3-不可变集合分类",link:"#_1-3-不可变集合分类",children:[]},{level:2,title:"1.4 不可变的list集合",slug:"_1-4-不可变的list集合",link:"#_1-4-不可变的list集合",children:[]},{level:2,title:"1.5 不可变的Set集合",slug:"_1-5-不可变的set集合",link:"#_1-5-不可变的set集合",children:[]},{level:2,title:"1.6 不可变的Map集合",slug:"_1-6-不可变的map集合",link:"#_1-6-不可变的map集合",children:[]},{level:2,title:"1.6.1：键值对个数小于等于10",slug:"_1-6-1-键值对个数小于等于10",link:"#_1-6-1-键值对个数小于等于10",children:[]},{level:2,title:"1.6.2：键值对个数大于10",slug:"_1-6-2-键值对个数大于10",link:"#_1-6-2-键值对个数大于10",children:[]},{level:2,title:"2.1体验Stream流【理解】",slug:"_2-1体验stream流【理解】",link:"#_2-1体验stream流【理解】",children:[]},{level:2,title:"2.2Stream流的常见生成方式【应用】",slug:"_2-2stream流的常见生成方式【应用】",link:"#_2-2stream流的常见生成方式【应用】",children:[]},{level:2,title:"2.3Stream流中间操作方法【应用】",slug:"_2-3stream流中间操作方法【应用】",link:"#_2-3stream流中间操作方法【应用】",children:[]},{level:2,title:"2.4Stream流终结操作方法【应用】",slug:"_2-4stream流终结操作方法【应用】",link:"#_2-4stream流终结操作方法【应用】",children:[]},{level:2,title:"2.5Stream流的收集操作【应用】",slug:"_2-5stream流的收集操作【应用】",link:"#_2-5stream流的收集操作【应用】",children:[]},{level:2,title:"2.6Stream流综合练习【应用】",slug:"_2-6stream流综合练习【应用】",link:"#_2-6stream流综合练习【应用】",children:[]},{level:2,title:"3.1体验方法引用【理解】",slug:"_3-1体验方法引用【理解】",link:"#_3-1体验方法引用【理解】",children:[]},{level:2,title:"3.2方法引用符【理解】",slug:"_3-2方法引用符【理解】",link:"#_3-2方法引用符【理解】",children:[]},{level:2,title:"3.3引用类方法【应用】",slug:"_3-3引用类方法【应用】",link:"#_3-3引用类方法【应用】",children:[]},{level:2,title:"3.4引用对象的实例方法【应用】",slug:"_3-4引用对象的实例方法【应用】",link:"#_3-4引用对象的实例方法【应用】",children:[]},{level:2,title:"3.5引用类的实例方法【应用】",slug:"_3-5引用类的实例方法【应用】",link:"#_3-5引用类的实例方法【应用】",children:[]},{level:2,title:"3.6引用构造器【应用】",slug:"_3-6引用构造器【应用】",link:"#_3-6引用构造器【应用】",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"1.实现多线程",slug:"_1-实现多线程",link:"#_1-实现多线程",children:[{level:3,title:"1.1简单了解多线程【理解】",slug:"_1-1简单了解多线程【理解】",link:"#_1-1简单了解多线程【理解】",children:[]},{level:3,title:"1.2并发和并行【理解】",slug:"_1-2并发和并行【理解】",link:"#_1-2并发和并行【理解】",children:[]},{level:3,title:"1.3进程和线程【理解】",slug:"_1-3进程和线程【理解】",link:"#_1-3进程和线程【理解】",children:[]},{level:3,title:"1.4实现多线程方式一：继承Thread类【应用】",slug:"_1-4实现多线程方式一-继承thread类【应用】",link:"#_1-4实现多线程方式一-继承thread类【应用】",children:[]},{level:3,title:"1.5实现多线程方式二：实现Runnable接口【应用】",slug:"_1-5实现多线程方式二-实现runnable接口【应用】",link:"#_1-5实现多线程方式二-实现runnable接口【应用】",children:[]},{level:3,title:"1.6实现多线程方式三: 实现Callable接口【应用】",slug:"_1-6实现多线程方式三-实现callable接口【应用】",link:"#_1-6实现多线程方式三-实现callable接口【应用】",children:[]},{level:3,title:"1.7设置和获取线程名称【应用】",slug:"_1-7设置和获取线程名称【应用】",link:"#_1-7设置和获取线程名称【应用】",children:[]},{level:3,title:"1.8线程休眠【应用】",slug:"_1-8线程休眠【应用】",link:"#_1-8线程休眠【应用】",children:[]},{level:3,title:"1.9线程优先级【应用】",slug:"_1-9线程优先级【应用】",link:"#_1-9线程优先级【应用】",children:[]},{level:3,title:"1.10守护线程【应用】",slug:"_1-10守护线程【应用】",link:"#_1-10守护线程【应用】",children:[]}]},{level:2,title:"2.线程同步",slug:"_2-线程同步",link:"#_2-线程同步",children:[{level:3,title:"2.1卖票【应用】",slug:"_2-1卖票【应用】",link:"#_2-1卖票【应用】",children:[]},{level:3,title:"2.2卖票案例的问题【理解】",slug:"_2-2卖票案例的问题【理解】",link:"#_2-2卖票案例的问题【理解】",children:[]},{level:3,title:"2.3同步代码块解决数据安全问题【应用】",slug:"_2-3同步代码块解决数据安全问题【应用】",link:"#_2-3同步代码块解决数据安全问题【应用】",children:[]},{level:3,title:"2.4同步方法解决数据安全问题【应用】",slug:"_2-4同步方法解决数据安全问题【应用】",link:"#_2-4同步方法解决数据安全问题【应用】",children:[]},{level:3,title:"2.5Lock锁【应用】",slug:"_2-5lock锁【应用】",link:"#_2-5lock锁【应用】",children:[]},{level:3,title:"2.6死锁【理解】",slug:"_2-6死锁【理解】",link:"#_2-6死锁【理解】",children:[]}]},{level:2,title:"3.生产者消费者",slug:"_3-生产者消费者",link:"#_3-生产者消费者",children:[{level:3,title:"3.1生产者和消费者模式概述【应用】",slug:"_3-1生产者和消费者模式概述【应用】",link:"#_3-1生产者和消费者模式概述【应用】",children:[]},{level:3,title:"3.2生产者和消费者案例【应用】",slug:"_3-2生产者和消费者案例【应用】",link:"#_3-2生产者和消费者案例【应用】",children:[]},{level:3,title:"3.3生产者和消费者案例优化【应用】",slug:"_3-3生产者和消费者案例优化【应用】",link:"#_3-3生产者和消费者案例优化【应用】",children:[]},{level:3,title:"3.4阻塞队列基本使用【理解】",slug:"_3-4阻塞队列基本使用【理解】",link:"#_3-4阻塞队列基本使用【理解】",children:[]},{level:3,title:"3.5阻塞队列实现等待唤醒机制【理解】",slug:"_3-5阻塞队列实现等待唤醒机制【理解】",link:"#_3-5阻塞队列实现等待唤醒机制【理解】",children:[]}]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"1. 线程池",slug:"_1-线程池",link:"#_1-线程池",children:[{level:3,title:"1.1 线程状态介绍",slug:"_1-1-线程状态介绍",link:"#_1-1-线程状态介绍",children:[]},{level:3,title:"1.2 线程池-基本原理",slug:"_1-2-线程池-基本原理",link:"#_1-2-线程池-基本原理",children:[]},{level:3,title:"1.3 线程池-Executors默认线程池",slug:"_1-3-线程池-executors默认线程池",link:"#_1-3-线程池-executors默认线程池",children:[]},{level:3,title:"1.4 线程池-Executors创建指定上限的线程池",slug:"_1-4-线程池-executors创建指定上限的线程池",link:"#_1-4-线程池-executors创建指定上限的线程池",children:[]},{level:3,title:"1.5 线程池-ThreadPoolExecutor",slug:"_1-5-线程池-threadpoolexecutor",link:"#_1-5-线程池-threadpoolexecutor",children:[]},{level:3,title:"1.6 线程池-参数详解",slug:"_1-6-线程池-参数详解",link:"#_1-6-线程池-参数详解",children:[]},{level:3,title:"1.7 线程池-非默认任务拒绝策略",slug:"_1-7-线程池-非默认任务拒绝策略",link:"#_1-7-线程池-非默认任务拒绝策略",children:[]}]},{level:2,title:"2. 多线程综合练习",slug:"_2-多线程综合练习",link:"#_2-多线程综合练习",children:[{level:3,title:"练习一：售票",slug:"练习一-售票",link:"#练习一-售票",children:[]},{level:3,title:"练习二：赠送礼物",slug:"练习二-赠送礼物",link:"#练习二-赠送礼物",children:[]},{level:3,title:"练习三：打印数字",slug:"练习三-打印数字",link:"#练习三-打印数字",children:[]},{level:3,title:"练习四：抢红包",slug:"练习四-抢红包",link:"#练习四-抢红包",children:[]},{level:3,title:"练习五：抽奖箱",slug:"练习五-抽奖箱",link:"#练习五-抽奖箱",children:[]},{level:3,title:"练习六：多线程统计并求最大值",slug:"练习六-多线程统计并求最大值",link:"#练习六-多线程统计并求最大值",children:[]},{level:3,title:"练习七：多线程之间的比较",slug:"练习七-多线程之间的比较",link:"#练习七-多线程之间的比较",children:[]}]},{level:2,title:"2. 原子性",slug:"_2-原子性",link:"#_2-原子性",children:[{level:3,title:"2.1 volatile-问题",slug:"_2-1-volatile-问题",link:"#_2-1-volatile-问题",children:[]},{level:3,title:"2.2 volatile解决",slug:"_2-2-volatile解决",link:"#_2-2-volatile解决",children:[]},{level:3,title:"2.3 synchronized解决",slug:"_2-3-synchronized解决",link:"#_2-3-synchronized解决",children:[]},{level:3,title:"2.4 原子性",slug:"_2-4-原子性",link:"#_2-4-原子性",children:[]},{level:3,title:"2.5 volatile关键字不能保证原子性",slug:"_2-5-volatile关键字不能保证原子性",link:"#_2-5-volatile关键字不能保证原子性",children:[]},{level:3,title:"2.6 原子性_AtomicInteger",slug:"_2-6-原子性-atomicinteger",link:"#_2-6-原子性-atomicinteger",children:[]},{level:3,title:"2.7 AtomicInteger-内存解析",slug:"_2-7-atomicinteger-内存解析",link:"#_2-7-atomicinteger-内存解析",children:[]},{level:3,title:"2.8 AtomicInteger-源码解析",slug:"_2-8-atomicinteger-源码解析",link:"#_2-8-atomicinteger-源码解析",children:[]},{level:3,title:"2.9 悲观锁和乐观锁",slug:"_2-9-悲观锁和乐观锁",link:"#_2-9-悲观锁和乐观锁",children:[]}]},{level:2,title:"3. 并发工具类",slug:"_3-并发工具类",link:"#_3-并发工具类",children:[{level:3,title:"3.1 并发工具类-Hashtable",slug:"_3-1-并发工具类-hashtable",link:"#_3-1-并发工具类-hashtable",children:[]},{level:3,title:"3.2 并发工具类-ConcurrentHashMap基本使用",slug:"_3-2-并发工具类-concurrenthashmap基本使用",link:"#_3-2-并发工具类-concurrenthashmap基本使用",children:[]},{level:3,title:"3.3 并发工具类-ConcurrentHashMap1.7原理",slug:"_3-3-并发工具类-concurrenthashmap1-7原理",link:"#_3-3-并发工具类-concurrenthashmap1-7原理",children:[]},{level:3,title:"3.4 并发工具类-ConcurrentHashMap1.8原理",slug:"_3-4-并发工具类-concurrenthashmap1-8原理",link:"#_3-4-并发工具类-concurrenthashmap1-8原理",children:[]},{level:3,title:"3.5 并发工具类-CountDownLatch",slug:"_3-5-并发工具类-countdownlatch",link:"#_3-5-并发工具类-countdownlatch",children:[]},{level:3,title:"3.6 并发工具类-Semaphore",slug:"_3-6-并发工具类-semaphore",link:"#_3-6-并发工具类-semaphore",children:[]}]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B02.html",pathLocale:"/",extraFields:[]},{title:"多线程总结",headers:[{level:3,title:"1.什么是多线程？",slug:"_1-什么是多线程",link:"#_1-什么是多线程",children:[]},{level:3,title:"2.多线程的作用？",slug:"_2-多线程的作用",link:"#_2-多线程的作用",children:[]},{level:3,title:"3.多线程的应用场景？",slug:"_3-多线程的应用场景",link:"#_3-多线程的应用场景",children:[]},{level:3,title:"4.并发和并行",slug:"_4-并发和并行",link:"#_4-并发和并行",children:[]},{level:3,title:"5.守护线程",slug:"_5-守护线程",link:"#_5-守护线程",children:[]},{level:3,title:"6.多线程常用方法",slug:"_6-多线程常用方法",link:"#_6-多线程常用方法",children:[]},{level:3,title:"7.线程的生命周期",slug:"_7-线程的生命周期",link:"#_7-线程的生命周期",children:[]},{level:3,title:"8.同步代码块细节",slug:"_8-同步代码块细节",link:"#_8-同步代码块细节",children:[]},{level:3,title:"9.线程的六个状态",slug:"_9-线程的六个状态",link:"#_9-线程的六个状态",children:[]},{level:3,title:"10.线程池主要核心原理",slug:"_10-线程池主要核心原理",link:"#_10-线程池主要核心原理",children:[]},{level:3,title:"11.自定义线程池核心要素",slug:"_11-自定义线程池核心要素",link:"#_11-自定义线程池核心要素",children:[]},{level:3,title:"12.自定义线程池小结",slug:"_12-自定义线程池小结",link:"#_12-自定义线程池小结",children:[]},{level:3,title:"13.线程大小计算",slug:"_13-线程大小计算",link:"#_13-线程大小计算",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%80%BB%E7%BB%93.html",pathLocale:"/",extraFields:[]},{title:"1. 反射",headers:[{level:2,title:"1.1 反射的概述：",slug:"_1-1-反射的概述",link:"#_1-1-反射的概述",children:[]},{level:2,title:"1.2 学习反射到底学什么？",slug:"_1-2-学习反射到底学什么",link:"#_1-2-学习反射到底学什么",children:[]},{level:2,title:"1.3 获取字节码文件对象的三种方式",slug:"_1-3-获取字节码文件对象的三种方式",link:"#_1-3-获取字节码文件对象的三种方式",children:[]},{level:2,title:"1.4 字节码文件和字节码文件对象",slug:"_1-4-字节码文件和字节码文件对象",link:"#_1-4-字节码文件和字节码文件对象",children:[]},{level:2,title:"1.5 获取构造方法",slug:"_1-5-获取构造方法",link:"#_1-5-获取构造方法",children:[]},{level:2,title:"1.6 获取构造方法并创建对象",slug:"_1-6-获取构造方法并创建对象",link:"#_1-6-获取构造方法并创建对象",children:[]},{level:2,title:"1.7 获取成员变量",slug:"_1-7-获取成员变量",link:"#_1-7-获取成员变量",children:[]},{level:2,title:"1.8 获取成员变量并获取值和修改值",slug:"_1-8-获取成员变量并获取值和修改值",link:"#_1-8-获取成员变量并获取值和修改值",children:[]},{level:2,title:"1.9 获取成员方法",slug:"_1-9-获取成员方法",link:"#_1-9-获取成员方法",children:[]},{level:2,title:"1.10 获取成员方法并运行",slug:"_1-10-获取成员方法并运行",link:"#_1-10-获取成员方法并运行",children:[]},{level:2,title:"面试题：",slug:"面试题",link:"#面试题",children:[]},{level:2,title:"1.11 练习泛型擦除（掌握概念，了解代码）",slug:"_1-11-练习泛型擦除-掌握概念-了解代码",link:"#_1-11-练习泛型擦除-掌握概念-了解代码",children:[]},{level:2,title:"1.12 练习：修改字符串的内容（掌握概念，了解代码）",slug:"_1-12-练习-修改字符串的内容-掌握概念-了解代码",link:"#_1-12-练习-修改字符串的内容-掌握概念-了解代码",children:[]},{level:2,title:"1.13 练习，反射和配置文件结合动态获取的练习（重点）",slug:"_1-13-练习-反射和配置文件结合动态获取的练习-重点",link:"#_1-13-练习-反射和配置文件结合动态获取的练习-重点",children:[]},{level:2,title:"1.14 利用发射保存对象中的信息（重点）",slug:"_1-14-利用发射保存对象中的信息-重点",link:"#_1-14-利用发射保存对象中的信息-重点",children:[]},{level:2,title:"2.1 好处：",slug:"_2-1-好处",link:"#_2-1-好处",children:[]},{level:2,title:"2.2 动态代理三要素：",slug:"_2-2-动态代理三要素",link:"#_2-2-动态代理三要素",children:[]},{level:2,title:"2.3 代码实现：",slug:"_2-3-代码实现",link:"#_2-3-代码实现",children:[]},{level:2,title:"2.4 额外扩展",slug:"_2-4-额外扩展",link:"#_2-4-额外扩展",children:[]},{level:2,title:"2.5 动态代理的练习",slug:"_2-5-动态代理的练习",link:"#_2-5-动态代理的练习",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"getDeclaredField()和getField()区别",headers:[{level:3,title:'1. clazz.getDeclaredField("name")',slug:"_1-clazz-getdeclaredfield-name",link:"#_1-clazz-getdeclaredfield-name",children:[]},{level:3,title:'2. clazz.getField("name")',slug:"_2-clazz-getfield-name",link:"#_2-clazz-getfield-name",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"getMethods()和getDeclaredMethods()的区别",headers:[{level:3,title:"1. getMethods()",slug:"_1-getmethods",link:"#_1-getmethods",children:[]},{level:3,title:"2. getDeclaredMethods()",slug:"_2-getdeclaredmethods",link:"#_2-getdeclaredmethods",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"反射&动态代理总结",headers:[{level:2,title:"反射",slug:"反射",link:"#反射",children:[{level:3,title:"1.反射的作用",slug:"_1-反射的作用",link:"#_1-反射的作用",children:[]},{level:3,title:"2.获得class字节码文件对象的三种方式",slug:"_2-获得class字节码文件对象的三种方式",link:"#_2-获得class字节码文件对象的三种方式",children:[]},{level:3,title:"3.如何获取构造方法、成员方法、成员变量",slug:"_3-如何获取构造方法、成员方法、成员变量",link:"#_3-如何获取构造方法、成员方法、成员变量",children:[]}]},{level:2,title:"动态代理",slug:"动态代理",link:"#动态代理",children:[{level:3,title:"1.为什么需要代理？",slug:"_1-为什么需要代理",link:"#_1-为什么需要代理",children:[]},{level:3,title:"2.代理长什么样？",slug:"_2-代理长什么样",link:"#_2-代理长什么样",children:[]},{level:3,title:"3.Java通过什么保证代理的样子？",slug:"_3-java通过什么保证代理的样子",link:"#_3-java通过什么保证代理的样子",children:[]}]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html",pathLocale:"/",extraFields:[]},{title:"Java中的反射 (Reflection)",headers:[{level:3,title:"反射的核心类：",slug:"反射的核心类",link:"#反射的核心类",children:[]},{level:3,title:"常用反射方法：",slug:"常用反射方法",link:"#常用反射方法",children:[]},{level:3,title:"示例代码：",slug:"示例代码",link:"#示例代码",children:[]},{level:3,title:"解释：",slug:"解释",link:"#解释",children:[]},{level:3,title:"注意事项：",slug:"注意事项",link:"#注意事项",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html",pathLocale:"/",extraFields:[]},{title:"字节码对象",headers:[{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html",pathLocale:"/",extraFields:[]},{title:"MetaObjectHandler 接口文档",headers:[{level:2,title:"接口概述",slug:"接口概述",link:"#接口概述",children:[]},{level:2,title:"方法概览",slug:"方法概览",link:"#方法概览",children:[{level:3,title:"1. openInsertFill()",slug:"_1-openinsertfill",link:"#_1-openinsertfill",children:[]},{level:3,title:"2. openUpdateFill()",slug:"_2-openupdatefill",link:"#_2-openupdatefill",children:[]},{level:3,title:"3. insertFill(MetaObject metaObject)",slug:"_3-insertfill-metaobject-metaobject",link:"#_3-insertfill-metaobject-metaobject",children:[]},{level:3,title:"4. updateFill(MetaObject metaObject)",slug:"_4-updatefill-metaobject-metaobject",link:"#_4-updatefill-metaobject-metaobject",children:[]},{level:3,title:"5. setFieldValByName(String fieldName, Object fieldVal, MetaObject metaObject)",slug:"_5-setfieldvalbyname-string-fieldname-object-fieldval-metaobject-metaobject",link:"#_5-setfieldvalbyname-string-fieldname-object-fieldval-metaobject-metaobject",children:[]},{level:3,title:"6. getFieldValByName(String fieldName, MetaObject metaObject)",slug:"_6-getfieldvalbyname-string-fieldname-metaobject-metaobject",link:"#_6-getfieldvalbyname-string-fieldname-metaobject-metaobject",children:[]},{level:3,title:"7. findTableInfo(MetaObject metaObject)",slug:"_7-findtableinfo-metaobject-metaobject",link:"#_7-findtableinfo-metaobject-metaobject",children:[]},{level:3,title:"8. strictInsertFill(MetaObject metaObject, String fieldName, Class<T> fieldType, E fieldVal)",slug:"_8-strictinsertfill-metaobject-metaobject-string-fieldname-class-t-fieldtype-e-fieldval",link:"#_8-strictinsertfill-metaobject-metaobject-string-fieldname-class-t-fieldtype-e-fieldval",children:[]},{level:3,title:"9. strictInsertFill(MetaObject metaObject, String fieldName, Supplier<E> fieldVal, Class<T> fieldType)",slug:"_9-strictinsertfill-metaobject-metaobject-string-fieldname-supplier-e-fieldval-class-t-fieldtype",link:"#_9-strictinsertfill-metaobject-metaobject-string-fieldname-supplier-e-fieldval-class-t-fieldtype",children:[]},{level:3,title:"10. strictInsertFill(TableInfo tableInfo, MetaObject metaObject, List<StrictFill<?, ?>> strictFills)",slug:"_10-strictinsertfill-tableinfo-tableinfo-metaobject-metaobject-list-strictfill-strictfills",link:"#_10-strictinsertfill-tableinfo-tableinfo-metaobject-metaobject-list-strictfill-strictfills",children:[]},{level:3,title:"11. strictUpdateFill(MetaObject metaObject, String fieldName, Class<T> fieldType, E fieldVal)",slug:"_11-strictupdatefill-metaobject-metaobject-string-fieldname-class-t-fieldtype-e-fieldval",link:"#_11-strictupdatefill-metaobject-metaobject-string-fieldname-class-t-fieldtype-e-fieldval",children:[]},{level:3,title:"12. strictUpdateFill(MetaObject metaObject, String fieldName, Supplier<E> fieldVal, Class<T> fieldType)",slug:"_12-strictupdatefill-metaobject-metaobject-string-fieldname-supplier-e-fieldval-class-t-fieldtype",link:"#_12-strictupdatefill-metaobject-metaobject-string-fieldname-supplier-e-fieldval-class-t-fieldtype",children:[]},{level:3,title:"13. strictUpdateFill(TableInfo tableInfo, MetaObject metaObject, List<StrictFill<?, ?>> strictFills)",slug:"_13-strictupdatefill-tableinfo-tableinfo-metaobject-metaobject-list-strictfill-strictfills",link:"#_13-strictupdatefill-tableinfo-tableinfo-metaobject-metaobject-list-strictfill-strictfills",children:[]},{level:3,title:"14. strictFill(boolean insertFill, TableInfo tableInfo, MetaObject metaObject, List<StrictFill<?, ?>> strictFills)",slug:"_14-strictfill-boolean-insertfill-tableinfo-tableinfo-metaobject-metaobject-list-strictfill-strictfills",link:"#_14-strictfill-boolean-insertfill-tableinfo-tableinfo-metaobject-metaobject-list-strictfill-strictfills",children:[]},{level:3,title:"15. fillStrategy(MetaObject metaObject, String fieldName, Object fieldVal)",slug:"_15-fillstrategy-metaobject-metaobject-string-fieldname-object-fieldval",link:"#_15-fillstrategy-metaobject-metaobject-string-fieldname-object-fieldval",children:[]},{level:3,title:"16. strictFillStrategy(MetaObject metaObject, String fieldName, Supplier<?> fieldVal)",slug:"_16-strictfillstrategy-metaobject-metaobject-string-fieldname-supplier-fieldval",link:"#_16-strictfillstrategy-metaobject-metaobject-string-fieldname-supplier-fieldval",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html",pathLocale:"/",extraFields:[]},{title:"MetaObjectHandler示例",headers:[{level:3,title:"MetaObjectHandler 的作用",slug:"metaobjecthandler-的作用",link:"#metaobjecthandler-的作用",children:[]},{level:3,title:"MetaObjectHandler 的实现",slug:"metaobjecthandler-的实现",link:"#metaobjecthandler-的实现",children:[]},{level:3,title:"实现 MetaObjectHandler 示例",slug:"实现-metaobjecthandler-示例",link:"#实现-metaobjecthandler-示例",children:[]},{level:3,title:"说明：",slug:"说明",link:"#说明",children:[]},{level:3,title:"配置 MetaObjectHandler",slug:"配置-metaobjecthandler",link:"#配置-metaobjecthandler",children:[]},{level:3,title:"完整示例",slug:"完整示例",link:"#完整示例",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/MetaObjectHandler%E7%A4%BA%E4%BE%8B.html",pathLocale:"/",extraFields:[]},{title:"@TableField",headers:[{level:3,title:"@TableField 常用属性总结",slug:"tablefield-常用属性总结",link:"#tablefield-常用属性总结",children:[]},{level:3,title:"综合示例",slug:"综合示例",link:"#综合示例",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/@TableField.html",pathLocale:"/",extraFields:[]},{title:"百度网盘密码数据兼容处理",headers:[{level:2,title:"1 需求分析",slug:"_1-需求分析",link:"#_1-需求分析",children:[]},{level:2,title:"2 环境准备",slug:"_2-环境准备",link:"#_2-环境准备",children:[]},{level:2,title:"3 具体实现",slug:"_3-具体实现",link:"#_3-具体实现",children:[{level:3,title:"步骤1:开启SpringAOP的注解功能",slug:"步骤1-开启springaop的注解功能",link:"#步骤1-开启springaop的注解功能",children:[]},{level:3,title:"步骤2:编写通知类",slug:"步骤2-编写通知类",link:"#步骤2-编写通知类",children:[]},{level:3,title:"步骤3:添加环绕通知",slug:"步骤3-添加环绕通知",link:"#步骤3-添加环绕通知",children:[]},{level:3,title:"步骤4:完成核心业务，处理参数中的空格",slug:"步骤4-完成核心业务-处理参数中的空格",link:"#步骤4-完成核心业务-处理参数中的空格",children:[]},{level:3,title:"步骤5:运行程序",slug:"步骤5-运行程序",link:"#步骤5-运行程序",children:[]},{level:3,title:"步骤6:优化测试",slug:"步骤6-优化测试",link:"#步骤6-优化测试",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E5%85%A5%E5%8F%82%E5%A4%84%E7%90%86%E5%88%87%E9%9D%A2.html",pathLocale:"/",extraFields:[]},{title:"性能监控切面",headers:[{level:2,title:"环境准备",slug:"环境准备",link:"#环境准备",children:[]},{level:2,title:"功能开发",slug:"功能开发",link:"#功能开发",children:[{level:3,title:"步骤1:开启SpringAOP的注解功能",slug:"步骤1-开启springaop的注解功能",link:"#步骤1-开启springaop的注解功能",children:[]},{level:3,title:"步骤2:创建AOP的通知类",slug:"步骤2-创建aop的通知类",link:"#步骤2-创建aop的通知类",children:[]},{level:3,title:"步骤3:添加环绕通知",slug:"步骤3-添加环绕通知",link:"#步骤3-添加环绕通知",children:[]},{level:3,title:"步骤4:完成核心业务，记录万次执行的时间",slug:"步骤4-完成核心业务-记录万次执行的时间",link:"#步骤4-完成核心业务-记录万次执行的时间",children:[]},{level:3,title:"步骤5:运行单元测试类",slug:"步骤5-运行单元测试类",link:"#步骤5-运行单元测试类",children:[]},{level:3,title:"步骤6:程序优化",slug:"步骤6-程序优化",link:"#步骤6-程序优化",children:[]},{level:3,title:"步骤7:运行单元测试类",slug:"步骤7-运行单元测试类",link:"#步骤7-运行单元测试类",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%88%87%E9%9D%A2.html",pathLocale:"/",extraFields:[]},{title:"日志切面排除路径",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/%E6%97%A5%E5%BF%97%E5%88%87%E9%9D%A2%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84.html",pathLocale:"/",extraFields:[]},{title:"Spring_day01",headers:[{level:2,title:"1，课程介绍",slug:"_1-课程介绍",link:"#_1-课程介绍",children:[{level:3,title:"1.1 为什么要学?",slug:"_1-1-为什么要学",link:"#_1-1-为什么要学",children:[]},{level:3,title:"1.2 学什么?",slug:"_1-2-学什么",link:"#_1-2-学什么",children:[]},{level:3,title:"1.3 怎么学?",slug:"_1-3-怎么学",link:"#_1-3-怎么学",children:[]}]},{level:2,title:"2，Spring相关概念",slug:"_2-spring相关概念",link:"#_2-spring相关概念",children:[{level:3,title:"2.1 初识Spring",slug:"_2-1-初识spring",link:"#_2-1-初识spring",children:[]},{level:3,title:"2.2 Spring系统架构",slug:"_2-2-spring系统架构",link:"#_2-2-spring系统架构",children:[]},{level:3,title:"2.3 Spring核心概念",slug:"_2-3-spring核心概念",link:"#_2-3-spring核心概念",children:[]}]},{level:2,title:"3，入门案例",slug:"_3-入门案例",link:"#_3-入门案例",children:[{level:3,title:"3.1 IOC入门案例",slug:"_3-1-ioc入门案例",link:"#_3-1-ioc入门案例",children:[]},{level:3,title:"3.2 DI入门案例",slug:"_3-2-di入门案例",link:"#_3-2-di入门案例",children:[]}]},{level:2,title:"4，IOC相关内容",slug:"_4-ioc相关内容",link:"#_4-ioc相关内容",children:[{level:3,title:"4.1 bean基础配置",slug:"_4-1-bean基础配置",link:"#_4-1-bean基础配置",children:[]},{level:3,title:"4.2 bean实例化",slug:"_4-2-bean实例化",link:"#_4-2-bean实例化",children:[]},{level:3,title:"4.3 bean的生命周期",slug:"_4-3-bean的生命周期",link:"#_4-3-bean的生命周期",children:[]}]},{level:2,title:"5，DI相关内容",slug:"_5-di相关内容",link:"#_5-di相关内容",children:[{level:3,title:"5.1 setter注入",slug:"_5-1-setter注入",link:"#_5-1-setter注入",children:[]},{level:3,title:"5.2 构造器注入",slug:"_5-2-构造器注入",link:"#_5-2-构造器注入",children:[]},{level:3,title:"5.3 自动配置",slug:"_5-3-自动配置",link:"#_5-3-自动配置",children:[]},{level:3,title:"5.4 集合注入",slug:"_5-4-集合注入",link:"#_5-4-集合注入",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/Spring_day01.html",pathLocale:"/",extraFields:[]},{title:"Spring_day02",headers:[{level:2,title:"1，IOC/DI配置管理第三方bean",slug:"_1-ioc-di配置管理第三方bean",link:"#_1-ioc-di配置管理第三方bean",children:[{level:3,title:"1.1 案例:数据源对象管理",slug:"_1-1-案例-数据源对象管理",link:"#_1-1-案例-数据源对象管理",children:[]},{level:3,title:"1.2 加载properties文件",slug:"_1-2-加载properties文件",link:"#_1-2-加载properties文件",children:[]}]},{level:2,title:"2，核心容器",slug:"_2-核心容器",link:"#_2-核心容器",children:[{level:3,title:"2.1 环境准备",slug:"_2-1-环境准备",link:"#_2-1-环境准备",children:[]},{level:3,title:"2.2 容器",slug:"_2-2-容器",link:"#_2-2-容器",children:[]},{level:3,title:"2.2 核心容器总结",slug:"_2-2-核心容器总结",link:"#_2-2-核心容器总结",children:[]}]},{level:2,title:"3，IOC/DI注解开发",slug:"_3-ioc-di注解开发",link:"#_3-ioc-di注解开发",children:[{level:3,title:"3.1 环境准备",slug:"_3-1-环境准备",link:"#_3-1-环境准备",children:[]},{level:3,title:"3.2 注解开发定义bean",slug:"_3-2-注解开发定义bean",link:"#_3-2-注解开发定义bean",children:[]},{level:3,title:"3.2 纯注解开发模式",slug:"_3-2-纯注解开发模式",link:"#_3-2-纯注解开发模式",children:[]},{level:3,title:"3.3 注解开发bean作用范围与生命周期管理",slug:"_3-3-注解开发bean作用范围与生命周期管理",link:"#_3-3-注解开发bean作用范围与生命周期管理",children:[]},{level:3,title:"3.4 注解开发依赖注入",slug:"_3-4-注解开发依赖注入",link:"#_3-4-注解开发依赖注入",children:[]}]},{level:2,title:"4，IOC/DI注解开发管理第三方bean",slug:"_4-ioc-di注解开发管理第三方bean",link:"#_4-ioc-di注解开发管理第三方bean",children:[{level:3,title:"4.1 环境准备",slug:"_4-1-环境准备",link:"#_4-1-环境准备",children:[]},{level:3,title:"4.2 注解开发管理第三方bean",slug:"_4-2-注解开发管理第三方bean",link:"#_4-2-注解开发管理第三方bean",children:[]},{level:3,title:"4.3 引入外部配置类",slug:"_4-3-引入外部配置类",link:"#_4-3-引入外部配置类",children:[]},{level:3,title:"知识点1：@Bean",slug:"知识点1-bean",link:"#知识点1-bean",children:[]},{level:3,title:"知识点2：@Import",slug:"知识点2-import",link:"#知识点2-import",children:[]},{level:3,title:"4.4 注解开发实现为第三方bean注入资源",slug:"_4-4-注解开发实现为第三方bean注入资源",link:"#_4-4-注解开发实现为第三方bean注入资源",children:[]}]},{level:2,title:"5，注解开发总结",slug:"_5-注解开发总结",link:"#_5-注解开发总结",children:[]},{level:2,title:"6，Spring整合",slug:"_6-spring整合",link:"#_6-spring整合",children:[{level:3,title:"6.1 Spring整合Mybatis思路分析",slug:"_6-1-spring整合mybatis思路分析",link:"#_6-1-spring整合mybatis思路分析",children:[]},{level:3,title:"6.2 Spring整合Mybatis",slug:"_6-2-spring整合mybatis",link:"#_6-2-spring整合mybatis",children:[]},{level:3,title:"6.3 Spring整合Junit",slug:"_6-3-spring整合junit",link:"#_6-3-spring整合junit",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/Spring_day02.html",pathLocale:"/",extraFields:[]},{title:"Spring_day03",headers:[{level:2,title:"1，AOP简介",slug:"_1-aop简介",link:"#_1-aop简介",children:[{level:3,title:"1.1 什么是AOP?",slug:"_1-1-什么是aop",link:"#_1-1-什么是aop",children:[]},{level:3,title:"1.2 AOP作用",slug:"_1-2-aop作用",link:"#_1-2-aop作用",children:[]},{level:3,title:"1.3 AOP核心概念",slug:"_1-3-aop核心概念",link:"#_1-3-aop核心概念",children:[]}]},{level:2,title:"2，AOP入门案例",slug:"_2-aop入门案例",link:"#_2-aop入门案例",children:[{level:3,title:"2.1 需求分析",slug:"_2-1-需求分析",link:"#_2-1-需求分析",children:[]},{level:3,title:"2.2 思路分析",slug:"_2-2-思路分析",link:"#_2-2-思路分析",children:[]},{level:3,title:"2.3 环境准备",slug:"_2-3-环境准备",link:"#_2-3-环境准备",children:[]},{level:3,title:"2.4 AOP实现步骤",slug:"_2-4-aop实现步骤",link:"#_2-4-aop实现步骤",children:[]},{level:3,title:"知识点1：@EnableAspectJAutoProxy",slug:"知识点1-enableaspectjautoproxy",link:"#知识点1-enableaspectjautoproxy",children:[]},{level:3,title:"知识点2：@Aspect",slug:"知识点2-aspect",link:"#知识点2-aspect",children:[]},{level:3,title:"知识点3：@Pointcut",slug:"知识点3-pointcut",link:"#知识点3-pointcut",children:[]},{level:3,title:"知识点4：@Before",slug:"知识点4-before",link:"#知识点4-before",children:[]}]},{level:2,title:"3，AOP工作流程",slug:"_3-aop工作流程",link:"#_3-aop工作流程",children:[{level:3,title:"3.1 AOP工作流程",slug:"_3-1-aop工作流程",link:"#_3-1-aop工作流程",children:[]},{level:3,title:"3.2 AOP核心概念",slug:"_3-2-aop核心概念",link:"#_3-2-aop核心概念",children:[]}]},{level:2,title:"4，AOP配置管理",slug:"_4-aop配置管理",link:"#_4-aop配置管理",children:[{level:3,title:"4.1 AOP切入点表达式",slug:"_4-1-aop切入点表达式",link:"#_4-1-aop切入点表达式",children:[]},{level:3,title:"4.2 AOP通知类型",slug:"_4-2-aop通知类型",link:"#_4-2-aop通知类型",children:[]},{level:3,title:"4.3 业务层接口执行效率",slug:"_4-3-业务层接口执行效率",link:"#_4-3-业务层接口执行效率",children:[]},{level:3,title:"4.4 AOP通知获取数据",slug:"_4-4-aop通知获取数据",link:"#_4-4-aop通知获取数据",children:[]},{level:3,title:"4.5 百度网盘密码数据兼容处理",slug:"_4-5-百度网盘密码数据兼容处理",link:"#_4-5-百度网盘密码数据兼容处理",children:[]}]},{level:2,title:"5，AOP总结",slug:"_5-aop总结",link:"#_5-aop总结",children:[{level:3,title:"5.1 AOP的核心概念",slug:"_5-1-aop的核心概念",link:"#_5-1-aop的核心概念",children:[]},{level:3,title:"5.2 切入点表达式",slug:"_5-2-切入点表达式",link:"#_5-2-切入点表达式",children:[]},{level:3,title:"5.3 五种通知类型",slug:"_5-3-五种通知类型",link:"#_5-3-五种通知类型",children:[]},{level:3,title:"5.4 通知中获取参数",slug:"_5-4-通知中获取参数",link:"#_5-4-通知中获取参数",children:[]}]},{level:2,title:"6，AOP事务管理",slug:"_6-aop事务管理",link:"#_6-aop事务管理",children:[{level:3,title:"6.1 Spring事务简介",slug:"_6-1-spring事务简介",link:"#_6-1-spring事务简介",children:[]},{level:3,title:"6.2 Spring事务角色",slug:"_6-2-spring事务角色",link:"#_6-2-spring事务角色",children:[]},{level:3,title:"6.3 Spring事务属性",slug:"_6-3-spring事务属性",link:"#_6-3-spring事务属性",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/Spring_day03.html",pathLocale:"/",extraFields:[]},{title:"Spring注解",headers:[{level:2,title:"AOP",slug:"aop",link:"#aop",children:[{level:3,title:"@PropertySource",slug:"propertysource",link:"#propertysource",children:[]},{level:3,title:"@Import",slug:"import",link:"#import",children:[]},{level:3,title:"@RunWith",slug:"runwith",link:"#runwith",children:[]},{level:3,title:"@ContextConfiguration",slug:"contextconfiguration",link:"#contextconfiguration",children:[]},{level:3,title:"@Repository",slug:"repository",link:"#repository",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"@EnableTransactionManagement",slug:"enabletransactionmanagement",link:"#enabletransactionmanagement",children:[]},{level:3,title:"@Transactional",slug:"transactional",link:"#transactional",children:[]}]},{level:2,title:"Web",slug:"web",link:"#web",children:[{level:3,title:"@ExceptionHandler",slug:"exceptionhandler",link:"#exceptionhandler",children:[]},{level:3,title:"@RestControllerAdvice",slug:"restcontrolleradvice",link:"#restcontrolleradvice",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E6%B3%A8%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"Spring随笔",headers:[{level:2,title:"AOP",slug:"aop",link:"#aop",children:[{level:3,title:"AOP通知获取数据",slug:"aop通知获取数据",link:"#aop通知获取数据",children:[]},{level:3,title:"获取返回值",slug:"获取返回值",link:"#获取返回值",children:[]},{level:3,title:"返回后通知获取返回值",slug:"返回后通知获取返回值",link:"#返回后通知获取返回值",children:[]}]},{level:2,title:"事务",slug:"事务",link:"#事务",children:[{level:3,title:"JdbcConfig类中配置事务管理器",slug:"jdbcconfig类中配置事务管理器",link:"#jdbcconfig类中配置事务管理器",children:[]}]}],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/Spring%E9%9A%8F%E7%AC%94.html",pathLocale:"/",extraFields:[]},{title:"SpringMVC_day01",headers:[{level:2,title:"1，SpringMVC概述",slug:"_1-springmvc概述",link:"#_1-springmvc概述",children:[]},{level:2,title:"2，SpringMVC入门案例",slug:"_2-springmvc入门案例",link:"#_2-springmvc入门案例",children:[{level:3,title:"2.1 需求分析",slug:"_2-1-需求分析",link:"#_2-1-需求分析",children:[]},{level:3,title:"2.2 案例制作",slug:"_2-2-案例制作",link:"#_2-2-案例制作",children:[]},{level:3,title:"知识点1：@Controller",slug:"知识点1-controller",link:"#知识点1-controller",children:[]},{level:3,title:"知识点2：@RequestMapping",slug:"知识点2-requestmapping",link:"#知识点2-requestmapping",children:[]},{level:3,title:"知识点3：@ResponseBody",slug:"知识点3-responsebody",link:"#知识点3-responsebody",children:[]},{level:3,title:"2.3 入门案例总结",slug:"_2-3-入门案例总结",link:"#_2-3-入门案例总结",children:[]},{level:3,title:"2.4 工作流程解析",slug:"_2-4-工作流程解析",link:"#_2-4-工作流程解析",children:[]},{level:3,title:"2.5 bean加载控制",slug:"_2-5-bean加载控制",link:"#_2-5-bean加载控制",children:[]},{level:3,title:"知识点1：@ComponentScan",slug:"知识点1-componentscan",link:"#知识点1-componentscan",children:[]}]},{level:2,title:"3，PostMan工具的使用",slug:"_3-postman工具的使用",link:"#_3-postman工具的使用",children:[{level:3,title:"3.1 PostMan简介",slug:"_3-1-postman简介",link:"#_3-1-postman简介",children:[]},{level:3,title:"3.2 PostMan安装",slug:"_3-2-postman安装",link:"#_3-2-postman安装",children:[]},{level:3,title:"3.3 PostMan使用",slug:"_3-3-postman使用",link:"#_3-3-postman使用",children:[]}]},{level:2,title:"4，请求与响应",slug:"_4-请求与响应",link:"#_4-请求与响应",children:[{level:3,title:"4.1 设置请求映射路径",slug:"_4-1-设置请求映射路径",link:"#_4-1-设置请求映射路径",children:[]},{level:3,title:"4.2 请求参数",slug:"_4-2-请求参数",link:"#_4-2-请求参数",children:[]},{level:3,title:"4.3 五种类型参数传递",slug:"_4-3-五种类型参数传递",link:"#_4-3-五种类型参数传递",children:[]},{level:3,title:"知识点1：@RequestParam",slug:"知识点1-requestparam",link:"#知识点1-requestparam",children:[]},{level:3,title:"4.4 JSON数据传输参数",slug:"_4-4-json数据传输参数",link:"#_4-4-json数据传输参数",children:[]},{level:3,title:"4.5 日期类型参数传递",slug:"_4-5-日期类型参数传递",link:"#_4-5-日期类型参数传递",children:[]},{level:3,title:"4.6 响应",slug:"_4-6-响应",link:"#_4-6-响应",children:[]}]},{level:2,title:"5，Rest风格",slug:"_5-rest风格",link:"#_5-rest风格",children:[{level:3,title:"5.1 REST简介",slug:"_5-1-rest简介",link:"#_5-1-rest简介",children:[]},{level:3,title:"5.2 RESTful入门案例",slug:"_5-2-restful入门案例",link:"#_5-2-restful入门案例",children:[]},{level:3,title:"5.3 RESTful快速开发",slug:"_5-3-restful快速开发",link:"#_5-3-restful快速开发",children:[]},{level:3,title:"5.4 RESTful案例",slug:"_5-4-restful案例",link:"#_5-4-restful案例",children:[]}]}],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/SpringMVC_day01.html",pathLocale:"/",extraFields:[]},{title:"SpringMVC_day02",headers:[{level:2,title:"1，SSM整合",slug:"_1-ssm整合",link:"#_1-ssm整合",children:[{level:3,title:"1.1 流程分析",slug:"_1-1-流程分析",link:"#_1-1-流程分析",children:[]},{level:3,title:"1.2 整合配置",slug:"_1-2-整合配置",link:"#_1-2-整合配置",children:[]},{level:3,title:"1.3 功能模块开发",slug:"_1-3-功能模块开发",link:"#_1-3-功能模块开发",children:[]},{level:3,title:"1.4 单元测试",slug:"_1-4-单元测试",link:"#_1-4-单元测试",children:[]},{level:3,title:"1.5 PostMan测试",slug:"_1-5-postman测试",link:"#_1-5-postman测试",children:[]}]},{level:2,title:"2，统一结果封装",slug:"_2-统一结果封装",link:"#_2-统一结果封装",children:[{level:3,title:"2.1 表现层与前端数据传输协议定义",slug:"_2-1-表现层与前端数据传输协议定义",link:"#_2-1-表现层与前端数据传输协议定义",children:[]},{level:3,title:"2.2 表现层与前端数据传输协议实现",slug:"_2-2-表现层与前端数据传输协议实现",link:"#_2-2-表现层与前端数据传输协议实现",children:[]}]},{level:2,title:"3，统一异常处理",slug:"_3-统一异常处理",link:"#_3-统一异常处理",children:[{level:3,title:"3.1 问题描述",slug:"_3-1-问题描述",link:"#_3-1-问题描述",children:[]},{level:3,title:"3.2 异常处理器的使用",slug:"_3-2-异常处理器的使用",link:"#_3-2-异常处理器的使用",children:[]},{level:3,title:"3.3 项目异常处理方案",slug:"_3-3-项目异常处理方案",link:"#_3-3-项目异常处理方案",children:[]}]},{level:2,title:"4，前后台协议联调",slug:"_4-前后台协议联调",link:"#_4-前后台协议联调",children:[{level:3,title:"4.1 环境准备",slug:"_4-1-环境准备",link:"#_4-1-环境准备",children:[]},{level:3,title:"4.2 列表功能",slug:"_4-2-列表功能",link:"#_4-2-列表功能",children:[]},{level:3,title:"4.3 添加功能",slug:"_4-3-添加功能",link:"#_4-3-添加功能",children:[]},{level:3,title:"4.4 添加功能状态处理",slug:"_4-4-添加功能状态处理",link:"#_4-4-添加功能状态处理",children:[]},{level:3,title:"4.5 修改功能",slug:"_4-5-修改功能",link:"#_4-5-修改功能",children:[]},{level:3,title:"4.6 删除功能",slug:"_4-6-删除功能",link:"#_4-6-删除功能",children:[]}]},{level:2,title:"5，拦截器",slug:"_5-拦截器",link:"#_5-拦截器",children:[{level:3,title:"5.1 拦截器概念",slug:"_5-1-拦截器概念",link:"#_5-1-拦截器概念",children:[]},{level:3,title:"5.2 拦截器入门案例",slug:"_5-2-拦截器入门案例",link:"#_5-2-拦截器入门案例",children:[]},{level:3,title:"5.3 拦截器参数",slug:"_5-3-拦截器参数",link:"#_5-3-拦截器参数",children:[]},{level:3,title:"5.4 拦截器链配置",slug:"_5-4-拦截器链配置",link:"#_5-4-拦截器链配置",children:[]}]}],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/SpringMVC_day02.html",pathLocale:"/",extraFields:[]},{title:"SpringMVC注解",headers:[{level:2,title:"@EnableWebMvc",slug:"enablewebmvc",link:"#enablewebmvc",children:[]}],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E6%B3%A8%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"SpringMVC随笔",headers:[{level:2,title:"1.servlet的坐标为什么需要添加<scope>provided</scope>?",slug:"_1-servlet的坐标为什么需要添加-scope-provided-scope",link:"#_1-servlet的坐标为什么需要添加-scope-provided-scope",children:[]},{level:2,title:"2.参数乱码处理",slug:"_2-参数乱码处理",link:"#_2-参数乱码处理",children:[{level:3,title:"GET请求中文乱码",slug:"get请求中文乱码",link:"#get请求中文乱码",children:[]},{level:3,title:"POST请求中文乱码",slug:"post请求中文乱码",link:"#post请求中文乱码",children:[]}]}],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/SpringMVC%E9%9A%8F%E7%AC%94.html",pathLocale:"/",extraFields:[]},{title:"packaging 类型",headers:[],path:"/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/packaging%E7%B1%BB%E5%9E%8B.html",pathLocale:"/",extraFields:[]},{title:"Pom中的relativePath",headers:[],path:"/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/pom%E4%B8%AD%E7%9A%84relativePath.html",pathLocale:"/",extraFields:[]},{title:"0.安装Docker",headers:[{level:2,title:"1.1.卸载（可选）",slug:"_1-1-卸载-可选",link:"#_1-1-卸载-可选",children:[]},{level:2,title:"1.2.安装docker",slug:"_1-2-安装docker",link:"#_1-2-安装docker",children:[]},{level:2,title:"1.3.启动docker",slug:"_1-3-启动docker",link:"#_1-3-启动docker",children:[]},{level:2,title:"1.4.配置镜像加速",slug:"_1-4-配置镜像加速",link:"#_1-4-配置镜像加速",children:[]},{level:2,title:"2.1.下载",slug:"_2-1-下载",link:"#_2-1-下载",children:[]},{level:2,title:"2.2.修改文件权限",slug:"_2-2-修改文件权限",link:"#_2-2-修改文件权限",children:[]},{level:2,title:"2.3.Base自动补全命令：",slug:"_2-3-base自动补全命令",link:"#_2-3-base自动补全命令",children:[]},{level:2,title:"3.1.简化版镜像仓库",slug:"_3-1-简化版镜像仓库",link:"#_3-1-简化版镜像仓库",children:[]},{level:2,title:"3.2.带有图形化界面版本",slug:"_3-2-带有图形化界面版本",link:"#_3-2-带有图形化界面版本",children:[]},{level:2,title:"3.3.配置Docker信任地址",slug:"_3-3-配置docker信任地址",link:"#_3-3-配置docker信任地址",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Centos7%E5%AE%89%E8%A3%85Docker.html",pathLocale:"/",extraFields:[]},{title:"Docker实用篇",headers:[{level:2,title:"1.1.什么是Docker",slug:"_1-1-什么是docker",link:"#_1-1-什么是docker",children:[{level:3,title:"1.1.1.应用部署的环境问题",slug:"_1-1-1-应用部署的环境问题",link:"#_1-1-1-应用部署的环境问题",children:[]},{level:3,title:"1.1.2.Docker解决依赖兼容问题",slug:"_1-1-2-docker解决依赖兼容问题",link:"#_1-1-2-docker解决依赖兼容问题",children:[]},{level:3,title:"1.1.3.Docker解决操作系统环境差异",slug:"_1-1-3-docker解决操作系统环境差异",link:"#_1-1-3-docker解决操作系统环境差异",children:[]},{level:3,title:"1.1.4.小结",slug:"_1-1-4-小结",link:"#_1-1-4-小结",children:[]}]},{level:2,title:"1.2.Docker和虚拟机的区别",slug:"_1-2-docker和虚拟机的区别",link:"#_1-2-docker和虚拟机的区别",children:[]},{level:2,title:"1.3.Docker架构",slug:"_1-3-docker架构",link:"#_1-3-docker架构",children:[{level:3,title:"1.3.1.镜像和容器",slug:"_1-3-1-镜像和容器",link:"#_1-3-1-镜像和容器",children:[]},{level:3,title:"1.3.2.DockerHub",slug:"_1-3-2-dockerhub",link:"#_1-3-2-dockerhub",children:[]},{level:3,title:"1.3.3.Docker架构",slug:"_1-3-3-docker架构",link:"#_1-3-3-docker架构",children:[]},{level:3,title:"1.3.4.小结",slug:"_1-3-4-小结",link:"#_1-3-4-小结",children:[]}]},{level:2,title:"1.4.安装Docker",slug:"_1-4-安装docker",link:"#_1-4-安装docker",children:[]},{level:2,title:"2.1.镜像操作",slug:"_2-1-镜像操作",link:"#_2-1-镜像操作",children:[{level:3,title:"2.1.1.镜像名称",slug:"_2-1-1-镜像名称",link:"#_2-1-1-镜像名称",children:[]},{level:3,title:"2.1.2.镜像命令",slug:"_2-1-2-镜像命令",link:"#_2-1-2-镜像命令",children:[]},{level:3,title:"2.1.3.案例1-拉取、查看镜像",slug:"_2-1-3-案例1-拉取、查看镜像",link:"#_2-1-3-案例1-拉取、查看镜像",children:[]},{level:3,title:"2.1.4.案例2-保存、导入镜像",slug:"_2-1-4-案例2-保存、导入镜像",link:"#_2-1-4-案例2-保存、导入镜像",children:[]},{level:3,title:"2.1.5.练习",slug:"_2-1-5-练习",link:"#_2-1-5-练习",children:[]}]},{level:2,title:"2.2.容器操作",slug:"_2-2-容器操作",link:"#_2-2-容器操作",children:[{level:3,title:"2.2.1.容器相关命令",slug:"_2-2-1-容器相关命令",link:"#_2-2-1-容器相关命令",children:[]},{level:3,title:"2.2.2.案例-创建并运行一个容器",slug:"_2-2-2-案例-创建并运行一个容器",link:"#_2-2-2-案例-创建并运行一个容器",children:[]},{level:3,title:"2.2.3.案例-进入容器，修改文件",slug:"_2-2-3-案例-进入容器-修改文件",link:"#_2-2-3-案例-进入容器-修改文件",children:[]},{level:3,title:"2.2.4.小结",slug:"_2-2-4-小结",link:"#_2-2-4-小结",children:[]}]},{level:2,title:"2.3.数据卷（容器数据管理）",slug:"_2-3-数据卷-容器数据管理",link:"#_2-3-数据卷-容器数据管理",children:[{level:3,title:"2.3.1.什么是数据卷",slug:"_2-3-1-什么是数据卷",link:"#_2-3-1-什么是数据卷",children:[]},{level:3,title:"2.3.2.数据集操作命令",slug:"_2-3-2-数据集操作命令",link:"#_2-3-2-数据集操作命令",children:[]},{level:3,title:"2.3.3.创建和查看数据卷",slug:"_2-3-3-创建和查看数据卷",link:"#_2-3-3-创建和查看数据卷",children:[]},{level:3,title:"2.3.4.挂载数据卷",slug:"_2-3-4-挂载数据卷",link:"#_2-3-4-挂载数据卷",children:[]},{level:3,title:"2.3.5.案例-给nginx挂载数据卷",slug:"_2-3-5-案例-给nginx挂载数据卷",link:"#_2-3-5-案例-给nginx挂载数据卷",children:[]},{level:3,title:"2.3.6.案例-给MySQL挂载本地目录",slug:"_2-3-6-案例-给mysql挂载本地目录",link:"#_2-3-6-案例-给mysql挂载本地目录",children:[]},{level:3,title:"2.3.7.小结",slug:"_2-3-7-小结",link:"#_2-3-7-小结",children:[]}]},{level:2,title:"3.1.镜像结构",slug:"_3-1-镜像结构",link:"#_3-1-镜像结构",children:[]},{level:2,title:"3.2.Dockerfile语法",slug:"_3-2-dockerfile语法",link:"#_3-2-dockerfile语法",children:[]},{level:2,title:"3.3.构建Java项目",slug:"_3-3-构建java项目",link:"#_3-3-构建java项目",children:[{level:3,title:"3.3.1.基于Ubuntu构建Java项目",slug:"_3-3-1-基于ubuntu构建java项目",link:"#_3-3-1-基于ubuntu构建java项目",children:[]},{level:3,title:"3.3.2.基于java8构建Java项目",slug:"_3-3-2-基于java8构建java项目",link:"#_3-3-2-基于java8构建java项目",children:[]}]},{level:2,title:"3.4.小结",slug:"_3-4-小结",link:"#_3-4-小结",children:[]},{level:2,title:"4.1.初识DockerCompose",slug:"_4-1-初识dockercompose",link:"#_4-1-初识dockercompose",children:[]},{level:2,title:"4.2.安装DockerCompose",slug:"_4-2-安装dockercompose",link:"#_4-2-安装dockercompose",children:[]},{level:2,title:"4.3.部署微服务集群",slug:"_4-3-部署微服务集群",link:"#_4-3-部署微服务集群",children:[{level:3,title:"4.3.1.compose文件",slug:"_4-3-1-compose文件",link:"#_4-3-1-compose文件",children:[]},{level:3,title:"4.3.2.修改微服务配置",slug:"_4-3-2-修改微服务配置",link:"#_4-3-2-修改微服务配置",children:[]},{level:3,title:"4.3.3.打包",slug:"_4-3-3-打包",link:"#_4-3-3-打包",children:[]},{level:3,title:"4.3.4.拷贝jar包到部署目录",slug:"_4-3-4-拷贝jar包到部署目录",link:"#_4-3-4-拷贝jar包到部署目录",children:[]},{level:3,title:"4.3.5.部署",slug:"_4-3-5-部署",link:"#_4-3-5-部署",children:[]}]},{level:2,title:"5.1.搭建私有镜像仓库",slug:"_5-1-搭建私有镜像仓库",link:"#_5-1-搭建私有镜像仓库",children:[]},{level:2,title:"5.2.推送、拉取镜像",slug:"_5-2-推送、拉取镜像",link:"#_5-2-推送、拉取镜像",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/Docker%E5%AE%9E%E7%94%A8%E7%AF%87.html",pathLocale:"/",extraFields:[]},{title:"1.什么是ES?",headers:[{level:2,title:"1.什么是elasticsearch?",slug:"_1-什么是elasticsearch",link:"#_1-什么是elasticsearch",children:[]},{level:2,title:"2.什么是elastic stack(ELK)?",slug:"_2-什么是elastic-stack-elk",link:"#_2-什么是elastic-stack-elk",children:[{level:3,title:"Elastic Stack 的典型用途：",slug:"elastic-stack-的典型用途",link:"#elastic-stack-的典型用途",children:[]}]},{level:2,title:"3.什么是Lucene?",slug:"_3-什么是lucene",link:"#_3-什么是lucene",children:[{level:3,title:"主要特点：",slug:"主要特点",link:"#主要特点",children:[]},{level:3,title:"典型应用：",slug:"典型应用",link:"#典型应用",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/1.%E4%BB%80%E4%B9%88%E6%98%AFES.html",pathLocale:"/",extraFields:[]},{title:"10.分页",headers:[{level:3,title:"1. 基本分页（from 和 size）",slug:"_1-基本分页-from-和-size",link:"#_1-基本分页-from-和-size",children:[]},{level:3,title:"2. 深度分页（基于from 和 size）",slug:"_2-深度分页-基于from-和-size",link:"#_2-深度分页-基于from-和-size",children:[]},{level:3,title:"3. 基于search_after的分页",slug:"_3-基于search-after的分页",link:"#_3-基于search-after的分页",children:[]},{level:3,title:"4. 滚动查询（Scroll）",slug:"_4-滚动查询-scroll",link:"#_4-滚动查询-scroll",children:[]},{level:3,title:"5. 禁用总数计算（track_total_hits）",slug:"_5-禁用总数计算-track-total-hits",link:"#_5-禁用总数计算-track-total-hits",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/10.%E5%88%86%E9%A1%B5.html",pathLocale:"/",extraFields:[]},{title:"2.倒排索引",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/2.%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.html",pathLocale:"/",extraFields:[]},{title:"3.基本概念",headers:[{level:3,title:"基本概念",slug:"基本概念",link:"#基本概念",children:[]},{level:3,title:"elasticsearch与数据库的关系",slug:"elasticsearch与数据库的关系",link:"#elasticsearch与数据库的关系",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/3.%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html",pathLocale:"/",extraFields:[]},{title:"4.安装elasticsearch",headers:[{level:2,title:"1.1.创建网络",slug:"_1-1-创建网络",link:"#_1-1-创建网络",children:[]},{level:2,title:"1.2.加载镜像",slug:"_1-2-加载镜像",link:"#_1-2-加载镜像",children:[]},{level:2,title:"1.3.运行",slug:"_1-3-运行",link:"#_1-3-运行",children:[]},{level:2,title:"2.1.部署",slug:"_2-1-部署",link:"#_2-1-部署",children:[]},{level:2,title:"2.2.DevTools",slug:"_2-2-devtools",link:"#_2-2-devtools",children:[]},{level:2,title:"3.1.在线安装ik插件（较慢）",slug:"_3-1-在线安装ik插件-较慢",link:"#_3-1-在线安装ik插件-较慢",children:[]},{level:2,title:"3.2.离线安装ik插件（推荐）",slug:"_3-2-离线安装ik插件-推荐",link:"#_3-2-离线安装ik插件-推荐",children:[{level:3,title:"1）查看数据卷目录",slug:"_1-查看数据卷目录",link:"#_1-查看数据卷目录",children:[]},{level:3,title:"2）解压缩分词器安装包",slug:"_2-解压缩分词器安装包",link:"#_2-解压缩分词器安装包",children:[]},{level:3,title:"3）上传到es容器的插件数据卷中",slug:"_3-上传到es容器的插件数据卷中",link:"#_3-上传到es容器的插件数据卷中",children:[]},{level:3,title:"4）重启容器",slug:"_4-重启容器",link:"#_4-重启容器",children:[]},{level:3,title:"5）测试：",slug:"_5-测试",link:"#_5-测试",children:[]}]},{level:2,title:"3.3 扩展词词典",slug:"_3-3-扩展词词典",link:"#_3-3-扩展词词典",children:[]},{level:2,title:"3.4 停用词词典",slug:"_3-4-停用词词典",link:"#_3-4-停用词词典",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/4.%E5%AE%89%E8%A3%85elasticsearch.html",pathLocale:"/",extraFields:[]},{title:"5.分词器",headers:[{level:3,title:"分词器的作用是什么？",slug:"分词器的作用是什么",link:"#分词器的作用是什么",children:[]},{level:3,title:"IK分词器有几种模式？",slug:"ik分词器有几种模式",link:"#ik分词器有几种模式",children:[]},{level:3,title:"K分词器如何拓展词条？如何停用词条？",slug:"k分词器如何拓展词条-如何停用词条",link:"#k分词器如何拓展词条-如何停用词条",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/5.%E5%88%86%E8%AF%8D%E5%99%A8.html",pathLocale:"/",extraFields:[]},{title:"6.mapping常见属性",headers:[{level:3,title:"mapping常见属性有哪些？",slug:"mapping常见属性有哪些",link:"#mapping常见属性有哪些",children:[]},{level:3,title:"type常见的有哪些？",slug:"type常见的有哪些",link:"#type常见的有哪些",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/6.mapping%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7.html",pathLocale:"/",extraFields:[]},{title:"7.创建索引库",headers:[{level:3,title:"示例",slug:"示例",link:"#示例",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/7.%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%BA%93.html",pathLocale:"/",extraFields:[]},{title:"8.常见查询类型",headers:[{level:3,title:"0.查询语法",slug:"_0-查询语法",link:"#_0-查询语法",children:[]},{level:3,title:"1. 查询所有（Match All）",slug:"_1-查询所有-match-all",link:"#_1-查询所有-match-all",children:[]},{level:3,title:"2. 全文检索（Full Text）",slug:"_2-全文检索-full-text",link:"#_2-全文检索-full-text",children:[]},{level:3,title:"3. 精确查询（Exact Match）",slug:"_3-精确查询-exact-match",link:"#_3-精确查询-exact-match",children:[]},{level:3,title:"4. 地理查询（Geo）",slug:"_4-地理查询-geo",link:"#_4-地理查询-geo",children:[]},{level:3,title:"5. 复合查询（Compound）",slug:"_5-复合查询-compound",link:"#_5-复合查询-compound",children:[]},{level:3,title:"6. 模糊查询（Fuzzy Query）",slug:"_6-模糊查询-fuzzy-query",link:"#_6-模糊查询-fuzzy-query",children:[]},{level:3,title:"7. 前缀查询（Prefix Query）",slug:"_7-前缀查询-prefix-query",link:"#_7-前缀查询-prefix-query",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/8.%E5%B8%B8%E8%A7%81%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B.html",pathLocale:"/",extraFields:[]},{title:"copy_to的用法",headers:[{level:3,title:"copy_to 的基本用法",slug:"copy-to-的基本用法",link:"#copy-to-的基本用法",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/9.copy_to%E7%9A%84%E7%94%A8%E6%B3%95.html",pathLocale:"/",extraFields:[]},{title:"视频教程",headers:[{level:3,title:"学习进度",slug:"学习进度",link:"#学习进度",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B.html",pathLocale:"/",extraFields:[]},{title:"讲义-分布式搜索引擎01",headers:[{level:2,title:"1.1.了解ES",slug:"_1-1-了解es",link:"#_1-1-了解es",children:[{level:3,title:"1.1.1.elasticsearch的作用",slug:"_1-1-1-elasticsearch的作用",link:"#_1-1-1-elasticsearch的作用",children:[]},{level:3,title:"1.1.2.ELK技术栈",slug:"_1-1-2-elk技术栈",link:"#_1-1-2-elk技术栈",children:[]},{level:3,title:"1.1.3.elasticsearch和lucene",slug:"_1-1-3-elasticsearch和lucene",link:"#_1-1-3-elasticsearch和lucene",children:[]},{level:3,title:"1.1.4.为什么不是其他搜索技术？",slug:"_1-1-4-为什么不是其他搜索技术",link:"#_1-1-4-为什么不是其他搜索技术",children:[]},{level:3,title:"1.1.5.总结",slug:"_1-1-5-总结",link:"#_1-1-5-总结",children:[]}]},{level:2,title:"1.2.倒排索引",slug:"_1-2-倒排索引",link:"#_1-2-倒排索引",children:[{level:3,title:"1.2.1.正向索引",slug:"_1-2-1-正向索引",link:"#_1-2-1-正向索引",children:[]},{level:3,title:"1.2.2.倒排索引",slug:"_1-2-2-倒排索引",link:"#_1-2-2-倒排索引",children:[]},{level:3,title:"1.2.3.正向和倒排",slug:"_1-2-3-正向和倒排",link:"#_1-2-3-正向和倒排",children:[]}]},{level:2,title:"1.3.es的一些概念",slug:"_1-3-es的一些概念",link:"#_1-3-es的一些概念",children:[{level:3,title:"1.3.1.文档和字段",slug:"_1-3-1-文档和字段",link:"#_1-3-1-文档和字段",children:[]},{level:3,title:"1.3.2.索引和映射",slug:"_1-3-2-索引和映射",link:"#_1-3-2-索引和映射",children:[]},{level:3,title:"1.3.3.mysql与elasticsearch",slug:"_1-3-3-mysql与elasticsearch",link:"#_1-3-3-mysql与elasticsearch",children:[]}]},{level:2,title:"1.4.安装es、kibana",slug:"_1-4-安装es、kibana",link:"#_1-4-安装es、kibana",children:[{level:3,title:"1.4.1.安装",slug:"_1-4-1-安装",link:"#_1-4-1-安装",children:[]},{level:3,title:"1.4.2.分词器",slug:"_1-4-2-分词器",link:"#_1-4-2-分词器",children:[]},{level:3,title:"1.4.3.总结",slug:"_1-4-3-总结",link:"#_1-4-3-总结",children:[]}]},{level:2,title:"2.1.mapping映射属性",slug:"_2-1-mapping映射属性",link:"#_2-1-mapping映射属性",children:[]},{level:2,title:"2.2.索引库的CRUD",slug:"_2-2-索引库的crud",link:"#_2-2-索引库的crud",children:[{level:3,title:"2.2.1.创建索引库和映射",slug:"_2-2-1-创建索引库和映射",link:"#_2-2-1-创建索引库和映射",children:[]},{level:3,title:"2.2.2.查询索引库",slug:"_2-2-2-查询索引库",link:"#_2-2-2-查询索引库",children:[]},{level:3,title:"2.2.3.修改索引库",slug:"_2-2-3-修改索引库",link:"#_2-2-3-修改索引库",children:[]},{level:3,title:"2.2.4.删除索引库",slug:"_2-2-4-删除索引库",link:"#_2-2-4-删除索引库",children:[]},{level:3,title:"2.2.5.总结",slug:"_2-2-5-总结",link:"#_2-2-5-总结",children:[]}]},{level:2,title:"3.1.新增文档",slug:"_3-1-新增文档",link:"#_3-1-新增文档",children:[]},{level:2,title:"3.2.查询文档",slug:"_3-2-查询文档",link:"#_3-2-查询文档",children:[]},{level:2,title:"3.3.删除文档",slug:"_3-3-删除文档",link:"#_3-3-删除文档",children:[]},{level:2,title:"3.4.修改文档",slug:"_3-4-修改文档",link:"#_3-4-修改文档",children:[{level:3,title:"3.4.1.全量修改",slug:"_3-4-1-全量修改",link:"#_3-4-1-全量修改",children:[]},{level:3,title:"3.4.2.增量修改",slug:"_3-4-2-增量修改",link:"#_3-4-2-增量修改",children:[]}]},{level:2,title:"3.5.总结",slug:"_3-5-总结",link:"#_3-5-总结",children:[]},{level:2,title:"4.0.导入Demo工程",slug:"_4-0-导入demo工程",link:"#_4-0-导入demo工程",children:[{level:3,title:"4.0.1.导入数据",slug:"_4-0-1-导入数据",link:"#_4-0-1-导入数据",children:[]},{level:3,title:"4.0.2.导入项目",slug:"_4-0-2-导入项目",link:"#_4-0-2-导入项目",children:[]},{level:3,title:"4.0.3.mapping映射分析",slug:"_4-0-3-mapping映射分析",link:"#_4-0-3-mapping映射分析",children:[]},{level:3,title:"4.0.4.初始化RestClient",slug:"_4-0-4-初始化restclient",link:"#_4-0-4-初始化restclient",children:[]}]},{level:2,title:"4.1.创建索引库",slug:"_4-1-创建索引库",link:"#_4-1-创建索引库",children:[{level:3,title:"4.1.1.代码解读",slug:"_4-1-1-代码解读",link:"#_4-1-1-代码解读",children:[]},{level:3,title:"4.1.2.完整示例",slug:"_4-1-2-完整示例",link:"#_4-1-2-完整示例",children:[]}]},{level:2,title:"4.2.删除索引库",slug:"_4-2-删除索引库",link:"#_4-2-删除索引库",children:[]},{level:2,title:"4.3.判断索引库是否存在",slug:"_4-3-判断索引库是否存在",link:"#_4-3-判断索引库是否存在",children:[]},{level:2,title:"4.4.总结",slug:"_4-4-总结",link:"#_4-4-总结",children:[]},{level:2,title:"5.1.新增文档",slug:"_5-1-新增文档",link:"#_5-1-新增文档",children:[{level:3,title:"5.1.1.索引库实体类",slug:"_5-1-1-索引库实体类",link:"#_5-1-1-索引库实体类",children:[]},{level:3,title:"5.1.2.语法说明",slug:"_5-1-2-语法说明",link:"#_5-1-2-语法说明",children:[]},{level:3,title:"5.1.3.完整代码",slug:"_5-1-3-完整代码",link:"#_5-1-3-完整代码",children:[]}]},{level:2,title:"5.2.查询文档",slug:"_5-2-查询文档",link:"#_5-2-查询文档",children:[{level:3,title:"5.2.1.语法说明",slug:"_5-2-1-语法说明",link:"#_5-2-1-语法说明",children:[]},{level:3,title:"5.2.2.完整代码",slug:"_5-2-2-完整代码",link:"#_5-2-2-完整代码",children:[]}]},{level:2,title:"5.3.删除文档",slug:"_5-3-删除文档",link:"#_5-3-删除文档",children:[]},{level:2,title:"5.4.修改文档",slug:"_5-4-修改文档",link:"#_5-4-修改文档",children:[{level:3,title:"5.4.1.语法说明",slug:"_5-4-1-语法说明",link:"#_5-4-1-语法说明",children:[]},{level:3,title:"5.4.2.完整代码",slug:"_5-4-2-完整代码",link:"#_5-4-2-完整代码",children:[]}]},{level:2,title:"5.5.批量导入文档",slug:"_5-5-批量导入文档",link:"#_5-5-批量导入文档",children:[{level:3,title:"5.5.1.语法说明",slug:"_5-5-1-语法说明",link:"#_5-5-1-语法说明",children:[]},{level:3,title:"5.5.2.完整代码",slug:"_5-5-2-完整代码",link:"#_5-5-2-完整代码",children:[]}]},{level:2,title:"5.6.小结",slug:"_5-6-小结",link:"#_5-6-小结",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E01.html",pathLocale:"/",extraFields:[]},{title:"讲义-分布式搜索引擎02",headers:[{level:2,title:"1.1.DSL查询分类",slug:"_1-1-dsl查询分类",link:"#_1-1-dsl查询分类",children:[]},{level:2,title:"1.2.全文检索查询",slug:"_1-2-全文检索查询",link:"#_1-2-全文检索查询",children:[{level:3,title:"1.2.1.使用场景",slug:"_1-2-1-使用场景",link:"#_1-2-1-使用场景",children:[]},{level:3,title:"1.2.2.基本语法",slug:"_1-2-2-基本语法",link:"#_1-2-2-基本语法",children:[]},{level:3,title:"1.2.3.示例",slug:"_1-2-3-示例",link:"#_1-2-3-示例",children:[]},{level:3,title:"1.2.4.总结",slug:"_1-2-4-总结",link:"#_1-2-4-总结",children:[]}]},{level:2,title:"1.3.精准查询",slug:"_1-3-精准查询",link:"#_1-3-精准查询",children:[{level:3,title:"1.3.1.term查询",slug:"_1-3-1-term查询",link:"#_1-3-1-term查询",children:[]},{level:3,title:"1.3.2.range查询",slug:"_1-3-2-range查询",link:"#_1-3-2-range查询",children:[]},{level:3,title:"1.3.3.总结",slug:"_1-3-3-总结",link:"#_1-3-3-总结",children:[]}]},{level:2,title:"1.4.地理坐标查询",slug:"_1-4-地理坐标查询",link:"#_1-4-地理坐标查询",children:[{level:3,title:"1.4.1.矩形范围查询",slug:"_1-4-1-矩形范围查询",link:"#_1-4-1-矩形范围查询",children:[]},{level:3,title:"1.4.2.附近查询",slug:"_1-4-2-附近查询",link:"#_1-4-2-附近查询",children:[]}]},{level:2,title:"1.5.复合查询",slug:"_1-5-复合查询",link:"#_1-5-复合查询",children:[{level:3,title:"1.5.1.相关性算分",slug:"_1-5-1-相关性算分",link:"#_1-5-1-相关性算分",children:[]},{level:3,title:"1.5.2.算分函数查询",slug:"_1-5-2-算分函数查询",link:"#_1-5-2-算分函数查询",children:[]},{level:3,title:"1.5.3.布尔查询",slug:"_1-5-3-布尔查询",link:"#_1-5-3-布尔查询",children:[]}]},{level:2,title:"2.1.排序",slug:"_2-1-排序",link:"#_2-1-排序",children:[{level:3,title:"2.1.1.普通字段排序",slug:"_2-1-1-普通字段排序",link:"#_2-1-1-普通字段排序",children:[]},{level:3,title:"2.1.2.地理坐标排序",slug:"_2-1-2-地理坐标排序",link:"#_2-1-2-地理坐标排序",children:[]}]},{level:2,title:"2.2.分页",slug:"_2-2-分页",link:"#_2-2-分页",children:[{level:3,title:"2.2.1.基本的分页",slug:"_2-2-1-基本的分页",link:"#_2-2-1-基本的分页",children:[]},{level:3,title:"2.2.2.深度分页问题",slug:"_2-2-2-深度分页问题",link:"#_2-2-2-深度分页问题",children:[]},{level:3,title:"2.2.3.小结",slug:"_2-2-3-小结",link:"#_2-2-3-小结",children:[]}]},{level:2,title:"2.3.高亮",slug:"_2-3-高亮",link:"#_2-3-高亮",children:[{level:3,title:"2.3.1.高亮原理",slug:"_2-3-1-高亮原理",link:"#_2-3-1-高亮原理",children:[]},{level:3,title:"2.3.2.实现高亮",slug:"_2-3-2-实现高亮",link:"#_2-3-2-实现高亮",children:[]}]},{level:2,title:"2.4.总结",slug:"_2-4-总结",link:"#_2-4-总结",children:[]},{level:2,title:"3.1.快速入门",slug:"_3-1-快速入门",link:"#_3-1-快速入门",children:[{level:3,title:"3.1.1.发起查询请求",slug:"_3-1-1-发起查询请求",link:"#_3-1-1-发起查询请求",children:[]},{level:3,title:"3.1.2.解析响应",slug:"_3-1-2-解析响应",link:"#_3-1-2-解析响应",children:[]},{level:3,title:"3.1.3.完整代码",slug:"_3-1-3-完整代码",link:"#_3-1-3-完整代码",children:[]},{level:3,title:"3.1.4.小结",slug:"_3-1-4-小结",link:"#_3-1-4-小结",children:[]}]},{level:2,title:"3.2.match查询",slug:"_3-2-match查询",link:"#_3-2-match查询",children:[]},{level:2,title:"3.3.精确查询",slug:"_3-3-精确查询",link:"#_3-3-精确查询",children:[]},{level:2,title:"3.4.布尔查询",slug:"_3-4-布尔查询",link:"#_3-4-布尔查询",children:[]},{level:2,title:"3.5.排序、分页",slug:"_3-5-排序、分页",link:"#_3-5-排序、分页",children:[]},{level:2,title:"3.6.高亮",slug:"_3-6-高亮",link:"#_3-6-高亮",children:[{level:3,title:"3.6.1.高亮请求构建",slug:"_3-6-1-高亮请求构建",link:"#_3-6-1-高亮请求构建",children:[]},{level:3,title:"3.6.2.高亮结果解析",slug:"_3-6-2-高亮结果解析",link:"#_3-6-2-高亮结果解析",children:[]}]},{level:2,title:"4.1.酒店搜索和分页",slug:"_4-1-酒店搜索和分页",link:"#_4-1-酒店搜索和分页",children:[{level:3,title:"4.1.1.需求分析",slug:"_4-1-1-需求分析",link:"#_4-1-1-需求分析",children:[]},{level:3,title:"4.1.2.定义实体类",slug:"_4-1-2-定义实体类",link:"#_4-1-2-定义实体类",children:[]},{level:3,title:"4.1.3.定义controller",slug:"_4-1-3-定义controller",link:"#_4-1-3-定义controller",children:[]},{level:3,title:"4.1.4.实现搜索业务",slug:"_4-1-4-实现搜索业务",link:"#_4-1-4-实现搜索业务",children:[]}]},{level:2,title:"4.2.酒店结果过滤",slug:"_4-2-酒店结果过滤",link:"#_4-2-酒店结果过滤",children:[{level:3,title:"4.2.1.需求分析",slug:"_4-2-1-需求分析",link:"#_4-2-1-需求分析",children:[]},{level:3,title:"4.2.2.修改实体类",slug:"_4-2-2-修改实体类",link:"#_4-2-2-修改实体类",children:[]},{level:3,title:"4.2.3.修改搜索业务",slug:"_4-2-3-修改搜索业务",link:"#_4-2-3-修改搜索业务",children:[]}]},{level:2,title:"4.3.我周边的酒店",slug:"_4-3-我周边的酒店",link:"#_4-3-我周边的酒店",children:[{level:3,title:"4.3.1.需求分析",slug:"_4-3-1-需求分析",link:"#_4-3-1-需求分析",children:[]},{level:3,title:"4.3.2.修改实体类",slug:"_4-3-2-修改实体类",link:"#_4-3-2-修改实体类",children:[]},{level:3,title:"4.3.3.距离排序API",slug:"_4-3-3-距离排序api",link:"#_4-3-3-距离排序api",children:[]},{level:3,title:"4.3.4.添加距离排序",slug:"_4-3-4-添加距离排序",link:"#_4-3-4-添加距离排序",children:[]},{level:3,title:"4.3.5.排序距离显示",slug:"_4-3-5-排序距离显示",link:"#_4-3-5-排序距离显示",children:[]}]},{level:2,title:"4.4.酒店竞价排名",slug:"_4-4-酒店竞价排名",link:"#_4-4-酒店竞价排名",children:[{level:3,title:"4.4.1.需求分析",slug:"_4-4-1-需求分析",link:"#_4-4-1-需求分析",children:[]},{level:3,title:"4.4.2.修改HotelDoc实体",slug:"_4-4-2-修改hoteldoc实体",link:"#_4-4-2-修改hoteldoc实体",children:[]},{level:3,title:"4.4.3.添加广告标记",slug:"_4-4-3-添加广告标记",link:"#_4-4-3-添加广告标记",children:[]},{level:3,title:"4.4.4.添加算分函数查询",slug:"_4-4-4-添加算分函数查询",link:"#_4-4-4-添加算分函数查询",children:[]}]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/%E8%AE%B2%E4%B9%89-%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E02.html",pathLocale:"/",extraFields:[]},{title:"RabbitMQ",headers:[{level:2,title:"1.1.同步和异步通讯",slug:"_1-1-同步和异步通讯",link:"#_1-1-同步和异步通讯",children:[{level:3,title:"1.1.1.同步通讯",slug:"_1-1-1-同步通讯",link:"#_1-1-1-同步通讯",children:[]},{level:3,title:"1.1.2.异步通讯",slug:"_1-1-2-异步通讯",link:"#_1-1-2-异步通讯",children:[]}]},{level:2,title:"1.2.技术对比：",slug:"_1-2-技术对比",link:"#_1-2-技术对比",children:[]},{level:2,title:"2.1.安装RabbitMQ",slug:"_2-1-安装rabbitmq",link:"#_2-1-安装rabbitmq",children:[]},{level:2,title:"2.2.RabbitMQ消息模型",slug:"_2-2-rabbitmq消息模型",link:"#_2-2-rabbitmq消息模型",children:[]},{level:2,title:"2.3.导入Demo工程",slug:"_2-3-导入demo工程",link:"#_2-3-导入demo工程",children:[]},{level:2,title:"2.4.入门案例",slug:"_2-4-入门案例",link:"#_2-4-入门案例",children:[{level:3,title:"2.4.1.publisher实现",slug:"_2-4-1-publisher实现",link:"#_2-4-1-publisher实现",children:[]},{level:3,title:"2.4.2.consumer实现",slug:"_2-4-2-consumer实现",link:"#_2-4-2-consumer实现",children:[]}]},{level:2,title:"2.5.总结",slug:"_2-5-总结",link:"#_2-5-总结",children:[]},{level:2,title:"3.1.Basic Queue 简单队列模型",slug:"_3-1-basic-queue-简单队列模型",link:"#_3-1-basic-queue-简单队列模型",children:[{level:3,title:"3.1.1.消息发送",slug:"_3-1-1-消息发送",link:"#_3-1-1-消息发送",children:[]},{level:3,title:"3.1.2.消息接收",slug:"_3-1-2-消息接收",link:"#_3-1-2-消息接收",children:[]},{level:3,title:"3.1.3.测试",slug:"_3-1-3-测试",link:"#_3-1-3-测试",children:[]}]},{level:2,title:"3.2.WorkQueue",slug:"_3-2-workqueue",link:"#_3-2-workqueue",children:[{level:3,title:"3.2.1.消息发送",slug:"_3-2-1-消息发送",link:"#_3-2-1-消息发送",children:[]},{level:3,title:"3.2.2.消息接收",slug:"_3-2-2-消息接收",link:"#_3-2-2-消息接收",children:[]},{level:3,title:"3.2.3.测试",slug:"_3-2-3-测试",link:"#_3-2-3-测试",children:[]},{level:3,title:"3.2.4.能者多劳",slug:"_3-2-4-能者多劳",link:"#_3-2-4-能者多劳",children:[]},{level:3,title:"3.2.5.总结",slug:"_3-2-5-总结",link:"#_3-2-5-总结",children:[]}]},{level:2,title:"3.3.发布/订阅",slug:"_3-3-发布-订阅",link:"#_3-3-发布-订阅",children:[]},{level:2,title:"3.4.Fanout",slug:"_3-4-fanout",link:"#_3-4-fanout",children:[{level:3,title:"3.4.1.声明队列和交换机",slug:"_3-4-1-声明队列和交换机",link:"#_3-4-1-声明队列和交换机",children:[]},{level:3,title:"3.4.2.消息发送",slug:"_3-4-2-消息发送",link:"#_3-4-2-消息发送",children:[]},{level:3,title:"3.4.3.消息接收",slug:"_3-4-3-消息接收",link:"#_3-4-3-消息接收",children:[]},{level:3,title:"3.4.4.总结",slug:"_3-4-4-总结",link:"#_3-4-4-总结",children:[]}]},{level:2,title:"3.5.Direct",slug:"_3-5-direct",link:"#_3-5-direct",children:[{level:3,title:"3.5.1.基于注解声明队列和交换机",slug:"_3-5-1-基于注解声明队列和交换机",link:"#_3-5-1-基于注解声明队列和交换机",children:[]},{level:3,title:"3.5.2.消息发送",slug:"_3-5-2-消息发送",link:"#_3-5-2-消息发送",children:[]},{level:3,title:"3.5.3.总结",slug:"_3-5-3-总结",link:"#_3-5-3-总结",children:[]}]},{level:2,title:"3.6.Topic",slug:"_3-6-topic",link:"#_3-6-topic",children:[{level:3,title:"3.6.1.说明",slug:"_3-6-1-说明",link:"#_3-6-1-说明",children:[]},{level:3,title:"3.6.2.消息发送",slug:"_3-6-2-消息发送",link:"#_3-6-2-消息发送",children:[]},{level:3,title:"3.6.3.消息接收",slug:"_3-6-3-消息接收",link:"#_3-6-3-消息接收",children:[]},{level:3,title:"3.6.4.总结",slug:"_3-6-4-总结",link:"#_3-6-4-总结",children:[]}]},{level:2,title:"3.7.消息转换器",slug:"_3-7-消息转换器",link:"#_3-7-消息转换器",children:[{level:3,title:"3.7.1.测试默认转换器",slug:"_3-7-1-测试默认转换器",link:"#_3-7-1-测试默认转换器",children:[]},{level:3,title:"3.7.2.配置JSON转换器",slug:"_3-7-2-配置json转换器",link:"#_3-7-2-配置json转换器",children:[]}]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/RabbitMQ.html",pathLocale:"/",extraFields:[]},{title:"安装与启动",headers:[{level:2,title:"安装",slug:"安装",link:"#安装",children:[]},{level:2,title:"启动",slug:"启动",link:"#启动",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/0.%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8.html",pathLocale:"/",extraFields:[]},{title:"注册中心",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/1.%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",pathLocale:"/",extraFields:[]},{title:"如何使用Nacos作为配置中心统一管理配置",headers:[{level:3,title:"1.引入依赖",slug:"_1-引入依赖",link:"#_1-引入依赖",children:[]},{level:3,title:"2.创建一个bootstrap.properties",slug:"_2-创建一个bootstrap-properties",link:"#_2-创建一个bootstrap-properties",children:[]},{level:3,title:"3.创建配置",slug:"_3-创建配置",link:"#_3-创建配置",children:[]},{level:3,title:"4.给coupon.properties添加配置",slug:"_4-给coupon-properties添加配置",link:"#_4-给coupon-properties添加配置",children:[]},{level:3,title:"5.动态获取配置",slug:"_5-动态获取配置",link:"#_5-动态获取配置",children:[]},{level:3,title:"6.命名空间",slug:"_6-命名空间",link:"#_6-命名空间",children:[]},{level:3,title:"7.配置",slug:"_7-配置",link:"#_7-配置",children:[]},{level:3,title:"8.同时加载多个配置集",slug:"_8-同时加载多个配置集",link:"#_8-同时加载多个配置集",children:[]},{level:3,title:"9 配置示例",slug:"_9-配置示例",link:"#_9-配置示例",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/2.%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html",pathLocale:"/",extraFields:[]},{title:"网关API配置",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/3.%E7%BD%91%E5%85%B3%E9%85%8D%E7%BD%AE.html",pathLocale:"/",extraFields:[]},{title:"指定Nacos的服务端IP",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/4.Nacos%E6%8C%87%E5%AE%9A%E6%9C%8D%E5%8A%A1%E7%AB%AFIP.html",pathLocale:"/",extraFields:[]},{title:"Nacos",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Nacos/",pathLocale:"/",extraFields:[]},{title:"1.MAC安装JMeter",headers:[{level:2,title:"一、下载JMeter",slug:"一、下载jmeter",link:"#一、下载jmeter",children:[]},{level:2,title:"二、安装JMeter",slug:"二、安装jmeter",link:"#二、安装jmeter",children:[{level:3,title:"1. 启动方式一【推荐】",slug:"_1-启动方式一【推荐】",link:"#_1-启动方式一【推荐】",children:[]},{level:3,title:"2. 启动方式二",slug:"_2-启动方式二",link:"#_2-启动方式二",children:[]}]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/1.MAC%E5%AE%89%E8%A3%85JMeter.html",pathLocale:"/",extraFields:[]},{title:"Jmeter快速入门",headers:[{level:2,title:"1.1.下载",slug:"_1-1-下载",link:"#_1-1-下载",children:[]},{level:2,title:"1.2.解压",slug:"_1-2-解压",link:"#_1-2-解压",children:[{level:3,title:"1.3.运行",slug:"_1-3-运行",link:"#_1-3-运行",children:[]}]},{level:2,title:"2.1.设置中文语言",slug:"_2-1-设置中文语言",link:"#_2-1-设置中文语言",children:[]},{level:2,title:"2.2.基本用法",slug:"_2-2-基本用法",link:"#_2-2-基本用法",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/2.Jmeter%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",pathLocale:"/",extraFields:[]},{title:"Sentinel 规则持久化",headers:[{level:2,title:"一、修改order-service服务",slug:"一、修改order-service服务",link:"#一、修改order-service服务",children:[{level:3,title:"1.引入依赖",slug:"_1-引入依赖",link:"#_1-引入依赖",children:[]},{level:3,title:"2.配置nacos地址",slug:"_2-配置nacos地址",link:"#_2-配置nacos地址",children:[]}]},{level:2,title:"二、修改sentinel-dashboard源码",slug:"二、修改sentinel-dashboard源码",link:"#二、修改sentinel-dashboard源码",children:[{level:3,title:"1. 解压",slug:"_1-解压",link:"#_1-解压",children:[]},{level:3,title:"2. 修改nacos依赖",slug:"_2-修改nacos依赖",link:"#_2-修改nacos依赖",children:[]},{level:3,title:"3. 添加nacos支持",slug:"_3-添加nacos支持",link:"#_3-添加nacos支持",children:[]},{level:3,title:"4. 修改nacos地址",slug:"_4-修改nacos地址",link:"#_4-修改nacos地址",children:[]},{level:3,title:"5. 配置nacos数据源",slug:"_5-配置nacos数据源",link:"#_5-配置nacos数据源",children:[]},{level:3,title:"6. 修改前端页面",slug:"_6-修改前端页面",link:"#_6-修改前端页面",children:[]},{level:3,title:"7. 重新编译、打包项目",slug:"_7-重新编译、打包项目",link:"#_7-重新编译、打包项目",children:[]},{level:3,title:"8.启动",slug:"_8-启动",link:"#_8-启动",children:[]}]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/3.sentinel%E8%A7%84%E5%88%99%E6%8C%81%E4%B9%85%E5%8C%96.html",pathLocale:"/",extraFields:[]},{title:"TC,TM,RM",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html",pathLocale:"/",extraFields:[]},{title:"seata1.4.2升级2.0.0注意点",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata1.4.2%E5%8D%87%E7%BA%A72.0.0%E6%B3%A8%E6%84%8F%E7%82%B9.html",pathLocale:"/",extraFields:[]},{title:"seata的部署和集成",headers:[{level:2,title:"1.下载",slug:"_1-下载",link:"#_1-下载",children:[]},{level:2,title:"2.解压",slug:"_2-解压",link:"#_2-解压",children:[]},{level:2,title:"3.修改配置",slug:"_3-修改配置",link:"#_3-修改配置",children:[]},{level:2,title:"4.在nacos添加配置",slug:"_4-在nacos添加配置",link:"#_4-在nacos添加配置",children:[]},{level:2,title:"5.创建数据库表",slug:"_5-创建数据库表",link:"#_5-创建数据库表",children:[]},{level:2,title:"6.启动TC服务",slug:"_6-启动tc服务",link:"#_6-启动tc服务",children:[]},{level:2,title:"1.引入依赖",slug:"_1-引入依赖",link:"#_1-引入依赖",children:[]},{level:2,title:"2.修改配置文件",slug:"_2-修改配置文件",link:"#_2-修改配置文件",children:[]},{level:2,title:"1.模拟异地容灾的TC集群",slug:"_1-模拟异地容灾的tc集群",link:"#_1-模拟异地容灾的tc集群",children:[]},{level:2,title:"2.将事务组映射配置到nacos",slug:"_2-将事务组映射配置到nacos",link:"#_2-将事务组映射配置到nacos",children:[]},{level:2,title:"3.微服务读取nacos配置",slug:"_3-微服务读取nacos配置",link:"#_3-微服务读取nacos配置",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/seata%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90.html",pathLocale:"/",extraFields:[]},{title:"四种分布式事务模式",headers:[{level:2,title:"1. XA 模式",slug:"_1-xa-模式",link:"#_1-xa-模式",children:[{level:3,title:"1.1 概念",slug:"_1-1-概念",link:"#_1-1-概念",children:[]},{level:3,title:"1.2 两阶段提交",slug:"_1-2-两阶段提交",link:"#_1-2-两阶段提交",children:[]},{level:3,title:"1.3缺点:",slug:"_1-3缺点",link:"#_1-3缺点",children:[]}]},{level:2,title:"2. AT 模式",slug:"_2-at-模式",link:"#_2-at-模式",children:[{level:3,title:"2.1 概念",slug:"_2-1-概念",link:"#_2-1-概念",children:[]},{level:3,title:"2.2两阶段提交",slug:"_2-2两阶段提交",link:"#_2-2两阶段提交",children:[]},{level:3,title:"2.3 简述AT模式与XA模式最大的区别是什么？",slug:"_2-3-简述at模式与xa模式最大的区别是什么",link:"#_2-3-简述at模式与xa模式最大的区别是什么",children:[]},{level:3,title:"2.4缺点",slug:"_2-4缺点",link:"#_2-4缺点",children:[]}]},{level:2,title:"3.TCC 模式",slug:"_3-tcc-模式",link:"#_3-tcc-模式",children:[{level:3,title:"3.1三个阶段",slug:"_3-1三个阶段",link:"#_3-1三个阶段",children:[]},{level:3,title:"3.2空回滚",slug:"_3-2空回滚",link:"#_3-2空回滚",children:[]},{level:3,title:"3.3事务悬挂",slug:"_3-3事务悬挂",link:"#_3-3事务悬挂",children:[]}]},{level:2,title:"4.SEGA 模式",slug:"_4-sega-模式",link:"#_4-sega-模式",children:[]},{level:2,title:"总结：",slug:"总结-3",link:"#总结-3",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E5%9B%9B%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"模式总结",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html",pathLocale:"/",extraFields:[]},{title:"配置文件示例",headers:[{level:2,title:"Seata版本",slug:"seata版本",link:"#seata版本",children:[]},{level:2,title:"Seata注册/配置到Nacos",slug:"seata注册-配置到nacos",link:"#seata注册-配置到nacos",children:[]},{level:2,title:"Seata在Nacos上配置示例",slug:"seata在nacos上配置示例",link:"#seata在nacos上配置示例",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"微服务保护",headers:[{level:2,title:"1.1.雪崩问题及解决方案",slug:"_1-1-雪崩问题及解决方案",link:"#_1-1-雪崩问题及解决方案",children:[{level:3,title:"1.1.1.雪崩问题",slug:"_1-1-1-雪崩问题",link:"#_1-1-1-雪崩问题",children:[]},{level:3,title:"1.1.2.超时处理",slug:"_1-1-2-超时处理",link:"#_1-1-2-超时处理",children:[]},{level:3,title:"1.1.3.仓壁模式",slug:"_1-1-3-仓壁模式",link:"#_1-1-3-仓壁模式",children:[]},{level:3,title:"1.1.4.断路器",slug:"_1-1-4-断路器",link:"#_1-1-4-断路器",children:[]},{level:3,title:"1.1.5.限流",slug:"_1-1-5-限流",link:"#_1-1-5-限流",children:[]},{level:3,title:"1.1.6.总结",slug:"_1-1-6-总结",link:"#_1-1-6-总结",children:[]}]},{level:2,title:"1.2.服务保护技术对比",slug:"_1-2-服务保护技术对比",link:"#_1-2-服务保护技术对比",children:[]},{level:2,title:"1.3.Sentinel介绍和安装",slug:"_1-3-sentinel介绍和安装",link:"#_1-3-sentinel介绍和安装",children:[{level:3,title:"1.3.1.初识Sentinel",slug:"_1-3-1-初识sentinel",link:"#_1-3-1-初识sentinel",children:[]},{level:3,title:"1.3.2.安装Sentinel",slug:"_1-3-2-安装sentinel",link:"#_1-3-2-安装sentinel",children:[]}]},{level:2,title:"1.4.微服务整合Sentinel",slug:"_1-4-微服务整合sentinel",link:"#_1-4-微服务整合sentinel",children:[]},{level:2,title:"2.1.簇点链路",slug:"_2-1-簇点链路",link:"#_2-1-簇点链路",children:[]},{level:2,title:"2.1.快速入门",slug:"_2-1-快速入门",link:"#_2-1-快速入门",children:[{level:3,title:"2.1.1.示例",slug:"_2-1-1-示例",link:"#_2-1-1-示例",children:[]},{level:3,title:"2.1.2.练习：",slug:"_2-1-2-练习",link:"#_2-1-2-练习",children:[]}]},{level:2,title:"2.2.流控模式",slug:"_2-2-流控模式",link:"#_2-2-流控模式",children:[{level:3,title:"2.2.1.关联模式",slug:"_2-2-1-关联模式",link:"#_2-2-1-关联模式",children:[]},{level:3,title:"2.2.2.链路模式",slug:"_2-2-2-链路模式",link:"#_2-2-2-链路模式",children:[]},{level:3,title:"2.2.3.总结",slug:"_2-2-3-总结",link:"#_2-2-3-总结",children:[]}]},{level:2,title:"2.3.流控效果",slug:"_2-3-流控效果",link:"#_2-3-流控效果",children:[{level:3,title:"2.3.1.warm up",slug:"_2-3-1-warm-up",link:"#_2-3-1-warm-up",children:[]},{level:3,title:"2.3.2.排队等待",slug:"_2-3-2-排队等待",link:"#_2-3-2-排队等待",children:[]},{level:3,title:"2.3.3.总结",slug:"_2-3-3-总结",link:"#_2-3-3-总结",children:[]}]},{level:2,title:"2.4.热点参数限流",slug:"_2-4-热点参数限流",link:"#_2-4-热点参数限流",children:[{level:3,title:"2.4.1.全局参数限流",slug:"_2-4-1-全局参数限流",link:"#_2-4-1-全局参数限流",children:[]},{level:3,title:"2.4.2.热点参数限流",slug:"_2-4-2-热点参数限流",link:"#_2-4-2-热点参数限流",children:[]},{level:3,title:"2.4.4.案例",slug:"_2-4-4-案例",link:"#_2-4-4-案例",children:[]}]},{level:2,title:"3.1.FeignClient整合Sentinel",slug:"_3-1-feignclient整合sentinel",link:"#_3-1-feignclient整合sentinel",children:[{level:3,title:"3.1.1.修改配置，开启sentinel功能",slug:"_3-1-1-修改配置-开启sentinel功能",link:"#_3-1-1-修改配置-开启sentinel功能",children:[]},{level:3,title:"3.1.2.编写失败降级逻辑",slug:"_3-1-2-编写失败降级逻辑",link:"#_3-1-2-编写失败降级逻辑",children:[]},{level:3,title:"3.1.3.总结",slug:"_3-1-3-总结",link:"#_3-1-3-总结",children:[]}]},{level:2,title:"3.2.线程隔离（舱壁模式）",slug:"_3-2-线程隔离-舱壁模式",link:"#_3-2-线程隔离-舱壁模式",children:[{level:3,title:"3.2.1.线程隔离的实现方式",slug:"_3-2-1-线程隔离的实现方式",link:"#_3-2-1-线程隔离的实现方式",children:[]},{level:3,title:"3.2.2.sentinel的线程隔离",slug:"_3-2-2-sentinel的线程隔离",link:"#_3-2-2-sentinel的线程隔离",children:[]},{level:3,title:"3.2.3.总结",slug:"_3-2-3-总结",link:"#_3-2-3-总结",children:[]}]},{level:2,title:"3.3.熔断降级",slug:"_3-3-熔断降级",link:"#_3-3-熔断降级",children:[{level:3,title:"3.3.1.慢调用",slug:"_3-3-1-慢调用",link:"#_3-3-1-慢调用",children:[]},{level:3,title:"3.3.2.异常比例、异常数",slug:"_3-3-2-异常比例、异常数",link:"#_3-3-2-异常比例、异常数",children:[]}]},{level:2,title:"4.1.授权规则",slug:"_4-1-授权规则",link:"#_4-1-授权规则",children:[{level:3,title:"4.1.1.基本规则",slug:"_4-1-1-基本规则",link:"#_4-1-1-基本规则",children:[]},{level:3,title:"4.1.2.如何获取origin",slug:"_4-1-2-如何获取origin",link:"#_4-1-2-如何获取origin",children:[]},{level:3,title:"4.1.3.给网关添加请求头",slug:"_4-1-3-给网关添加请求头",link:"#_4-1-3-给网关添加请求头",children:[]},{level:3,title:"4.1.4.配置授权规则",slug:"_4-1-4-配置授权规则",link:"#_4-1-4-配置授权规则",children:[]}]},{level:2,title:"4.2.自定义异常结果",slug:"_4-2-自定义异常结果",link:"#_4-2-自定义异常结果",children:[{level:3,title:"4.2.1.异常类型",slug:"_4-2-1-异常类型",link:"#_4-2-1-异常类型",children:[]},{level:3,title:"4.2.2.自定义异常处理",slug:"_4-2-2-自定义异常处理",link:"#_4-2-2-自定义异常处理",children:[]}]},{level:2,title:"5.1.规则管理模式",slug:"_5-1-规则管理模式",link:"#_5-1-规则管理模式",children:[{level:3,title:"5.1.1.pull模式",slug:"_5-1-1-pull模式",link:"#_5-1-1-pull模式",children:[]},{level:3,title:"5.1.2.push模式",slug:"_5-1-2-push模式",link:"#_5-1-2-push模式",children:[]}]},{level:2,title:"5.2.实现push模式",slug:"_5-2-实现push模式",link:"#_5-2-实现push模式",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4.html",pathLocale:"/",extraFields:[]},{title:"分布式事务",headers:[{level:2,title:"1.1.本地事务",slug:"_1-1-本地事务",link:"#_1-1-本地事务",children:[]},{level:2,title:"1.2.分布式事务",slug:"_1-2-分布式事务",link:"#_1-2-分布式事务",children:[]},{level:2,title:"1.3.演示分布式事务问题",slug:"_1-3-演示分布式事务问题",link:"#_1-3-演示分布式事务问题",children:[]},{level:2,title:"2.1.CAP定理",slug:"_2-1-cap定理",link:"#_2-1-cap定理",children:[{level:3,title:"2.1.1.一致性",slug:"_2-1-1-一致性",link:"#_2-1-1-一致性",children:[]},{level:3,title:"2.1.2.可用性",slug:"_2-1-2-可用性",link:"#_2-1-2-可用性",children:[]},{level:3,title:"2.1.3.分区容错",slug:"_2-1-3-分区容错",link:"#_2-1-3-分区容错",children:[]},{level:3,title:"2.1.4.矛盾",slug:"_2-1-4-矛盾",link:"#_2-1-4-矛盾",children:[]}]},{level:2,title:"2.2.BASE理论",slug:"_2-2-base理论",link:"#_2-2-base理论",children:[]},{level:2,title:"2.3.解决分布式事务的思路",slug:"_2-3-解决分布式事务的思路",link:"#_2-3-解决分布式事务的思路",children:[]},{level:2,title:"3.1.Seata的架构",slug:"_3-1-seata的架构",link:"#_3-1-seata的架构",children:[]},{level:2,title:"3.2.部署TC服务",slug:"_3-2-部署tc服务",link:"#_3-2-部署tc服务",children:[]},{level:2,title:"3.3.微服务集成Seata",slug:"_3-3-微服务集成seata",link:"#_3-3-微服务集成seata",children:[{level:3,title:"3.3.1.引入依赖",slug:"_3-3-1-引入依赖",link:"#_3-3-1-引入依赖",children:[]},{level:3,title:"3.3.2.配置TC地址",slug:"_3-3-2-配置tc地址",link:"#_3-3-2-配置tc地址",children:[]},{level:3,title:"3.3.3.其它服务",slug:"_3-3-3-其它服务",link:"#_3-3-3-其它服务",children:[]}]},{level:2,title:"4.1.XA模式",slug:"_4-1-xa模式",link:"#_4-1-xa模式",children:[{level:3,title:"4.1.1.两阶段提交",slug:"_4-1-1-两阶段提交",link:"#_4-1-1-两阶段提交",children:[]},{level:3,title:"4.1.2.Seata的XA模型",slug:"_4-1-2-seata的xa模型",link:"#_4-1-2-seata的xa模型",children:[]},{level:3,title:"4.1.3.优缺点",slug:"_4-1-3-优缺点",link:"#_4-1-3-优缺点",children:[]},{level:3,title:"4.1.4.实现XA模式",slug:"_4-1-4-实现xa模式",link:"#_4-1-4-实现xa模式",children:[]}]},{level:2,title:"4.2.AT模式",slug:"_4-2-at模式",link:"#_4-2-at模式",children:[{level:3,title:"4.2.1.Seata的AT模型",slug:"_4-2-1-seata的at模型",link:"#_4-2-1-seata的at模型",children:[]},{level:3,title:"4.2.2.流程梳理",slug:"_4-2-2-流程梳理",link:"#_4-2-2-流程梳理",children:[]},{level:3,title:"4.2.3.AT与XA的区别",slug:"_4-2-3-at与xa的区别",link:"#_4-2-3-at与xa的区别",children:[]},{level:3,title:"4.2.4.脏写问题",slug:"_4-2-4-脏写问题",link:"#_4-2-4-脏写问题",children:[]},{level:3,title:"4.2.5.优缺点",slug:"_4-2-5-优缺点",link:"#_4-2-5-优缺点",children:[]},{level:3,title:"4.2.6.实现AT模式",slug:"_4-2-6-实现at模式",link:"#_4-2-6-实现at模式",children:[]}]},{level:2,title:"4.3.TCC模式",slug:"_4-3-tcc模式",link:"#_4-3-tcc模式",children:[{level:3,title:"4.3.1.流程分析",slug:"_4-3-1-流程分析",link:"#_4-3-1-流程分析",children:[]},{level:3,title:"4.3.2.Seata的TCC模型",slug:"_4-3-2-seata的tcc模型",link:"#_4-3-2-seata的tcc模型",children:[]},{level:3,title:"4.3.3.优缺点",slug:"_4-3-3-优缺点",link:"#_4-3-3-优缺点",children:[]},{level:3,title:"4.3.4.事务悬挂和空回滚",slug:"_4-3-4-事务悬挂和空回滚",link:"#_4-3-4-事务悬挂和空回滚",children:[]},{level:3,title:"4.3.5.实现TCC模式",slug:"_4-3-5-实现tcc模式",link:"#_4-3-5-实现tcc模式",children:[]}]},{level:2,title:"4.4.SAGA模式",slug:"_4-4-saga模式",link:"#_4-4-saga模式",children:[{level:3,title:"4.4.1.原理",slug:"_4-4-1-原理",link:"#_4-4-1-原理",children:[]},{level:3,title:"4.4.2.优缺点",slug:"_4-4-2-优缺点",link:"#_4-4-2-优缺点",children:[]}]},{level:2,title:"4.5.四种模式对比",slug:"_4-5-四种模式对比",link:"#_4-5-四种模式对比",children:[]},{level:2,title:"5.1.高可用架构模型",slug:"_5-1-高可用架构模型",link:"#_5-1-高可用架构模型",children:[]},{level:2,title:"5.2.实现高可用",slug:"_5-2-实现高可用",link:"#_5-2-实现高可用",children:[]}],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html",pathLocale:"/",extraFields:[]},{title:"SpringBoot读取ValidationMessages.properties，中文乱码",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/SpringBoot%E8%AF%BB%E5%8F%96ValidationMessages.properties%EF%BC%8C%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81.html",pathLocale:"/",extraFields:[]},{title:"人人前端vue项目启动失败",headers:[{level:2,title:"问题描述",slug:"问题描述",link:"#问题描述",children:[]},{level:2,title:"解决方案",slug:"解决方案",link:"#解决方案",children:[]},{level:2,title:"版本对应关系",slug:"版本对应关系",link:"#版本对应关系",children:[]}],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%89%8D%E7%AB%AF%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",pathLocale:"/",extraFields:[]},{title:"人人fast后台注册nacos失败问题",headers:[{level:2,title:"问题描述",slug:"问题描述",link:"#问题描述",children:[]},{level:2,title:"解决方案",slug:"解决方案",link:"#解决方案",children:[]},{level:2,title:"版本问题",slug:"版本问题",link:"#版本问题",children:[]}],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E4%BA%BA%E4%BA%BA%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%86%8C%E8%87%B3Nacos%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98.html",pathLocale:"/",extraFields:[]},{title:"定时任务启动失败",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",pathLocale:"/",extraFields:[]},{title:"谷粒商城 java: 找不到符号 符号: 方法 setCouponName(java.lang.String)",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7.html",pathLocale:"/",extraFields:[]},{title:"current ips:(0) service: DEFAULT_GROUP@@gulimall-coupon -> []",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8%E4%B8%BA%E7%A9%BA.html",pathLocale:"/",extraFields:[]},{title:"测试方法启动空指针",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%A9%BA%E6%8C%87%E9%92%88.html",pathLocale:"/",extraFields:[]},{title:"数据校验",headers:[{level:2,title:"1.JSR303",slug:"_1-jsr303",link:"#_1-jsr303",children:[]},{level:2,title:"2.统一的异常处理",slug:"_2-统一的异常处理",link:"#_2-统一的异常处理",children:[]}],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C.html",pathLocale:"/",extraFields:[]},{title:"分布式缓存",headers:[{level:2,title:"1.1.RDB持久化",slug:"_1-1-rdb持久化",link:"#_1-1-rdb持久化",children:[{level:3,title:"1.1.1.执行时机",slug:"_1-1-1-执行时机",link:"#_1-1-1-执行时机",children:[]},{level:3,title:"1.1.2.RDB原理",slug:"_1-1-2-rdb原理",link:"#_1-1-2-rdb原理",children:[]},{level:3,title:"1.1.3.小结",slug:"_1-1-3-小结",link:"#_1-1-3-小结",children:[]}]},{level:2,title:"1.2.AOF持久化",slug:"_1-2-aof持久化",link:"#_1-2-aof持久化",children:[{level:3,title:"1.2.1.AOF原理",slug:"_1-2-1-aof原理",link:"#_1-2-1-aof原理",children:[]},{level:3,title:"1.2.2.AOF配置",slug:"_1-2-2-aof配置",link:"#_1-2-2-aof配置",children:[]},{level:3,title:"1.2.3.AOF文件重写",slug:"_1-2-3-aof文件重写",link:"#_1-2-3-aof文件重写",children:[]}]},{level:2,title:"1.3.RDB与AOF对比",slug:"_1-3-rdb与aof对比",link:"#_1-3-rdb与aof对比",children:[]},{level:2,title:"2.1.搭建主从架构",slug:"_2-1-搭建主从架构",link:"#_2-1-搭建主从架构",children:[]},{level:2,title:"2.2.主从数据同步原理",slug:"_2-2-主从数据同步原理",link:"#_2-2-主从数据同步原理",children:[{level:3,title:"2.2.1.全量同步",slug:"_2-2-1-全量同步",link:"#_2-2-1-全量同步",children:[]},{level:3,title:"2.2.2.增量同步",slug:"_2-2-2-增量同步",link:"#_2-2-2-增量同步",children:[]},{level:3,title:"2.2.3.repl_backlog原理",slug:"_2-2-3-repl-backlog原理",link:"#_2-2-3-repl-backlog原理",children:[]}]},{level:2,title:"2.3.主从同步优化",slug:"_2-3-主从同步优化",link:"#_2-3-主从同步优化",children:[]},{level:2,title:"2.4.小结",slug:"_2-4-小结",link:"#_2-4-小结",children:[]},{level:2,title:"3.1.哨兵原理",slug:"_3-1-哨兵原理",link:"#_3-1-哨兵原理",children:[{level:3,title:"3.1.1.集群结构和作用",slug:"_3-1-1-集群结构和作用",link:"#_3-1-1-集群结构和作用",children:[]},{level:3,title:"3.1.2.集群监控原理",slug:"_3-1-2-集群监控原理",link:"#_3-1-2-集群监控原理",children:[]},{level:3,title:"3.1.3.集群故障恢复原理",slug:"_3-1-3-集群故障恢复原理",link:"#_3-1-3-集群故障恢复原理",children:[]},{level:3,title:"3.1.4.小结",slug:"_3-1-4-小结",link:"#_3-1-4-小结",children:[]}]},{level:2,title:"3.2.搭建哨兵集群",slug:"_3-2-搭建哨兵集群",link:"#_3-2-搭建哨兵集群",children:[]},{level:2,title:"3.3.RedisTemplate",slug:"_3-3-redistemplate",link:"#_3-3-redistemplate",children:[{level:3,title:"3.3.1.导入Demo工程",slug:"_3-3-1-导入demo工程",link:"#_3-3-1-导入demo工程",children:[]},{level:3,title:"3.3.2.引入依赖",slug:"_3-3-2-引入依赖",link:"#_3-3-2-引入依赖",children:[]},{level:3,title:"3.3.3.配置Redis地址",slug:"_3-3-3-配置redis地址",link:"#_3-3-3-配置redis地址",children:[]},{level:3,title:"3.3.4.配置读写分离",slug:"_3-3-4-配置读写分离",link:"#_3-3-4-配置读写分离",children:[]}]},{level:2,title:"4.1.搭建分片集群",slug:"_4-1-搭建分片集群",link:"#_4-1-搭建分片集群",children:[]},{level:2,title:"4.2.散列插槽",slug:"_4-2-散列插槽",link:"#_4-2-散列插槽",children:[{level:3,title:"4.2.1.插槽原理",slug:"_4-2-1-插槽原理",link:"#_4-2-1-插槽原理",children:[]},{level:3,title:"4.2.1.小结",slug:"_4-2-1-小结",link:"#_4-2-1-小结",children:[]}]},{level:2,title:"4.3.集群伸缩",slug:"_4-3-集群伸缩",link:"#_4-3-集群伸缩",children:[{level:3,title:"4.3.1.需求分析",slug:"_4-3-1-需求分析",link:"#_4-3-1-需求分析",children:[]},{level:3,title:"4.3.2.创建新的redis实例",slug:"_4-3-2-创建新的redis实例",link:"#_4-3-2-创建新的redis实例",children:[]},{level:3,title:"4.3.3.添加新节点到redis",slug:"_4-3-3-添加新节点到redis",link:"#_4-3-3-添加新节点到redis",children:[]},{level:3,title:"4.3.4.转移插槽",slug:"_4-3-4-转移插槽",link:"#_4-3-4-转移插槽",children:[]}]},{level:2,title:"4.4.故障转移",slug:"_4-4-故障转移",link:"#_4-4-故障转移",children:[{level:3,title:"4.4.1.自动故障转移",slug:"_4-4-1-自动故障转移",link:"#_4-4-1-自动故障转移",children:[]},{level:3,title:"4.4.2.手动故障转移",slug:"_4-4-2-手动故障转移",link:"#_4-4-2-手动故障转移",children:[]}]},{level:2,title:"4.5.RedisTemplate访问分片集群",slug:"_4-5-redistemplate访问分片集群",link:"#_4-5-redistemplate访问分片集群",children:[]}],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html",pathLocale:"/",extraFields:[]},{title:"多级缓存",headers:[{level:2,title:"2.1.导入案例",slug:"_2-1-导入案例",link:"#_2-1-导入案例",children:[]},{level:2,title:"2.2.初识Caffeine",slug:"_2-2-初识caffeine",link:"#_2-2-初识caffeine",children:[]},{level:2,title:"2.3.实现JVM进程缓存",slug:"_2-3-实现jvm进程缓存",link:"#_2-3-实现jvm进程缓存",children:[{level:3,title:"2.3.1.需求",slug:"_2-3-1-需求",link:"#_2-3-1-需求",children:[]},{level:3,title:"2.3.2.实现",slug:"_2-3-2-实现",link:"#_2-3-2-实现",children:[]}]},{level:2,title:"3.1.初识Lua",slug:"_3-1-初识lua",link:"#_3-1-初识lua",children:[]},{level:2,title:"3.1.HelloWorld",slug:"_3-1-helloworld",link:"#_3-1-helloworld",children:[]},{level:2,title:"3.2.变量和循环",slug:"_3-2-变量和循环",link:"#_3-2-变量和循环",children:[{level:3,title:"3.2.1.Lua的数据类型",slug:"_3-2-1-lua的数据类型",link:"#_3-2-1-lua的数据类型",children:[]},{level:3,title:"3.2.2.声明变量",slug:"_3-2-2-声明变量",link:"#_3-2-2-声明变量",children:[]},{level:3,title:"3.2.3.循环",slug:"_3-2-3-循环",link:"#_3-2-3-循环",children:[]}]},{level:2,title:"3.3.条件控制、函数",slug:"_3-3-条件控制、函数",link:"#_3-3-条件控制、函数",children:[{level:3,title:"3.3.1.函数",slug:"_3-3-1-函数",link:"#_3-3-1-函数",children:[]},{level:3,title:"3.3.2.条件控制",slug:"_3-3-2-条件控制",link:"#_3-3-2-条件控制",children:[]},{level:3,title:"3.3.3.案例",slug:"_3-3-3-案例",link:"#_3-3-3-案例",children:[]}]},{level:2,title:"4.1.安装OpenResty",slug:"_4-1-安装openresty",link:"#_4-1-安装openresty",children:[]},{level:2,title:"4.2.OpenResty快速入门",slug:"_4-2-openresty快速入门",link:"#_4-2-openresty快速入门",children:[{level:3,title:"4.2.1.反向代理流程",slug:"_4-2-1-反向代理流程",link:"#_4-2-1-反向代理流程",children:[]},{level:3,title:"4.2.2.OpenResty监听请求",slug:"_4-2-2-openresty监听请求",link:"#_4-2-2-openresty监听请求",children:[]},{level:3,title:"4.2.3.编写item.lua",slug:"_4-2-3-编写item-lua",link:"#_4-2-3-编写item-lua",children:[]}]},{level:2,title:"4.3.请求参数处理",slug:"_4-3-请求参数处理",link:"#_4-3-请求参数处理",children:[{level:3,title:"4.3.1.获取参数的API",slug:"_4-3-1-获取参数的api",link:"#_4-3-1-获取参数的api",children:[]},{level:3,title:"4.3.2.获取参数并返回",slug:"_4-3-2-获取参数并返回",link:"#_4-3-2-获取参数并返回",children:[]}]},{level:2,title:"4.4.查询Tomcat",slug:"_4-4-查询tomcat",link:"#_4-4-查询tomcat",children:[{level:3,title:"4.4.1.发送http请求的API",slug:"_4-4-1-发送http请求的api",link:"#_4-4-1-发送http请求的api",children:[]},{level:3,title:"4.4.2.封装http工具",slug:"_4-4-2-封装http工具",link:"#_4-4-2-封装http工具",children:[]},{level:3,title:"4.4.3.CJSON工具类",slug:"_4-4-3-cjson工具类",link:"#_4-4-3-cjson工具类",children:[]},{level:3,title:"4.4.4.实现Tomcat查询",slug:"_4-4-4-实现tomcat查询",link:"#_4-4-4-实现tomcat查询",children:[]},{level:3,title:"4.4.5.基于ID负载均衡",slug:"_4-4-5-基于id负载均衡",link:"#_4-4-5-基于id负载均衡",children:[]}]},{level:2,title:"4.5.Redis缓存预热",slug:"_4-5-redis缓存预热",link:"#_4-5-redis缓存预热",children:[]},{level:2,title:"4.6.查询Redis缓存",slug:"_4-6-查询redis缓存",link:"#_4-6-查询redis缓存",children:[{level:3,title:"4.6.1.封装Redis工具",slug:"_4-6-1-封装redis工具",link:"#_4-6-1-封装redis工具",children:[]},{level:3,title:"4.6.2.实现Redis查询",slug:"_4-6-2-实现redis查询",link:"#_4-6-2-实现redis查询",children:[]}]},{level:2,title:"4.7.Nginx本地缓存",slug:"_4-7-nginx本地缓存",link:"#_4-7-nginx本地缓存",children:[{level:3,title:"4.7.1.本地缓存API",slug:"_4-7-1-本地缓存api",link:"#_4-7-1-本地缓存api",children:[]},{level:3,title:"4.7.2.实现本地缓存查询",slug:"_4-7-2-实现本地缓存查询",link:"#_4-7-2-实现本地缓存查询",children:[]}]},{level:2,title:"5.1.数据同步策略",slug:"_5-1-数据同步策略",link:"#_5-1-数据同步策略",children:[]},{level:2,title:"5.2.安装Canal",slug:"_5-2-安装canal",link:"#_5-2-安装canal",children:[{level:3,title:"5.2.1.认识Canal",slug:"_5-2-1-认识canal",link:"#_5-2-1-认识canal",children:[]},{level:3,title:"5.2.2.安装Canal",slug:"_5-2-2-安装canal",link:"#_5-2-2-安装canal",children:[]}]},{level:2,title:"5.3.监听Canal",slug:"_5-3-监听canal",link:"#_5-3-监听canal",children:[{level:3,title:"5.3.1.引入依赖：",slug:"_5-3-1-引入依赖",link:"#_5-3-1-引入依赖",children:[]},{level:3,title:"5.3.2.编写配置：",slug:"_5-3-2-编写配置",link:"#_5-3-2-编写配置",children:[]},{level:3,title:"5.3.3.修改Item实体类",slug:"_5-3-3-修改item实体类",link:"#_5-3-3-修改item实体类",children:[]},{level:3,title:"5.3.4.编写监听器",slug:"_5-3-4-编写监听器",link:"#_5-3-4-编写监听器",children:[]}]}],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"Redis高级篇之最佳实践",slug:"redis高级篇之最佳实践",link:"#redis高级篇之最佳实践",children:[]},{level:2,title:"1、Redis键值设计",slug:"_1、redis键值设计",link:"#_1、redis键值设计",children:[{level:3,title:"1.1、优雅的key结构",slug:"_1-1、优雅的key结构",link:"#_1-1、优雅的key结构",children:[]},{level:3,title:"1.2、拒绝BigKey",slug:"_1-2、拒绝bigkey",link:"#_1-2、拒绝bigkey",children:[]},{level:3,title:"1.3、恰当的数据类型",slug:"_1-3、恰当的数据类型",link:"#_1-3、恰当的数据类型",children:[]},{level:3,title:"1.4、总结",slug:"_1-4、总结",link:"#_1-4、总结",children:[]}]},{level:2,title:"2、批处理优化",slug:"_2、批处理优化",link:"#_2、批处理优化",children:[{level:3,title:"2.1、Pipeline",slug:"_2-1、pipeline",link:"#_2-1、pipeline",children:[]},{level:3,title:"2.2、集群下的批处理",slug:"_2-2、集群下的批处理",link:"#_2-2、集群下的批处理",children:[]}]},{level:2,title:"3、服务器端优化-持久化配置",slug:"_3、服务器端优化-持久化配置",link:"#_3、服务器端优化-持久化配置",children:[]},{level:2,title:"4、服务器端优化-慢查询优化",slug:"_4、服务器端优化-慢查询优化",link:"#_4、服务器端优化-慢查询优化",children:[{level:3,title:"4.1 什么是慢查询",slug:"_4-1-什么是慢查询",link:"#_4-1-什么是慢查询",children:[]},{level:3,title:"4.2 如何查看慢查询",slug:"_4-2-如何查看慢查询",link:"#_4-2-如何查看慢查询",children:[]}]},{level:2,title:"5、服务器端优化-命令及安全配置",slug:"_5、服务器端优化-命令及安全配置",link:"#_5、服务器端优化-命令及安全配置",children:[]},{level:2,title:"6、服务器端优化-Redis内存划分和内存配置",slug:"_6、服务器端优化-redis内存划分和内存配置",link:"#_6、服务器端优化-redis内存划分和内存配置",children:[]},{level:2,title:"7、服务器端集群优化-集群还是主从",slug:"_7、服务器端集群优化-集群还是主从",link:"#_7、服务器端集群优化-集群还是主从",children:[]},{level:2,title:"8、结束语",slug:"_8、结束语",link:"#_8、结束语",children:[]}],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",pathLocale:"/",extraFields:[]},{title:"分布式缓存",headers:[{level:2,title:"1.1.RDB持久化",slug:"_1-1-rdb持久化",link:"#_1-1-rdb持久化",children:[{level:3,title:"1.1.1.执行时机",slug:"_1-1-1-执行时机",link:"#_1-1-1-执行时机",children:[]},{level:3,title:"1.1.2.RDB原理",slug:"_1-1-2-rdb原理",link:"#_1-1-2-rdb原理",children:[]},{level:3,title:"1.1.3.小结",slug:"_1-1-3-小结",link:"#_1-1-3-小结",children:[]}]},{level:2,title:"1.2.AOF持久化",slug:"_1-2-aof持久化",link:"#_1-2-aof持久化",children:[{level:3,title:"1.2.1.AOF原理",slug:"_1-2-1-aof原理",link:"#_1-2-1-aof原理",children:[]},{level:3,title:"1.2.2.AOF配置",slug:"_1-2-2-aof配置",link:"#_1-2-2-aof配置",children:[]},{level:3,title:"1.2.3.AOF文件重写",slug:"_1-2-3-aof文件重写",link:"#_1-2-3-aof文件重写",children:[]}]},{level:2,title:"1.3.RDB与AOF对比",slug:"_1-3-rdb与aof对比",link:"#_1-3-rdb与aof对比",children:[]},{level:2,title:"2.1.搭建主从架构",slug:"_2-1-搭建主从架构",link:"#_2-1-搭建主从架构",children:[]},{level:2,title:"2.2.主从数据同步原理",slug:"_2-2-主从数据同步原理",link:"#_2-2-主从数据同步原理",children:[{level:3,title:"2.2.1.全量同步",slug:"_2-2-1-全量同步",link:"#_2-2-1-全量同步",children:[]},{level:3,title:"2.2.2.增量同步",slug:"_2-2-2-增量同步",link:"#_2-2-2-增量同步",children:[]},{level:3,title:"2.2.3.repl_backlog原理",slug:"_2-2-3-repl-backlog原理",link:"#_2-2-3-repl-backlog原理",children:[]}]},{level:2,title:"2.3.主从同步优化",slug:"_2-3-主从同步优化",link:"#_2-3-主从同步优化",children:[]},{level:2,title:"2.4.小结",slug:"_2-4-小结",link:"#_2-4-小结",children:[]},{level:2,title:"3.1.哨兵原理",slug:"_3-1-哨兵原理",link:"#_3-1-哨兵原理",children:[{level:3,title:"3.1.1.集群结构和作用",slug:"_3-1-1-集群结构和作用",link:"#_3-1-1-集群结构和作用",children:[]},{level:3,title:"3.1.2.集群监控原理",slug:"_3-1-2-集群监控原理",link:"#_3-1-2-集群监控原理",children:[]},{level:3,title:"3.1.3.集群故障恢复原理",slug:"_3-1-3-集群故障恢复原理",link:"#_3-1-3-集群故障恢复原理",children:[]},{level:3,title:"3.1.4.小结",slug:"_3-1-4-小结",link:"#_3-1-4-小结",children:[]}]},{level:2,title:"3.2.搭建哨兵集群",slug:"_3-2-搭建哨兵集群",link:"#_3-2-搭建哨兵集群",children:[]},{level:2,title:"3.3.RedisTemplate",slug:"_3-3-redistemplate",link:"#_3-3-redistemplate",children:[{level:3,title:"3.3.1.导入Demo工程",slug:"_3-3-1-导入demo工程",link:"#_3-3-1-导入demo工程",children:[]},{level:3,title:"3.3.2.引入依赖",slug:"_3-3-2-引入依赖",link:"#_3-3-2-引入依赖",children:[]},{level:3,title:"3.3.3.配置Redis地址",slug:"_3-3-3-配置redis地址",link:"#_3-3-3-配置redis地址",children:[]},{level:3,title:"3.3.4.配置读写分离",slug:"_3-3-4-配置读写分离",link:"#_3-3-4-配置读写分离",children:[]}]},{level:2,title:"4.1.搭建分片集群",slug:"_4-1-搭建分片集群",link:"#_4-1-搭建分片集群",children:[]},{level:2,title:"4.2.散列插槽",slug:"_4-2-散列插槽",link:"#_4-2-散列插槽",children:[{level:3,title:"4.2.1.插槽原理",slug:"_4-2-1-插槽原理",link:"#_4-2-1-插槽原理",children:[]},{level:3,title:"4.2.1.小结",slug:"_4-2-1-小结",link:"#_4-2-1-小结",children:[]}]},{level:2,title:"4.3.集群伸缩",slug:"_4-3-集群伸缩",link:"#_4-3-集群伸缩",children:[{level:3,title:"4.3.1.需求分析",slug:"_4-3-1-需求分析",link:"#_4-3-1-需求分析",children:[]},{level:3,title:"4.3.2.创建新的redis实例",slug:"_4-3-2-创建新的redis实例",link:"#_4-3-2-创建新的redis实例",children:[]},{level:3,title:"4.3.3.添加新节点到redis",slug:"_4-3-3-添加新节点到redis",link:"#_4-3-3-添加新节点到redis",children:[]},{level:3,title:"4.3.4.转移插槽",slug:"_4-3-4-转移插槽",link:"#_4-3-4-转移插槽",children:[]}]},{level:2,title:"4.4.故障转移",slug:"_4-4-故障转移",link:"#_4-4-故障转移",children:[{level:3,title:"4.4.1.自动故障转移",slug:"_4-4-1-自动故障转移",link:"#_4-4-1-自动故障转移",children:[]},{level:3,title:"4.4.2.手动故障转移",slug:"_4-4-2-手动故障转移",link:"#_4-4-2-手动故障转移",children:[]}]},{level:2,title:"4.5.RedisTemplate访问分片集群",slug:"_4-5-redistemplate访问分片集群",link:"#_4-5-redistemplate访问分片集群",children:[]}],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/Redis%E9%AB%98%E7%BA%A7-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html",pathLocale:"/",extraFields:[]},{title:"多级缓存",headers:[{level:2,title:"2.1.导入案例",slug:"_2-1-导入案例",link:"#_2-1-导入案例",children:[]},{level:2,title:"2.2.初识Caffeine",slug:"_2-2-初识caffeine",link:"#_2-2-初识caffeine",children:[]},{level:2,title:"2.3.实现JVM进程缓存",slug:"_2-3-实现jvm进程缓存",link:"#_2-3-实现jvm进程缓存",children:[{level:3,title:"2.3.1.需求",slug:"_2-3-1-需求",link:"#_2-3-1-需求",children:[]},{level:3,title:"2.3.2.实现",slug:"_2-3-2-实现",link:"#_2-3-2-实现",children:[]}]},{level:2,title:"3.1.初识Lua",slug:"_3-1-初识lua",link:"#_3-1-初识lua",children:[]},{level:2,title:"3.1.HelloWorld",slug:"_3-1-helloworld",link:"#_3-1-helloworld",children:[]},{level:2,title:"3.2.变量和循环",slug:"_3-2-变量和循环",link:"#_3-2-变量和循环",children:[{level:3,title:"3.2.1.Lua的数据类型",slug:"_3-2-1-lua的数据类型",link:"#_3-2-1-lua的数据类型",children:[]},{level:3,title:"3.2.2.声明变量",slug:"_3-2-2-声明变量",link:"#_3-2-2-声明变量",children:[]},{level:3,title:"3.2.3.循环",slug:"_3-2-3-循环",link:"#_3-2-3-循环",children:[]}]},{level:2,title:"3.3.条件控制、函数",slug:"_3-3-条件控制、函数",link:"#_3-3-条件控制、函数",children:[{level:3,title:"3.3.1.函数",slug:"_3-3-1-函数",link:"#_3-3-1-函数",children:[]},{level:3,title:"3.3.2.条件控制",slug:"_3-3-2-条件控制",link:"#_3-3-2-条件控制",children:[]},{level:3,title:"3.3.3.案例",slug:"_3-3-3-案例",link:"#_3-3-3-案例",children:[]}]},{level:2,title:"4.1.安装OpenResty",slug:"_4-1-安装openresty",link:"#_4-1-安装openresty",children:[]},{level:2,title:"4.2.OpenResty快速入门",slug:"_4-2-openresty快速入门",link:"#_4-2-openresty快速入门",children:[{level:3,title:"4.2.1.反向代理流程",slug:"_4-2-1-反向代理流程",link:"#_4-2-1-反向代理流程",children:[]},{level:3,title:"4.2.2.OpenResty监听请求",slug:"_4-2-2-openresty监听请求",link:"#_4-2-2-openresty监听请求",children:[]},{level:3,title:"4.2.3.编写item.lua",slug:"_4-2-3-编写item-lua",link:"#_4-2-3-编写item-lua",children:[]}]},{level:2,title:"4.3.请求参数处理",slug:"_4-3-请求参数处理",link:"#_4-3-请求参数处理",children:[{level:3,title:"4.3.1.获取参数的API",slug:"_4-3-1-获取参数的api",link:"#_4-3-1-获取参数的api",children:[]},{level:3,title:"4.3.2.获取参数并返回",slug:"_4-3-2-获取参数并返回",link:"#_4-3-2-获取参数并返回",children:[]}]},{level:2,title:"4.4.查询Tomcat",slug:"_4-4-查询tomcat",link:"#_4-4-查询tomcat",children:[{level:3,title:"4.4.1.发送http请求的API",slug:"_4-4-1-发送http请求的api",link:"#_4-4-1-发送http请求的api",children:[]},{level:3,title:"4.4.2.封装http工具",slug:"_4-4-2-封装http工具",link:"#_4-4-2-封装http工具",children:[]},{level:3,title:"4.4.3.CJSON工具类",slug:"_4-4-3-cjson工具类",link:"#_4-4-3-cjson工具类",children:[]},{level:3,title:"4.4.4.实现Tomcat查询",slug:"_4-4-4-实现tomcat查询",link:"#_4-4-4-实现tomcat查询",children:[]},{level:3,title:"4.4.5.基于ID负载均衡",slug:"_4-4-5-基于id负载均衡",link:"#_4-4-5-基于id负载均衡",children:[]}]},{level:2,title:"4.5.Redis缓存预热",slug:"_4-5-redis缓存预热",link:"#_4-5-redis缓存预热",children:[]},{level:2,title:"4.6.查询Redis缓存",slug:"_4-6-查询redis缓存",link:"#_4-6-查询redis缓存",children:[{level:3,title:"4.6.1.封装Redis工具",slug:"_4-6-1-封装redis工具",link:"#_4-6-1-封装redis工具",children:[]},{level:3,title:"4.6.2.实现Redis查询",slug:"_4-6-2-实现redis查询",link:"#_4-6-2-实现redis查询",children:[]}]},{level:2,title:"4.7.Nginx本地缓存",slug:"_4-7-nginx本地缓存",link:"#_4-7-nginx本地缓存",children:[{level:3,title:"4.7.1.本地缓存API",slug:"_4-7-1-本地缓存api",link:"#_4-7-1-本地缓存api",children:[]},{level:3,title:"4.7.2.实现本地缓存查询",slug:"_4-7-2-实现本地缓存查询",link:"#_4-7-2-实现本地缓存查询",children:[]}]},{level:2,title:"5.1.数据同步策略",slug:"_5-1-数据同步策略",link:"#_5-1-数据同步策略",children:[]},{level:2,title:"5.2.安装Canal",slug:"_5-2-安装canal",link:"#_5-2-安装canal",children:[{level:3,title:"5.2.1.认识Canal",slug:"_5-2-1-认识canal",link:"#_5-2-1-认识canal",children:[]},{level:3,title:"5.2.2.安装Canal",slug:"_5-2-2-安装canal",link:"#_5-2-2-安装canal",children:[]}]},{level:2,title:"5.3.监听Canal",slug:"_5-3-监听canal",link:"#_5-3-监听canal",children:[{level:3,title:"5.3.1.引入依赖：",slug:"_5-3-1-引入依赖",link:"#_5-3-1-引入依赖",children:[]},{level:3,title:"5.3.2.编写配置：",slug:"_5-3-2-编写配置",link:"#_5-3-2-编写配置",children:[]},{level:3,title:"5.3.3.修改Item实体类",slug:"_5-3-3-修改item实体类",link:"#_5-3-3-修改item实体类",children:[]},{level:3,title:"5.3.4.编写监听器",slug:"_5-3-4-编写监听器",link:"#_5-3-4-编写监听器",children:[]}]}],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"Redis高级篇之最佳实践",slug:"redis高级篇之最佳实践",link:"#redis高级篇之最佳实践",children:[]},{level:2,title:"1、Redis键值设计",slug:"_1、redis键值设计",link:"#_1、redis键值设计",children:[{level:3,title:"1.1、优雅的key结构",slug:"_1-1、优雅的key结构",link:"#_1-1、优雅的key结构",children:[]},{level:3,title:"1.2、拒绝BigKey",slug:"_1-2、拒绝bigkey",link:"#_1-2、拒绝bigkey",children:[]},{level:3,title:"1.3、恰当的数据类型",slug:"_1-3、恰当的数据类型",link:"#_1-3、恰当的数据类型",children:[]},{level:3,title:"1.4、总结",slug:"_1-4、总结",link:"#_1-4、总结",children:[]}]},{level:2,title:"2、批处理优化",slug:"_2、批处理优化",link:"#_2、批处理优化",children:[{level:3,title:"2.1、Pipeline",slug:"_2-1、pipeline",link:"#_2-1、pipeline",children:[]},{level:3,title:"2.2、集群下的批处理",slug:"_2-2、集群下的批处理",link:"#_2-2、集群下的批处理",children:[]}]},{level:2,title:"3、服务器端优化-持久化配置",slug:"_3、服务器端优化-持久化配置",link:"#_3、服务器端优化-持久化配置",children:[]},{level:2,title:"4、服务器端优化-慢查询优化",slug:"_4、服务器端优化-慢查询优化",link:"#_4、服务器端优化-慢查询优化",children:[{level:3,title:"4.1 什么是慢查询",slug:"_4-1-什么是慢查询",link:"#_4-1-什么是慢查询",children:[]},{level:3,title:"4.2 如何查看慢查询",slug:"_4-2-如何查看慢查询",link:"#_4-2-如何查看慢查询",children:[]}]},{level:2,title:"5、服务器端优化-命令及安全配置",slug:"_5、服务器端优化-命令及安全配置",link:"#_5、服务器端优化-命令及安全配置",children:[]},{level:2,title:"6、服务器端优化-Redis内存划分和内存配置",slug:"_6、服务器端优化-redis内存划分和内存配置",link:"#_6、服务器端优化-redis内存划分和内存配置",children:[]},{level:2,title:"7、服务器端集群优化-集群还是主从",slug:"_7、服务器端集群优化-集群还是主从",link:"#_7、服务器端集群优化-集群还是主从",children:[]},{level:2,title:"8、结束语",slug:"_8、结束语",link:"#_8、结束语",children:[]}],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/Redis%E9%AB%98%E7%BA%A7%E7%AF%87%E4%B9%8B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",pathLocale:"/",extraFields:[]},{title:"1.线程和进程的区别？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"10.如何停止一个正在运行的线程？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E4%B8%80%E4%B8%AA%E6%AD%A3%E5%9C%A8%E8%BF%90%E8%A1%8C%E7%9A%84%E7%BA%BF%E7%A8%8B.html",pathLocale:"/",extraFields:[]},{title:"2.并行和并发有什么区别?",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"3.创建线程的四种方式",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F.html",pathLocale:"/",extraFields:[]},{title:"4.runnable 和 callable 有什么区别?",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.runnable%20%E5%92%8C%20callable%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"5.线程的 run()和 start()有什么区别？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E7%BA%BF%E7%A8%8B%E7%9A%84%20run()%E5%92%8C%20start()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"6.线程包括哪些状态，状态之间是如何变化的",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E7%BA%BF%E7%A8%8B%E5%8C%85%E6%8B%AC%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81%EF%BC%8C%E7%8A%B6%E6%80%81%E4%B9%8B%E9%97%B4%E6%98%AF%E5%A6%82%E4%BD%95%E5%8F%98%E5%8C%96%E7%9A%84.html",pathLocale:"/",extraFields:[]},{title:"7.新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E6%96%B0%E5%BB%BA%20T1%E3%80%81T2%E3%80%81T3%20%E4%B8%89%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%AE%83%E4%BB%AC%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C.html",pathLocale:"/",extraFields:[]},{title:"8.notify()和 notifyAll()有什么区别？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.notify()%E5%92%8C%20notifyAll()%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"9.在 java 中 wait 和 sleep 方法的不同？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E5%9C%A8%20java%20%E4%B8%AD%20wait%20%E5%92%8C%20sleep%20%E6%96%B9%E6%B3%95%E7%9A%84%E4%B8%8D%E5%90%8C.html",pathLocale:"/",extraFields:[]},{title:"1.讲一下synchronized关键字的底层原理？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/1.%E8%AE%B2%E4%B8%80%E4%B8%8Bsynchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"10.synchronized和Lock有什么区别 ?",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/10.synchronized%E5%92%8CLock%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB.html",pathLocale:"/",extraFields:[]},{title:"11.死锁产生的条件是什么？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/11.%E6%AD%BB%E9%94%81%E4%BA%A7%E7%94%9F%E7%9A%84%E6%9D%A1%E4%BB%B6.html",pathLocale:"/",extraFields:[]},{title:"12.如何进行死锁诊断？",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%AD%BB%E9%94%81%E5%88%A4%E6%96%AD.html",pathLocale:"/",extraFields:[]},{title:"12.聊一下ConcurrentHashMap",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/12.%E8%81%8A%E4%B8%80%E4%B8%8BConcurrentHashMap%20.html",pathLocale:"/",extraFields:[]},{title:"13.导致并发程序出现问题的根本原因是什么",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/13.%E5%AF%BC%E8%87%B4%E5%B9%B6%E5%8F%91%E7%A8%8B%E5%BA%8F%E5%87%BA%E7%8E%B0%E9%97%AE%E9%A2%98%E7%9A%84%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E6%98%AF%E4%BB%80%E4%B9%88.html",pathLocale:"/",extraFields:[]},{title:"2.synchronized关键字的底层原理-进阶",headers:[{level:2,title:"1.对象的内存结构",slug:"_1-对象的内存结构",link:"#_1-对象的内存结构",children:[]},{level:2,title:"2.Mark Word(32位虚拟机)",slug:"_2-mark-word-32位虚拟机",link:"#_2-mark-word-32位虚拟机",children:[]},{level:2,title:"3.再说Monitor重量级锁",slug:"_3-再说monitor重量级锁",link:"#_3-再说monitor重量级锁",children:[]},{level:2,title:"4.轻量级锁",slug:"_4-轻量级锁",link:"#_4-轻量级锁",children:[]},{level:2,title:"5.偏向锁",slug:"_5-偏向锁",link:"#_5-偏向锁",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/2.synchronized%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-%E8%BF%9B%E9%98%B6.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/3.%E4%BD%A0%E8%B0%88%E8%B0%88%20JMM%EF%BC%88Java%20%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"4.CAS 是什么（含乐观悲观锁）？",headers:[{level:2,title:"1.概述及基本工作流程",slug:"_1-概述及基本工作流程",link:"#_1-概述及基本工作流程",children:[]},{level:2,title:"2.CAS 底层实现",slug:"_2-cas-底层实现",link:"#_2-cas-底层实现",children:[]},{level:2,title:"3.乐观锁和悲观锁",slug:"_3-乐观锁和悲观锁",link:"#_3-乐观锁和悲观锁",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/4.CAS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%88%E5%90%AB%E4%B9%90%E8%A7%82%E6%82%B2%E8%A7%82%E9%94%81%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"5.请谈谈你对 volatile 的理解",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/5.%E8%AF%B7%E8%B0%88%E8%B0%88%E4%BD%A0%E5%AF%B9%20volatile%20%E7%9A%84%E7%90%86%E8%A7%A3.html",pathLocale:"/",extraFields:[]},{title:"6.什么是AQS？",headers:[{level:2,title:"1.概述",slug:"_1-概述",link:"#_1-概述",children:[]},{level:2,title:"2.工作机制",slug:"_2-工作机制",link:"#_2-工作机制",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/6.%E4%BB%80%E4%B9%88%E6%98%AFAQS.html",pathLocale:"/",extraFields:[]},{title:"7.什么是可重入锁？",headers:[{level:3,title:"详细解释：",slug:"详细解释",link:"#详细解释",children:[]},{level:3,title:"示例（Java中的 ReentrantLock 和 synchronized）：",slug:"示例-java中的-reentrantlock-和-synchronized",link:"#示例-java中的-reentrantlock-和-synchronized",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/7.%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81.html",pathLocale:"/",extraFields:[]},{title:"8.什么是自旋锁",headers:[{level:3,title:"自旋锁的工作原理：",slug:"自旋锁的工作原理",link:"#自旋锁的工作原理",children:[]},{level:3,title:"自旋锁的优缺点：",slug:"自旋锁的优缺点",link:"#自旋锁的优缺点",children:[]},{level:3,title:"自旋锁的示例：",slug:"自旋锁的示例",link:"#自旋锁的示例",children:[]},{level:3,title:"适用场景：",slug:"适用场景",link:"#适用场景",children:[]},{level:3,title:"总结：",slug:"总结",link:"#总结",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/8.%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E6%97%8B%E9%94%81.html",pathLocale:"/",extraFields:[]},{title:"9. ReentrantLock的实现原理",headers:[{level:2,title:"1.概述",slug:"_1-概述",link:"#_1-概述",children:[]},{level:2,title:"2.实现原理",slug:"_2-实现原理",link:"#_2-实现原理",children:[]}],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/9.ReentrantLock%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html",pathLocale:"/",extraFields:[]},{title:"1 线程状态",headers:[{level:2,title:"1.1 状态介绍",slug:"_1-1-状态介绍",link:"#_1-1-状态介绍",children:[]},{level:2,title:"1.2 案例演示",slug:"_1-2-案例演示",link:"#_1-2-案例演示",children:[{level:3,title:"1.2.1 案例一",slug:"_1-2-1-案例一",link:"#_1-2-1-案例一",children:[]},{level:3,title:"1.2.2 案例二",slug:"_1-2-2-案例二",link:"#_1-2-2-案例二",children:[]},{level:3,title:"1.2.3 案例三",slug:"_1-2-3-案例三",link:"#_1-2-3-案例三",children:[]}]},{level:2,title:"2.1 概述",slug:"_2-1-概述",link:"#_2-1-概述",children:[]},{level:2,title:"2.2 自定义线程池",slug:"_2-2-自定义线程池",link:"#_2-2-自定义线程池",children:[{level:3,title:"2.2.1 线程池的设计思路",slug:"_2-2-1-线程池的设计思路",link:"#_2-2-1-线程池的设计思路",children:[]},{level:3,title:"2.2.2 代码实现",slug:"_2-2-2-代码实现",link:"#_2-2-2-代码实现",children:[]}]},{level:2,title:"2.3 JDK中线程池",slug:"_2-3-jdk中线程池",link:"#_2-3-jdk中线程池",children:[{level:3,title:"2.3.1 Executors",slug:"_2-3-1-executors",link:"#_2-3-1-executors",children:[]},{level:3,title:"2.3.2 ThreadPoolExecutor",slug:"_2-3-2-threadpoolexecutor",link:"#_2-3-2-threadpoolexecutor",children:[]}]},{level:2,title:"3.1 看程序说结果",slug:"_3-1-看程序说结果",link:"#_3-1-看程序说结果",children:[]},{level:2,title:"3.2 JMM",slug:"_3-2-jmm",link:"#_3-2-jmm",children:[]},{level:2,title:"3.3 问题分析",slug:"_3-3-问题分析",link:"#_3-3-问题分析",children:[]},{level:2,title:"3.4 问题处理",slug:"_3-4-问题处理",link:"#_3-4-问题处理",children:[{level:3,title:"3.4.1 加锁",slug:"_3-4-1-加锁",link:"#_3-4-1-加锁",children:[]},{level:3,title:"3.4.2 volatile关键字",slug:"_3-4-2-volatile关键字",link:"#_3-4-2-volatile关键字",children:[]}]},{level:2,title:"4.1 看程序说结果",slug:"_4-1-看程序说结果",link:"#_4-1-看程序说结果",children:[]},{level:2,title:"4.2 问题分析说明",slug:"_4-2-问题分析说明",link:"#_4-2-问题分析说明",children:[]},{level:2,title:"4.3 volatile原子性测试",slug:"_4-3-volatile原子性测试",link:"#_4-3-volatile原子性测试",children:[]},{level:2,title:"4.4 volatile使用场景",slug:"_4-4-volatile使用场景",link:"#_4-4-volatile使用场景",children:[{level:3,title:"4.4.1 状态标志",slug:"_4-4-1-状态标志",link:"#_4-4-1-状态标志",children:[]},{level:3,title:"4.4.2 独立观察",slug:"_4-4-2-独立观察",link:"#_4-4-2-独立观察",children:[]}]},{level:2,title:"4.5 问题处理",slug:"_4-5-问题处理",link:"#_4-5-问题处理",children:[{level:3,title:"4.5.1 锁机制",slug:"_4-5-1-锁机制",link:"#_4-5-1-锁机制",children:[]},{level:3,title:"4.5.2 原子类",slug:"_4-5-2-原子类",link:"#_4-5-2-原子类",children:[]}]},{level:2,title:"4.6 AtomicInteger原理",slug:"_4-6-atomicinteger原理",link:"#_4-6-atomicinteger原理",children:[{level:3,title:"4.6.1 原理介绍",slug:"_4-6-1-原理介绍",link:"#_4-6-1-原理介绍",children:[]},{level:3,title:"4.6.2 源码分析",slug:"_4-6-2-源码分析",link:"#_4-6-2-源码分析",children:[]}]},{level:2,title:"4.7 CAS与Synchronized",slug:"_4-7-cas与synchronized",link:"#_4-7-cas与synchronized",children:[]},{level:2,title:"5.1 ConcurrentHashMap",slug:"_5-1-concurrenthashmap",link:"#_5-1-concurrenthashmap",children:[{level:3,title:"5.1.1 概述以及基本使用",slug:"_5-1-1-概述以及基本使用",link:"#_5-1-1-概述以及基本使用",children:[]},{level:3,title:"5.1.2 源码分析",slug:"_5-1-2-源码分析",link:"#_5-1-2-源码分析",children:[]}]},{level:2,title:"5.2 CountDownLatch",slug:"_5-2-countdownlatch",link:"#_5-2-countdownlatch",children:[]},{level:2,title:"5.3 CyclicBarrier",slug:"_5-3-cyclicbarrier",link:"#_5-3-cyclicbarrier",children:[{level:3,title:"5.3.1 概述以及基本使用",slug:"_5-3-1-概述以及基本使用",link:"#_5-3-1-概述以及基本使用",children:[]},{level:3,title:"5.3.2 使用场景",slug:"_5-3-2-使用场景",link:"#_5-3-2-使用场景",children:[]}]},{level:2,title:"5.4 Semaphore",slug:"_5-4-semaphore",link:"#_5-4-semaphore",children:[]},{level:2,title:"5.5 Exchanger",slug:"_5-5-exchanger",link:"#_5-5-exchanger",children:[{level:3,title:"5.5.1 概述以及基本使用",slug:"_5-5-1-概述以及基本使用",link:"#_5-5-1-概述以及基本使用",children:[]},{level:3,title:"5.5.2 使用场景",slug:"_5-5-2-使用场景",link:"#_5-5-2-使用场景",children:[]}]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%88%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%EF%BC%89.html",pathLocale:"/",extraFields:[]},{title:"JMM详解：Java内存模型的深度解析",headers:[{level:3,title:"1. JMM的基本概念",slug:"_1-jmm的基本概念",link:"#_1-jmm的基本概念",children:[]},{level:3,title:"2. JMM的三大特性",slug:"_2-jmm的三大特性",link:"#_2-jmm的三大特性",children:[]},{level:3,title:"3. JMM的关键字",slug:"_3-jmm的关键字",link:"#_3-jmm的关键字",children:[]},{level:3,title:"4. JMM中的指令重排",slug:"_4-jmm中的指令重排",link:"#_4-jmm中的指令重排",children:[]},{level:3,title:"5. 总结",slug:"_5-总结",link:"#_5-总结",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/1.Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html",pathLocale:"/",extraFields:[]},{title:"Java内存模型中的 happens-before 规则",headers:[{level:3,title:"1. happens-before 规则的基本解释",slug:"_1-happens-before-规则的基本解释",link:"#_1-happens-before-规则的基本解释",children:[]},{level:3,title:"2. happens-before 规则的具体实现",slug:"_2-happens-before-规则的具体实现",link:"#_2-happens-before-规则的具体实现",children:[]},{level:3,title:"3. happens-before 的应用场景",slug:"_3-happens-before-的应用场景",link:"#_3-happens-before-的应用场景",children:[]},{level:3,title:"4. 总结",slug:"_4-总结",link:"#_4-总结",children:[]}],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/2.happens-before%E5%8E%9F%E5%88%99.html",pathLocale:"/",extraFields:[]},{title:"RabbitMQ部署指南",headers:[{level:2,title:"1.1.下载镜像",slug:"_1-1-下载镜像",link:"#_1-1-下载镜像",children:[]},{level:2,title:"1.2.安装MQ",slug:"_1-2-安装mq",link:"#_1-2-安装mq",children:[]},{level:2,title:"2.1.集群分类",slug:"_2-1-集群分类",link:"#_2-1-集群分类",children:[]},{level:2,title:"2.2.设置网络",slug:"_2-2-设置网络",link:"#_2-2-设置网络",children:[]}],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/RabbitMQ%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97.html",pathLocale:"/",extraFields:[]},{title:"windows版sentinel运行报错问题处理:Unable to make protected final java.lang.Class java.lang.ClassLoader.define",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/windows%E7%89%88sentinel%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86Unable%20to%20make%20protected%20final%20java.lang.Class%20java.lang.ClassLoader.define.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]},{title:"Bug",headers:[],path:"/Bug/",pathLocale:"/",extraFields:[]},{title:"CICD",headers:[],path:"/CICD/",pathLocale:"/",extraFields:[]},{title:"网络",headers:[],path:"/%E7%BD%91%E7%BB%9C/",pathLocale:"/",extraFields:[]},{title:"装机",headers:[],path:"/%E8%A3%85%E6%9C%BA/",pathLocale:"/",extraFields:[]},{title:"设计模式",headers:[],path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",pathLocale:"/",extraFields:[]},{title:"Java",headers:[],path:"/Bug/Java/",pathLocale:"/",extraFields:[]},{title:"Database",headers:[],path:"/Database/",pathLocale:"/",extraFields:[]},{title:"私有云",headers:[],path:"/Docker/%E7%A7%81%E6%9C%89%E4%BA%91/",pathLocale:"/",extraFields:[]},{title:"随笔",headers:[],path:"/Docker/%E9%9A%8F%E7%AC%94/",pathLocale:"/",extraFields:[]},{title:"My SQL",headers:[],path:"/Interview/MySQL/",pathLocale:"/",extraFields:[]},{title:"Spring",headers:[],path:"/Interview/Spring/",pathLocale:"/",extraFields:[]},{title:"Sanfene",headers:[],path:"/Interview/sanfene/",pathLocale:"/",extraFields:[]},{title:"2.内存结构",headers:[],path:"/JVM/2.%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/",pathLocale:"/",extraFields:[]},{title:"Java8特性",headers:[],path:"/Java/Java8%E7%89%B9%E6%80%A7/",pathLocale:"/",extraFields:[]},{title:"String",headers:[],path:"/Java/String/",pathLocale:"/",extraFields:[]},{title:"唯手熟尔",headers:[],path:"/Java/%E5%94%AF%E6%89%8B%E7%86%9F%E5%B0%94/",pathLocale:"/",extraFields:[]},{title:"工具类",headers:[],path:"/Java/%E5%B7%A5%E5%85%B7%E7%B1%BB/",pathLocale:"/",extraFields:[]},{title:"异常",headers:[],path:"/Java/%E5%BC%82%E5%B8%B8/",pathLocale:"/",extraFields:[]},{title:"随笔",headers:[],path:"/Java/%E9%9A%8F%E7%AC%94/",pathLocale:"/",extraFields:[]},{title:"面试题",headers:[],path:"/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/",pathLocale:"/",extraFields:[]},{title:"0.笔记",headers:[],path:"/Linux/0.%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"1.安装与配置",headers:[],path:"/Linux/1.%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/",pathLocale:"/",extraFields:[]},{title:"13.服务与自动化管理",headers:[],path:"/Linux/13.%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"15.故障排除与修复",headers:[],path:"/Linux/15.%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E4%B8%8E%E4%BF%AE%E5%A4%8D/",pathLocale:"/",extraFields:[]},{title:"2.文件系统",headers:[],path:"/Linux/2.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/",pathLocale:"/",extraFields:[]},{title:"3.用户与组管理",headers:[],path:"/Linux/3.%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"4.系统与进程管理",headers:[],path:"/Linux/4.%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"5.软件包管理",headers:[],path:"/Linux/5.%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"6.网络配置与管理",headers:[],path:"/Linux/6.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"7.文件与目录管理",headers:[],path:"/Linux/7.%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"9.磁盘管理与存储",headers:[],path:"/Linux/9.%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E5%AD%98%E5%82%A8/",pathLocale:"/",extraFields:[]},{title:"Kafka",headers:[],path:"/MQ/Kafka/",pathLocale:"/",extraFields:[]},{title:"MQ",headers:[],path:"/MQ/",pathLocale:"/",extraFields:[]},{title:"Rabbit MQ",headers:[],path:"/MQ/RabbitMQ/",pathLocale:"/",extraFields:[]},{title:"Mybatis",headers:[],path:"/Mybatis/Mybatis/",pathLocale:"/",extraFields:[]},{title:"Mybatis",headers:[],path:"/Mybatis/",pathLocale:"/",extraFields:[]},{title:"Mybatis Plus",headers:[],path:"/Mybatis/Mybatis%20Plus/",pathLocale:"/",extraFields:[]},{title:"API",headers:[],path:"/Netty/API/",pathLocale:"/",extraFields:[]},{title:"基础",headers:[],path:"/Python/%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"爬虫",headers:[],path:"/Python/%E7%88%AC%E8%99%AB/",pathLocale:"/",extraFields:[]},{title:"03 Maven高级笔记",headers:[],path:"/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"04 Spring Boot笔记",headers:[],path:"/SSM/04-SpringBoot%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"05 Mybatisplus笔记",headers:[],path:"/SSM/05-Mybatisplus%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"Junit",headers:[],path:"/Spring/Junit/",pathLocale:"/",extraFields:[]},{title:"注解",headers:[],path:"/Spring/%E6%B3%A8%E8%A7%A3/",pathLocale:"/",extraFields:[]},{title:"Alibaba OSS",headers:[],path:"/SpringCloud/Alibaba-OSS/",pathLocale:"/",extraFields:[]},{title:"Spring Cloud",headers:[],path:"/SpringCloud/",pathLocale:"/",extraFields:[]},{title:"基础",headers:[],path:"/SpringCloud/%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"Spring MVC",headers:[],path:"/SpringMVC/",pathLocale:"/",extraFields:[]},{title:"Git",headers:[],path:"/VCS/Git/",pathLocale:"/",extraFields:[]},{title:"VCS",headers:[],path:"/VCS/",pathLocale:"/",extraFields:[]},{title:"Node",headers:[],path:"/%E5%89%8D%E7%AB%AF/node/",pathLocale:"/",extraFields:[]},{title:"前端",headers:[],path:"/%E5%89%8D%E7%AB%AF/",pathLocale:"/",extraFields:[]},{title:"网络",headers:[],path:"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/",pathLocale:"/",extraFields:[]},{title:"计算机基础",headers:[],path:"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"结构型",headers:[],path:"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%BB%93%E6%9E%84%E5%9E%8B/",pathLocale:"/",extraFields:[]},{title:"个人博客",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/",pathLocale:"/",extraFields:[]},{title:"项目实战",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/",pathLocale:"/",extraFields:[]},{title:"My Cat Web安装文档",headers:[],path:"/Database/MySQL/MyCat-Web%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/",pathLocale:"/",extraFields:[]},{title:"My Cat安装文档",headers:[],path:"/Database/MySQL/MyCat%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/",pathLocale:"/",extraFields:[]},{title:"My Cat配置文件",headers:[],path:"/Database/MySQL/MyCat%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",pathLocale:"/",extraFields:[]},{title:"My SQL优化",headers:[],path:"/Database/MySQL/MySQL%E4%BC%98%E5%8C%96/",pathLocale:"/",extraFields:[]},{title:"My SQL卸载文档 Linux",headers:[],path:"/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Linux/",pathLocale:"/",extraFields:[]},{title:"My SQL卸载文档 Windows",headers:[],path:"/Database/MySQL/MySQL%E5%8D%B8%E8%BD%BD%E6%96%87%E6%A1%A3-Windows/",pathLocale:"/",extraFields:[]},{title:"My SQL学习笔记",headers:[],path:"/Database/MySQL/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"My SQL安全配置",headers:[],path:"/Database/MySQL/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/",pathLocale:"/",extraFields:[]},{title:"My SQL安装文档 Linux",headers:[],path:"/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Linux/",pathLocale:"/",extraFields:[]},{title:"My SQL安装文档 Windows",headers:[],path:"/Database/MySQL/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3-Windows/",pathLocale:"/",extraFields:[]},{title:"My SQL小白",headers:[],path:"/Database/MySQL/MySQL%E5%B0%8F%E7%99%BD/",pathLocale:"/",extraFields:[]},{title:"My SQL故障修复",headers:[],path:"/Database/MySQL/MySQL%E6%95%85%E9%9A%9C%E4%BF%AE%E5%A4%8D/",pathLocale:"/",extraFields:[]},{title:"基础",headers:[],path:"/Database/MySQL/%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"工具",headers:[],path:"/Database/MySQL/%E5%B7%A5%E5%85%B7/",pathLocale:"/",extraFields:[]},{title:"运维",headers:[],path:"/Database/MySQL/%E8%BF%90%E7%BB%B4/",pathLocale:"/",extraFields:[]},{title:"进阶",headers:[],path:"/Database/MySQL/%E8%BF%9B%E9%98%B6/",pathLocale:"/",extraFields:[]},{title:"1.入门",headers:[],path:"/Database/Redis/1.%E5%85%A5%E9%97%A8/",pathLocale:"/",extraFields:[]},{title:"2.实战",headers:[],path:"/Database/Redis/2.%E5%AE%9E%E6%88%98/",pathLocale:"/",extraFields:[]},{title:"4.原理",headers:[],path:"/Database/Redis/4.%E5%8E%9F%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"01基础",headers:[],path:"/Interview/Java/01%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"02中等",headers:[],path:"/Interview/Java/02%E4%B8%AD%E7%AD%89/",pathLocale:"/",extraFields:[]},{title:"Java基础面试篇",headers:[],path:"/Interview/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E7%AF%87/",pathLocale:"/",extraFields:[]},{title:"Rabbit MQ",headers:[],path:"/Interview/MQ/RabbitMQ/",pathLocale:"/",extraFields:[]},{title:"MQ",headers:[],path:"/Interview/MQ/",pathLocale:"/",extraFields:[]},{title:"Java",headers:[],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Java/",pathLocale:"/",extraFields:[]},{title:"Linux",headers:[],path:"/Interview/%E9%9D%A2%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/Linux/",pathLocale:"/",extraFields:[]},{title:"01基础篇",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/01%E5%9F%BA%E7%A1%80%E7%AF%87/",pathLocale:"/",extraFields:[]},{title:"黑马 Java2021",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/",pathLocale:"/",extraFields:[]},{title:"02并发篇",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/02%E5%B9%B6%E5%8F%91%E7%AF%87/",pathLocale:"/",extraFields:[]},{title:"03虚拟机",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/03%E8%99%9A%E6%8B%9F%E6%9C%BA/",pathLocale:"/",extraFields:[]},{title:"04框架篇",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2021/04%E6%A1%86%E6%9E%B6%E7%AF%87/",pathLocale:"/",extraFields:[]},{title:"黑马 Java2023",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/",pathLocale:"/",extraFields:[]},{title:"15.面向对象进阶（抽象类 接口 内部类）",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/",pathLocale:"/",extraFields:[]},{title:"入门到起飞",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/",pathLocale:"/",extraFields:[]},{title:"22.集合（ List集合）",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/22.%E9%9B%86%E5%90%88%EF%BC%88List%E9%9B%86%E5%90%88%EF%BC%89/",pathLocale:"/",extraFields:[]},{title:"23.集合（泛型 Set 数据结构)",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/",pathLocale:"/",extraFields:[]},{title:"26.集合（ Stream流 方法引用）",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/",pathLocale:"/",extraFields:[]},{title:"31.多线程",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"35.反射 动态代理",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"接口",headers:[],path:"/Mybatis/Mybatis%20Plus/%E6%8E%A5%E5%8F%A3/",pathLocale:"/",extraFields:[]},{title:"注解",headers:[],path:"/Mybatis/Mybatis%20Plus/%E6%B3%A8%E8%A7%A3/",pathLocale:"/",extraFields:[]},{title:"AOP",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/AOP/",pathLocale:"/",extraFields:[]},{title:"01 Spring笔记",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"Spring Day01",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day01/",pathLocale:"/",extraFields:[]},{title:"Spring Day02",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day02/",pathLocale:"/",extraFields:[]},{title:"Spring Day03",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/spring_day03/",pathLocale:"/",extraFields:[]},{title:"随笔",headers:[],path:"/SSM/01-Spring%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",pathLocale:"/",extraFields:[]},{title:"Spring MVC Day01",headers:[],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day01/",pathLocale:"/",extraFields:[]},{title:"02 Spring MVC笔记",headers:[],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"Spring MVC Day02",headers:[],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC_day02/",pathLocale:"/",extraFields:[]},{title:"随笔",headers:[],path:"/SSM/02-SpringMVC%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",pathLocale:"/",extraFields:[]},{title:"随笔",headers:[],path:"/SSM/03-Maven%E9%AB%98%E7%BA%A7%E7%AC%94%E8%AE%B0/%E9%9A%8F%E7%AC%94/",pathLocale:"/",extraFields:[]},{title:"Docker",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/Docker/",pathLocale:"/",extraFields:[]},{title:"实用",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/",pathLocale:"/",extraFields:[]},{title:"ES",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/ES/",pathLocale:"/",extraFields:[]},{title:"MQ",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/",pathLocale:"/",extraFields:[]},{title:"Jmeter",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Jmeter/",pathLocale:"/",extraFields:[]},{title:"Seata",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/",pathLocale:"/",extraFields:[]},{title:"Sentinel",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/",pathLocale:"/",extraFields:[]},{title:"分布式事务",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",pathLocale:"/",extraFields:[]},{title:"报错记录",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/",pathLocale:"/",extraFields:[]},{title:"板书",headers:[],path:"/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/%E6%9D%BF%E4%B9%A6/",pathLocale:"/",extraFields:[]},{title:"01 分布式缓存",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/01-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/",pathLocale:"/",extraFields:[]},{title:"3.高级",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/",pathLocale:"/",extraFields:[]},{title:"02 多级缓存",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/02-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/",pathLocale:"/",extraFields:[]},{title:"03 Redis最佳实践",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/03-Redis%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/",pathLocale:"/",extraFields:[]},{title:"Redis高级篇 分布式缓存",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/",pathLocale:"/",extraFields:[]},{title:"Redis高级篇 多级缓存",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98/",pathLocale:"/",extraFields:[]},{title:"Redis高级篇 最佳实践",headers:[],path:"/Database/Redis/3.%E9%AB%98%E7%BA%A7/Redis%E9%AB%98%E7%BA%A7%E7%AF%87-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/",pathLocale:"/",extraFields:[]},{title:"01基础知识",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/01%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",pathLocale:"/",extraFields:[]},{title:"02并发安全",headers:[],path:"/Interview/%E9%BB%91%E9%A9%ACJava2023/08%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/02%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/",pathLocale:"/",extraFields:[]},{title:"Juc额外扩展资料",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/juc%E9%A2%9D%E5%A4%96%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/",pathLocale:"/",extraFields:[]},{title:"并发编程的艺术",headers:[],path:"/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/31.%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E8%89%BA%E6%9C%AF/",pathLocale:"/",extraFields:[]},{title:"安装",headers:[],path:"/SpringCloud/%E5%AE%9E%E7%94%A8/MQ/%E5%AE%89%E8%A3%85/",pathLocale:"/",extraFields:[]},{title:"Bug",headers:[],path:"/SpringCloud/%E9%AB%98%E7%BA%A7/Sentinel/bug/",pathLocale:"/",extraFields:[]},{title:"分类",headers:[],path:"/category/",pathLocale:"/",extraFields:[]},{title:"markdown 分类",headers:[],path:"/category/markdown/",pathLocale:"/",extraFields:[]},{title:"Java 分类",headers:[],path:"/category/java/",pathLocale:"/",extraFields:[]},{title:"MySQL 分类",headers:[],path:"/category/mysql/",pathLocale:"/",extraFields:[]},{title:"ES 分类",headers:[],path:"/category/es/",pathLocale:"/",extraFields:[]},{title:"Spring 分类",headers:[],path:"/category/spring/",pathLocale:"/",extraFields:[]},{title:"JVM 分类",headers:[],path:"/category/jvm/",pathLocale:"/",extraFields:[]},{title:"Linux 分类",headers:[],path:"/category/linux/",pathLocale:"/",extraFields:[]},{title:"Netty 分类",headers:[],path:"/category/netty/",pathLocale:"/",extraFields:[]},{title:"docker 分类",headers:[],path:"/category/docker/",pathLocale:"/",extraFields:[]},{title:"Mybatis 分类",headers:[],path:"/category/mybatis/",pathLocale:"/",extraFields:[]},{title:"实战 分类",headers:[],path:"/category/%E5%AE%9E%E6%88%98/",pathLocale:"/",extraFields:[]},{title:"Nacos 分类",headers:[],path:"/category/nacos/",pathLocale:"/",extraFields:[]},{title:"装机 分类",headers:[],path:"/category/%E8%A3%85%E6%9C%BA/",pathLocale:"/",extraFields:[]},{title:"数据库 分类",headers:[],path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",pathLocale:"/",extraFields:[]},{title:"Python 分类",headers:[],path:"/category/python/",pathLocale:"/",extraFields:[]},{title:"项目 分类",headers:[],path:"/category/%E9%A1%B9%E7%9B%AE/",pathLocale:"/",extraFields:[]},{title:"Git 分类",headers:[],path:"/category/git/",pathLocale:"/",extraFields:[]},{title:"Mybatis-Plus 分类",headers:[],path:"/category/mybatis-plus/",pathLocale:"/",extraFields:[]},{title:"SpringCloud高级篇 分类",headers:[],path:"/category/springcloud%E9%AB%98%E7%BA%A7%E7%AF%87/",pathLocale:"/",extraFields:[]},{title:"vue 分类",headers:[],path:"/category/vue/",pathLocale:"/",extraFields:[]},{title:"Redis 分类",headers:[],path:"/category/redis/",pathLocale:"/",extraFields:[]},{title:"Java高级 分类",headers:[],path:"/category/java%E9%AB%98%E7%BA%A7/",pathLocale:"/",extraFields:[]},{title:"使用指南 分类",headers:[],path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",pathLocale:"/",extraFields:[]},{title:"中间件 分类",headers:[],path:"/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",pathLocale:"/",extraFields:[]},{title:"Nginx 分类",headers:[],path:"/category/nginx/",pathLocale:"/",extraFields:[]},{title:"网络 分类",headers:[],path:"/category/%E7%BD%91%E7%BB%9C/",pathLocale:"/",extraFields:[]},{title:"Java基础 分类",headers:[],path:"/category/java%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"SpringCloud实用篇 分类",headers:[],path:"/category/springcloud%E5%AE%9E%E7%94%A8%E7%AF%87/",pathLocale:"/",extraFields:[]},{title:"DevOps 分类",headers:[],path:"/category/devops/",pathLocale:"/",extraFields:[]},{title:"Maven 分类",headers:[],path:"/category/maven/",pathLocale:"/",extraFields:[]},{title:"面试题 分类",headers:[],path:"/category/%E9%9D%A2%E8%AF%95%E9%A2%98/",pathLocale:"/",extraFields:[]},{title:"网络编程 分类",headers:[],path:"/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"redis 分类",headers:[],path:"/category/redis/",pathLocale:"/",extraFields:[]},{title:"面渣逆袭 分类",headers:[],path:"/category/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",pathLocale:"/",extraFields:[]},{title:"MyBatis 分类",headers:[],path:"/category/mybatis/",pathLocale:"/",extraFields:[]},{title:"SpringCloud 分类",headers:[],path:"/category/springcloud/",pathLocale:"/",extraFields:[]},{title:"MyCat 分类",headers:[],path:"/category/mycat/",pathLocale:"/",extraFields:[]},{title:"Windows 分类",headers:[],path:"/category/windows/",pathLocale:"/",extraFields:[]},{title:"MyBatis-Plus 分类",headers:[],path:"/category/mybatis-plus/",pathLocale:"/",extraFields:[]},{title:"标签",headers:[],path:"/tag/",pathLocale:"/",extraFields:[]},{title:"标签: 使用",headers:[],path:"/tag/%E4%BD%BF%E7%94%A8/",pathLocale:"/",extraFields:[]},{title:"标签: 必背",headers:[],path:"/tag/%E5%BF%85%E8%83%8C/",pathLocale:"/",extraFields:[]},{title:"标签: 总结",headers:[],path:"/tag/%E6%80%BB%E7%BB%93/",pathLocale:"/",extraFields:[]},{title:"标签: Java8特性",headers:[],path:"/tag/java8%E7%89%B9%E6%80%A7/",pathLocale:"/",extraFields:[]},{title:"标签: 注解",headers:[],path:"/tag/%E6%B3%A8%E8%A7%A3/",pathLocale:"/",extraFields:[]},{title:"标签: 重点",headers:[],path:"/tag/%E9%87%8D%E7%82%B9/",pathLocale:"/",extraFields:[]},{title:"标签: 教程",headers:[],path:"/tag/%E6%95%99%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"标签: 讲义",headers:[],path:"/tag/%E8%AE%B2%E4%B9%89/",pathLocale:"/",extraFields:[]},{title:"标签: bug",headers:[],path:"/tag/bug/",pathLocale:"/",extraFields:[]},{title:"标签: 查询",headers:[],path:"/tag/%E6%9F%A5%E8%AF%A2/",pathLocale:"/",extraFields:[]},{title:"标签: 阅读完毕",headers:[],path:"/tag/%E9%98%85%E8%AF%BB%E5%AE%8C%E6%AF%95/",pathLocale:"/",extraFields:[]},{title:"标签: 基础",headers:[],path:"/tag/%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"标签: 装机",headers:[],path:"/tag/%E8%A3%85%E6%9C%BA/",pathLocale:"/",extraFields:[]},{title:"标签: 镜像",headers:[],path:"/tag/%E9%95%9C%E5%83%8F/",pathLocale:"/",extraFields:[]},{title:"标签: 了解",headers:[],path:"/tag/%E4%BA%86%E8%A7%A3/",pathLocale:"/",extraFields:[]},{title:"标签: 笔记",headers:[],path:"/tag/%E7%AC%94%E8%AE%B0/",pathLocale:"/",extraFields:[]},{title:"标签: 踩坑",headers:[],path:"/tag/%E8%B8%A9%E5%9D%91/",pathLocale:"/",extraFields:[]},{title:"标签: 经验",headers:[],path:"/tag/%E7%BB%8F%E9%AA%8C/",pathLocale:"/",extraFields:[]},{title:"标签: 网络编程",headers:[],path:"/tag/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"标签: 事务",headers:[],path:"/tag/%E4%BA%8B%E5%8A%A1/",pathLocale:"/",extraFields:[]},{title:"标签: 安全",headers:[],path:"/tag/%E5%AE%89%E5%85%A8/",pathLocale:"/",extraFields:[]},{title:"标签: 面试题",headers:[],path:"/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/",pathLocale:"/",extraFields:[]},{title:"标签: 反射",headers:[],path:"/tag/%E5%8F%8D%E5%B0%84/",pathLocale:"/",extraFields:[]},{title:"标签: SE基础",headers:[],path:"/tag/se%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"标签: Seata",headers:[],path:"/tag/seata/",pathLocale:"/",extraFields:[]},{title:"标签: 容器",headers:[],path:"/tag/%E5%AE%B9%E5%99%A8/",pathLocale:"/",extraFields:[]},{title:"标签: 命令",headers:[],path:"/tag/%E5%91%BD%E4%BB%A4/",pathLocale:"/",extraFields:[]},{title:"标签: 基础知识",headers:[],path:"/tag/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",pathLocale:"/",extraFields:[]},{title:"标签: 入门",headers:[],path:"/tag/%E5%85%A5%E9%97%A8/",pathLocale:"/",extraFields:[]},{title:"标签: error",headers:[],path:"/tag/error/",pathLocale:"/",extraFields:[]},{title:"标签: git",headers:[],path:"/tag/git/",pathLocale:"/",extraFields:[]},{title:"标签: 网络",headers:[],path:"/tag/%E7%BD%91%E7%BB%9C/",pathLocale:"/",extraFields:[]},{title:"标签: 安装",headers:[],path:"/tag/%E5%AE%89%E8%A3%85/",pathLocale:"/",extraFields:[]},{title:"标签: 私有云",headers:[],path:"/tag/%E7%A7%81%E6%9C%89%E4%BA%91/",pathLocale:"/",extraFields:[]},{title:"标签: 坑王",headers:[],path:"/tag/%E5%9D%91%E7%8E%8B/",pathLocale:"/",extraFields:[]},{title:"标签: 简单",headers:[],path:"/tag/%E7%AE%80%E5%8D%95/",pathLocale:"/",extraFields:[]},{title:"标签: 插件",headers:[],path:"/tag/%E6%8F%92%E4%BB%B6/",pathLocale:"/",extraFields:[]},{title:"标签: API",headers:[],path:"/tag/api/",pathLocale:"/",extraFields:[]},{title:"标签: 爬虫",headers:[],path:"/tag/%E7%88%AC%E8%99%AB/",pathLocale:"/",extraFields:[]},{title:"标签: RabbitMQ",headers:[],path:"/tag/rabbitmq/",pathLocale:"/",extraFields:[]},{title:"标签: 多线程",headers:[],path:"/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"标签: 反射动态代理",headers:[],path:"/tag/%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/",pathLocale:"/",extraFields:[]},{title:"标签: 高级特性",headers:[],path:"/tag/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/",pathLocale:"/",extraFields:[]},{title:"标签: 接口文档",headers:[],path:"/tag/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/",pathLocale:"/",extraFields:[]},{title:"标签: 接口示例",headers:[],path:"/tag/%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B/",pathLocale:"/",extraFields:[]},{title:"标签: 配置文件",headers:[],path:"/tag/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/",pathLocale:"/",extraFields:[]},{title:"标签: Sentinel",headers:[],path:"/tag/sentinel/",pathLocale:"/",extraFields:[]},{title:"标签: 分布式事务",headers:[],path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/",pathLocale:"/",extraFields:[]},{title:"标签: 微服务",headers:[],path:"/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",pathLocale:"/",extraFields:[]},{title:"标签: 分库分表",headers:[],path:"/tag/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/",pathLocale:"/",extraFields:[]},{title:"标签: 卸载",headers:[],path:"/tag/%E5%8D%B8%E8%BD%BD/",pathLocale:"/",extraFields:[]},{title:"标签: CICD",headers:[],path:"/tag/cicd/",pathLocale:"/",extraFields:[]},{title:"标签: Jenkins",headers:[],path:"/tag/jenkins/",pathLocale:"/",extraFields:[]},{title:"标签: 目录",headers:[],path:"/tag/%E7%9B%AE%E5%BD%95/",pathLocale:"/",extraFields:[]},{title:"标签: 高质量",headers:[],path:"/tag/%E9%AB%98%E8%B4%A8%E9%87%8F/",pathLocale:"/",extraFields:[]},{title:"标签: 低质量",headers:[],path:"/tag/%E4%BD%8E%E8%B4%A8%E9%87%8F/",pathLocale:"/",extraFields:[]},{title:"标签: 面渣逆袭",headers:[],path:"/tag/%E9%9D%A2%E6%B8%A3%E9%80%86%E8%A2%AD/",pathLocale:"/",extraFields:[]},{title:"标签: SQL优化",headers:[],path:"/tag/sql%E4%BC%98%E5%8C%96/",pathLocale:"/",extraFields:[]},{title:"标签: yum安装",headers:[],path:"/tag/yum%E5%AE%89%E8%A3%85/",pathLocale:"/",extraFields:[]},{title:"标签: docker安装",headers:[],path:"/tag/docker%E5%AE%89%E8%A3%85/",pathLocale:"/",extraFields:[]},{title:"标签: 课堂随笔",headers:[],path:"/tag/%E8%AF%BE%E5%A0%82%E9%9A%8F%E7%AC%94/",pathLocale:"/",extraFields:[]},{title:"文章",headers:[],path:"/article/",pathLocale:"/",extraFields:[]},{title:"星标",headers:[],path:"/star/",pathLocale:"/",extraFields:[]},{title:"时间轴",headers:[],path:"/timeline/",pathLocale:"/",extraFields:[]}]},58761:(i,s,l)=>{l.d(s,{U:()=>e});const e=JSON.parse('{"base":"/blog/","lang":"zh-CN","title":"小满","description":"小满的知识库","head":[],"locales":{}}')},26653:(i,s,l)=>{l.d(s,{K:()=>e});const e=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$QZazZwfls2zPAaql0f4Zl.VSWXdihL0b0fYEvvZfUSHchhDF3NWW6"],"/blog/学习记录.html":["$2a$10$JZbiIA5SDfUmDtW1S3z8vucsJ0Xe/.cO/ALeffxl0xuToicwbAZVK"]}},"author":{"name":"来杯冰柠檬","url":""},"logo":"/assets/images/avatar.png","repo":"JL-20191210/blog","docsDir":"src","footer":"哟吼~","displayFooter":true,"fullscreen":true,"blog":{"description":"一个全干攻城狮","intro":"/intro.html","medias":{"Gitee":"https://example.com","GitHub":"https://example.com","Zhihu":"https://example.com"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"后端","icon":"code","prefix":"/Java/","children":[{"text":"Java","link":"/Java/README.md","icon":"fa-brands fa-java","activeMatch":"^/Java/$"},{"text":"Python","link":"/Python/README.md","icon":"fa-brands fa-python","activeMatch":"^/Python/$"},{"text":"JVM","link":"/JVM/README.md","icon":"fa-solid fa-microchip","activeMatch":"^/JVM/$"}]},{"text":"Vue","icon":"fa-brands fa-vuejs","link":"/Vue/","activeMatch":"^/Vue/$"},{"text":"Spring","icon":"fa-solid fa-leaf","prefix":"/Spring/","children":[{"text":"Spring","link":"/Spring/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/Spring/$"},{"text":"SpringMVC","link":"/SpringMVC/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/SpringMVC/$"},{"text":"SSM","link":"/SSM/README.md","icon":"fa-solid fa-leaf","activeMatch":"^/SSM/$"}]},{"text":"SpringCloud","icon":"fa-solid fa-cloud","prefix":"/SpringCloud/","children":[{"text":"高级篇","link":"/SpringCloud/高级/","icon":"fa-brands fa-web-awesome","activeMatch":"^/SpringCloud/$"}]},{"text":"数据库","icon":"fa-solid fa-database","prefix":"/Database/","children":[{"text":"MySQL","link":"MySQL/","icon":"fa-solid fa-database","activeMatch":"^/MySQL/$"},{"text":"Redis","link":"Redis/","icon":"fa-solid fa-server","activeMatch":"^/Redis/$"}]},{"text":"Docker","icon":"fa-brands fa-docker","link":"/Docker/","activeMatch":"^/Docker/$"},{"text":"Linux","icon":"fa-brands fa-linux","prefix":"/Linux/","link":"Linux","children":[{"text":"Linux","link":"README.md","icon":"fa-brands fa-linux","activeMatch":"^/Linux/$"}]},{"text":"Netty","icon":"fa-solid fa-n","link":"/Netty/","activeMatch":"^/Netty/$"},{"text":"项目实战","icon":"fa-brands fa-product-hunt","prefix":"/项目实战/","children":[{"text":"谷粒商城","link":"谷粒商城/README.md","icon":"fa-brands fa-codepen","activeMatch":"^/谷粒商城/$"}]},{"text":"面试题","icon":"fa-solid fa-book-tanakh","link":"/Interview/","activeMatch":"^/Interview/$"}],"sidebar":{"/":["","intro"],"/Java/":"structure","/Python/":"structure","/JVM/":"structure","/Vue/":"structure","/Spring/":"structure","/SpringCloud/":"structure","/Database/":"structure","/Netty/":"structure","/Nginx/":"structure","/Redis/":"structure","/Docker/":"structure","/项目实战/":"structure","/Linux/":"structure","/Interview/":"structure","/SSM/":"structure"}}}}')},74923:(i,s,l)=>{},38123:(i,s,l)=>{l.d(s,{v:()=>e});const e={"/Java/":["",{text:"Java8特性",prefix:"Java8特性/",collapsible:!0,children:["Java Stream API","深入理解 Java Optional 类","函数式接口","深入理解 Java 8 新特性：从核心到实践","深入理解 Java Collector","深入理解 Java 中的默认方法和静态方法","深入理解 Stream API"]},{text:"String",prefix:"String/",collapsible:!0,children:["isNotEmpty和isNotBlank","Java中重写toString"]},{text:"入门到起飞",prefix:"入门到起飞/",collapsible:!0,children:[{text:"15.面向对象进阶（抽象类&接口&内部类）",prefix:"15.面向对象进阶（抽象类_接口_内部类）/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/15.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%EF%BC%88%E6%8A%BD%E8%B1%A1%E7%B1%BB_%E6%8E%A5%E5%8F%A3_%E5%86%85%E9%83%A8%E7%B1%BB%EF%BC%89/day03%E7%AC%94%E8%AE%B0.html"]},{text:"22.集合（ List集合）",prefix:"22.集合（List集合）/",collapsible:!0,children:["集合01"]},{text:"23.集合（泛型& Set&数据结构)",prefix:"23.集合（泛型_Set_数据结构)/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/23.%E9%9B%86%E5%90%88%EF%BC%88%E6%B3%9B%E5%9E%8B_Set_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)/%E9%9B%86%E5%90%8802.html"]},{text:"26.集合（ Stream流&方法引用）",prefix:"26.集合（Stream流_方法引用）/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/26.%E9%9B%86%E5%90%88%EF%BC%88Stream%E6%B5%81_%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%EF%BC%89/stream%E6%B5%81%E5%92%8C%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8.html"]},{text:"31.多线程",prefix:"31.多线程/",collapsible:!0,children:["多线程01","多线程02",{text:"Juc额外扩展资料",prefix:"juc额外扩展资料/",collapsible:!0,children:["多线程（额外扩展）"]},"多线程总结",{text:"并发编程的艺术",prefix:"并发编程的艺术/",collapsible:!0,children:["2.happens-before原则","1.Java内存模型"]}]},{text:"35.反射&动态代理",prefix:"35.反射_动态代理/",collapsible:!0,children:["/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getDeclaredField()%E5%92%8CgetField()%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/getMethods()%E5%92%8CgetDeclaredMethods()%E7%9A%84%E5%8C%BA%E5%88%AB.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%80%BB%E7%BB%93.html","/Java/%E5%85%A5%E9%97%A8%E5%88%B0%E8%B5%B7%E9%A3%9E/35.%E5%8F%8D%E5%B0%84_%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/%E5%AD%97%E8%8A%82%E7%A0%81%E5%AF%B9%E8%B1%A1.html"]}]},{text:"唯手熟尔",prefix:"唯手熟尔/",collapsible:!0,children:["equals与等号"]},{text:"工具类",prefix:"工具类/",collapsible:!0,children:["BeanUtil","Java常用工具包"]},{text:"异常",prefix:"异常/",collapsible:!0,children:["try-with-resources自动关闭资源"]},"空值和null值",{text:"随笔",prefix:"随笔/",collapsible:!0,children:["Java 中引用类型在内存中的存储方式","Java 的引用传递机制"]},"雷丰阳Java视频",{text:"面试题",prefix:"面试题/",collapsible:!0,children:["1.序列化与反序列化","1.补充- FST框架使用","2.不可变类","3.Exception和Error的区别","3.扩展-异常处理注意点","4.Java的优势","5.什么是Java的多态","6.Java中的参数传递是按值还是按引用","7.Java 不支持多重继承","7.Java不支持多重继承","8.Java面向对象和面向过程编程的区别","9.Java方法重载和重写之间的区别","10.Java内部类及作用","11.Java8新特性","12.JDK和JRE区别","13.你使用过哪些JDK工具","/Java/%E9%9D%A2%E8%AF%95%E9%A2%98/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","15.Java中的hashCode和equals方法之间有什么关系","16.什么是Java中的动态代理","17.JDK动态代理和CGLIB动态代理有什么区别"]}],"/Python/":["",{text:"基础",prefix:"基础/",collapsible:!0,children:["0.前言","video","核心数据类型"]},{text:"爬虫",prefix:"爬虫/",collapsible:!0,children:["样例"]}],"/JVM/":["","1.学习JVM有什么用","2.1.年轻代老年代","2.内存结构",{text:"2.内存结构",prefix:"2.内存结构/",collapsible:!0,children:["2.1程序计数器","2.2虚拟机栈","2.3本地方法栈","2.4堆","2.5方法区","2.6直接内存"]},"cpu load过高问题","GC类型","jstack用法","OOM","黑马JVM"],"/Vue/":["","vue模板","表单验证"],"/Spring/":["",{text:"Junit",prefix:"Junit/",collapsible:!0,children:["生命周期注解"]},"SpringBoot无数据源启动","Spring5.x概述",{text:"注解",prefix:"注解/",collapsible:!0,children:["@FeignClient","@ControllerAdvice","@EnableTransactionManagement","@InitBinder","@JsonFormat","@JsonInclude","@ResponseBody","元注解","注解@RequestMapping、@PostMapping、@GetMapping"]}],"/SpringCloud/":[{text:"Alibaba OSS",prefix:"Alibaba-OSS/",collapsible:!0,children:["阿里云oss使用记录"]},{text:"SpringCloud高级篇",prefix:"高级/",collapsible:!0,icon:"fa-solid fa-web-awesome",children:["",{text:"Jmeter",prefix:"Jmeter/",collapsible:!0,children:["1.MAC安装JMeter","2.Jmeter快速入门","3.sentinel规则持久化"]},{text:"Seata",prefix:"Seata/",collapsible:!0,children:["seata1.4.2升级2.0.0注意点","seata的部署和集成","/SpringCloud/%E9%AB%98%E7%BA%A7/Seata/TC_TM_RM.html","四种分布式事务模式","模式总结","配置文件"]},{text:"Sentinel",prefix:"Sentinel/",collapsible:!0,children:[{text:"Bug",prefix:"bug/",collapsible:!0,children:["windows版sentinel运行报错问题处理Unable to make protected final java.lang.Class java.lang.ClassLoader.define"]},"微服务保护"]},{text:"分布式事务",prefix:"分布式事务/",collapsible:!0,children:["分布式事务"]}]},{text:"基础",prefix:"基础/",collapsible:!0,children:["事务ACID原则"]},{text:"实用",prefix:"实用/",collapsible:!0,children:[{text:"Docker",prefix:"Docker/",collapsible:!0,children:["Centos7安装Docker","Docker实用篇"]},{text:"ES",prefix:"ES/",collapsible:!0,children:["1.什么是ES","2.倒排索引","3.基本概念","4.安装elasticsearch","5.分词器","6.mapping常见属性","7.创建索引库","8.常见查询类型","10.分页","9.copy_to的用法","视频教程","讲义-分布式搜索引擎01","讲义-分布式搜索引擎02"]},{text:"MQ",prefix:"MQ/",collapsible:!0,children:["RabbitMQ",{text:"安装",prefix:"安装/",collapsible:!0,children:["RabbitMQ部署指南"]}]},{text:"Nacos",prefix:"Nacos/",collapsible:!0,icon:"fa-solid fa-cloud",children:["","0.安装与启动","1.注册中心","2.配置中心","3.网关配置","4.Nacos指定服务端IP"]}]}],"/Database/":[{text:"MySQL",prefix:"MySQL/",collapsible:!0,icon:"fa-solid fa-database",children:["",{text:"My Cat Web安装文档",prefix:"MyCat-Web安装文档/",collapsible:!0,children:["MyCat-web安装文档"]},{text:"My Cat安装文档",prefix:"MyCat安装文档/",collapsible:!0,children:["MyCat安装文档"]},{text:"My Cat配置文件",prefix:"MyCat配置文件/",collapsible:!0,children:["schema","server","rule"]},{text:"My SQL优化",prefix:"MySQL优化/",collapsible:!0,children:["union和unionAll"]},{text:"My SQL卸载文档 Linux",prefix:"MySQL卸载文档-Linux/",collapsible:!0,children:["MySQL卸载-Linux"]},{text:"My SQL卸载文档 Windows",prefix:"MySQL卸载文档-Windows/",collapsible:!0,children:["MySQL卸载文档-Windows版"]},{text:"My SQL学习笔记",prefix:"MySQL学习笔记/",collapsible:!0,children:["MySQL学习笔记"]},{text:"My SQL安全配置",prefix:"MySQL安全配置/",collapsible:!0,children:["MySQL数据库授权管理","数据库安全配置","数据库隔离级别"]},{text:"My SQL安装文档 Linux",prefix:"MySQL安装文档-Linux/",collapsible:!0,children:["MySQL-Linux离线安装","MySQL-Linux-yum及docker安装"]},{text:"My SQL安装文档 Windows",prefix:"MySQL安装文档-Windows/",collapsible:!0,children:["MySQL安装"]},{text:"My SQL小白",prefix:"MySQL小白/",collapsible:!0,children:["mysql是什么_架构是怎么样的"]},{text:"My SQL故障修复",prefix:"MySQL故障修复/",collapsible:!0,children:["caching_sha2_password无法加载","mysql-uroot-p报错","Navicat连接mysql报错"]},{text:"基础",prefix:"基础/",collapsible:!0,children:["笔记-基础篇","DCL语句演示","MySQL数据类型","事务操作演示","函数","函数演示","多表查询案例演示","多表查询演示","数据库控制语言DCL","约束及多表关系演示"]},{text:"工具",prefix:"工具/",collapsible:!0,children:["闪回-flashback"]},{text:"运维",prefix:"运维/",collapsible:!0,children:["MyCat配置信息含义","运维篇"]},{text:"进阶",prefix:"进阶/",collapsible:!0,children:["/Database/MySQL/%E8%BF%9B%E9%98%B6/1.%E4%B8%BA%E4%BB%80%E4%B9%88InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E9%80%89%E6%8B%A9%E4%BD%BF%E7%94%A8B_tree%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.html","1.什么情况下会出现读取记录的事务id比创建readview的事务id大","笔记-进阶篇"]}]},{text:"Redis",prefix:"Redis/",collapsible:!0,icon:"fa-solid fa-database",children:[{text:"1.入门",prefix:"1.入门/",collapsible:!0,children:["Redis基础篇"]},{text:"2.实战",prefix:"2.实战/",collapsible:!0,children:["Redis实战篇","Redis实战篇-在线","pending-list"]},{text:"3.高级",prefix:"3.高级/",collapsible:!0,children:[{text:"01 分布式缓存",prefix:"01-分布式缓存/",collapsible:!0,children:["Redis高级-分布式缓存"]},{text:"02 多级缓存",prefix:"02-多级缓存/",collapsible:!0,children:["多级缓存"]},{text:"03 Redis最佳实践",prefix:"03-Redis最佳实践/",collapsible:!0,children:["Redis高级篇之最佳实践"]},{text:"Redis高级篇 最佳实践",prefix:"Redis高级篇-最佳实践/",collapsible:!0,children:["Redis高级篇之最佳实践"]},{text:"Redis高级篇 分布式缓存",prefix:"Redis高级篇-分布式缓存/",collapsible:!0,children:["Redis高级-分布式缓存"]},{text:"Redis高级篇 多级缓存",prefix:"Redis高级篇-多级缓存/",collapsible:!0,children:["多级缓存"]}]},{text:"4.原理",prefix:"4.原理/",collapsible:!0,children:["原理篇"]},"Redis 是什么？架构是怎么样的？","视频教程"]}],"/Netty/":["01Netty-nio","02Netty-入门","03Netty-进阶","04Netty-优化与源码",{text:"API",prefix:"API/",collapsible:!0,children:["API","ExecutorService"]},"Channel","释放ByteBuf","关闭事件循环组","核心概念理解","1.黑马视频教程"],"/Nginx/":["","413 (Request Entity Too Large)"],"/Redis/":[],"/Docker/":[{text:"私有云",prefix:"私有云/",collapsible:!0,children:["前后端分离博客项目","玩客云","私有云部署软件"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["docker-compose安装软件","Dockerfile 构建 Spring Boot 镜像并运行服务","docker安装jenkins及配置","docker安装软件","查看镜像架构","pull","安装NocoDB","Docker容器与宿主机时间同步","查看数据卷目录","特权模式","镜像导入导出"]}],"/项目实战/":[{text:"个人博客",prefix:"个人博客/",collapsible:!0,children:["前端部署"]},{text:"谷粒商城",prefix:"谷粒商城/",collapsible:!0,icon:"fa-brands fa-shopify",children:["","跨域","关闭eslint检查",{text:"报错记录",prefix:"报错记录/",collapsible:!0,children:["服务列表为空","SpringBoot读取ValidationMessages.properties，中文乱码","人人后台注册至Nacos版本问题","人人前端启动失败","定时任务启动失败","测试方法启动空指针","找不到符号"]},{text:"板书",prefix:"板书/",collapsible:!0,children:["数据校验"]},"视频教程"]}],"/Linux/":["",{text:"0.笔记",prefix:"0.笔记/",collapsible:!0,children:["Linux课程笔记","Linux系统软件安装"]},{text:"1.安装与配置",prefix:"1.安装与配置/",collapsible:!0,children:["V2ray安装","主要架构"]},{text:"2.文件系统",prefix:"2.文件系统/",collapsible:!0,children:["软硬链接"]},{text:"3.用户与组管理",prefix:"3.用户与组管理/",collapsible:!0,children:["单用户模式重置密码"]},{text:"4.系统与进程管理",prefix:"4.系统与进程管理/",collapsible:!0,children:["daemon-reload","init命令详解","rc.local","查看系统配置","查询安装位置","Ubuntu命令行图形化界面切换"]},{text:"5.软件包管理",prefix:"5.软件包管理/",collapsible:!0,children:["修改yum源"]},{text:"6.网络配置与管理",prefix:"6.网络配置与管理/",collapsible:!0,children:["关闭端口占用进程"]},{text:"7.文件与目录管理",prefix:"7.文件与目录管理/",collapsible:!0,children:["dos2unix换行符清理"]},{text:"9.磁盘管理与存储",prefix:"9.磁盘管理与存储/",collapsible:!0,children:["硬盘挂载"]},{text:"13.服务与自动化管理",prefix:"13.服务与自动化管理/",collapsible:!0,children:["systemctl"]},{text:"15.故障排除与修复",prefix:"15.故障排除与修复/",collapsible:!0,children:["reset-failed"]}],"/Interview/":[{text:"Java",prefix:"Java/",collapsible:!0,icon:"fa-brands fa-java",children:["",{text:"01基础",prefix:"01基础/",collapsible:!0,children:["1.序列化与反序列化","1.补充- FST框架使用","2.不可变类","3.Exception和Error的区别","3.扩展-异常处理注意点","4.Java的优势","5.什么是Java的多态","6.Java中的参数传递是按值还是按引用","7.Java 不支持多重继承","7.Java不支持多重继承","8.Java面向对象和面向过程编程的区别","9.Java方法重载和重写之间的区别","10.Java内部类及作用","11.Java8新特性","12.JDK和JRE区别","13.你使用过哪些JDK工具","/Interview/Java/01%E5%9F%BA%E7%A1%80/14.Java%20%E4%B8%AD%20hashCode_equals%20%E6%96%B9%E6%B3%95%E5%92%8C__%20%E6%93%8D%E4%BD%9C%E7%AC%A6.html","15.Java中的hashCode和equals方法之间有什么关系","16.什么是Java中的动态代理","17.JDK动态代理和CGLIB动态代理有什么区别","18.接口和抽象类有什么区别"]},{text:"02中等",prefix:"02中等/",collapsible:!0,children:["1.Java中String、StringBuffer和StringBuilder的区别","2.Java中volatile关键字的作用"]},{text:"Java基础面试篇",prefix:"Java基础面试篇/",collapsible:!0,children:["1.Java基础面试篇"]}]},{text:"MQ",prefix:"MQ/",collapsible:!0,children:[{text:"Rabbit MQ",prefix:"RabbitMQ/",collapsible:!0,children:["RabbitMQ面试题"]}]},{text:"My SQL",prefix:"MySQL/",collapsible:!0,children:["MySQL高频60","MySQL高频60-优化版","MySQL面渣84","MySQL黑马23"]},{text:"Sanfene",prefix:"sanfene/",collapsible:!0,children:["nixi","javase","javathread","collection","jvm","linux","mybatis","mysql","netty","redis","rocketmq","spring","fenbushi","weifuwu","os","network","shejimoshi"]},{text:"Spring",prefix:"Spring/",collapsible:!0,children:["Spring 实例化 Bean 的四种方式","Spring面试题41","Spring面试题分析及总结"]},{text:"面试答题卡",prefix:"面试答题卡/",collapsible:!0,icon:"fa-solid fa-file-pen",children:["",{text:"Java",prefix:"Java/",collapsible:!0,children:["Java_多态_设计模式","依赖倒置原则（DIP）","最少知识原则（LoD）","开放封闭原则（OCP）","接口隔离原则（ISP）","LSP 设计原则反例","Java 中的深拷贝实现方式","单一职责原则（SRP）","面向对象设计原则（SOLID 及相关）"]},{text:"Linux",prefix:"Linux/",collapsible:!0,children:["Linux 的软链接与硬链接"]}]},{text:"黑马 Java2021",prefix:"黑马Java2021/",collapsible:!0,children:[{text:"01基础篇",prefix:"01基础篇/",collapsible:!0,children:["基础篇讲义"]},{text:"02并发篇",prefix:"02并发篇/",collapsible:!0,children:["并发篇讲义"]},{text:"03虚拟机",prefix:"03虚拟机/",collapsible:!0,children:["虚拟机篇讲义"]},{text:"04框架篇",prefix:"04框架篇/",collapsible:!0,children:["框架篇讲义"]}]},{text:"黑马 Java2023",prefix:"黑马Java2023/",collapsible:!0,children:[{text:"08并发编程",prefix:"08并发编程/",collapsible:!0,children:["",{text:"01基础知识",prefix:"01基础知识/",collapsible:!0,children:["1.线程和进程的区别","2.并行和并发有什么区别","3.创建线程的四种方式","4.runnable 和 callable 有什么区别","5.线程的 run()和 start()有什么区别","6.线程包括哪些状态，状态之间是如何变化的","7.新建 T1、T2、T3 三个线程，如何保证它们按顺序执行","8.notify()和 notifyAll()有什么区别","9.在 java 中 wait 和 sleep 方法的不同","10. 如何停止一个正在运行的线程"]},{text:"02并发安全",prefix:"02并发安全/",collapsible:!0,children:["3.你谈谈 JMM（Java 内存模型）","1.讲一下synchronized关键字的底层原理","2.synchronized关键字的底层原理-进阶","4.CAS是什么（含乐观悲观锁）","5.请谈谈你对 volatile 的理解","6.什么是AQS","7.什么是可重入锁","8.什么是自旋锁","9.ReentrantLock的实现原理","10.synchronized和Lock有什么区别","11.死锁产生的条件","12.如何进行死锁判断","12.聊一下ConcurrentHashMap ","13.导致并发程序出现问题的根本原因是什么"]}]}]}],"/SSM/":["",{text:"01 Spring笔记",prefix:"01-Spring笔记/",collapsible:!0,children:[{text:"AOP",prefix:"AOP/",collapsible:!0,children:["性能监控切面","日志切面排除路径","入参处理切面"]},{text:"Spring Day01",prefix:"spring_day01/",collapsible:!0,children:["Spring_day01"]},{text:"Spring Day02",prefix:"spring_day02/",collapsible:!0,children:["Spring_day02"]},{text:"Spring Day03",prefix:"spring_day03/",collapsible:!0,children:["Spring_day03"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["Spring注解","Spring随笔"]}]},{text:"02 Spring MVC笔记",prefix:"02-SpringMVC笔记/",collapsible:!0,children:[{text:"Spring MVC Day01",prefix:"SpringMVC_day01/",collapsible:!0,children:["SpringMVC_day01"]},{text:"Spring MVC Day02",prefix:"SpringMVC_day02/",collapsible:!0,children:["SpringMVC_day02"]},{text:"随笔",prefix:"随笔/",collapsible:!0,children:["SpringMVC注解","SpringMVC随笔"]}]},{text:"03 Maven高级笔记",prefix:"03-Maven高级笔记/",collapsible:!0,children:["Maven高级","POM文件帮助文档",{text:"随笔",prefix:"随笔/",collapsible:!0,children:["packaging类型","pom中的relativePath"]}]},{text:"04 Spring Boot笔记",prefix:"04-SpringBoot笔记/",collapsible:!0,children:["SpringBoot"]},{text:"05 Mybatisplus笔记",prefix:"05-Mybatisplus笔记/",collapsible:!0,children:["MyBatisPlus"]}]}},32878:(i,s,l)=>{l.d(s,{P:()=>e});const e={Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}}},i=>{i.O(0,[26834,49703],(()=>i(i.s=38731))),i.O()}]);