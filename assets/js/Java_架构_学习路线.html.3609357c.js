"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[63268],{66262:(l,a)=>{a.A=(l,a)=>{const i=l.__vccOpts||l;for(const[l,e]of a)i[l]=e;return i}},81221:(l,a,i)=>{i.r(a),i.d(a,{comp:()=>h,data:()=>r});var e=i(20641);const n={},h=(0,i(66262).A)(n,[["render",function(l,a){return(0,e.uX)(),(0,e.CE)("div",null,a[0]||(a[0]=[(0,e.Fv)('<h1 id="成为-java-架构师学习路线图" tabindex="-1"><a class="header-anchor" href="#成为-java-架构师学习路线图"><span>成为 Java 架构师学习路线图</span></a></h1><blockquote><p>🧠 面向三年经验的 Java 后端开发者 🎯 目标：1~2 年内具备中级架构师所需的核心能力</p></blockquote><hr><h2 id="🎯-路线图总览" tabindex="-1"><a class="header-anchor" href="#🎯-路线图总览"><span>🎯 路线图总览</span></a></h2><ul><li>阶段一：打牢技术地基（3~6个月）</li><li>阶段二：提升系统设计与架构能力（3~6个月）</li><li>阶段三：主导系统设计与优化（6~12个月）</li><li>阶段四：积累技术影响力与战略视角（持续）</li></ul><hr><h2 id="📌-阶段一-打牢技术地基-3-6个月" tabindex="-1"><a class="header-anchor" href="#📌-阶段一-打牢技术地基-3-6个月"><span>📌 阶段一：打牢技术地基（3~6个月）</span></a></h2><h3 id="✅-java-核心与-jvm" tabindex="-1"><a class="header-anchor" href="#✅-java-核心与-jvm"><span>✅ Java 核心与 JVM</span></a></h3><ul><li>Java 并发编程（锁机制、ThreadPoolExecutor）</li><li>Java 内存模型、volatile、happens-before</li><li>JVM 内存结构（堆/栈/方法区/本地内存）</li><li>GC 算法（G1、CMS）、GC 日志分析</li><li>Java Agent、类加载机制</li></ul><h3 id="✅-spring-核心原理" tabindex="-1"><a class="header-anchor" href="#✅-spring-核心原理"><span>✅ Spring 核心原理</span></a></h3><ul><li>IOC / AOP / Bean 生命周期</li><li>Spring Boot 自动配置原理（@EnableAutoConfiguration）</li><li>Spring MVC 请求处理流程（HandlerMapping、DispatcherServlet）</li><li>Spring Transaction 的传播机制和隔离级别</li></ul><h3 id="✅-中间件与数据库" tabindex="-1"><a class="header-anchor" href="#✅-中间件与数据库"><span>✅ 中间件与数据库</span></a></h3><ul><li>Redis：数据结构、缓存穿透/击穿/雪崩</li><li>Kafka：主题、分区、消费者组、消息顺序</li><li>MySQL：索引设计、Explain 分析、慢查询优化</li><li>实战：一次复杂查询或批处理 SQL 优化经验总结</li></ul><hr><h2 id="📌-阶段二-系统设计与架构思维-3-6个月" tabindex="-1"><a class="header-anchor" href="#📌-阶段二-系统设计与架构思维-3-6个月"><span>📌 阶段二：系统设计与架构思维（3~6个月）</span></a></h2><h3 id="✅-架构基础" tabindex="-1"><a class="header-anchor" href="#✅-架构基础"><span>✅ 架构基础</span></a></h3><ul><li>架构分层（表现层、服务层、数据层）</li><li>单体应用、微服务、Serverless 对比</li><li>常见架构模式：MVC、CQRS、事件驱动、领域驱动设计（DDD）</li></ul><h3 id="✅-分布式基础能力" tabindex="-1"><a class="header-anchor" href="#✅-分布式基础能力"><span>✅ 分布式基础能力</span></a></h3><ul><li>服务治理：注册/发现、熔断限流（Spring Cloud / Nacos / Sentinel）</li><li>配置中心：Nacos / Apollo</li><li>RPC 通信：gRPC、Dubbo、Feign</li><li>分布式事务：2PC、TCC、消息最终一致性</li></ul><h3 id="✅-系统设计训练" tabindex="-1"><a class="header-anchor" href="#✅-系统设计训练"><span>✅ 系统设计训练</span></a></h3><ul><li>模拟设计电商/IM/秒杀系统</li><li>使用 PlantUML/Mermaid 编写架构图</li><li>学习如何写一份技术设计文档</li></ul><hr><h2 id="📌-阶段三-主导系统设计与性能优化-6-12个月" tabindex="-1"><a class="header-anchor" href="#📌-阶段三-主导系统设计与性能优化-6-12个月"><span>📌 阶段三：主导系统设计与性能优化（6~12个月）</span></a></h2><h3 id="✅-主导或协作项目落地" tabindex="-1"><a class="header-anchor" href="#✅-主导或协作项目落地"><span>✅ 主导或协作项目落地</span></a></h3><ul><li>主导模块重构或从零构建一个新模块</li><li>编写并评审技术方案，主导设计会议</li></ul><h3 id="✅-性能与可观测性" tabindex="-1"><a class="header-anchor" href="#✅-性能与可观测性"><span>✅ 性能与可观测性</span></a></h3><ul><li>使用 Prometheus + Grafana 监控服务</li><li>链路追踪：Skywalking、Zipkin</li><li>日志分析：ELK、Logstash、Filebeat</li></ul><h3 id="✅-云原生与部署能力" tabindex="-1"><a class="header-anchor" href="#✅-云原生与部署能力"><span>✅ 云原生与部署能力</span></a></h3><ul><li>容器化：Docker 基础 + 多阶段构建</li><li>容器编排：Kubernetes 核心概念（Pod、Service、Deployment）</li><li>持续集成：Jenkins / GitHub Actions + Docker Hub</li></ul><hr><h2 id="📌-阶段四-技术影响力与战略视角-持续" tabindex="-1"><a class="header-anchor" href="#📌-阶段四-技术影响力与战略视角-持续"><span>📌 阶段四：技术影响力与战略视角（持续）</span></a></h2><h3 id="✅-业务建模与领域驱动设计-ddd" tabindex="-1"><a class="header-anchor" href="#✅-业务建模与领域驱动设计-ddd"><span>✅ 业务建模与领域驱动设计（DDD）</span></a></h3><ul><li>聚合根、实体、值对象</li><li>限界上下文划分</li><li>领域事件驱动与消息中台</li></ul><h3 id="✅-沟通协作与领导力" tabindex="-1"><a class="header-anchor" href="#✅-沟通协作与领导力"><span>✅ 沟通协作与领导力</span></a></h3><ul><li>主动推动团队技术选型或架构优化</li><li>沟通对齐需求边界，清晰拆解方案</li><li>编写技术博客、做内部分享</li></ul><h3 id="✅-技术视野拓展" tabindex="-1"><a class="header-anchor" href="#✅-技术视野拓展"><span>✅ 技术视野拓展</span></a></h3><ul><li>阅读优秀开源系统源码（如 Seata、XXL-JOB）</li><li>关注架构趋势（微服务架构演进、Serverless、AI + 系统架构）</li><li>掌握一门第二后端语言（如 Go）</li></ul><hr><h2 id="🛠-推荐工具和网站" tabindex="-1"><a class="header-anchor" href="#🛠-推荐工具和网站"><span>🛠 推荐工具和网站</span></a></h2><table><thead><tr><th>类别</th><th>工具 / 网站</th></tr></thead><tbody><tr><td>UML</td><td>PlantUML、Mermaid、ProcessOn</td></tr><tr><td>架构学习</td><td>InfoQ、架构头条、蚂蚁架构师手册</td></tr><tr><td>源码学习</td><td>GitHub、Doocs/advanced-java</td></tr><tr><td>监控工具</td><td>Prometheus、Grafana、SkyWalking</td></tr><tr><td>博客平台</td><td>知乎、掘金、语雀、VuePress</td></tr></tbody></table><hr><h2 id="🔚-总结建议" tabindex="-1"><a class="header-anchor" href="#🔚-总结建议"><span>🔚 总结建议</span></a></h2><blockquote><p>成为架构师 ≠ 技术专家，而是 “技术 + 业务 + 沟通 + 抽象 + 推动力” 的结合。</p></blockquote><ul><li>积累系统设计经验：画图、写文档、讲思路</li><li>理解业务目标并提出系统改进建议</li><li>在一次次架构优化和故障应对中成长</li><li>用行动影响团队，用视野规划系统</li></ul>',44)]))}]]),r=JSON.parse('{"path":"/Java/%E6%9E%B6%E6%9E%84/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","title":"成为 Java 架构师学习路线图","lang":"zh-CN","frontmatter":{"gitInclude":[]},"headers":[{"level":2,"title":"🎯 路线图总览","slug":"🎯-路线图总览","link":"#🎯-路线图总览","children":[]},{"level":2,"title":"📌 阶段一：打牢技术地基（3~6个月）","slug":"📌-阶段一-打牢技术地基-3-6个月","link":"#📌-阶段一-打牢技术地基-3-6个月","children":[{"level":3,"title":"✅ Java 核心与 JVM","slug":"✅-java-核心与-jvm","link":"#✅-java-核心与-jvm","children":[]},{"level":3,"title":"✅ Spring 核心原理","slug":"✅-spring-核心原理","link":"#✅-spring-核心原理","children":[]},{"level":3,"title":"✅ 中间件与数据库","slug":"✅-中间件与数据库","link":"#✅-中间件与数据库","children":[]}]},{"level":2,"title":"📌 阶段二：系统设计与架构思维（3~6个月）","slug":"📌-阶段二-系统设计与架构思维-3-6个月","link":"#📌-阶段二-系统设计与架构思维-3-6个月","children":[{"level":3,"title":"✅ 架构基础","slug":"✅-架构基础","link":"#✅-架构基础","children":[]},{"level":3,"title":"✅ 分布式基础能力","slug":"✅-分布式基础能力","link":"#✅-分布式基础能力","children":[]},{"level":3,"title":"✅ 系统设计训练","slug":"✅-系统设计训练","link":"#✅-系统设计训练","children":[]}]},{"level":2,"title":"📌 阶段三：主导系统设计与性能优化（6~12个月）","slug":"📌-阶段三-主导系统设计与性能优化-6-12个月","link":"#📌-阶段三-主导系统设计与性能优化-6-12个月","children":[{"level":3,"title":"✅ 主导或协作项目落地","slug":"✅-主导或协作项目落地","link":"#✅-主导或协作项目落地","children":[]},{"level":3,"title":"✅ 性能与可观测性","slug":"✅-性能与可观测性","link":"#✅-性能与可观测性","children":[]},{"level":3,"title":"✅ 云原生与部署能力","slug":"✅-云原生与部署能力","link":"#✅-云原生与部署能力","children":[]}]},{"level":2,"title":"📌 阶段四：技术影响力与战略视角（持续）","slug":"📌-阶段四-技术影响力与战略视角-持续","link":"#📌-阶段四-技术影响力与战略视角-持续","children":[{"level":3,"title":"✅ 业务建模与领域驱动设计（DDD）","slug":"✅-业务建模与领域驱动设计-ddd","link":"#✅-业务建模与领域驱动设计-ddd","children":[]},{"level":3,"title":"✅ 沟通协作与领导力","slug":"✅-沟通协作与领导力","link":"#✅-沟通协作与领导力","children":[]},{"level":3,"title":"✅ 技术视野拓展","slug":"✅-技术视野拓展","link":"#✅-技术视野拓展","children":[]}]},{"level":2,"title":"🛠 推荐工具和网站","slug":"🛠-推荐工具和网站","link":"#🛠-推荐工具和网站","children":[]},{"level":2,"title":"🔚 总结建议","slug":"🔚-总结建议","link":"#🔚-总结建议","children":[]}],"readingTime":{"minutes":2.92,"words":875},"filePathRelative":"Java/架构/学习路线.md","excerpt":"\\n<blockquote>\\n<p>🧠 面向三年经验的 Java 后端开发者\\n🎯 目标：1~2 年内具备中级架构师所需的核心能力</p>\\n</blockquote>\\n<hr>\\n<h2>🎯 路线图总览</h2>\\n<ul>\\n<li>阶段一：打牢技术地基（3~6个月）</li>\\n<li>阶段二：提升系统设计与架构能力（3~6个月）</li>\\n<li>阶段三：主导系统设计与优化（6~12个月）</li>\\n<li>阶段四：积累技术影响力与战略视角（持续）</li>\\n</ul>\\n<hr>\\n<h2>📌 阶段一：打牢技术地基（3~6个月）</h2>\\n<h3>✅ Java 核心与 JVM</h3>\\n<ul>\\n<li>Java 并发编程（锁机制、ThreadPoolExecutor）</li>\\n<li>Java 内存模型、volatile、happens-before</li>\\n<li>JVM 内存结构（堆/栈/方法区/本地内存）</li>\\n<li>GC 算法（G1、CMS）、GC 日志分析</li>\\n<li>Java Agent、类加载机制</li>\\n</ul>"}')}}]);